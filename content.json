{"pages":[{"title":"","text":"个人简介 分享很喜欢的老罗的一段话： “每一个生命来到世间都注定改变世界，别无选择。要么变得好一点，要么变得坏一点。你如果走进社会为了生存为了什么不要脸的理由，变成了一个恶心的成年人社会中的一员，那你就把这个世界变得恶心了一点点。如果你一生刚正不阿，如果你一生耿直，没有做任何恶心的事情，没做对别人有害的事情，一辈子拼了老命勉强把自己身边的几个人照顾好了，没有成名没有发财，没有成就伟大的事业，然后耿着脖子一生正直，到了七八十岁耿着脖子去世了。你这一生是不是没有改变世界？你还是改变世界了，你把这个世界变得美好了一点点。因为世界上又多了一个好人。“ 善恶终有报,天道好轮回。不信抬头看,苍天饶过谁。无论何时何地，我们都要保持一颗积极乐观、善良感恩的心。但行好事莫问前程，永远年轻，永远热内盈眶，永远保持正能量。💪💪💪💪💪💪冲鸭！！！！ -&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;个人信息：计算机科学与技术专业从事JAVA后端开发码畜一枚坚信代码改变世界 博客信息 网站采用的Icarus主题 追求尽可能的简洁，清晰，易用。 在Icarus主题之上进行了部分修改。 更新日志：–2020.01.18：icarus3.0适配–2019.11.17：增加深色主题开关–2019.10.30：去图，精简卡片–2019.10.22：改版部分显示，优化速度–2019.10.16：文章列表加上评论数显示–2019.10.13：改版评论–2019.09.25：图片、资源接入CDN免费jsDelivr、文章加入置顶–2019.09.19：开源博客代码–2019.09.19：修改布局，拉伸布局，更宽的展示–2019.09.18：修改友链ui为一行三个，并适配移动端，暗黑模式文章增加评论链接，增加留言链接–2019.09.14：增加精简next主题–2019.09.14：利用中秋节放假，重做了首页的热门推荐、加个widget最新评论框、归档页加入文章贡献概览面板 本站推荐索引 博客主题相关 github Issue 作为博客微型数据库的应用 github page网站cdn优化加速 博客源码分享 博客换肤的一种实现方式思路 博客中gitalk最新评论的获取 博客图片上传picgo工具github图传使用 安装、部分配置icarus主题中文版 技术知识点 Java并发知识点 法律法规 法律法规数据库 中华人民共和国国旗法 中华人民共和国宪法 中华人民共和国消费者权益保护法 中华人民共和国刑事诉讼法 中华人民共和国婚姻法 中华人名共和国网络安全法 中华人民共和国劳动法 其他 网易云音乐歌单分享 计划2020计划 2019.12.31 2020-GOALS 跑两三场马拉松 2019计划 2018.12.31/21:59:00-&gt;更新于2019.12.31 2019-GOALS 购买的专业书籍至少看完一遍（并发、重构、设计模式…）-&gt; 95% 额外： 追了很多剧 总结： 有优点有缺点，没坚持下来的还是太多，追了太多剧。以后多学习，多思考！ 时间轴记录","link":"/about/index.html"},{"title":"","text":"唐艺昕 李沁 李一桐 gakki 图片搜集于互联网，侵权请留言，马上处理😊。","link":"/album/index.html"},{"title":"","text":"来而不往非礼也畅所欲言，有留必应","link":"/message/index.html"},{"title":"","text":"申请友链须知 原则上只和技术类博客交换，但不包括含有和色情、暴力、政治敏感的网站。 不和剽窃、侵权、无诚信的网站交换，优先和具有原创作品的网站交换。 申请请提供：站点名称、站点链接、站点描述、logo或头像（不要设置防盗链）。 排名不分先后，刷新后重排，更新信息后请留言告知。 会定期清理很久很久不更新的、不符合要求的友链，不再另行通知。 本站不存储友链图片，如果友链图片换了无法更新。图片裂了的会替换成默认图，需要更换的请留言告知。 本站友链信息如下，申请友链前请先添加本站信息： 网站图标：https://removeif.github.io/images/avatar.jpg 网站名称：辣椒の酱 网站地址：https://removeif.github.io 网站简介：后端开发，技术分享 加载中，稍等几秒...","link":"/friend/index.html"},{"title":"音乐歌单收藏","text":"--- 温馨提示：选择喜欢的音乐双击播放，由于版权原因部分不能播放。如果喜欢歌单收藏一下，去网易云都能播放哟！","link":"/music/index.html"},{"title":"","text":"&nbsp;&nbsp;听听音乐 音乐播放器由mePlayer提供，布局参照网友博客所作，感谢作者的辛勤付出。更多音乐分享请查看歌单。 &nbsp;&nbsp;看看视频 ->点击以下条目开始播放视频,向下滑动查看更多","link":"/media/index.html"},{"title":"","text":"碎碎念 tips：github登录后按时间正序查看、可点赞加❤️、本插件地址..「+99次查看」 var gitalk = new Gitalk({ clientID: '46a9f3481b46ea0129d8', clientSecret: '79c7c9cb847e141757d7864453bcbf89f0655b24', id: '666666', repo: 'issue_database', owner: 'removeif', admin: \"removeif\", createIssueManually: true, distractionFreeMode: false }) gitalk.render('comment-container1')","link":"/self-talking/index.html"},{"title":"","text":"基于区块链的隐私文件存储系统的设计与实现一、立题依据1.研究的目的与意义物联网、云计算、以及人工智能等技术的兴起和发展加速了数据量的增长，国际 数据中心（IDC，International Data Center）在报告《Data Age 2025》 [1] 中指出：到 2025 年全球数据总量将达到 163 ZB 以上。 可信文件存储是目前互联网系统中的一种新型架构，传统的文件存储不能保证文件存储可信。当企业用户向企业发起存储文件请求时，企业会将企业用户的文件存储在服务器上，当企业用户需要时，再从服务器上将文件取出返回。由于文件仅仅存储在一个企业的服务器上，所以并不能保证文件的可信，文件有可能会被修改。 2008 年 10 月，“中本聪”发布区块链技术的开创性论文《Bitcoin：a peer-to-peer electronic cash system》 [2] ：通过使用一个公开可验证的分布式账本，在没有中心化监 管机构的情况下，用户能够安全地进行价值的转移。区块链中区块的哈希指针和共识算法保证了区块链的不可篡改的特性。区块链就是一个一个区块组成的链表。区块链和普通的链表的区别在于区块链用哈希指针代替了普通指针。一个区块的哈希指针是把前面整个区块的内容，包括里面的哈希指针，合在一起取哈希值。如果一个区块的内容被改变，后面一个区块的哈希指针就对不上，因为后一个区块哈希指针是根据前一个区块的内容计算出来的，所以后一个哈希指针也得改，因此已经上链的区块无法被修改。此外，区块链是一种通过去中心化和去信任的方式维护一个可靠数据库的技术方案。任意节点添加新区块时，只有多数区块链节点达成共识才能将区块新加入链中。 综上所述，为了确保文件存储的防篡改及隐私性，本文希望实现一个基于区块链的隐私文件存储系统，用户将文件上传到系统中，文件的 hash 以及相关描述信息会被存储到区块链上。为了保证存储系统的高可用，文件也会被复制到多台存储节点，以免一台存储节点宕机导致文件不可用或文件丢失。用户获取文件时，系统判断用户对文件的权限，并检查文件的相关信息是否与区块链上存储的信息是否一致，检查通过后向用户提供文件的传输服务。 2.研究现状和发展趋势区块链具备去中心化、不可篡改的特性，能够很好地解决目前数据存储领域普遍 存在的安全性差等问题。近些年来，国内外专家和机构都在不断进行区块链技术在存 储领域的探索和实践，区块链和数据存储的结合方式，目前主要包括以下两种方式： 第一，直接将数据写入区块，数据得到共识后同步到所有节点，保证了数据的不可篡改性。但是这种存储模式中数据的存放是多节点、全冗余备份，会带来存储资源 的浪费。因此此种模式一般用于简单的、重要的信息存储，如商品溯源 [3] 等场景； 第二，针对于大文件的存储，区块链往往与文件系统相结合，将真实文件存放在文件系统，而区块链存储文件摘要等属性信息，利用哈希函数的唯一性和不可逆性来实现对数据的验证。目前基于区块链的存储系统主要有以下几种： （1）Sia：Sia[4] 在数据切分过程中采用 Reed-Solomon 编码 [5] ， 来提高数据的可恢复性。Sia 交易匹配方式是存储提供方设定价格，存储需求方进行挑选，然后提交匹配订单。但是目前 Sia 采用 POW 共识机制来对交易进行验证，无法适用于高频实时结算的场景。 （2）IPFS/Filecoin：IPFS（InterPlanetary File System）是一个点对点的分布式文件系统，目标在于改变现有的 HTTP 协议，构建一个去冗余的互联网世界 [6] 。相较于传统的客户端/服务器结构，P2P 网络中节点的地位都是对等的，每个节点 既可以获取其他节点的资源或服务，又能对其他节点的请求做出响应，提供资源和服务 [7] 。而 Filecoin 是 IPFS 上面的激励层，来鼓励更多的节点加入 IPFS 网络。但是 Filecoin 的服务方式是让服务商和用户相互选择，因此存储空间的利用率会相对偏低。且文件一旦上传，它们就不能被修改或删除。 由于它的文件索引是公开的，任何人只要知道了文件的 Hash 就能任意访问文件，这样的设计方式更适合存储网页等公开信息，而不适合用于存储个人数据和企业数据，进而在存储网络中会带来用户隐私的问题。 在激励层面，有些证明算法过于复杂，很可能导致整个系统无法大规模运作。在 P2P 网络的设计上面，虽然使用了比较成熟的 Bittorrent 的设计，但针对各种网络异常以及区域网的处理上面，并不够友好，这将在实际运行中给大量租户以及运营商带来各种各样的问题。 在落地层面，IPFS 声称的不受监管（无法删除），必然将会面临各国政策和法律的风险，而它本身体系的设计并没有考虑应对此方面的风险，这将使整个项目的全球落地变得更为困难。 （3）Storj：Storj 是一个云存储项目 [8] ，本质上和区块链没有关系，只是在结算时采用了以太坊的 ERC-20 Token。Storj 基于“即用即付”的设计方式，用户自定义一对一存储、还是一对多存储。但是用户需要保持长时间的在线，来确保存储设备是否正常工作，用户体验较差，而且 Storj 基于以太坊进行交易结算，很明显也无法应用于高频的交易场景。 因此，为了实现文件存储的高可用，隐私性及防篡改特性，本文计划将文件存储在分布式存储系统中，将文件的 hash 等描述信息上链，以实现一个基于区块链的隐私文件存储系统。 参考文献[1] Reinsel D, Gantz J, Rydning J. Data age 2025: The evolution of data to life-critical[J]. IDC White Paper, 2017:1-25. [2] Nakamoto S. Bitcoin: A peer-to-peer electronic cash system[J]. 2008. [3] 郭珊珊. 供应链的可信溯源查询在区块链上的实现[D]. 大连海事大学, 2017. [4] Vorick D, Champine L. Sia: Simple decentralized storage[J]. White paper available at https://sia. tech/sia. pdf, 2014. [5] McEliece R J, Sarwate D V. On sharing secrets and Reed-Solomon codes[J]. Communications of the ACM, 1981,24(9):583-584. [6] Benet J. Ipfs-content addressed, versioned, p2p file system[J]. arXiv preprint arXiv:1407.3561, 2014. [7] Shteyn Y. Distributed storage on a P2P network architecture[Z]. Google Patents, 2002. [8] Wilkinson S, Boshevski T, Brandoff J, et al. Storj a peer-to-peer cloud storage network[J]. 2014. [9] 侯孟书. 基于 P2P 的分布式存储及其相关技术研究[D]. 成都: 电子科技大学, 2005. 二、研究内容和目标（2500 字）1.研究内容本文要实现的是基于区块链的隐私文件存储系统，系统由区块链节点组成，用户将文件上传到分布式对象存储系统之后，文件的描述信息会被记录在区块链账本中公开存储，而文件内容在指定节点中存储，既保证了文件在区块链系统中不可篡改，又保证了文件的隐私性；既能避免区块链节点的单点故障，又能保证恶意节点无法盗取隐私文件。因此，本文主要计划完成以下两点研究内容： 第一，区块链的搭建及智能合约设计与部署。这一部分是整个系统的基础，区块链保障了系统中文件的防篡改特性，所以为区块链设计合理的智能合约至关重要，如果合约字段过多，会对系统的整体性能造成影响，如果合约字段过少，则无法借助区块链实现防篡改的特性。 第二，隐私文件存储系统的设计与实现。在区块链搭建完成的基础上，设计并实现隐私文件存储系统。这一部分是整个系统的核心，也是整个毕设中任务量最大的部分，主要工作包括系统架构设计，数据库表的设计，技术选型，功能点的计划以及具体的前后端开发。 时间 研究内容 预期效果 2020.09-2020.10 研究现状调研工作 了解常用区块链文件存储方案 2020.11 论文开题 撰写开题报告，完成开题答辩 2020.12-2021.1 区块链的搭建及智能合约设计与部署 完成区块链的搭建及智能合约部署 2021.2-2021.5 设计与实现隐私文件存储系统 完成隐私文件存储系统 2021.7-2021.8 撰写阶段报告 完成阶段报告 2021.9-2021.12 撰写毕业论文 提交初稿、修改稿、定稿 2021.1-2021.5 论文送审、修改及答辩 论文送审、修改及答辩 为什么要用区块链技术实现智能合约？ - 知乎 如何评价分布式存储项目 IPFS？ - 知乎","link":"/%E6%AF%95%E8%AE%BE/%E5%9F%BA%E4%BA%8E%E5%8C%BA%E5%9D%97%E9%93%BE%E7%9A%84%E9%9A%90%E7%A7%81%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0.html"},{"title":"","text":"IPFS 文件管理与共享平台的设计与实现一、立题依据（800 字）1.研究的目的与意义可信文件存储是目前互联网系统中的一种新型架构，传统的文件存储不能保证文件存储可信。当企业用户向企业发起存储文件请求时，企业会将企业用户的文件存储在服务器上，当企业用户需要时，再从服务器上将文件取出返回。由于文件仅仅存储在一个企业的服务器上，一方面不能保证文件的可信，文件有可能会被修改；另一方面，一旦企业的服务器不可用，用户便无法再获取文件。 而 IPFS 网络是完全去中心化的，网络中的节点互相提供文件，且通过文件 hash 确保文件的完整性。IPFS 是基于内容的寻址，不是基于位置的寻址。IPFS 通过 CID 实现内容寻址，CID 即内容标识符，是用来指向 IPFS 中文件的标签。CID 是基于内容的加密hash，内容上的任何差异都会产生不同的 CID，使用相同的设置添加到两个不同 IPFS 节点的相同内容将生成完全一样的 CID。当下载文件时，IPFS 网络上的主机若存储有相同 CID 的文件，便会提供文件。下载文件之后，CID 会被用来校验文件是否被篡改。IPFS 使用内容寻址的另一个好处是去除重复文件，当多个人在IPFS上发布同一文件时，该文件只会创建一次，这会使网络非常高效地运行。 目前 IPFS 有以下几点不足： 1）目前用户可以通过 IFPS 客户端上传文件，上传的文件记录会保存在本地的数据库中，但若不小心将该数据库文件删除或系统宕机，用户的上传文件记录就会丢失。 2）IPFS 存在用户之间共享文件繁琐的问题，若用户想要将文件分享给其他用户，需要复制文件的 CID 给每一个人。 3）IPFS 中的文件公开存储，若文件的 CID 泄露，任何人都能下载此文件。 4）若文件已经上传到 IPFS 中，但是由于没有主机持有该文件或者持有该文件的主机连接较差，该文件的下载服务就暂时不可用。 因此，本课题计划设计并实现 IPFS 文件管理与共享平台。IPFS 文件管理系统为用户提供管理 IPFS 中文件的功能，一方面便于用户方便地在网页端将 IPFS 中的文件归类整理，另一方面即使用户本地的文件记录丢失，用户也能从平台中找回自己的文件记录。IPFS 文件共享系统主要包括群组功能和资源发布功能，通过建立群组，实现群组内资源共享，而将资源发布可以让系统内所有用户都能查看并下载文件资源。 中心化的缺点 引入 去中心化的 ipfs ，介绍 IPFS 的概念，不足 我要做的事情，怎么解决上面的不足 2.研究现状和发展趋势Fluence Labs 发布了《去中心化开发人员 2020》报告的结果，表明 IPFS 和以太坊是迄今为止用于创建 DWeb 应用程序的领导者。 Decentralized Web Developer Report 2020 | by Evgeny Ponomarev | Fluence Labs | Medium 来看看你对 IPFS 到底误解有多深！ - 知乎 IPFS 全称 InterPlanetary File System，是一个旨在创建持久且分布式存储和共享文件的网络传输协议。IPFS是一种内容可寻址的对等超媒体分发协议。在 IPFS 网络中的节点将构成一个分布式文件系统。 IPFS 是点对点的超媒体协议，可以让网络更快、更安全、更开放。数据在 IPFS 上的存储都是以碎片的形式存储的，每个碎片的大小是 256k。网络中的节点会对文件的碎片进行存储。当检索数据时，所有文件的碎片会被收集起来，通过文件管理系统按序组合碎片得到想要下载的文件。整个 IPFS 网络中没有中心服务器，是完全去中心化的。 Filecoin 是运行在 IPFS 上面的一个激励层。分布文件的行为，完全是自愿的，为了让 IPFS 协议能够被更多人使用，让更多的人愿意拿出自己的电脑和存储空间给其他人使用，Protocol Labs 公司创建了 Filecoin 这个项目。Filecoin 是一个去中心化存储网络，它让云存储变成一个算法市场。这个市场运行在有着本地协议令牌（也叫做 Filecoin）的区块链。区块链中的矿工可以通过为客户提供存储来获取 Filecoin。 除了使用 IPFS 协议的 Filecoin，还有不少其他用于分布式存储的加密货币。其中知名度比较高的有 Sia、Storj、Swarm 和 Lambda： (1) Sia: Sia[4] 在数据切分过程中采用 Reed-Solomon 编码 [5] ， 来提高数据的可恢复性。Sia 交易匹配方式是存储提供方设定价格，存储需求方进行挑选，然后提交匹配订单。但是目前 Sia 采用 POW 共识机制来对交易进行验证，无法适用于高频实时结算的场景。 (2) Storj: Storj 是一个云存储项目 [8] ，本质上和区块链没有关系，只是在结算时采用了以太坊的 ERC-20 Token。Storj 基于“即用即付”的设计方式，用户自定义一对一存储、还是一对多存储。但是用户需要保持长时间的在线，来确保存储设备是否正常工作，用户体验较差，而且 Storj 基于以太坊进行交易结算，很明显也无法应用于高频的交易场景。 (3) Swarm: 另一个在以太坊网络上的分布式存储协议，名为 Swarm，基本上和 Filecoin 的技术差不多，但是发展要比 IPFS 慢一些。 (4) Lambda: Lambda 是一个中国团队项目，获得了多家投资机构站台。作为一个分布式存储的项目，它解决的问题是在分布式存储中，用户把自己的文件交由未知的存储端时产生的信任的问题，而 Lambda 通过验证节点的共识完成文件数据的持有性证明和可恢复性证明，保证了存储在未知存储端上文件的完整性和可恢复性。 区块链的发展 区块链的用途 去中心化存储的一些应用 ipfs 的一些应用 IPFS 和 Filecoin 到底是什么关系？ - 链闻 ChainNewsIPFS 与 FileCoin 究竟是什么关系？ - 知乎Filecoin 主网上线后，IPFS 网络会开始收费吗？ - 链闻 ChainNews谁给我解释下 ipfs , 真的不需要 “矿工”， 不要钱吗？- V2EX 参考文献 差不多 20 条 网址怎么弄参考文献 二、研究内容和目标（2500 字）1.课题研究内容本课题计划在 IPFS 去中心化的基础上，为用户提供线上的用户文件管理与用户间的文件资源共享与交流平台。 具体包括以下三个研究内容： （1）为用户提供管理在 IPFS 上存储的文件的功能 1）用户上传文件 用户可以上传本地的文件到系统中，由系统上传到 IPFS 中。 若文件之前已经被上传到 IPFS 中，用户可以直接输入文件对应的 cid。 如果用户想要上传某链接里的文件，可以直接填写文件链接，系统会在下载对应链接里的文件之后，将文件上传到 IPFS 中。 2）用户文件管理 用户可以创建文件夹，也可以移动文件或文件夹到其他文件夹。 此外，用户可以删除文件或文件夹。 3）查看文件 系统检测文件的格式，为用户提供查看文件的功能，包括阅读文本，播放音频文件，播放视频文件。 4）文件（夹）分享 用户可以分享文件或文件夹，并设置分享的有效时间，系统会为用户生成分享链接和相应的密码。用户可以将链接和密码分享给其他用户。 如果过了有效时间，分享链接会失效，其他用户就无法访问相应的文件。 通过这种方式分享资源，可以避免资源的 CID 被泄露。 （2）群组功能 1）组长创建群组，邀请组员加入群组，组长可以编辑群组内的共享资源。 2）组员可以查看群组内的文件资源，或者将文件资源加入自己私人的文件列表中，但是没有编辑权限。 3）群组内有交流板块，组员之间可以互相交流 （3）IPFS 资源共享交流平台 1）发布资源 用户发布的资源是一系列文件与文件夹的集合。用户可以在平台上发布资源，并为资源添加资源名称与相关描述信息。发布的资源在平台上是共享的，所有用户都可以浏览或下载自己感兴趣的资源。 2）资源讨论区 每个资源下面都有一个讨论区，用户可以在讨论区里进行讨论和交流。 3）资源搜索 用户可以搜索资源，输入关键词，系统将列出包含关键词的所有资源。 4）资源排序 资源默认按照发布时间排列，也可以按照下载量和评论数进行排序。 5）热门资源展示板块 系统统计并展示最近 1 个月的热门资源 2.研究目标与效果（1） 功能需求 （2） 非功能需求 3.拟解决的关键问题（1） 三、研究方案设计及可行性分析（包括：研究方法，技术路线，理论分析、计算、实验方法和步骤及其可行性等）（不少于800字）1、研究方法 2、技术路线 拟按照瀑布模型分以下几个阶段： 1.进行可行性分析。 2.用户需求分析与处理。搜集，分析并确定最后需求，要实现的功能。 3.概念性系统设计。粗略描述系统的功能，将用户需求模块化。 4.模块详细设计。将第 3 阶段的模块分析，建模。 5.数据库设计。用 powerdesigner 工具设计数据库，在 SQL 中生成数据库。 6.系统架构设计。采用 MVC 模式。分为 Model (模型)，View (视图)，Controller (控制器)。 7.编码，单元测试。 8.系统测试。 9.发布运行与维护。 从系统需求分析开始直到产品发布和维护，每个阶段都会产生循环反馈，因此，如果有信息未被覆盖或者发现了问题，那么就 “返回” 上一个阶段并进行适当的修改，项目开发进程从一个阶段 “流动” 到下一个阶段。 四、本研究课题可能的创新之处（不少于500字）1）提供 Web端 IPFS 文件管理功能 IPFS-desktop 和 IPFS 命令行上传文件后，文件的记录都在本地保存， 2）提供 IPFS 资源共享交流平台 五、研究基础与工作条件（1.与本项目相关的研究工作积累基础 2.包括已具备的实验条件，尚缺少的实验条件和拟解决途径）（不少于500字）学位论文工作计划更多复杂但是不打算实现的功能：群组内或论坛里可以艾特其他人，人会在个人头像旁边的铃铛里收到提醒 资源板块划分 不难但是不准备做的功能：系统允许用户导出个人的所有文件","link":"/%E6%AF%95%E8%AE%BE/IPFS%20%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E4%B8%8E%E5%85%B1%E4%BA%AB%E5%B9%B3%E5%8F%B0%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0.html"},{"title":"","text":"ipfs文档ipfs/go-ipfs: IPFS implementation in GoWork with blocks | IPFS Docsjs-ipfs/examples/browser-mfs at master · ipfs/js-ipfsgo-ipfs/README.md at master · ipfs/go-ipfs ipfs filesipfs files  0.06 Dur  ✔  01:02  1.60G RAMUSAGE ipfs files - Interact with unixfs files. ipfs files [–flush=false] Files is an API for manipulating IPFS objects as if they were a Unix filesystem. The files facility interacts with MFS (Mutable File System). MFS acts as a single, dynamic filesystem mount. MFS has a root CID that is transparently updated when a change happens (and can be checked with “ipfs files stat /“). All files and folders within MFS are respected and will not be cleaned up during garbage collections. MFS is independent from the list of pinned items (“ipfs pin ls”). Calls to “ipfs pin add” and “ipfs pin rm” will add and remove pins independently of MFS. If MFS content that was additionally pinned is removed by calling “ipfs files rm”, it will still remain pinned. Content added with “ipfs add” (which by default also becomes pinned), is not added to MFS. Any content can be put into MFS with the command “ipfs files cp /ipfs/ /some/path/“. NOTE: Most of the subcommands of ‘ipfs files’ accept the ‘–flush’ flag. It defaults to true. Use caution when setting this flag to false. It will improve performance for large numbers of file operations, but it does so at the cost of consistency guarantees. If the daemon is unexpectedly killed before running ‘ipfs files flush’ on the files in question, then data may be lost. This also applies to run ‘ipfs repo gc’ concurrently with ‘–flush=false’ operations. SUBCOMMANDS ipfs files chcid [] - Change the cid version or hash function of the root node of a given path. ipfs files cp - Copy any IPFS files and directories into MFS (or copy within MFS). ipfs files flush [] - Flush a given path’s data to disk. ipfs files ls [] - List directories in the local mutable namespace. ipfs files mkdir - Make directories. ipfs files mv - Move files. ipfs files read - Read a file in a given MFS. ipfs files rm … - Remove a file. ipfs files stat - Display file status. ipfs files write - Write to a mutable file in a given filesystem. For more information about each command, use: ‘ipfs files –help’ 1234567891011# 创建目录后查看 cidipfs files mkdir /test # 这里创建后目录被 pin 了ipfs files stat /test# 创建多级目录ipfs files mkdir /test/aipfs files mkdir /test/a/bipfs files mkdir /test/a/b/cipfs files mkdir /test/a/b/c/d# cp 需要指定文件的名字ipfs files cp /ipfs/QmXyGzTdvyZVYPCd3w3sE9tHRFVAykWtLzt7wXrtH3dfU8 /test1 移动文件到目录里面 查看目录里面的文件或者文件夹，怎么获取他们的 cid 或者文件类型（文件夹或图片或视频）","link":"/%E6%AF%95%E8%AE%BE/ipfs.html"},{"title":"","text":"IPFS 文件管理与共享平台的设计与实现一、立题依据1.研究的目的与意义可信文件存储是目前互联网系统中的一种新型架构，传统的文件存储不能保证文件存储可信。当企业用户向企业发起存储文件请求时，企业会将企业用户的文件存储在服务器上，当企业用户需要时，再从服务器上将文件取出返回。由于文件仅仅存储在一个企业的服务器上，一方面不能保证文件的可信，文件有可能会被修改；另一方面，一旦企业的服务器不可用，用户便无法再获取文件。 而 IPFS 网络是完全去中心化的，网络中的节点互相提供文件，且通过文件 hash 确保文件的完整性。IPFS 是基于内容的寻址，不是基于位置的寻址。IPFS 通过 CID 实现内容寻址，CID 即内容标识符，是用来指向 IPFS 中文件的标签。CID 是基于内容的加密hash，内容上的任何差异都会产生不同的 CID，使用相同的设置添加到两个不同 IPFS 节点的相同内容将生成完全一样的 CID。当下载文件时，IPFS 网络上的主机若存储有相同 CID 的文件，便会提供文件。下载文件之后，CID 会被用来校验文件是否被篡改。IPFS 使用内容寻址的另一个好处是去除重复文件，当多个人在IPFS上发布同一文件时，该文件只会创建一次，这会使网络非常高效地运行。 目前 IPFS 有以下几点不足： 1）目前用户可以通过 IFPS 客户端上传文件，上传的文件记录会保存在本地的数据库中，但若不小心将该数据库文件删除或系统宕机，用户的上传文件记录就会丢失。 2）IPFS 存在用户之间共享文件繁琐的问题，若用户想要将文件分享给其他用户，需要复制文件的 CID 给每一个人。 3）IPFS 中的文件公开存储，若文件的 CID 泄露，任何人都能下载此文件。 4）若文件已经上传到 IPFS 中，但是由于没有主机持有该文件或者持有该文件的主机连接较差，该文件的下载服务就暂时不可用。 因此，本课题计划设计并实现 IPFS 文件管理与共享平台。IPFS 文件管理系统为用户提供管理 IPFS 中文件的功能，一方面便于用户方便地在网页端将 IPFS 中的文件归类整理，另一方面即使用户本地的文件记录丢失，用户也能从平台中找回自己的文件记录。IPFS 文件共享系统主要包括群组功能和资源发布功能，通过建立群组，实现群组内资源共享，而将资源发布可以让系统内所有用户都能查看并下载文件资源。 2.研究现状和发展趋势由 Fluence Labs 发布的《去中心化开发人员 2020》报告的结果表明， IPFS 和以太坊是迄今为止用于创建 DWeb 应用程序的领导者。 IPFS 全称 InterPlanetary File System，是一个旨在创建持久且分布式存储和共享文件的网络传输协议。IPFS是一种内容可寻址的对等超媒体分发协议。在 IPFS 网络中的节点将构成一个分布式文件系统。 IPFS 是点对点的超媒体协议，可以让网络更快、更安全、更开放。数据在 IPFS 上的存储都是以碎片的形式存储的，每个碎片的大小是 256k。网络中的节点会对文件的碎片进行存储。当检索数据时，所有文件的碎片会被收集起来，通过文件管理系统按序组合碎片得到想要下载的文件。整个 IPFS 网络中没有中心服务器，是完全去中心化的。 Filecoin 是运行在 IPFS 上面的一个激励层。分布文件的行为，完全是自愿的，为了让 IPFS 协议能够被更多人使用，让更多的人愿意拿出自己的电脑和存储空间给其他人使用，Protocol Labs 公司创建了 Filecoin 这个项目。Filecoin 是一个去中心化存储网络，它让云存储变成一个算法市场。这个市场运行在有着本地协议令牌（也叫做 Filecoin）的区块链。区块链中的矿工可以通过为客户提供存储来获取 Filecoin。 除了使用 IPFS 协议的 Filecoin，还有不少其他用于分布式存储的加密货币。其中知名度比较高的有 Sia、Storj、Swarm 和 Lambda： (1) Sia: Sia[4] 在数据切分过程中采用 Reed-Solomon 编码 [5] ， 来提高数据的可恢复性。Sia 交易匹配方式是存储提供方设定价格，存储需求方进行挑选，然后提交匹配订单。但是目前 Sia 采用 POW 共识机制来对交易进行验证，无法适用于高频实时结算的场景。 (2) Storj: Storj 是一个云存储项目 [8] ，本质上和区块链没有关系，只是在结算时采用了以太坊的 ERC-20 Token。Storj 基于“即用即付”的设计方式，用户自定义一对一存储、还是一对多存储。但是用户需要保持长时间的在线，来确保存储设备是否正常工作，用户体验较差，而且 Storj 基于以太坊进行交易结算，很明显也无法应用于高频的交易场景。 (3) Swarm: 另一个在以太坊网络上的分布式存储协议，名为 Swarm，基本上和 Filecoin 的技术差不多，但是发展要比 IPFS 慢一些。 (4) Lambda: Lambda 是一个中国团队项目，获得了多家投资机构站台。作为一个分布式存储的项目，它解决的问题是在分布式存储中，用户把自己的文件交由未知的存储端时产生的信任的问题，而 Lambda 通过验证节点的共识完成文件数据的持有性证明和可恢复性证明，保证了存储在未知存储端上文件的完整性和可恢复性。 二、研究内容和目标1.课题研究内容本课题计划在 IPFS 去中心化的基础上，为用户提供线上的用户文件管理与用户间的文件资源共享与交流平台。 2.研究目标与效果（1）为用户提供管理在 IPFS 上存储的文件的功能 1）用户上传文件 用户可以上传本地的文件到系统中，由系统上传到 IPFS 中。 若文件之前已经被上传到 IPFS 中，用户可以直接输入文件对应的 cid。 如果用户想要上传某链接里的文件，可以直接填写文件链接，系统会在下载对应链接里的文件之后，将文件上传到 IPFS 中。 2）用户文件管理 用户可以创建文件夹，也可以移动文件或文件夹到其他文件夹。 此外，用户可以删除文件或文件夹。 3）查看文件 系统检测文件的格式，为用户提供查看文件的功能，包括阅读文本，播放音频文件，播放视频文件。 4）文件（夹）分享 用户可以分享文件或文件夹，并设置分享的有效时间，系统会为用户生成分享链接和相应的密码。用户可以将链接和密码分享给其他用户。 如果过了有效时间，分享链接会失效，其他用户就无法访问相应的文件。 通过这种方式分享资源，可以避免资源的 CID 被泄露。 （2）群组功能 1）组长创建群组，邀请组员加入群组，组长可以编辑群组内的共享资源。 2）组员可以查看群组内的文件资源，或者将文件资源加入自己私人的文件列表中，但是没有编辑权限。 3）群组内有交流板块，组员之间可以互相交流 （3）IPFS 资源共享交流平台 1）发布资源 用户发布的资源是一系列文件与文件夹的集合。用户可以在平台上发布资源，并为资源添加资源名称与相关描述信息。发布的资源在平台上是共享的，所有用户都可以浏览或下载自己感兴趣的资源。 2）资源讨论区 每个资源下面都有一个讨论区，用户可以在讨论区里进行讨论和交流。 3）资源搜索 用户可以搜索资源，输入关键词，系统将列出包含关键词的所有资源。 4）资源排序 资源默认按照发布时间排列，也可以按照下载量和评论数进行排序。 5）热门资源展示板块 系统统计并展示最近 1 个月的热门资源 3.拟解决的关键问题","link":"/%E6%AF%95%E8%AE%BE/%E5%BC%80%E9%A2%98%E6%8A%A5%E5%91%8A%20IPFS%20%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86%E4%B8%8E%E5%85%B1%E4%BA%AB%E5%B9%B3%E5%8F%B0%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0.html"},{"title":"","text":"基于区块链的防篡改存储系统的设计与实现为了解决区块链文件存储的难点，设计与实现 minio + 区块链 的存储系统 用户加密后上传或者直接上传到服务器加密，避免文件存储服务器被破解后的造成巨大的损失。计算文件的 hash 并存储到区块链上，实现防篡改；采用多节点部署 minio 以实现高可用。 在完成加密存储、上链的基础上，实现个人的网盘系统，每个人可以有自己的指定大小的网盘空间，加密文件，上传文件，浏览、下载文件。 更多细节： 允许用户选择 是否加密 是否上链 以提升性能。用户可以选择自己加密文件，保证文件的隐私性；也可以选择让服务器加密；或者选择不加密，加速存储的速度。可以选择是否上链，这样就不用计算 hash 值，提升上传文件的速度。 可能遇到的难点： 得考虑大文件的断点续传问题；以及大文件进行 hash 计算以及后期用 hash 进行校验的速度问题（将大文件进行分割，多进程计算小文件的 hash ，最后合并可能是一个解决方案，有待实验验证） 后期进展顺利的话，可以实现以下几个扩展功能： 1.文件分享功能，将文件分享给其他用户； 2.多用户建立群组，群组内共享文件 网盘ZPan - 快速搭建私人的不限速网盘！基于云存储的免费简单开源多用户 Go 网盘程序 - 异次元软件下载介绍 文件文档在线预览kekingcn/kkFileView: 使用 spring boot 打造文件文档在线预览项目解决方案，支持 doc、docx、ppt、pptx、xls、xlsx、zip、rar、mp4，mp3 以及众多类文本如 txt、html、xml、java、properties、sql、js、md、json、conf、ini、vue、php、py、bat、gitignore 等文件在线预览 RSA 加密解密RSA 的公钥和私钥到底哪个才是用来加密和哪个用来解密？ - 知乎 既然是加密，那肯定是不希望别人知道我的消息，所以只有我才能解密，所以可得出公钥负责加密，私钥负责解密；同理，既然是签名，那肯定是不希望有人冒充我发消息，只有我才能发布这个签名，所以可得出私钥负责签名，公钥负责验证。 画图工具技术文章配图指南 - 面向信仰编程 智能合约设计智能合约开发 — FISCO BCOS v2.6.0 文档 FISCO BCOS 官网 - 区块链底层开源技术平台","link":"/%E6%AF%95%E8%AE%BE/%E5%9F%BA%E4%BA%8E%E5%8C%BA%E5%9D%97%E9%93%BE%E7%9A%84%E9%98%B2%E7%AF%A1%E6%94%B9%E5%AD%98%E5%82%A8%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0.html"},{"title":"","text":"基于区块链的隐私文件存储系统的设计与实现一、立题依据（800 字）1.研究的目的与意义可信文件存储是目前互联网系统中的一种新型架构，传统的文件存储不能保证文件存储可信。当企业用户向企业发起存储文件请求时，企业会将企业用户的文件存储在服务器上，当企业用户需要时，再从服务器上将文件取出返回。由于文件仅仅存储在一个企业的服务器上，所以并不能保证文件的可信，文件有可能会被修改。 区块链就是一个一个区块组成的链表。区块链和普通的链表的区别在于区块链用哈希指针代替了普通指针。一个区块的哈希指针是把前面整个区块的内容，包括里面的哈希指针，合在一起取哈希值。如果有人改变了一个区块的内容，后面一个区块的哈希指针就对不上，因为后一个区块哈希指针是根据前一个区块的内容算出来的，所以后一个哈希指针也得改。因此没有任何办法可以修改已经上链的区块。区块链通过去中心化和去信任的方式维护一个可靠数据库的技术方案。任意节点添加新区块时，只有多数区块链节点达成共识才能将区块新加入链中。因此，哈希指针和共识算法保证了区块链的不可篡改的特性。 本论文为了确保文件存储的防篡改、隐私性，并保证区块链的性能，希望实现一个基于区块链的隐私文件存储系统，用户将文件上传到系统中，文件的 hash 以及相关描述信息会被存储到区块链上。为了防止文件被篡改，文件也会被复制到多台存储节点，以免一台存储节点宕机导致文件不可用或文件丢失。用户获取文件时，系统判断用户对文件的权限，并检查文件的相关信息是否与区块链上存储的信息是否一致，检查通过后向用户提供文件的传输服务。 2.研究现状和发展趋势使用区块链可以将文件存储在区块链上，这样就可以保证文件的可信性，但也引入了新的问题，区块链的区块大小有限，存储大文件会导致区块链性能低下。此外，由于区块链上的数据无法删除和修改，随着用户数目及使用时间的增长，区块链存储的数据会变得巨大，会引发性能问题和存储问题。 区块链不应存储大文件，而是应该将大文件存储在链下，链上仅存储能唯一标识文件的标识符。随着物联网时代的到来，大量的文件需要被唯一标识，一些企业开始根据文件的内容对文件做出唯一标识，这方面的典型技术产品是 IPFS (Inter Planetary File System 即星际文件系统)。IPFS 是一种点对点的分布式文件系统。IPFS 系统结合了分布式哈希表技术和基于默克尔树的文件存储技术打造了一个所有文件被唯一标识的分布式文件存储系统。仅使用区块链不能高效地存储，仅使用 IPFS 不能保证数据可信，因此，为了解决区块链存储大文件会导致性能低下的问题，有人将区块链与 IPFS 结合，融合高效存储和可信存储的优势，实现可信并高效的存储。然而 IPFS 有一些致命的问题，第一， IPFS 中存储的文件是公开与共享的，连接上区块链的任何人都能获取链上记录的文件，不能保证文件的私密性；第二，IPFS 提供的点对点的传输，如果持有文件的用户都不在线，文件就无法获取；此外，获取 IPFS 中的文件需要文件对应的 hash，如果没有 hash 则无法下载文件；第三，与将文件存储在区块链上类似的问题是，文件一旦上传，它们就不能被修改或删除，即便没有存储的价值，也会占用多台机器的存储空间。 本论文希望实现基于区块链的隐私文件存储系统，将文件存储在分布式存储系统中，支持文件的删除，将文件的 hash 等描述信息上链，实现信息的防篡改特性。 私链+IPFS 也能达到隐私性文件的效果。 如果你要分享文件，就得保持在线；一旦上传，它们就不能被修改或删除；不能通过其有意义的内容来搜索它们 参考文献二、研究内容和目标（2500 字）1.研究内容本论文要实现的是基于区块链的隐私文件存储系统，系统由区块链节点组成，用户将文件上传到分布式对象存储系统之后，文件的描述信息会被记录在区块链账本中公开存储，而文件内容在指定节点中存储，既保证了文件在区块链系统中不可篡改，又保证了文件的隐私性；既能避免区块链节点的单点故障，又能保证恶意节点无法盗取隐私文件。因此，本文主要计划完成以下两点研究内容： 第一，区块链的搭建及智能合约设计与部署。这一部分是整个系统的基础，区块链保障了系统中文件的防篡改特性，所以为区块链设计合理的智能合约至关重要，如果合约字段过多，会对系统的整体性能造成影响，如果合约字段过少，则无法借助区块链实现防篡改的特性。 第二，隐私文件存储系统的设计与实现。在区块链搭建完成的基础上，设计并实现隐私文件存储系统。这一部分是整个系统的核心，也是整个毕设中任务量最大的部分，主要工作包括系统架构设计，数据库表的设计，技术选型，功能点的计划以及具体的前后端开发。 区块链设计 链上存储数据： (*userId_hash)， 逻辑目录(M)，显示的文件名(M) 考虑1：不能放更少的字段，如果只存放 userId_hash 的话，如果某文件被替换为此用户的其他文件，系统无法检测出被篡改。如果 用户 ID，目录，文件名，hash 任何一项与数据库不一致的话，都可以检测出文件被篡改 考虑 2：不能放 bucketName, 存储文件名。 数据库设计 用户数据库： userId, 用户名, 邮箱，bcrypt(密码) 文件数据库还有没有存在的必要？ 可以先不加 文件数据库： userId, hash, bucketName, 存储文件名, 逻辑目录(M)，显示的文件名(M)，文件上传时间(M) userId, hash 作为联合主键 (M) 表示允许用户修改的字段 数据库中这里面每一行允许删除 目录文件数据库： 功能：用于获得用户的某个目录下面的目录以及文件，或者用于搜索用户的目录及文件 userid，目录或文件 （userid, 目录） 作为联合主键 目录类似 /a/b/c/ 格式，以/结尾 文件类似 /a/b/c/d 格式，以非/的字符结尾 分享数据库： 可能涉及的操作： 创建文件夹：在目录文件数据库创建对应的文件夹 文件上传：检查此用户当前目录下是否有重名的文件，如果有，上传失败。没有重名的文件，将文件上传到服务器，由服务器计算文件的 hash，并将文件上传到分布式存储系统，然后将(userid, 文件的全路径名) 插入到 目录文件数据库，再往文件数据库插入这个文件的信息 文件下载： 移动文件：用户指定需要移动到的文件夹后，如果目标文件夹不存在，服务器创建文件夹，接着修改数据库及区块链中对应文件的 文件夹字段。删除目录文件数据库的原纪录，插入新的记录。 文件重命名： 删除文件： 删除文件夹： 文件/目录 分享：（设置密码、分享时效） 文件或目录搜索功能： 其他细节： 由系统提供下载服务，而不是 minIO 有 minIO 提供的话，可能会暴露文件服务器地址，有文件泄露的风险，不安全 密码的存储 不存储明文，存储bcrypt(密码) ，用户登录时验证根据用户提供的密码生成 bcrypt，检查是否与数据库中记录的相等即可 互联网网站应该如何存储密码？ - 知乎bcrypt 与密码安全 - Tate &amp; Snow hash 上链的必要性： 如果没有上链的话，如果 MySQL 和 minIO 的用户名密码泄露，可以很轻松的修改文件，然后将数据库中对应记录的 hash 修改成 新文件的 hash。就能达到篡改文件的目的。 但是如果 userID_hash 上链了，即便文件和数据库中的 hash 字段被修改，当用下载文件时，或者定时程序运行的时候，检测到文件的信息与链上不一致，就会告知用户及管理员。 为什么不把数据全部存在区块链上？ 为了性能，如果把相对来说不那么重要的信息全部存在区块链中，写区块链的时候需要大部分节点达成共识，响应速度必然会降低 为了提升用户上传文件的隐私性，用户可自行将文件加密后上传 文件加密 签名？ 一个用户拥有 2 套公私钥？先加密，后签名 第一套公钥加密文件，第二套私钥签名文件 具体怎么弄还没想清楚 邮箱注册、通过邮箱找回密码功能 树形结构怎么存储，参考下文，可能他的并不是更好的方法 大量文件名记录的树形结构存储 第一， 第二， 第三， 1）文件存储与上链方案设计与实现 文件上传到分布式对象存储系统 2）cli 设计与实现 3）在线网盘设计与实现 2.研究目标与效果1） 2） 3） 3.拟解决的关键问题1） 2） 3） 三、研究方案设计及可行性分析（包括：研究方法，技术路线，理论分析、计算、实验方法和步骤及其可行性等）（不少于800字）1、研究方法 2、技术路线 MinIO 是一个基于 Apache License v2.0 开源协议的对象存储服务。它兼容亚马逊 S3 云存储服务接口，非常适合于存储大容量非结构化的数据，例如图片、视频、日志文件、备份数据和容器 / 虚拟机镜像等，而一个对象文件可以是任意大小，从几 kb 到最大 5T 不等。 分布式 Minio 可以让你将多块硬盘（甚至在不同的机器上）组成一个对象存储服务。由于硬盘分布在不同的节点上，分布式 Minio 避免了单点故障。 MinIO Docs | 分布式 MinIO 快速入门 四、本研究课题可能的创新之处（不少于500字）五、研究基础与工作条件（1.与本项目相关的研究工作积累基础 2.包括已具备的实验条件，尚缺少的实验条件和拟解决途径）（不少于500字）学位论文工作计划[1]黄俊飞,刘杰.区块链技术研究综述[J].北京邮电大学学报,2018,41(02):1-8. [1]区块链技术:架构及进展[J]. 邵奇峰,金澈清,张召,钱卫宁,周傲英. 计算机学报. 2018(05)[2]基于区块链的个人隐私保护机制[J]. 章宁,钟珊. 计算机应用. 2017(10)[3]区块链技术与应用前瞻综述[J]. 何蒲,于戈,张岩峰,鲍玉斌. 计算机科学. 2017(04)[4]基于区块链的应用系统开发方法研究[J]. 蔡维德,郁莲,王荣,刘娜,邓恩艳. 软件学报. 2017(06)[5]区块链技术综述[J]. 沈鑫,裴庆祺,刘雪峰. 网络与信息安全学报. 2016(11)[6]区块链技术发展现状与展望[J]. 袁勇,王飞跃. 自动化学报. 2016(04) 问题解决 内容丰富 开题报告 演讲稿 怎么保证防篡改 文件校验机制，为什么不直接用 hash 校验 文件的 hash 存入数据库，也可以校验 但是 1.文件有丢失的可能 2.MySQL 以及服务器密码泄露后，修改文件和对应数据库中的 hash 目标用户，应用场景，需求分析 依托什么项目 加入地质勘探项目，将文件的 项目文件，勘察文件，资金相关文件 文件上传，文件获取，文件校验的 API，方便快速接入其他系统 哪篇论文做了什么 基于 ipfs 和区块链的去中心化分布式版本控制系统的设计与实现《IPFS 原理与实践》 —2.3 版本控制（Git）_博客_云社区_开发者中心 - 华为云 做到完全的去中心化 1.可以有自己的代码仓库 需要有自己的命令行工具，比如叫 igit (ipfs git) 12345678910111213141516171819202122232425262728# ipfs 域名设置# 设置全局的或当前位置项目的 远程ipfs 域名# 代码上传到 ipfs 中igit initigit add .igit commit -m ''igit push# 上传后的文件的结构和 hash 放在类似 .git 的目录 一个文件 中# 做到去中心git status# 列出文件的状态（通过对比文件的 hash）git log# 也可以设置与我的后台服务器相关联，这样可以在前端进行展示# 用户需要现在我的网站注册，然后在本地设置全局的账号密码igit # igit push 的时候可以选择是否同步到后台服务器# 直接把对应仓库 clone 下来igit clone 101.200.240.225/git/hash# 前端展示代码文件# 私有代码仓库（文件加密） 其他实现细节： 可以学习 git, 历史文件也保存在本地，包括历史版本的文件，确保在没有连接 ipfs 或 ipfs 服务暂时不可用时 可以随时进行版本回退 igit 类似 git, 保存文件的快照，而不是像CVS或Subversion一样保存 sahib/brig: File synchronization on top of ipfs with git like interface &amp; web based UIInstallation — brig v0.4.0-beta documentation Installation — brig v0.4.0-beta documentation 可以将 Git 仓库传到ipfs 或者下载 cryptix/git-remote-ipfs: git transport helper for ipfs ipgit将代码上传到他的服务器，由服务器负责上传到 ipfs 中 相当于利用 ipfs 做一个存储，并不完全去中心化 meyer1994/ipgit: Inter Planetary Git git-ipfs-rehost命令行，直接把项目传到 ipfs 中，也没说有什么效果和其他用途 whyrusleeping/git-ipfs-rehost: A script to rehost your git repos in ipfs ipld可以通过 cid 获取递归子目录的所有文件 ipfs-shipyard/ipld-explorer: Explore the Merkle Forest from the comfort of your browser浏览 - IPLD浏览 - IPLD 12345$ git clone ipfs://ipfs/$hash/repo.git$ cd repo &amp;&amp; make $stuff$ git commit -a -m 'done!'$ git push origin=&gt; clone-able as ipfs://ipfs/$newHash/repo.git Why not Gitless · Issue #45 · sahib/briggitless-vcs/gitless: A simple version control system built on top of Git IPFS 文件共享与管理系统的设计与实现 安装 go-ipfs ，查看是否能打印 本机所有已经上传的数据 nix-env -i ipfs 毕设 PPT，发给修老师，杨老师，寻求意见 其他有意思的事情文件加密上传到 ipfs 中shlemph/ipfsecret: Encrypt and decrypt IPFS files with a secret passphrase. a simple webtool to add URLs to an IPFS node. 每太看懂具体是做什么的，但是感觉有点用 jbenet/http2ipfs-web IPFS 通俗易懂的解释IPFS: Interplanetary file storage! - YouTube 论文内容意义 做法修改、确定在 IPFS 中缺少的是加密。此外，还应该有一种在区块链中注册哈希的标准化方法。特意排除这些主题是因为它会让那些需要完成基础工作的人分心太多。 为何以太坊为 Filecoin 操碎了心 | IPFS 点滴资讯 storj sia filecoin 的逐步改进 FileCoin 不是使用不是工作证明（POW）挖矿，而是存储证明（POS）来保护网络 filecoin “采矿” 是一种更高效的能源（不再是毁灭地球！）以及 b）由为有用的 “采矿” 买单的人补贴 工具推荐一个制作「ASCII 流程图」工具 ——Graph Easy","link":"/%E6%AF%95%E8%AE%BE/%E5%BC%80%E9%A2%98%E6%8A%A5%E5%91%8A.html"},{"title":"","text":"题目基于区块链的存储系统的设计与实现 背景利用区块链不可篡改的特性，将地质勘测管理平台中的文件相关信息存储到区块链中，将文件存储到建立的私有 IPFS 中。实现文件的不可删除和篡改，各个职位的人只能更新文件，存储系统会记录各个文件的版本。 研究内容需要做的工作主要有： 1.建立区块链，建立私有的 IPFS 网络； 2.区块链智能合约设计与部署 3.用户上传文件后，服务器将文件上传到 IPFS 中，再将上传用户的信息，项目的信息，文件 hash 以及 IPFS 网络中的 cid 等信息上传到区块链中 4.下载接口，先对用户鉴权，再利用 IPFS 的接口下载文件到服务器，再将文件传输给用户 5.文件历史记录查询及下载功能，为某一项目某一类别的文件提供 历史文件 功能， 查看历史上传的所有版本的文件 6.将此系统应用到地质勘测管理平台中","link":"/%E6%AF%95%E8%AE%BE/%E8%AE%BA%E6%96%87%E5%8F%AF%E9%80%89%E9%A2%98%E7%9B%AE.html"},{"title":"","text":"计划编程这个月主要看多线程和复习 JVM 结合 我的博文 《面试复习》安排下一步工作 socket 编程 多线程写代码 rpc 看极客时间 mysql 极客时间笔记 阅读书籍 MySQL8 cookbook MongoDB 实战 Linux shell 脚本攻略 深入理解 java 虚拟机（前 5 章） java 并发编程实战 java 多线程编程核心技术 Redis 核心原理与应用实战 LeetCode一天 3 道新题 毕设能顺利开题就万事大吉了 开题报告 工作 简历更新，熟悉-&gt;了解，去除多余的项目经历 投实习 改进搜索系统 健康完成情况完成的情况写在这里 各个习惯状态阅读记录阅读记录 APP 中 累计时长： 阅读数： 阅读天数： 总结","link":"/%E8%AE%A1%E5%88%92/2020-12.html"},{"title":"","text":"本周六上午8：30在新科研楼118教室进行研二同学的开题报告，参加报告同学名单见上表。请大家准备一个报告PPT，明确课题名称、选题背景及意义，课题主要研究工作，进度计划，参考文献等内容，个人报告时间8-10分钟。 中文参考文献 了解各个存储系统 参考其他论文，研究内容完善 PPT制作 演讲稿 基于区块链的隐私文件存储系统的设计与实现 – 张荣辉 2019140740 研究背景及意义传统的文件存储不能保证文件存储可信 哈希指针和共识算法保证了区块链的不可篡改的特性 研究现状直接将数据写入区块 区块链往往与文件系统相结合 Sia 在数据切分过程中采用 Reed-Solomon 编码 [5] ， 来提高数据的可恢复性 采用 POW 共识机制来对交易进行验证 IPFS/Filecoin IPFS（InterPlanetary File System）是一个点对点的分布式文件系统 而 Filecoin 是 IPFS 上面的激励层，来鼓励更多的节点加入 IPFS 网络。但是 Filecoin 的服务方式是让服务商和用户相互选择，因此存储空间的利用率会相对偏低 ？？？ Storj Storj 是一个云存储项目 用户需要保持长时间的在线，来确保存储设备是否正常工作，用户体验较差，而且 Storj 基于以太坊进行交易结算，很明显也无法应用于高频的交易场景 研究内容一、区块链的搭建及智能合约设计与部署 区块链技术选择：fisco bcos(备选 以太坊、Hyperledger Fabric) 智能合约设计 二、数据库表的设计与建立 三、分布式文件存储系统的建立 计划采用 minIO 搭建分布式存储系统，优点 也可以选择自己搭建 只允许 业务系统的指定 IP 访问存储系统，以防用户用区块链中的公开信息获取文件 四、业务系统的设计与实现 进度计划 时间 研究内容 预期效果 2020.09-2020.10 研究现状调研工作 了解常用区块链文件存储方案 2020.11 论文开题 撰写开题报告，完成开题答辩 2020.12-2021.1 区块链的搭建及智能合约设计与部署 完成区块链的搭建及智能合约部署 2021.2-2021.5 设计与实现隐私文件存储系统 完成隐私文件存储系统 2021.7-2021.8 撰写阶段报告 完成阶段报告 2021.9-2021.12 撰写毕业论文 提交初稿、修改稿、定稿 2021.1-2021.5 论文送审、修改及答辩 论文送审、修改及答辩 参考文献[1] Reinsel D, Gantz J, Rydning J. Data age 2025: The evolution of data to life-critical[J]. IDC White Paper, 2017:1-25. [2] Nakamoto S. Bitcoin: A peer-to-peer electronic cash system[J]. 2008. [3] 郭珊珊. 供应链的可信溯源查询在区块链上的实现[D]. 大连海事大学, 2017. [4] Vorick D, Champine L. Sia: Simple decentralized storage[J]. White paper available at https://sia. tech/sia. pdf, 2014. [5] McEliece R J, Sarwate D V. On sharing secrets and Reed-Solomon codes[J]. Communications of the ACM, 1981,24(9):583-584. [6] Benet J. Ipfs-content addressed, versioned, p2p file system[J]. arXiv preprint arXiv:1407.3561, 2014. [7] Shteyn Y. Distributed storage on a P2P network architecture[Z]. Google Patents, 2002. [8] Wilkinson S, Boshevski T, Brandoff J, et al. Storj a peer-to-peer cloud storage network[J]. 2014. 一、报告时首先汇报自己的姓名、单位、专业和导师。 二、研究背景 (2-3 张幻灯片) 简要阐明所选题目的研究目的及意义。 研究的目的，即研究应达到的目标，通过研究的背景加以说明 (即你为什么要选择这个研究题目)。 研究的意义，即选题的价值和作用，包括理论意义、实践意义、社会效益和经济效益等。 三、研究现状 (文献综述)(2-3 张幻灯片) (1) 阐述国内外在该研究方向的历史、现状和发展情况，通过文献综述描述研究的现状，分析研究的不足，确定自己研究的起点和创新点。 (2) 所列参考文献应为近 5 年发表。 四、研究问题 (1 张幻灯片) 通过分析研究现状进而明确提出本论文要解决的具体学术问题或实际问题，以及自己准备在哪些方面有所进展或突破，预期的结果或成果。 五、研究内容与方法 (重点报告内容 10-15 张幻灯片) 研究内容指论文拟研究解决的问题。研究方法是针对解决研究问题的具体实施方案和办法。 (1) 详细阐述论文研究工作的总体安排、拟采取的技术路线、研究方法、步骤和主要研究内容， (2) 列出论文结构框架 (要求论文章节至三级标题)。 (3) 社会科学类论文均必须附调查 (访谈) 问卷；自然科学类论文均必须写出具体的试验设计和试验方法。 (4) 阐述研究工作可能遇到的困难和问题以及解决问题的方法和措施。 六、论文工作基础 (1-2 张幻灯片) 说明研究生本人的学习经历和工作背景对完成论文研究所做的知识储备及工作积累、目前仪器设备和其它方面应具备的条件、估算该论文的进度和经费保障等情况。 七、报告结束后要表示感谢。 注：报告时间不超过 10 分钟，PPT 中文字与背景应选择对比明显的样式，幻灯片要求画面简洁，文字内容不宜太多，应以概括性、提纲性文字为主，围绕研究什么、为什么要研究、怎样研究等核心问题展开；幻灯片一般文字不超过 8 行，字号不小于 20 号，但图表中文字可以除外。报告时回答问题简要明确，不要答非所问；专家在提到论文修改意见或现场点评时研究生本人作好记录 (或请同学帮助记录)，方便会后对论文进行相应修改。 开题报告 PPT 制作步骤 一、标题 在制作 PPT 的时候，我们一般是在网上下载现成的模板，省时省力。不过选择模板时，也要注意不要搞的太花哨，尤其是 PPT 中动画效果不要太多。在首页我们需要把自己开题的题目写上，题目把自己的研究内容表达清除即可，不需要太长。题目下面写上自己的姓名以及导师姓名，如果需要也可以写上专业和学号等。 二、目录 接着，是整个 PPT 的目录部分，我大致分了四个部分。开题答辩主要讲的内容就是两个：“我想要做什么” 以及 “我想要怎么做”。在场的老师会根据你的叙述来给出相应的意见，所以 PPT 在分块的时候也不需要太多，但是必须要把自己想要做的内容讲清楚。 三、研究背景 在研究背景这个大项中首先可以讲一下目前的背景，背景的话就是写写目前在某个领域需要这方面研究或者这方面研究还有提升空间等等。总之就是给你目前的研究找一个合适的理由。研究背景的第二部分可以讲讲研究现状，在这里可以总结一些前人的成果。然后根据前人的成果提出不同的观点或者找出前人研究的缺陷。可以把目前研究的可扩展的地方列出来，让人一目了然。 四、研究内容 接着针对上述研究的不足，就可以阐述一下自己要研究的内容了，这里把自己想要研究的内容罗列一下。 五、系统结构 然后就是阐述想要怎么做了，这里可以先讲一下系统架构，一般做工程的话会分为硬件系统和软件系统。可以先说硬件系统，在硬件系统这边可以配一张硬件连接图，让你的构思看起来更具有实现性。在讲软件系统的时候，可以把自己的系统框架图加进去。然后还可以加一些流程图以及示意图等等，PPT 制作过程中文字不要过多，如果太多的话答辩的时候就会有照着 PPT 念的嫌疑了，这样会让老师觉得你没有认真准备。 六、实现方式 最后可以讲讲预期会遇到的主要问题以及想到的解决方法等，最后也可以把预期完成的时间表加上。 七、致谢 在 PPT 的结尾不要忘了致谢。 毕业论文开题答辩经验分享 一、 答辩流程 1、 老师对答辩规则进行介绍； 2、 学生对论文内容进行概述，包括：题目、研究方法、文献综述、研究内容、目的与意义、待解决问题及解决方法，用时 10-15min； 3、 导师提问与点评，3-5min。 二、 答辩提问 1、为什么要选这个题目，别人都是从那些方面研究的？创新点在哪里？ 2、研究目的，体现的意义在哪里？ 3、框架结构安排？ 4、采用的研究方法？ 5、论文的进度安排？ 6、怎么收集相关资料的？参考书籍与资料有哪些？案例出处？文件综述如何组织？ 7、论文的大概内容？几个部分？ 8、全文个部分的逻辑关系？ 9、写论文立论的主要依据？ 10、 指导思想是什么？ 11、 还有哪些问题没有解决？ 12、 论文结论？ 三、 答辩技巧 （一）常用的数据库 1、中国知网 http: //http://wwwcnki.net /（中国学术文献数据库） 2、维普数据库 http://211.81.31.36:81/（中文科技期刊资源） 3、中国科学引文数据库 http: //www.cscacn 4、中国科技论文与引文数据库 http: //www.periodicals. net. cn/ 5、国家科技图书文献中心的中文学位论文数据库 http: //http://wwwnstl.gov . cn/NSTL/ 6、CALIST 高校学位论文库 http: //apac calis. edu. cn 7、清华同方一中国优秀博硕士学位论文全文数据库 http: //epub http://cnki.net/kns/brief/result .aspx.dbprefix –CDMD 8、PQDD-B（UM 博硕士论文数据库）http: //http://www.lib.umi.com 9、读秀学术搜索 http://www.duxiu.com 10、超星数字图书馆 http://book.chaoxing.com/ 11、国家图书馆 http://mylib.nlc.cn/web/guest 12、全国图书馆参考咨询联盟 http://www.ucdrs.superlib.net 13、国家哲学社会科学文献中心 http://www.ncpssd.org/ （二）PPT 技巧 1、封面：标题、姓名、专业、导师； 2、结构：课题内容、研究目的与意义、文献综述、研究问题与假设、研究内容与方法、论文进度安排、致谢； 3、研究背景：阐明题目、研究目的、研究意义，2-3 张 ppt； 4、文献综述：该研究的国内外研究现状，分析存在的不足，阐明自己论文的创新点，2-3 张 ppt； 5、研究问题提出与研究假设：明确论文具体要研究的问题，对研究成果作出假设，1 张 ppt； 6、研究内容与方法：阐述研究安排、技术路线、研究方法、研究内容、论文框架、问题及解决方法，13-15 张 ppt； 7、适当运用图表； 8、ppt 格式： 背景色：首选白色，或 lowpoly 背景； 主色：采用有冲击感的颜色（可参考校徽主色）； 字体：微软雅黑，每页 8-10 行字； 过渡页：纯色背景吸引注意； （三）答辩原则 1、文献综述：对文献综述分类，进行评述，附上文献列表（含中外文献、著作与论文、理论与实证、经典与最新）； 2、研究方法：3 种以内（调查法、观察法、实验法、文献研究法、实证研究法、定量分析法、定性分析法、跨科学研究法、个案分析法、描述性研究法、数量研究法、模拟法、探索研究法、信息研究法、数学方法、思维方法）； 3、论述时间把控：对内容熟悉掌握、即时模拟； 4、脱稿或半脱稿状态、多用第一人称； 5、答辩过程中要准备：导出 ppt 图片版备用、纸币方便记笔记。","link":"/%E6%AF%95%E8%AE%BE/%E5%BC%80%E9%A2%98%E6%B1%87%E6%8A%A5%20PPT.html"},{"title":"","text":"选题一区块链平台选择系统的设计与实现选题原因： 目前有多款区块链平台，为了帮助用户或企业在选择适合自己的区块链平台，构建区块链平台性能仿真系统。 初步设想： 在多个平台（包括 以太坊、fabric、fisco bcos）上部署区块链，用户可定制区块链节点数目、并发请求数等参数，选定想要比较的一个或多个平台，后台部署选定的区块链平台后，依次模拟向区块链发送并发请求，计算不同区块链平台的吞吐量、平均确认时间、存储消耗 等用户关心的性能指标。最后呈现具体的表格或图表给用户。 其他细节： 将已经模拟过的平台的相关性能指标 保存到数据库中，下次直接使用 今日推荐｜一文对比市面主流四大联盟链技术_陀螺财经 区块链技术对比和实战项目选型 - 阿里云开发者社区 选题二基于区块链的防篡改存储系统的设计与实现为了解决区块链文件存储的难点，设计与实现 minio + 区块链 的存储系统 用户加密后上传或者直接上传到服务器加密，避免文件存储服务器被破解后的造成巨大的损失。区块链存储加密的文件的 hash ，实现防篡改，采用多节点部署 minio 以实现高可用。 在完成架构设计的基础上，实现个人的网盘系统，每个人可以有自己的指定大小的网盘空间，加密文件，上传文件，浏览、下载文件。 更多细节： 允许用户选择 是否加密 是否上链 以提升性能。用户可以选择自己加密文件，保证文件的隐私性；也可以选择让服务器加密；或者选择不加密，加速存储的速度。可以选择是否上链，这样就不用计算 hash 值，提升上传文件的速度。 可能遇到的难点： 得考虑大文件的断点续传问题；以及大文件进行 hash 计算以及后期用 hash 进行校验的速度问题，将大文件进行分割，多进程计算小文件的 hash ，最后合并可能是一个可能的解决方案。 后期进展顺利的话，可以实现以下几个扩展功能： 1.文件分享功能，将文件分享给其他用户； 2.多用户建立群组，群组内共享文件 IPFS/多节点 minio + 区块链 多节点 minio 或 ipfs 实现高可用， 上传文件：用户用秘钥对文件加密，接着上传到服务器中，存储借助 minio，然后将文件的相关信息及其 hash 上链 浏览文件：web 端浏览已经上传的所有文件，下载后用秘钥解密 区块链技术在加密文件防篡改中的应用介绍 - 21ic 中国电子网 以太坊提供的文件存储机制： swarm bee 区块链一文读懂基于区块链的分布式存储技术 IPFS - 链闻 ChainNews 交易并发限制 改进 脚手架pear admin bootPear Admin Boot 首页、文档和下载 - Spring 快速开发平台 - OSCHINA - 中文开源技术交流社区Pear Admin 官网Pear 社区Pear Admin 文档","link":"/%E6%AF%95%E8%AE%BE/%E6%AF%95%E8%AE%BE%E9%80%89%E9%A2%98.html"}],"posts":[{"title":"mongodb","text":"[TOC] 快速安装MongoDB 已经宣布不再开源，从2019年9月2日开始 ，HomeBrew 也从核心仓库 (#43770) 当中移除了mongodb 模块 123# brew install mongodbbrew info mongodb# No available formula with the name \"mongodb\" 12345brew services stop mongodbbrew uninstall mongodbbrew tap mongodb/brewbrew install mongodb-communitybrew services start mongodb-community brew brew 又叫 Homebrew，是 Mac OSX 上的软件包管理工具，能在 Mac 中方便的安装软件或者卸载软件， 只需要一个命令， 非常方便 brew 类似 ubuntu 系统下的 apt-get 的功能 安装：/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot; brew list 列出已安装的软件 brew update 更新 brew brew home 用浏览器打开 brew 的官方网站 brew info 显示软件信息 brew deps 显示包依赖 安装 mongodb 如果你用 brew install mongodb，可能会报错：No available formula with the name &quot;mongodb&quot; 然后你需要的操作是： brew services stop mongodbbrew uninstall mongodbbrew tap mongodb/brewbrew install mongodb-communitybrew services start mongodb-community 查看 mongodb 版本：mongo。接着在终端中输入 mongod, 新建终端接着输入mongo，连接成功。 文件路径 配置文件：/usr/local/etc/mongod.conf日志目录路径：/usr/local/var/log/mongodb数据目录路径：/usr/local/var/mongodb 启动 &amp;&amp; 停止 mongodb-community 服务器mongod 作为服务运行 brew services start mongodb-communitybrew services stop mongodb-community 手动启动 mongod mongod --config /usr/local/etc/mongod.conf注意：如果您不包含 –config 带有配置文件路径的选项，则 MongoDB 服务器没有默认配置文件或日志目录路径，并将使用数据目录路径 / data/db。要 mongod 手动关闭，请使用 admin 数据库并运行 db.shutdownServer()：mongo admin --eval &quot;db.shutdownServer()&quot; 参考链接Mac下使用brew安装mongodb–2020版 - 简书","link":"/mongodb.html"},{"title":"biweekly-contest-22","text":"[TOC] Find the Distance Value Between Two Arrays3 Cinema Seat Allocation4 Sort Integers by The Power Value5 Pizza With 3n Slices7 112345678910111213class Solution: def satisfy(self, arr2, i, d): for j in arr2: if abs(j-i)&lt;=d: return False return True def findTheDistanceValue(self, arr1: List[int], arr2: List[int], d: int) -&gt; int: n = 0 for i in arr1: if self.satisfy(arr2, i, d): n += 1 return n 21234567891011121314151617181920212223242526272829303132333435363738394041424344454647class Solution: def maxNumberOfFamiliesCurrentRow(self, l): a1 = 2 not in l and 3 not in l a2 = 4 not in l and 5 not in l a3 = 6 not in l and 7 not in l a4 = 8 not in l and 9 not in l n = 0 if a1: n += 1 if a2: n += 1 if a3: n += 1 if a4: n += 1 if n==4: return 2 if n==3: return 1 if n==1: return 0 if (a1 and a2) or (a2 and a3) or (a3 and a4): return 1 return 0 def maxNumberOfFamilies1(self, n: int, reservedSeats: List[List[int]]) -&gt; int: # 超时 d = {i:[] for i in range(1, n+1)} for i, j in reservedSeats: d[i].append(j) n = 0 for i in d.values(): n += self.maxNumberOfFamiliesCurrentRow(i) return n def maxNumberOfFamilies(self, n: int, reservedSeats: List[List[int]]) -&gt; int: d = {} for i, j in reservedSeats: if i not in d: d[i] = [j] else: d[i].append(j) n = 2*(n-len(d)) for i in d.values(): n += self.maxNumberOfFamiliesCurrentRow(i) return n 312345678910111213141516171819class Solution: def getPower(self, n): res = 0 while n!=1: if n%2 == 0: n /= 2 else: n = n*3+1 res += 1 return res def getKth(self, lo: int, hi: int, k: int) -&gt; int: d = {} for i in range(lo, hi+1): d[i] = self.getPower(i) l = list(d.items()) l.sort(key=lambda i: i[1]) #print(l) return l[k-1][0] 4LeetCode 1388. Pizza With 3n Slices - AcWing 1234567891011121314151617class Solution: def helper(self, slices, n): m = len(slices) dp = [[0 for _ in range(n)] for _ in range(m)] dp[0][0] = slices[0] dp[1][0] = max(slices[0], slices[1]) for i in range(2, m): for j in range(n): if j==0: dp[i][j] = max(dp[i-1][j], slices[i]) else: dp[i][j] = max(dp[i-1][j], dp[i-2][j-1]+slices[i]) return dp[-1][n-1] def maxSizeSlices(self, slices: List[int]) -&gt; int: n = int(len(slices)/3) return max(self.helper(slices[1:], n), self.helper(slices[:-1], n))","link":"/Leetcode%20weekly%20contest/biweekly-contest-22.html"},{"title":"chrome 插件","text":"[toc] 正在用的插件**NimoTabNimoTab - Chrome 网上应用店 YouTube™双字幕 - Chrome 网上应用店 豆瓣电影放映厅插件，影音资源在线播放、影视下载、磁力链接-文章-扩展迷豆瓣电影放映厅 - Chrome 网上应用店豆瓣影视图书小助手 - Chrome 网上应用店Btools插件，检测哔哩哔哩收藏夹失效视频、评论增强、下载封面-文章-扩展迷 守候购物小助手NB！ 守候购物小助手 - Chrome 网上应用店 守候购物小助手插件，京东比价插件、多电商平台库存查询-文章-扩展迷chrome.google.com [User Script/用户脚本]Google Hit Hider by Domain - 能过滤搜索引擎搜索结果的脚本（版本：2.1.0，日期：20191021） - 24点半 Listly 一键爬取当前页面数据Listly - The Best Web Scraper EverListly - Web Scraper - Chrome 网上应用店 免费版：每月只能抓取 10 个网页，可建 1 项定期下载，免费。 查快递Live Coronavirus Tracker - Coronastats - Chrome 网上应用店 快递助手 - Chrome 网上应用店 二维码互转草料二维码插件，Chrome二维码生成及解析插件，在网页中解码-文章-扩展迷 搜索引擎切换Chrome搜索拐杖插件，快速切换百度/谷歌/必应搜索引擎，支持自定义-文章-扩展迷 自动朗读很好用，速度可调 Read Aloud: 文本语音朗读助理 - Chrome 网上应用店 自动滚动快速浏览网页 或 快速请求动态网页 Simple Auto Scroll - Chrome 网上应用店Scroll Buddy - Chrome 网上应用店 Minimap 网页缩略图 会阻挡视线，改成点击后开启插件 Minimap插件，在任意站点添加完整网页缩略图，快速进行网站定位-文章-扩展迷 recent history JSON Viewer Awesome - Chrome 网上应用店Linkclump-鼠标多选打开、复制标签页设置按住 z, 同时拖拽鼠标新标签页打开 c, 复制 Fatkun图片批量下载Fatkun图片批量下载 - Chrome 网上应用店 下载 GitHub 的图片，再批量上传到图床上 有意思的插件BlockTube - Chrome 网上应用店用很多规则屏蔽某些视频 Coplay插件，异地同步观看影片，在两个浏览器中同步播放视频-文章-扩展迷 漫神器插件，聚合全网漫画资源，漫画更新时自动提醒-文章-扩展迷 整张网页截图神器插件，一键保存整页网页截图-文章-扩展迷 s 自动填写表单： 填写填过的表单或者乱填一通 Autofill - Chrome 网上应用店Form Filler - Chrome 网上应用店 Script Menu插件，自定义右键菜单栏，可添加多种菜单格式-文章-扩展迷Private Bookmarks插件，Chrome加密书签插件，为你的浏览器收藏夹设置密码-文章-扩展迷 Take a Break for My Eyes插件，定时休息提醒Chrome插件，保护眼睛健康-文章-扩展迷QueueTube for YouTube插件，使用YouTube站内搜索时不中断当前影片播放-文章-扩展迷 字体换加插件，自定义Chrome网页字体，更改字体样式，调整字体大小-文章-扩展迷 Context插件，Chrome插件管理，分组管理谷歌浏览器插件，批量禁用启用-文章-扩展迷 Loom - Video Recorder: Screen, Webcam and Mic免费录制屏幕，网页截图 Chrome插件,Loom - Video Recorder: Screen, Webcam and Mic免费录制屏幕，网页截图 谷歌浏览器插件下载_安装_教程-扩展迷Foxit PDF Tools插件，PDF文件处理工具，包括编辑、压缩、转换格式-文章-扩展迷 Web of Science生成参考文献助手插件，快速保存当前页面参考文献-文章-扩展迷 Bulk URL Opener - Chrome 网上应用店 Sync Sofa - 异地情侣同步看片，可同步播放、暂停、快进在线视频[Chrome] - 小众软件 SessionBox同时使用多个帐户浏览网站变容易了。点击一下按钮即可创建一个独立标签。 运营人员利器，能同时开多个窗口登录各大平台。不会被挤下来 1.session box把会话隔离开了，这样在登录多个账户的时候就不会有冲突了。插件地址：SessionBoxhttps://chrome.google.com/webstore/detail/sessionbox-free-multi-log/megbklhjamjbcafknkgmokldgolkdfig","link":"/Chrome/chrome-%E6%8F%92%E4%BB%B6.html"},{"title":"biweekly-contest-23","text":"[TOC] Count Largest Group3 Construct K Palindrome Strings5 Circle and Rectangle Overlapping5 Reducing Dishes6 11234567891011121314151617181920212223class Solution: def countLargestGroup(self, n: int) -&gt; int: # {sum: [n1, n2], } d = {} for i in range(1, n+1): _sum = 0 t = i while t: _sum += t%10 t = int(t/10) if _sum not in d: d[_sum] = [i] else: d[_sum].append(i) result = 0 m = 0 for i in d.values(): if len(i)==m: result += 1 elif len(i) &gt; m: result = 1 m = len(i) return result 2123456789101112131415161718class Solution: def canConstruct(self, s: str, k: int) -&gt; bool: if len(s)&lt;k: return False if len(s)==k: return True # 单数，双数 个数 x, y # 前提：len(s)=x+2y&gt;k # 要求：x&lt;=k l = [] for i in s: if i in l: l.remove(i) else: l.append(i) if len(l) &lt;= k: return True return False 3事后看一两三四五的解法，做出来的 https://www.bilibili.com/video/BV1Ae411x7fa/?p=1 LeetCode 考的是智商吧 求距离时不要用 根号，反之把半径平方即可比较，否则会很慢 123456789101112131415161718class Solution: def d(self, x1, y1, x2, y2): return (x1-x2)**2+(y1-y2)**2 def checkOverlap(self, r: int, x: int, y: int, x1: int, y1: int, x2: int, y2: int) -&gt; bool: # 圆心在矩形内 if x1 &lt;= x &lt;= x2 and y1 &lt;= y &lt;= y2: return True # 圆心到上下两边的距离 if x1 &lt;= x &lt;= x2 and min(abs(y1-y), abs(y2-y))&lt;=r: return True # 圆心到左右两边的距离 if y1 &lt;= y &lt;= y2 and min(abs(x1-x), abs(x2-x))&lt;=r: return True # # 圆心到四点的距离 if min(self.d(x, y, x1, y1), self.d(x, y, x1, y2), self.d(x, y, x2, y1), self.d(x, y, x2, y2)) &lt;= r*r: return True return False 另一种思路： 将矩形扩大后判断圆心是否在里面，接着判断圆心到四个顶点的距离是否不大于 r 其实这就是上面解法的另一种解释 412345678910111213class Solution: def maxSatisfaction(self, satisfaction: List[int]) -&gt; int: # 1. sort # 2. 找到第一个让 sum 为负数的位置, 移动中将 sum 加到 result 中 satisfaction.sort(reverse=True) _sum = 0 result = 0 for i in satisfaction: _sum += i if _sum&lt;0: break result += _sum return result","link":"/Leetcode%20weekly%20contest/biweekly-contest-23.html"},{"title":"weekly-contest-180","text":"[TOC] Lucky Numbers in a Matrix3 Design a Stack With Increment Operation4 Balance a Binary Search Tree4 Maximum Performance of a Team6 112345678910111213141516171819class Solution: def addTo(self, d, i, m): if i in d: d[i].append(m) else: d[i] = [m] def luckyNumbers (self, matrix: List[List[int]]) -&gt; List[int]: d = {} for l in matrix: m = min(l) for i, v in enumerate(l): if v==m: self.addTo(d, i, m) result = [] for k, v in d.items(): m = max(i[k] for i in matrix) result.extend(i for i in v if i==m) return result 212345678910111213141516171819202122232425262728293031class CustomStack: def __init__(self, maxSize: int): self.left = maxSize self.l = [] def push(self, x: int) -&gt; None: if self.left&gt;0: self.l.append(x) self.left -= 1 def pop(self) -&gt; int: if self.l: self.left += 1 result = self.l[-1] del self.l[-1] return result else: return -1 def increment(self, k: int, val: int) -&gt; None: for i in range(min(k, len(self.l))): self.l[i] += val # Your CustomStack object will be instantiated and called as such:# obj = CustomStack(maxSize)# obj.push(x)# param_2 = obj.pop()# obj.increment(k,val) 3LeetCode 1382. Balance a Binary Search Tree - AcWing 12345678910111213141516171819202122232425class Solution: def getNums(self, root, l): if not root: return self.getNums(root.left, l) l.append(root.val) self.getNums(root.right, l) def build(self, l): n = len(l) if n==0: return None mid = int(n/2) root = TreeNode(l[mid]) root.left = self.build(l[:mid]) root.right = self.build(l[mid+1:]) return root def balanceBST(self, root: TreeNode) -&gt; TreeNode: l = [] self.getNums(root, l) if len(l)&lt;3: return root return self.build(l) 4排序+堆(Python) - 最大的团队表现值 - 力扣（LeetCode） 思路： 按efficiency进行降序排列，遍历排序后的speed和efficiency，在遍历过程中进行以下操作：(1)将speed放入最小堆中，(2)保持堆的大小为k，(3)记录堆中speed之和，(4)寻找最大团队表现值。 12345678910111213141516171819from heapq import heappush as pushfrom heapq import heappop as popclass Solution: def __init__(self): self.mod = 10**9+7 def maxPerformance(self, n: int, speed: List[int], efficiency: List[int], k: int) -&gt; int: l = sorted(zip(speed, efficiency), key=lambda i: -i[1]) speed_sum = 0 speedl = [] res = 0 for s, e in l: push(speedl, s) speed_sum += s if len(speedl)&gt;k: speed_sum -= pop(speedl) res = max(res, speed_sum*e) return res%self.mod","link":"/Leetcode%20weekly%20contest/weekly-contest-180.html"},{"title":"weekly-contest-181","text":"[TOC] Create Target Array in the Given Order3 Four Divisors4 Check if There is a Valid Path in a Grid5 Longest Happy Prefix 6 1123456class Solution: def createTargetArray(self, nums: List[int], index: List[int]) -&gt; List[int]: result = [] for num, index in zip(nums, index): result.insert(index, num) return result 2为什么我就不会暴力呢 1234567891011121314151617181920212223class Solution: def isFourDivisors(self, n): # return 0 or sum of four divisors of n cnt = 2 # 1 以及 自身 res = 1+n i = 2 while True: if i*i&gt;n: break if i*i==n: return 0 if not n%i: cnt += 2 res += i + n/i if cnt&gt;4: return 0 i += 1 if cnt==4: return int(res) return 0 def sumFourDivisors(self, nums: List[int]) -&gt; int: return sum(self.isFourDivisors(i) for i in nums) 3这题很恶心，也没说清楚，得自己试，浪费了很多时间 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152class Solution: # direction 表示上一个格子到当前格子的流动方向 def nextij(self, grid, i, j, direction): num = grid[i][j] # print([num, direction]) if [num, direction] in [[1, 'right'], [4, 'up'], [6, 'down']]: return i, j+1, 'right' if [num, direction] in [[1, 'left'], [3, 'up'], [5, 'down']]: return i, j-1, 'left' if [num, direction] in [[2, 'up'], [5, 'right'], [6, 'left']]: return i-1, j, 'up' if [num, direction] in [[2, 'down'], [3, 'right'], [4, 'left']]: return i+1, j, 'down' return False def hasValidPath(self, grid: List[List[int]]) -&gt; bool: m = len(grid) n = len(grid[0]) if m==n==1: return True i = j = 0 if grid[0][0] in [5]: return False elif grid[0][0] in [1, 3]: direction = 'right' return self.helper(grid, m, n, i, j, direction) elif grid[0][0] in [2, 6]: direction = 'down' return self.helper(grid, m, n, i, j, direction) elif grid[0][0] in [4]: return self.helper(grid, m, n, 0, 1, 'right') or self.helper(grid, m, n, 1, 0, 'down') def helper(self, grid, m, n, i, j, direction): walked = [[0 for j in range(n)] for i in range(m)] while True: nextijResult = self.nextij(grid, i, j, direction) # print('nextijResult', nextijResult) if not nextijResult: return False nexti, nextj, direction = nextijResult # print(nexti, nextj, direction) if not (0&lt;=nexti&lt;m and 0&lt;=nextj&lt;n): return False if walked[nexti][nextj]: return False if nexti==m-1 and nextj==n-1: return bool(self.nextij(grid, nexti, nextj, direction)) walked[i][j] = 1 i, j = nexti, nextj 4kmp pi函数或者说 next fail 函数的性质题，输出匹配到最后位置的最长前缀即可 12345678910111213141516class Solution: def longestPrefix(self, s: str) -&gt; str: n = len(s) nxt = [0 for i in range(n+1)] # i 前缀 i = 0 # j 后缀 j = nxt[0] = -1 while(i&lt;n): while(j!=-1 and s[i]!=s[j]): j = nxt[j] i += 1 j += 1 nxt[i] = j # print(nxt) return s[:nxt[-1]]","link":"/Leetcode%20weekly%20contest/weekly-contest-181.html"},{"title":"weekly-contest-182","text":"[TOC] Find Lucky Integer in an Array3 Count Number of Teams4 Design Underground System5 Find All Good Strings 8 Contest - LeetCodeContest - LeetCode 太丢人了 Find Lucky Integer in an ArrayGiven an array of integers arr, a lucky integer is an integer which has a frequency in the array equal to its value. Return a lucky integer in the array. If there are multiple lucky integers return the largest of them. If there is no lucky integer return -1. 12345678910class Solution: def findLucky(self, arr: List[int]) -&gt; int: result = -1 d = {i:0 for i in arr} for i in arr: d[i] += 1 for i in arr: if i==d[i]: result = max(result, i) return result Count Number of Teams长度为 3 的单调上升或下降子序列的个数 相似的题目：leetcode 300. Longest Increasing Subsequence - zronghui的博客 比赛最后才想明白，可惜没做完 思路长度为 3，选定中间那个数，然后 前面比它小的数*后面比它大的数=以这个数为第二个数的上升子序列 举例 Input: rating = [1,2,3,4]Output: 4 ​ 1 2 3 4 前面比 i 小的个数 0 1 2 3 后面比 i 大的个数 3 2 1 0 10*3 + 1*2 + 2*1 + 3*0 = 4 再把 1234 颠倒过来，再算一遍为 0，最后二者相加4+0=4 1234567891011121314151617class Solution: def numTeams(self, rating: List[int]) -&gt; int: return self.helper(rating) + self.helper(rating[::-1]) def helper(self, l): dp1 = [0 for i in l] dp2 = [0 for i in l] for i in range(len(l)): for j in range(i-1, -1, -1): if l[j] &lt; l[i]: dp1[i] += 1 for i in range(len(l)-1, -1, -1): for j in range(i+1, len(l)): if l[j] &gt; l[i]: dp2[i] += 1 print(dp1, dp2) return sum(i*j for i, j in zip(dp1, dp2)) Design Underground SystemImplement the class UndergroundSystem that supports three methods: checkIn(int id, string stationName, int t) A customer with id card equal to id, gets in the station stationName at time t.A customer can only be checked into one place at a time.2. checkOut(int id, string stationName, int t) A customer with id card equal to id, gets out from the station stationName at time t.3. getAverageTime(string startStation, string endStation) Returns the average time to travel between the startStation and the endStation.The average time is computed from all the previous traveling from startStation to endStation that happened directly.Call to getAverageTime is always valid.You can assume all calls to checkIn and checkOut methods are consistent. That is, if a customer gets in at time t1 at some station, then it gets out at time t2 with t2 &gt; t1. All events happen in chronological order. 这题简单，构造 2 个字典就完事 1234567891011121314151617181920212223242526272829303132class UndergroundSystem: def __init__(self): # {id: [t, src]} self.checkInDict = {} # {(src, dest): [sumTime, n]} self.timeDict = {} def checkIn(self, id: int, stationName: str, t: int) -&gt; None: self.checkInDict[id] = [t, stationName] def checkOut(self, id: int, stationName: str, t: int) -&gt; None: inTime, inStation = self.checkInDict[id] del self.checkInDict[id] if (inStation, stationName) not in self.timeDict: self.timeDict[(inStation, stationName)] = [t-inTime, 1] else: self.timeDict[(inStation, stationName)][0] += t-inTime self.timeDict[(inStation, stationName)][1] += 1 def getAverageTime(self, startStation: str, endStation: str) -&gt; float: sum, n = self.timeDict[(startStation, endStation)] return sum/n# Your UndergroundSystem object will be instantiated and called as such:# obj = UndergroundSystem()# obj.checkIn(id,stationName,t)# obj.checkOut(id,stationName,t)# param_3 = obj.getAverageTime(startStation,endStation) Find All Good StringsGiven the strings s1 and s2 of size n, and the string evil. Return the number of good strings. A good string has size n, it is alphabetically greater than or equal to s1, it is alphabetically smaller than or equal to s2, and it does not contain the string evil as a substring. Since the answer can be a huge number, return this modulo 10^9 + 7. 这道题真的 hard。。。","link":"/Leetcode%20weekly%20contest/weekly-contest-182.html"},{"title":"weekly-contest-184","text":"[TOC] String Matching in an Array3 Queries on a Permutation With Key4 HTML Entity Parser5 Number of Ways to Paint N × 3 Grid7 值得纪念，第一次写完了，体验到一把做完题目的爽快感，虽然排名依旧很落后 1本来打算按照长度排个序，却卡住了 `a.sort(key=lambda i: len(i)) 1234567891011class Solution: def stringMatching(self, words: List[str]) -&gt; List[str]: res = [] for i in words: # 判断 i 是否为 j 的子串 for j in words: if j in res or i==j or len(i)&gt;=len(j): continue if i in j and i not in res: res.append(i) return res 2逆序 range(index, 0, -1) p[1:index+1] = p[:index] 灵机一动，试了一下，还真可以 1234567891011121314class Solution: def processQueries(self, queries: List[int], m: int) -&gt; List[int]: n = len(queries) p = list(range(1, m+1)) res = [] for i in queries: index = p.index(i) res.append(index) p[1:index+1] = p[:index] #for j in range(1, index+1): # p[j] = p[j-1] p[0] = i # print(p) return res 312345678910111213class Solution: def entityParser(self, text: str) -&gt; str: m = { '&amp;quot;': '\"', '&amp;apos;': \"'\", '&amp;amp;': \"&amp;\", '&amp;gt;': \"&gt;\", '&amp;lt;': \"&lt;\", '&amp;frasl;': \"/\" } for key, value in m.items(): text = text.replace(key, value) return text 4一开始没想通，弄歪门邪道，拟合： 在线曲线拟合神器_村美小站 拟合效果还挺好 解法主要 2 种情况，1. 形如 1 2 3 2. 形如 1 2 1 设以上两种情况各 x y 个 1个 1 2 3 可衍生出 2 个 x，2 个 y 1个 1 2 1 可衍生出 2 个 x，3 个 y 因此推导式： x’ = 2x+2y y’ = 2x+3y 起始状态： n = 1 时，x = y = 6 1234567891011class Solution: def numOfWays(self, n: int) -&gt; int: if n==1: return 12 x = y = 6 # 执行 n-1 次循环 for i in range(n-1): tx, ty = x, y x = (2*tx+2*ty)%(10**9+7) y = (2*tx+3*ty)%(10**9+7) return (x+y)%(10**9+7) 心得卡住了换一种思路，时间最重要，赛后再想 测试的时候可以 print，提交的时候一定要注释掉 不要想着走捷径，没有意义","link":"/Leetcode%20weekly%20contest/weekly-contest-184.html"},{"title":"weekly-contest-183","text":"[TOC] Minimum Subsequence in Non-Increasing Order4 Number of Steps to Reduce a Number in Binary Representation to One4 Longest Happy String6 Stone Game III7 11234567891011class Solution: def minSubsequence(self, nums: List[int]) -&gt; List[int]: if len(nums)&lt;2: return nums nums.sort(reverse=True) _sum = sum(nums) t = 0 for i, k in enumerate(nums): t += k if t&gt;_sum/2: return nums[:i+1] 2123456789101112131415161718192021class Solution: def add(self, s): if '0' not in s: return '1' + len(s)*'0' for i in list(range(len(s)))[::-1]: if s[i]=='0': return s[:i] + '1' + '0' * (len(s)-i-1) def numSteps(self, s: str) -&gt; int: result = 0 if len(s)==0: return 0 while s!='1': result += 1 if s[-1]=='0': s = s[:-1] else: s = self.add(s) return result 3(贪心) O((a+b+c)2)O((a+b+c)2)我们交替地往原字符串中插入 a，b 或 c，且保证每一次插入时都不会破坏规则。由于是交替的插入，所以如果出现了某个字符不能插入的情况，则说明无论如何都没有办法插入这么多个该字符。 1234567891011121314151617181920212223242526272829303132333435363738class Solution: def insert(self, s, c): # 返回插入 i(a, b, c) 后的 s, isSuccess # 长度小于 2 or 第一个字母不同 or 第二位不同 直接放首位 if len(s)&lt;2 or s[0]!=c or s[1]!=c: return c + s, True # last 字母不同 or last-1 字母不同，直接放末位 if s[-1]!=c or s[-2]!=c: return s + c, True # now len(s) &gt;= 5 等于 5 的情况：ccbcc for i in range(2, len(s)-2): if s[i-1]==c and s[i-2]==c: continue if s[i-1]!=c and (s[i]!=c or s[i+1]!=c): return s[:i] + c + s[i:], True return s, False def longestDiverseString(self, a: int, b: int, c: int) -&gt; str: # 逐个插入 a b c ，直至插入失败或者插完 s = '' while a+b+c: if a: s, ok = self.insert(s, 'a') a -= 1 if not ok: return s if b: s, ok = self.insert(s, 'b') b -= 1 if not ok: return s if c: s, ok = self.insert(s, 'c') c -= 1 if not ok: return s print(s) return s 4 1234567891011class Solution: def stoneGameIII(self, l: List[int]) -&gt; str: dp = [0 for i in range(len(l))] dp[-1] = l[-1] if len(l)&gt;1: dp[-2] = max(l[-2]-dp[-1], sum(l[-2:])) if len(l)&gt;2: dp[-3] = max(l[-3]-dp[-2], l[-3]+l[-2]-dp[-1], sum(l[-3:])) for i in range(len(l)-4, -1, -1): dp[i] = max(l[i]-dp[i+1], l[i]+l[i+1]-dp[i+2], l[i]+l[i+1]+l[i+2]-dp[i+3]) return 'Alice' if dp[0]&gt;0 else 'Bob' if dp[0]&lt;0 else 'Tie'","link":"/Leetcode%20weekly%20contest/weekly-contest-183.html"},{"title":"周赛思路参考","text":"[TOC] Contest - LeetCode 题解： 个人空间 - AcWing 一俩三四五的个人空间 - 哔哩哔哩 ( ゜- ゜)つロ 乾杯~ Bilibili 格物致知 tiankonguse’s 代码世界","link":"/Leetcode%20weekly%20contest/%E5%91%A8%E8%B5%9B%E6%80%9D%E8%B7%AF%E5%8F%82%E8%80%83.html"},{"title":"bitbar","text":"插件库BitBar - Put anything in your Mac OS X menu bar 使用心得输出带颜色something | color=red/green 1print('{:.2f} | color={}'.format(hk2sh + hk2sz, color)) 分隔符3个-,不能多也不能少 print(‘—‘) 点击跳转链接类似于： AQI Detail… | href=http://aqicn.org/city/luan/ 有意思的插件SSH Status on BitBar - Put anything in your Mac OS X menu barSSH on BitBar - Put anything in your Mac OS X menu barAria2 on BitBar - Put anything in your Mac OS X menu barping on BitBar - Put anything in your Mac OS X menu bar","link":"/Mac/01-bitbar.html"},{"title":"aria2","text":"[TOC] 配置主要用 aria2 gui dir=/Volumes/My\\ Passport/data/ut下载/0\\ \\ 未分类/ytdl\\ videos/bilibili/ Aria2配置教程（Mac和Windows） - Justin Smith - Medium Aria2 配置Aria2 &amp; YAAW 使用说明aria2c(1) — aria2 1.35.0 documentation win mac aria2下载https://pan.baidu.com/s/1nu4UHfV#list/path=%2F&amp;parentPath=%2Fsharelink2668081893-566048232074527 网页端管理软件active: 7 - waiting: 0 - stopped: 0 — Aria2 WebUI↓214 KB - Yet Another Aria2 Web Frontend 查看 aria2 状态 1ps aux|grep aria2c 12/Applications/Aria2GUI.app/Contents/Resources/aria2c --dir=/Volumes/My\\ Passport/data/ut下载/0\\ \\ 未分类/ytdl\\ videos/bilibili/ --conf-path=/Applications/Aria2GUI.app/Contents/Resources/aria2.conf --input-file=/Applications/Aria2GUI.app/Contents/Resources/aria2.session --save-session=/Applications/Aria2GUI.app/Contents/Resources/aria2.session --max-concurrent-downloads=10 --max-connection-per-server=16 --min-split-size=1024K --split=16 --max-overall-download-limit=0K --max-overall-upload-limit=0K --max-download-limit=0K --max-upload-limit=0K --continue=true --auto-file-renaming=true --allow-overwrite=true --disk-cache=0M --max-tries=0 --retry-wait=5 -D","link":"/Mac/02-aria2.html"},{"title":"进程分析 端口分析","text":"[TOC] 进程分析查看进程信息ps aux | grep python 查看系统中运行的 python 进程 向进程发送信号我们可以使用 kill PID 杀死一个进程，或者使用 kill -9 PID 强制杀死一个进程。 -9 是信号的一种，kill 命令会向进程发送一个信号，-9代表 SIGKILL 之意，用于强制终止某个进程 我们可以通过 kill -l 命令查看到所有的信号 HUP INT QUIT ILL TRAP ABRT BUS FPE KILL USR1 SEGV USR2 PIPE ALRM TERM STKFLT CHLD CONT STOP TSTP TTIN TTOU URG XCPU XFSZ VTALRM PROF WINCH POLL PWR SYS 上面的信号是有顺序的，比如第1个是 HUP，第9个是 KILL，下面两种方式是等价的： kill -1 PID 和 kill -HUP PID kill -9 PID 和 kill -KILL PID 信号HUP通常程序用这个信号进行优雅重载配置文件，重新启动并且不影响正在运行的服务。比如 pkill -1 uwsgi 优雅重启uwsgi 进程，对服务器没有影响 kill -1 NGINX_PID 优雅重启nginx进程，对服务器没有影响 除了知道可以这么使用之外，感兴趣的读者还可以自行学习，深入了解下uwsgi和nginx无损reload的机制。 CTRL-C 发送 SIGINT 信号给前台进程组中的所有进程，常用于终止正在运行的程序。 CTRL-Z 发送 SIGTSTP 信号给前台进程组中的所有进程，常用于挂起一个进程。 查看进程打开了哪些文件sudo lsof -p PID 可以使用 lsof -p PID | grep TCP 查看进程中的 TCP 连接信息。 查看文件被哪个进程使用使用这个命令查看一个文件被哪些进程正在使用 sudo lsof /path/to/file，示例如下： sudo lsof /home/tu/.virtualenvs/mic/bin/uwsgi 查看进程当前状态当我们发现一个进程启动了，端口也是正常的，但好像这个进程就是不“干活”。比如我们执行的是数据更新进程，这个进程不更新数据了，但还是在跑着。可能数据源有问题，可能我们写的程序有BUG，也可能是更新时要写入到的数据库出问题了（数据库连接不上了，写数据死锁了）。我们这里主要说下第二种，我们自己的程序如果有BUG，导致工作不正常，我们怎么知道它当前正在干什么呢，这时候就要用到Linux中的调试分析诊断strace，可以使用 sudo strace -p PID这个命令。 ？ 端口分析比如我们在服务器上运行 Nginx，访问的时候就是连接不上，我们可以使用 ps aux | grep nginx看下nginx进程是不是启动了，也可以看下 80端口有没有被占用。换句话说，如果没有任何程序跑在这个端口上（或者说没有任何程序使用这个端口），证明忘了启动相关程序或者没能启动成功，或者说程序使用的端口被修改了，不是80了，那又怎么可能能访问到呢？ 查看全部端口占用情况Linux中我们可以使用 netstat 工具来进程网络分析，netstat 命令有非常多选项，这里只列出了常用的一部分 -a或–all 显示所有连接中的Socket，默认不显示 LISTEN 相关的。 -c或–continuous 持续列出网络状态，不断自动刷新输出。 -l或–listening 显示监听中的服务器的Socket。 -n或–numeric 直接使用IP地址，而不是展示域名。 -p或–programs 显示正在使用Socket的程序进程PID和名称。 -t或–tcp 显示TCP传输协议的连接。 -u或–udp 显示UDP传输协议的连接。 比如我们可以查看服务器中监控了哪些端口，如果我们的nginx是使用80端口，uwsgi使用的是7001端口，我们就能知道通过下面的命令 netstat -nltp Active Internet connections (only servers) Proto Recv-Q Send-Q Local Address Foreign Address State PID/Program name tcp 0 0 0.0.0.0:7001 0.0.0.0:* LISTEN 2070/uwsgi tcp 0 0 127.0.0.1:6379 0.0.0.0:* LISTEN 1575/redis-server 1 就能知道80端口的 nginx 是不是启动成功了，7001端口的uwsgi是不是启动成功了。 注意：如果PID和Program Name显示不出来，证明是权限不够，可以使用sudo运行 查看具体端口占用情况 sudo lsof -i :80 (注意端口80前面有个英文的冒号) COMMAND PID USER FD TYPE DEVICE SIZE/OFF NODE NAME nginx 4123 admin 3u IPv4 13031 0t0 TCP *:http (LISTEN) nginx 4124 admin 3u IPv4 13031 0t0 TCP *:http (LISTEN) 我们可以通过这个方法查询出占用端口的程序，如果遇到端口已经被占用，原来的进程没有正确地终止，可以使用kill命令停掉原来的进程，这样我们就又可以使用这个端口了。 除了上面讲的一些命令，在部署过程中会经常用到下面的一些Linux命令，如果不清楚它们是做什么的，可以提前自行学习下这些Linux基础命令： ls, touch, mkdir, mv, cp, ps, chmod, chown","link":"/Linux/%E8%BF%9B%E7%A8%8B%E5%88%86%E6%9E%90-%E7%AB%AF%E5%8F%A3%E5%88%86%E6%9E%90.html"},{"title":"ssh config editor","text":"[TOC] SSH Config Editor Pro 1.11.5 破解版 for Mac 管理您的SSH配置文件 不借助软件的配置打开~/.ssh/config文件，添加以下内容： 123456Host server-alias # server-alias为SSH链接的服务器别名 HostName server-ip # 服务器地址 Port 22 User username # 服务器端用户名 PreferredAuthentications publickey IdentityFile ~/.ssh/id_rsa # 私钥地址，默认为 ~/.ssh/id_rsa 验证 以后即可通过以下命令登录远程服务器 1ssh server-alias 解决mac下ssh自动中断1echo \"ServerAliveInterval 30\" &gt;&gt; ~/.ssh/config 每隔30秒，mac客户端会主动向服务器发出一次请求。这样就使得服务器端认为客户端是一直在线状态，也就不会主动断开连接了。","link":"/Mac/03-ssh-config-editor.html"},{"title":"cocktail","text":"[TOC] Cocktail 13.1 破解版 for Mac 清理维护优化工具 延长硬盘睡眠时间 关闭开机声音 禁用mac拼写自动更正","link":"/Mac/04-cocktail.html"},{"title":"iterm","text":"[TOC] 主题配置 准备工作下载iTerm色彩方案iTerm2-Color-Schemes并解压 进入Preference &gt; Profiles 设置Terminal &gt; Report Terminal Type，选择xterm-256color 设置Colors &gt; Color Presets &gt; Import，导入iTerm2-Color-Schemes的schemes文件夹，选择自己喜欢的颜色方案(选的是dracula) 设置Window &gt; Transparency，调整窗口透明度 设置Session &gt; Status bar enabled &gt; Configure Status Bar，拖拽需要显示的状态 图标字体安装12345export http_proxy=http://127.0.0.1:1087;export https_proxy=http://127.0.0.1:1087;brew tap caskroom/fontsbrew cask install font-hack-nerd-fontbrew install rubygem install colorls colorls 安装athityakumar/colorls: A Ruby gem that beautifies the terminal’s ls command, with color and font-awesome icons. 12345678910111213141516brew install ruby# 替换你的Ruby版本brew link --overwrite ruby# 你还可以使用rbenv在计算机上安装和运行不同版本的Ruby brew install rbenvgem install colorls# 问题，gem/ruby 安装的 colorls 命令找不到colorls# zsh: command not found: colorlsgem which colorls# /usr/local/lib/ruby/gems/2.6.0/gems/colorls-1.3.3/lib/colorls.rb/usr/local/lib/ruby/gems/2.6.0/bin/colorlsvim ~/.zshrcexport PATH=\"/usr/local/lib/ruby/gems/2.6.0/bin:$PATH\"vim ~/.alias powerlevel9k –zsh 主题安装123git clone https://github.com/bhilburn/powerlevel9k.git ~/.oh-my-zsh/themes/powerlevel9k# You then need to select this theme in your ~/.zshrc:ZSH_THEME=\"powerlevel9k/powerlevel9k\" Show Off Your Config · Powerlevel9k/powerlevel9k Wiki 用户分享的主题配置 以下选择第一个配置 daniruiz/dotfiles: ~/.dotfiles 选取其 powerlevel9k 配置 12345678910111213141516171819202122232425262728293031323334353637383940414243444546# ----- promt -----PS1=\"%F{cyan} %~ &gt;%F{blue}&gt; %F{reset}\"# -------------------------------- POWERLEVEL ---------------------------------POWERLEVEL9K_MODE=nerdfont-completePOWERLEVEL9K_PROMPT_ON_NEWLINE=truePOWERLEVEL9K_RPROMPT_ON_NEWLINE=truePOWERLEVEL9K_SHORTEN_DIR_LENGTH=2POWERLEVEL9K=truncate_beginningPOWERLEVEL9K_TIME_BACKGROUND=blackPOWERLEVEL9K_TIME_FOREGROUND=whitePOWERLEVEL9K_TIME_FORMAT=%D{%I:%M}POWERLEVEL9K_STATUS_VERBOSE=falsePOWERLEVEL9K_VCS_CLEAN_FOREGROUND=blackPOWERLEVEL9K_VCS_CLEAN_BACKGROUND=greenPOWERLEVEL9K_VCS_UNTRACKED_FOREGROUND=blackPOWERLEVEL9K_VCS_UNTRACKED_BACKGROUND=yellowPOWERLEVEL9K_VCS_MODIFIED_FOREGROUND=whitePOWERLEVEL9K_VCS_MODIFIED_BACKGROUND=blackPOWERLEVEL9K_COMMAND_EXECUTION_TIME_BACKGROUND=blackPOWERLEVEL9K_COMMAND_EXECUTION_TIME_FOREGROUND=bluePOWERLEVEL9K_FOLDER_ICON=POWERLEVEL9K_STATUS_OK_IN_NON_VERBOSE=truePOWERLEVEL9K_STATUS_VERBOSE=falsePOWERLEVEL9K_COMMAND_EXECUTION_TIME_THRESHOLD=0POWERLEVEL9K_VCS_UNTRACKED_ICON=●POWERLEVEL9K_VCS_UNSTAGED_ICON=±POWERLEVEL9K_VCS_INCOMING_CHANGES_ICON=↓POWERLEVEL9K_VCS_OUTGOING_CHANGES_ICON=↑POWERLEVEL9K_VCS_COMMIT_ICON=' 'POWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX='%F{blue}╭─'# POWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX='%F{blue}╭─%F{red}'POWERLEVEL9K_MULTILINE_LAST_PROMPT_PREFIX='%F{blue}╰%f '#POWERLEVEL9K_CUSTOM_OS_ICON='echo  $(whoami) 'POWERLEVEL9K_CUSTOM_OS_ICON_BACKGROUND=redPOWERLEVEL9K_CUSTOM_OS_ICON_FOREGROUND=whitePOWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(custom_os_icon ssh root_indicator dir dir_writable vcs)POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(command_execution_time status background_jobs time ram)if [[ $(tty) == /dev/pts/* ]]; then source /usr/share/zsh-theme-powerlevel10k/powerlevel10k.zsh-theme;else clear echo echofi vim 简单配置.vimrc 123456789syntax onset numberset ruler&quot; 高亮当前行set cursorcolumnset cursorlinehighlight CursorLine cterm=NONE ctermbg=black ctermfg=green guibg=NONE guifg=NONEhighlight CursorColumn cterm=NONE ctermbg=black ctermfg=green guibg=NONE guifg=NONE 参考链接打造 Mac 下高颜值好用的终端环境 | 编程和酒 Show Off Your Config · Powerlevel9k/powerlevel9k Wiki daniruiz/dotfiles: ~/.dotfiles 系统默认终端美化10 个 Terminal 主题，让你的 macOS 终端更好看 - 少数派 iTerm2使用技巧启动一个连接到远程server的终端选择“Preferences-&gt;Profiles”，新增一个profile，并设置启动的快捷键和command命令 分屏使用快捷键“cmd+d”实现左右分屏，快捷键“^+cmd+d”实现上下分屏, 效果如图： 搜索及文本复制使用“cmd+f”可以调出搜索框进行文本搜索，然后有个很奇妙的快捷键“tab”键，使用它后会自动高亮当前文本后面的内容。最后按enter键将高亮文本复制到剪切板上。这几个按键连用代替了使用鼠标复制文本内容！ 没啥用的-显示当前行、右侧显示时间线、自动命令补全 调出复制过的文本历史快捷键：“^+cmd+h”。 按键回放这个简直功能太强大了！它能回放一段时间内的你敲过的所有字符。快捷键：“cmd+alt+b”，如图会弹出一个进度条，按左右键就可以实现按键回放了。 mac iterm2 以单词为单位移动的快捷键设置Mac下iTerm2光标按照单词快速移动设置_运维_skyyws的博客-CSDN博客","link":"/Mac/05-iterm.html"},{"title":"tmux","text":"[TOC] tmux/tmux: tmux source code 技术|tmux：适用于重度命令行 Linux 用户的终端复用器 MjSeven - Linux 中国翻译组（LCTT）- Linux 中国◆开源社区 使用 使用 tmux 打造更强大的终端 Tmux 速成教程：技巧和调整 tmux-yank 终端复用神器 tmux 简介配置及高频操作 | 个人服务器运维指南 | 山月行 我常用的 12345678910111213141516tmux list-windowstmux new -s test # s -- session-name[in test] tmux set -g mouse on C-b \" 模向分隔窗口C-b % 纵向分隔窗口 tmux detach / C-b d (detach) / exittmux list-windowstmux kill-window -t 0tmux list-sessionstmux kill-session -t test tmux attach # attach 最近的 sessiontmux attach -t [session-name] # 指定 session attach 加到 ~/.zshrc 中 1tmux set -g mouse on &gt; /dev/null 2&gt;&amp;1 没用过的命令 123456789101112131415161718192021222324252627$ sudo apt-get install tmux # ubuntu$ sudo brew install tmux # osXC-b ? 显示快捷键帮助C-b C-o 调换窗口位置，类似与vim 里的C-wC-b 空格键 采用下一个内置布局C-b ! 把当前窗口变为新窗口C-b q 显示分隔窗口的编号C-b o 跳到下一个分隔窗口C-b 上下键 上一个及下一个分隔窗口C-b ALT-方向键 调整分隔窗口大小C-b c 创建新窗口C-b 0~9 选择几号窗口C-b c 创建新窗口C-b w 以菜单方式显示及选择窗口C-b t 显示时钟C-b ; 切换到最后一个使用的面板C-b x 关闭面板C-b &amp; 关闭窗口C-b s 以菜单方式显示和选择会话# 我试了 didn't work 的命令C-b n (next) 选择下一个窗口(next)C-b l (last) 切换到最后使用的窗口C-b p (previous) 选择前一个窗口 安装tmux/tmux: tmux source code 123456789101112brew install tmux# centosj testgit clone https://github.com/tmux/tmuxgit clone https://github.com/tmux/tmux.gitcd tmuxsh autogen.sh &amp;&amp; ./configure &amp;&amp; makewhich tmux./tmux -Vmv ./tmux /usr/bin/tmux","link":"/Mac/06-tmux.html"},{"title":"alfred","text":"[TOC] workflow searchAlfred 2 Workflow List | Search, Install and Share useful workflowDevDocs (v1.2.0) ~ DownloadSearch through DevDocs documentations by filtering the keyword for each language/library ~ by @yannickglt. Triggers: cdoc, angular, coffeescript, css, d3, dom, dom_events, git, html, http, javascript, jquery, jqueryui, lodash, php, sass, backbone, c, cpp, chai, cordova, ember, express, go, grunt, haskell, jquerymobile, knockout, laravel, less, maxcdn, moment, node, postgresql, python, redis, requirejs, ruby, rails, sinon, underscore, yii. Caffeinate (v3.03.0) ~ DownloadSolves the problem of your computer constantly falling asleep by using OS X’s native command line ~ by @shawnrice. Triggers: caff. Emoji (v1.5.0) ~ DownloadSearch for Emojis used by Basecamp, GitHub, GitLab, Trello, and other services ~ by @carlosgaldino. Triggers: emoji, emoji [alt key]. Encode/Decode (v1.8.0) ~ DownloadTransform query strings through base64, html, url, and utf-8 encode/decode ~ by @willfarrell. Triggers: encode, decode. GitHub (v1.6.0) ~ DownloadEasily open GitHub repositories and more in the browser ~ by @gharlan. P.S.: You have to login before you can use the workflow: gh &gt; login. Triggers: gh. Kill Process (v1.2.0) ~ DownloadEasily find processes by name and kill them ~ by @ngreenstein. Triggers: kill. Package Managers (v3.16.0) ~ DownloadQuick package/plugin/component lookup for your favorite package managers ~ by @willfarrell. Triggers: apt-get, apm, bower, brew, chef, cocoa, composer, docker, gems, gradle, grunt, gulp, hex, maven, npm, pear, puppet, pypi, raspbian, rpm, yo. Terminal → Finder (v1.6.0) ~ DownloadOpen current Finder (or Path Finder) window in Terminal (or iTerm) and vice versa ~ by @LeEnno. Triggers: ft, tf, fi, if, pt, tp, pi, ip. ssh (Download)by @isometry 参考链接zenorocha/alfred-workflows: A collection of Alfred 3 and 4 workflows that will rock your worldhzlzh/AlfredWorkflow.com: A public Collection of Alfred Workflows.deanishe/alfred-workflow: Full-featured library for writing Alfred 3 &amp; 4 workflowswillfarrell/alfred-workflows: Alfred Workflows for Developers","link":"/Mac/07-alfred.html"},{"title":"08-KDE Connector","text":"[TOC] KDE Connect macOS Release | Inoki in KDEReleases · Inokinoki/kde-blog 官方发行Mac 版本 kdeconnect-kde_Release_macos [Jenkins] KDE/kdeconnect-kde: KDE Connect adds communication between KDE and your smartphone.","link":"/Mac/08-KDE-Connector.html"},{"title":"cli","text":"[TOC] jq123456789101112131415161718192021222324echo '{\"e\":1,\"m\":\"今天已经填报了\",\"d\":{}}' | jq -r .ejq [options] filter [files]**options：**--version：输出jq的版本信息并退出--slurp/-s：读入整个输入流到一个数组。--raw-input/-R：不作为JSON解析，将每一行的文本作为字符串输出到屏幕。--null-input/ -n：不读取任何输入，过滤器运行使用null作为输入。一般用作从头构建JSON数据。--compact-output /-c：使输出紧凑，而不是把每一个JSON对象输出在一行。--colour-output / -C：打开颜色显示--monochrome-output / -M：关闭颜色显示--ascii-output /-a：指定输出格式为ASCII-raw-output /-r ：如果过滤的结果是一个字符串，那么直接写到标准输出（去掉字符串的引号）**filter：**. : 默认输出.foo: 输出指定属性，foo代表属性。.[foo] ：输出指定数组元素。foo代表数组下标。.[]：输出指定数组中全部元素， ：指定多个属性作为过滤条件时，用逗号分隔| ： 将指定的数组元素中的某个属性作为过滤条件**files：** JOSN格式文件。 -r ：如果过滤的结果是一个字符串，那么直接写到标准输出（去掉字符串的引号） curl12345678910111213141516171819-o 指定下载文件名-O 默认下载文件名-s 不输出没用的统计信息-x 192.168.100.198:8888 代理-A/--user-agent &lt;string&gt;-e/--referer 来源网址# 循环下载curl -O http://www.51cto.com/justin[1-5].png# 分块下载 -r 0-100-r/--range &lt;range&gt;# 下载进度条 -s 不会显示下载进度信息-#/--progress-bar# 断点续传-C/--continue-at &lt;offset&gt;# 上传文件-T/--upload-file &lt;file&gt; 上传文件# 如 curl -T justin.png -u justin:peng ftp://www.baidu.com/img/-F 表单提交# 如 curl -F prefile=@portrait.jpg https://example.com/upload.cgi","link":"/Mac/cli.html"},{"title":"Mac config backup plan","text":"[toc] 浏览器油猴导出的是个压缩包 导入： 将所有文件打包，导入即可 magic actions for youtubestylishone tab简悦chrome-extension://ijllcpnolfcooahcekpamkbidhejabll/options/options.html#plugins search allMPV 配置iina 配置 快捷键clipy备份 及 还原 脚本~目录下不大的话全部保存？pycharm 配置 idea 配置 Mac 骇客指南 - 自动化配置matthewmueller/dots: WIP bootstrapping library for osx &amp; ubuntu (and maybe others!) bkuhlmann/mac_os: Shell scripts for automated macOS machine setup.","link":"/Mac/Mac-config-backup-plan.html"},{"title":"mac apps","text":"[toc] SyncSettings 一键备份应用配置文件SyncSettings 1.2.4 中文破解版 for Mac 一键备份应用配置文件 Hookshot 超强窗口管理工具Hookshot 1.6.3 破解版 for Mac 超强窗口管理工具 ScreenFocus 1.0.1 破解版 for Mac 多显示器工作必备工具ScreenFocus 1.0.1 破解版 for Mac 多显示器工作必备工具 待破解 Port ManagerPort Manager Port Manager for Mac — Manage ports from your menu bar 要翻墙？ Collection: System Tools Use your menu bar to find, open and kill ports in a couple of clicks. View all of your ports in one place, so you can go back to writing code. 待破解 MouselessMouseless Collection: Productivity Apps Mouseless combines a searchable database of thousands of shortcuts (conveniently detecting what app you are currently using) and a training feature that helps you learn and remember those shortcuts. VISIT @homeCollection: Security Apps This menu bar app keeps your Mac unlocked while you are at home. It knows when you are at home (based on your wireless network name) and prevents your computer from locking the screen. VISIT AirfloCollection: Misc &amp; Others This menu bar provides real-time air quality anywhere in the world. VISIT SimplePingCollection: System Tools Check your internet connection quality directly in the menu bar. The ping updates in realtime. VISIT Unite for MacOSCollection: Menu Bar Managers Unite 2 allows you to turn any website into a menu bar app, permitting easy access to any service whenever you need it. VISIT WATCH TypeetoCollection: Productivity Apps Typeeto enables you to use your Mac keyboard as a bluetooth keyboard for other devices such as iPad, iPhone, Apple TV, Android device, etc. VISIT VanishCollection: Productivity Apps Hide or close inactive apps after a period of time. Set a custom time for each application and this menu bar app will hide/close the application if it hasn’t been activated for that period of time. VISIT 类似软件：hocus focus? Speedtest for MacCollection: System Tools Launching a Speedtest straight from your Mac menu bar is the quickest way to check your connectivity. VISIT ClarityCollection: Design Apps Minimal Mac wallpapers right in your menu bar. VISIT PingBarCollection: System Tools PingBar keeps an eye on your server. It will ping your server periodically, and show you the delay in the menubar. App store BidbarCollection: System Tools With Bidbar, all your Terminal commands are at your finger tips, just a click of a button or a tap of a key away. VISIT WATCH 待破解 PingeyCollection: Menu Bar Managers Pingey sits in the menu bar. Click on the icon to see the status of all your websites. Or add separate menu bar items for your most important sites. VISIT RearviewCollection: Security Apps This menu bar app tells you if someone (behind your back) is staring at your screen. For instance a passenger reading your emails when travelling by train. It plays a sound when more than one face is detected. VISITMenu Launcher Collection: Files &amp; Folders/ Productivity Apps This menu bar app lets you launch any file, folder and apps from one single place. No more cluttered desktop, dock or system status menu bar. VISIT 待破解 Hacker PadCollection: Note Taking Apps Hacker Pad lives in the menu bar for quick access. It allows especially developers to quickly jot down ideas and snippets. VISIT Keyboard LockerCollection: Security Apps A menu bar app that locks and unlocks your keyboard and mouse. No more worrying about your cat messing up everything while you’re away. VISIT SuperbarCollection: Menu Bar Managers Superbar allows you to bring snippets, bookmarks, apps or system commands into your menu bar. VISIT AccessMenuBarAppsCollection: Menu Bar Managers AccessMenuBarApps removes the problem of viewing menu bar icons on laptop displays. This utility allows you to expand your menu bar when you need it. VISIT WATCH JettisonCollection: System Tools Jettison automatically ejects external disks from your Mac before your computer goes to sleep. VISIT Jettison 1.7.5 外部磁盘智能弹出 - 精品MAC应用分享 PliimCollection: Display Apps Plimm puts your Mac into presentation mode. This menu bar hides all the mess on your desktop and even disables notifications. VISIT Web PingCollection: System Tools This menu bar app will ping all your websites straight from your computer and notify you when something is wrong with any of them, or when a broken website is back online. VISIT MuzzleCollection: Productivity Apps Muzzle runs quietly in the menu bar. When you start sharing your screen, it automatically enables ‘Do Not Disturb’ so that no notifications appear on your screen and interrupt or embarrass you during a meeting. VISIT LuLuCollection: Security Apps LuLu is the free, open firewall for Macs that can protect your network connections and detect malicious activity. It blocks any unknown outgoing connections, until approved by the user. VISIT Butler for MacCollection: Menu Bar Managers Butler for Mac is a do-it-all utility for your Mac: Launcher, iTunes controller, macros, pop-up folders, multiple clipboards, and more. VISIT WATCH Quitter for Mac Collection: Productivity Apps Quitter automatically hides or quits apps after periods of inactivity. VISIT WATCH SelfControlCollection: Productivity Apps SelfControl saves you from the meaningless waste of time of websites like Facebook, Twitter or any other website you stick for hours. Simply add the websites which distract you from your work, set the timer and turn it on. VISIT WATCH 缺点：无法拦截代理 替代软件：Focus 1.11 帮助你拦截那些会使你分心的网站 - 精品MAC应用分享 TripModeCollection: Security Apps With TripMode you can prevent apps from connecting to the internet when you are using a mobile hotspot. This prevents unexpected bills for high data usage on your mobile plan. VISIT WATCH Hocus FocusCollection: Window Managers Hocus Focus automatically hides application windows that have been inactive for a certain period of time. VISIT WATCH SoundSourceCollection: Audio Apps With SoundSource you can change the volume and output device for individual apps, right from your menu bar. VISIT WATCH Ping ManCollection: System Tools A Mac menu bar app to check your ping and monitor your bandwidth usage. VISIT WATCH BarsoomCollection: Menu Bar Managers Barsoom lets you hide any third-party icon in your menu bar. You can also rearrange your menu bar items in any order you want, similar to how Apple’s own icons work by default. Or hide items that you don’t want to see. With Barsoom arrange your items in groups. VISIT WATCH Barsoom 3.0 菜单栏管理 - 精品MAC应用分享 Videoder -免费和最快速的优酷视频下载SuperBar - 自定义 macOS 菜单栏，书签、命令行、代码片段… - 小众软件Background Music – 当开始播放视频时，自动暂停背景音乐，视频结束音乐起[macOS] - 小众软件HOME | SuperbarRaccoon - 从 Play 商店下载 Android 应用安装文件 .apk - 小众软件Tern - 字幕组机翻小助手：自动翻译英文字幕为中英双语字幕[Win/macOS] - 小众软件 menu bar 自定义textbar 等待破解TextBar：彻底玩转你的 Menubar – Mac玩儿法Today Scripts：打造个性化 Yosemite 通知栏插件 – Mac玩儿法[Mac] TextBar : 强大的菜单栏自定义内容显示工具 - Mac电报TextBar - Mac Apprichie5um/TextBar-Recipes: TextBar Recipes Bitbar监控疫情、看天气、查汇率…… Mac 菜单栏「万能」工具箱：BitBar - 少数派Releases · matryer/bitbarBitBar - Put anything in your Mac OS X menu bar","link":"/Mac/mac-apps.html"},{"title":"mac tricks","text":"[TOC] 指定软件打开多个文件1234# -a 指定软件# .dotfiles/.* 匹配隐藏文件open -a 'CotEditor' .dotfiles/.*alias cotEdit=\"open -a 'CotEditor'\" 微调声音shift cmd + 音量键 垃圾清理腾讯的柠檬清理","link":"/Mac/mac-tricks.html"},{"title":"mac 屏保","text":"好多屏保不支持 10.14+ *Fractal Clock Screen Saver 官网","link":"/Mac/mac-%E5%B1%8F%E4%BF%9D.html"},{"title":"mac 设置","text":"[TOC] 让按键反应更快设置之后你会发现移动光标时，反应速度大幅提升。“系统偏好设置 –&gt; 键盘”，将“按键重复”和“重复前延迟”都拖到最右。","link":"/Mac/mac-%E8%AE%BE%E7%BD%AE.html"},{"title":"mpv 配置","text":"[toc] Mpv 配置完，使用与 iina 差不多 安装brew cask install mpv 配置文件位置mpv的所有配置文件以及脚本均在：~/.config/mpv下面，常见的如下几个： mpv.conf – mpv 基本配置文件。详细帮助文档见：http://mpv.io/manual/stable/ 。 input.conf – 用户自定义的按键绑定（快捷键）。 lua-settings/osc.conf – 该文件用于定义 OSC 样式。例如，layout 一项可以更换的值包括：box，slimbox，bottombar 以及 topbar。 scripts/autoload.lua – 该脚本会查找文件夹内的相似文件，并自动创建播放列表。 scripts/vo_battery.lua – 该脚本会在应用启动时判断有没有连接电源，有连接电源则开启效果更好也更耗电的 vo。 以上配置文件可以去https://github.com/cocokui/mpv下载 open ~/.config/mpv/ 已经有一个图形界面的配置工具： mpv Configurator ：haasnhoff/mpvconfigurator 把配置好的文件存储为：~/.config/mpv/mpv.conf 具体配置说明见官网：mpv.io 快捷键配置见：MPV播放器快捷键文档翻译 - Family Blog 快捷键配置保存在：~/.config/mpv/input.conf mpv.conffrom https://github.com/cocokui/mpv 以下是另外一个配置，但是用它软件会卡住，因为有详细注释，先留在这 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117# 关闭窗口装饰（无边框）no-border# 隐藏快进快退时候的白条--osd-level=0# 设定程序启动后的默认音量volume=100# 使字幕输出在黑边上sub-ass-force-margins=yes# 一套预设的高质量渲染设置profile=gpu-hq# gpu-hq contains:# scale=spline36# cscale=spline36# dscale=mitchell# dither-depth=auto# correct-downscaling=yes# linear-downscaling=yes# sigmoid-upscaling=yes# deband=yes# 开启色彩管理icc-profile-autoblend-subtitles=video# 将画面拉伸算法更改为 EWA Lanczosscale=ewa_lanczossharp#启用 interpolation 来消除帧率问题造成的卡顿video-sync=display-resampleinterpolationtscale=oversample# 关闭软解hwdec=no# 高优先级priority=high# gpu-api的选择？# macOS： 只有opengl可选# Linux： vulkan或者opengl，推荐vulkan# Windows：vulkan、d3d11及opengl都可选。三者理论上vulkan性能最好，实际使用上可能差别不大。# 三者无法并存，去掉行首的'#'启用，加上'#'禁用#----------------------------------------# 使用d3d11 （mpv对于windows的默认。显卡一定要开自适应电源模式，否则性能比vulkan差）# gpu-api=d3d11# ----------------------------------------# 使用vulkan# gpu-api=vulkan# ----------------------------------------# 使用openglgpu-api=opengl# 对windows，使用angle后端# gpu-context=angle # 记忆上次播放的位置# 需要mpv.conf所在文件夹有用户写入权限，或者用watch-later-directory=路径来手动指定。save-position-on-quit# may help with 4K videosopengl-pbo=yes# 画面抖动处理，默认6。会稍微延缓mpv启动temporal-ditherdither-size-fruit=7 # smooth motioninterpolation# 启用校色，默认64x64x64。会稍微延缓mpv启动icc-profile-autoicc-3dlut-size=256x256x256# 在mpv.conf所在目录下建一个 shaders_cache 空文件夹，以存放编译好的GPU shaders，加速启动。# 如果不放APPDATA下，确保该文件夹有用户写入权限。gpu-shader-cache-dir=\"~~/shaders_cache\"# WASAPI音频输出（Windows）# 其他系统请相应更改音频输出方式ao=wasapi# 如果双声道系统播放多声道影片时有的声道声音没出现，尝试强制设定为双声道#audio-channels=stereo# 规格化：#audio-normalize-downmix=yes# 多声道音轨downmix成双声道时，如果觉得背景音过响，角色台词声音小，尝试看看这个：https://github.com/mpv-player/mpv/issues/656# 字幕配置sub-auto=fuzzysub-file-paths=subsslang=chi,zh-CN,sc,chs# 字幕显示出来和xy-subfilter不一样？尝试启用下面的设置#sub-ass-vsfilter-aspect-compat=no # 关乎字幕是否随视频拉伸#sub-ass-vsfilter-blur-compat=no # 关乎字幕模糊的设定# 即使都用上了也不一致？那不是这两个选项的问题，重新注释掉这两行，回帖问吧。（多半是vsfilter/libass其中一个的bug）# 音轨配置audio-file-auto=fuzzyalang=jpn,ja,eng,en# 截图配置screenshot-template=~/Desktop/mpv-screenshot-%f-%pscreenshot-format=pngscreenshot-tag-colorspace=yesscreenshot-high-bit-depth=yes# 根据视频是否是HDR以及视频aspect ratio决定是否启用blend-subtitles的profile# 目前HDR-&gt;SDR建议关闭blend-subtitles，见https://github.com/mpv-player/mpv/issues/6368# 如果hdr-compute-peak将来继续改进可能可以兼容blend-subtitles[HDR_or_21:9]profile-desc=cond:(p[\"video-params/primaries\"]==\"bt.2020\" or p[\"video-params/aspect\"]&gt;=2.0)blend-subtitles=no input.conf用这个替换上面仓库的 input.conf mpv/input.conf at master · mpv-player/mpv 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970# z x cz set speed 1.0x add speed -0.2c add speed 0.2# 全屏切换(回车键及小键盘确认键)Enter cycle fullscreenKP_ENTER cycle fullscreen# 双击左键 播放/暂停MBTN_LEFT_DBL cycle pause# 滚轮上下滑动调节音量WHEEL_UP add volume 5WHEEL_DOWN add volume -5# 滚轮左右滑动调节进度条WHEEL_LEFT seek -3WHEEL_RIGHT seek 3# 左右方向键调节进度条RIGHT seek 3 relative+exactLEFT seek -3 relative+exactCtrl+RIGHT seek 30 relative+exactCtrl+LEFT seek -30 relative+exactShift+RIGHT seek 60 relative+exactShift+LEFT seek -60 relative+exact# 上下方向键调节音量UP add volume 5DOWN add volume -5# 空格键 播放/暂停SPACE cycle pause# 禁用默认 暂停/播放 快捷键p ignore# 逐帧前进后退f frame-stepd frame-back-step# 字幕校正, add sub-delay -0.1. add sub-delay +0.1# 静音# m cycle mute# 文件信息TAB script-binding stats/display-stats# 禁用鼠标左右键单击MBTN_LEFT ignoreMBTN_RIGHT ignore# 禁用一系列快捷键9 ignore/ ignore0 ignore* aignore1 ignore2 ignore3 ignore4 ignore5 ignore6 ignore7 ignore8 ignorei ignore","link":"/Mac/mpv-%E9%85%8D%E7%BD%AE.html"},{"title":"power manager","text":"[TOC]","link":"/Mac/power-manager.html"},{"title":"有意思的Mac软件","text":"[TOC] Record Lectures – 好用的mac录音软件Umbra 1.1.0 for Mac 为浅色深色模式指定壁纸Record Lectures 3.1.4 中文破解版 for Mac 好用的mac录音软件 MuteMyMic – 强制静音 Mac 的麦‎MuteMyMic on the Mac App Store MFiles-局域网跨平台文件传输MFiles - 不死鸟 - 分享为王MFiles Hungrymark-书签化文件/网页/软件的macOS应用花了 1 块钱，挺值的 Hungrymark-书签化文件/网页/软件的macOS应用 - Newlearnerの小站Hungrymark | hungrymark OpenInTerminal-Lite - 在当前访达路径/文件打开终端、编辑器OpenInTerminal-Lite - 在当前访达路径/文件打开终端、编辑器[macOS] - 小众软件OpenInTerminal/README-zh.md at master · Ji4n1ng/OpenInTerminal Krisp – 降低网络语音背景噪声Krisp – 降低网络语音背景噪声[macOS]Krisp | Noise Cancelling App 看起来不错的软件Cisdem AppCrypt 4.6.0 破解版 for Mac 应用软件加密及网站黑名单 24 Hour Wallpaper 3.1 破解版 for Mac 精美的5K动态桌面壁纸 Buttercup 1.19.0 for Mac 可跨平台同步的密码管理器 Aerial 1.8.1 for Mac Apple TV 全套屏幕保护移植Loopback 2.1.3 破解版 for Mac 非常强大的音频传递工具 Wifiner 1.3.189 中文破解版 for Mac WIFI信号盲区死角检测工具Capo 3.8.1 中文破解版 for Mac 音乐爱好者必备工具DoYourData AppUninser Professional 5.1 破解版 for Mac 应用软件卸载工具Playr 2.4.1 中文破解版 for Mac 小巧的全能Mac视频播放器Anytrans for Android 7.3.0.1124 破解版 for Mac mac安卓手机管理Lingon X 7.4.3 破解版 for Mac 应用/脚本自动化运行工具Infinity Dashboard 1.4.9 破解版 for Mac 完全自定义的菜单栏仪表盘News Explorer 1.9.7 破解版 for Mac 专注的RSS阅读订阅工具迅雷 6.6.6 中文破解版 for Mac 免登录即享VIP不限速Weather Guru 2.3.6 破解版 for Mac 菜单栏天气预报小工具InVision Studio 1.14.0 中文破解版 for Mac 全球最赞的界面设计工具ApowerREC 1.2.7.10 中文破解版 for Mac 专业的mac屏幕录像工具Canary Mail 2.21 中文破解版 for Mac 很漂亮的邮箱客户端 Battery Stats for AirPods 1.0 for Mac AirPods电量百分比及低电量提醒macOS小助手 0.5 for Mac mac常用命令集合Cascadea 1.4.5 破解版 for Mac 修改任意网站的外观样式QQ小助手 3.3 for Mac QQ消息防撤回及抢红包神器Folder Tidy 2.7.5 破解版 for Mac 将杂乱的文件进行分组整理 start 3.3 破解版 for Mac 文件/应用快速启动工具 ntfstool 免费开源的 Mac NTFS 读写软件 Unsplash Wallpapers | MacMenuBar.comPDFpen Pro 11.2.2 破解版 for Mac 强大的PDF编辑器 展开讲 DEVONthink：Mac史上最强文件管理软件 – Mac玩儿法 Weather mini：精美的迷你天气预报小工具 – Mac玩儿法 Live Home 3D Pro 3.7.3 中文破解版 for Mac Mac高级家居设计软件 Service Station：打造你自己的右键菜单 – Mac玩儿法 Instashare for Mac 2ndalpha/gasmask: Hosts file manager for OS X Stay 1.3 破解版 for Mac 窗口位置一键还原 Mic Drop | MacMenuBar.com NTFSTool - 让 Mac 读写 NTFS 硬盘，免费开源的 NTFS 磁盘管理工具 - 小众软件 Service Station: 定制 Mac 右键菜单 Timey | MacMenuBar.com MonitorControl | MacMenuBar.com menubar 控制外接显示器亮度 AirServer 7.2.6 破解版 for Mac 将iOS/Android设备镜像到mac上 投屏 cDock 3.1.2 破解版 for Mac 优秀的Dock栏美化工具start 4.2 破解版 for Mac 文件/应用快速启动工具 MultiDock 1.3 破解版 for Mac 创建多个 Dock 栏 多屏时可能有点用 Mountain Duck 4.0.1 (16800) 中文破解版 for Mac 将云存储挂载为本地磁盘 Batteries for Mac | Track all your devices’ batteries from your Mac. Get notified when they need recharging. Captin 1.1.0 for Mac 大小写切换悬浮窗提示Boop 1.2.1 for Mac 编程开发辅助神器LogTail 3.13 破解版 for Mac 服务器日志查看工具 【自荐】Mac状态栏、通知中心工具合集，支持自定义程序与界面 - 发现频道 - 小众软件官方论坛","link":"/Mac/%E6%9C%89%E6%84%8F%E6%80%9D%E7%9A%84Mac%E8%BD%AF%E4%BB%B6.html"},{"title":"blockchain","text":"[TOC] 【回形针PaperClip】区块链到底是什么？_哔哩哔哩 (゜-゜)つロ 干杯~-bilibili 区块链技术在政府数据治理中的应用：优势、挑战与对策区块链技术在政府数据治理中的应用：优势、挑战与对策 二、政府数据治理面临的主要问题 （一）政府数据质量管理差 数据质量管理差主要表现在3个方面：数据的真实性不够、数据的一致性不高、数据的时效性不强 （二）政府数据安全管控弱 数据安全管控弱主要体现在网络安全保障不力和个人隐私保护不够两个方面 （三）政府数据开放共享难 政府数据开放共享包括两层含义，一是通过信息公开的方式将政府数据传播给市场和社会，使其在“数据—决策—效益”的过程挖掘数据的价值；二是通过数据库、云端等平台实现政府数据在层级间、区域间、部门间的开放共享，让政府在政务服务中提升质量和效率。 三、区块链技术在政府数据治理中的应用优势 与问题对应 （一）可追溯的分布式数据系统有助于提高数据质量 各主体通过访问数据系统，将各项社会活动录入区块链或确认交易，使得有关社会事务的事件、信息能在大范围、短时间内实现快速的全网广播、匹配、核查和认定。需要强调的是，任何治理活动的信息与数据只有通过全网广播获得其他主体的核实与认可后，才能被完整地写入区块链；如果数据不实或不被认可，系统将自动拒绝写入，这有助于保证数据系统的真实性与完整性。 （二）非对称加密技术与哈希算法有助于保障数据安全 另外，区块链的数据存储在分布式的链式结构中，确保数据的多重备份，提高数据库的容错性和安全性 （三）点对点技术与智能合约有助于实现数据共享 四、区块链技术应用于政府数据治理的挑战 （一）理念变革：去中心化带来管理权威挑战 政府在治理体系中不再占据核心的支配地位，而与其他主体处于相对平等的地位 （二）机制变革：去信任化带来安全监管挑战 如果个人的私钥泄露，将会出现参与者的个人信息全部在网络上公布的问题，严重影响用户的个人隐私。如果个人的私钥丢失，那么个人无法再次访问区块链中的存储数据，无法获取个人的证明信息，从而影响用户的有形资产的归属情况 （三）制度变革：技术创新带来法律秩序挑战 区块链的运用与现行法律存在一定的冲突 一种基于区块链的数据防篡改系统及其方法一种基于区块链的数据防篡改系统及其方法_爱学术","link":"/blockchain/blockchain-01.html"},{"title":"blockchain-02","text":"[TOC] 非文本文件如何存储 、数据是存储在哪里的、分布式存储在第三方机构和传统方式有何区别按照区块链专家 Wulf Kaal 教授的说法，去中心化的存储选项有这些： 把一切都存储在区块链中 对等文件系统（Peer to peer file system），如 IPFS 去中心化云文件存储，如 Storj，Sia，Ethereum，Swarm 等等 分布式数据库，如 Apache Cassandra，Rethink DB 等等 巨链数据库（BigChainDB） Ties DB， 分布式结构化数据存储的第一个公共数据库 1.把一切都存储在区块链中优点： 最简单 缺点： 区块链交易确认缓慢【对于汇款来说，它似乎很快（每个人都可以等），但是，对于丰富的应用程序数据流来说，它实在是太慢了】 不可变【不可变性是区块链的优势，它给了区块链高稳健性，但是对于数据存储来说却是个弱点，造成了容量问题】 总结： 因此，在区块链中存储数据对于丰富的去中心化应用程序来说，不是个好选择 一般在块上记录交易数据/日志 2.对等文件系统（Peer to peer file system），如 IPFS数据存放在任何人的主机上 这个技术建立在 BitTorrent 协议和分布式哈希表（Distributed Hash Table）的基础之上 优点：速度快 缺点：如果你要分享文件，就得保持在线；一旦上传，它们就不能被修改或删除；不能通过其有意义的内容来搜索它们 3.去中心化云文件存储，如 Storj，Sia，Ethereum，Swarm 等等用户出租硬盘空间，数据是托管在用户的计算机上 从用户的角度来看，这些存储就是像 Dropbox 那样的云存储 优点：你不再需要保持在线就能分享你的文件，只需上传文件，就可以在云中使用了；这些存储非常可靠，速度快，容量大。但是它们只提供静态文件，也没有内容搜索， 缺点：还因为它们都是建立在租用的硬件上，所以不是免费的。 4.分布式数据库，如 Apache Cassandra，Rethink DB 等等优点：速度快、可扩展、容错、支持丰富的查询语言 缺点：不是拜占庭证明（集群中的所有节点相互之间完全信任。因此，任何一个恶意节点就能毁掉整个数据库） 5.巨链数据库（BigChainDB）优点：可以解决数据存储和交易速度问题、拥有巨大的数据容量和非常快的交易 缺点：不是拜占庭证明 巨链数据库可能对私有区块链很有用（足够信任自己内部的节点） 6.Ties DB， 分布式结构化数据存储的第一个公共数据库这是目前最好的公共数据库的可选项 优点：任何用户都有数据库写入权限。但是，用户由他们的公钥识别，同时，所有的请求有签名。创建之后，记录记住它的创建者，创建者则成为记录的所有者。之后，记录只能被记录所有者修改。每个人都可以阅读所有的记录，因为数据库是公开的。根据请求和复制检查所有的权限。额外的权限可以通过智能合约管理。 其他信息：区块链的成本高，因此尽可能保持你的区块链最小化是非常重要的 采用区块链技术的主要驱动力一直是安全性 区块链中，数据透明，可能引发隐私问题，另一方面便于分析 客户/用户 的行为模式 尽管现在数据库很便宜，但在考虑各方面的问题后，商业和金融领域是最适合用死贵的区块链来存储数据的 智能合约是指在某些触发条件下自动执行的迷你程序。在区块链世界中，某些区块链技术，特别是以太坊，支持在插入新事务时执行代码 数据治理的应用场景定义数据治理：是对数据资产管理行使权力和控制的活动集合 ITSS WG1认为数据治理包含以下几方面内容（1）确保信息利益相关者的需要评估，以达成一致的企业目标，这些企业目标需要通过对信息资源的获取和管理实现；（2）确保有效助力业务的决策机制和方向；（3）确保绩效和合规进行监督。 从目的来讲，数据治理就是要对数据的获取、处理、使用进行监管（监管就是我们在执行层面对信息系统的负反馈），而监管的职能主要通过以下五个方面的执行力来保证——发现、监督、控制、沟通、整合。 个人理解：企业收集并管理数据；企业分析数据，用来辅助决策；企业监管、监督数据，确保安全性 参考链接数据库那么便宜，为何还要死贵的区块链来存储数据？ 数据治理_百度百科 区块链存储，现在的做法可能都错了！","link":"/blockchain/blockchain-02.html"},{"title":"Vue.js基础入门Vue实战黑马程序员VUE","text":"开发工具vscode + live server 在挂载点及其子节点中生效123el: \"#app\" // idel: \".app\" // classel: \"app\" // 标签 可以使用其他双标签，但是不能使用html body v-text设置标签的文本值v-text=”message+’|’”“”中可以使用字符串的拼接等表达式 v-html设置元素的innerHtml v-on为元素绑定事件v-on:clickv-on:mouseenterv-en:dbclick@简写@click@mouseenter@dbclick v-bind设置元素的属性 src title classv-bind:src 简写为 :src 1234&lt;img :src=\"imgsrc\"&gt;&lt;img :title=\"imgtitle\"&gt;// 增删class&lt;img :class=\"{active:isActive}\"&gt; v-on 补充回车出发事件：@keyup.enter=”sayHi” v-model 双向数据绑定axios功能强大的网络请求库 12345&lt;script src=\"https://unpkg.com/axios/dist/axios.min.js\"&gt;&lt;/script&gt;axios.get(url).then(function(response){}, function(err){})axios.post(url, {key1:value,key2:value}).then(function(response){}, function(err){}) axios回调函数中的this已经改变，无法访问到data中的数据把this保存起来，回调函数中直接使用保存的this","link":"/frontEnd/Vue-js%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8Vue%E5%AE%9E%E6%88%98%E9%BB%91%E9%A9%AC%E7%A8%8B%E5%BA%8F%E5%91%98VUE.html"},{"title":"es6","text":"","link":"/frontEnd/es6.html"},{"title":"fe-tricks","text":"[TOC] 值得每日学习的 fe 资源haizlin/fe-interview: 前端面试每日 3+1，以面试题来驱动学习，提倡每日学习与思考，每天进步一点！每天早上5点纯手工发布面试题（死磕自己，愉悦大家）fe-interview/skill.md at master · haizlin/fe-interview 响应式和自适应响应式和自适应的区别 - 前端 - 掘金(12) 自适应页面的实现方式 - 前端开发 - SegmentFault 思否 12345678@media screen and (min-width: 800px) { .search_engines { position: fixed; right: 25%; top: 20%; display: inline; }} 修改完 CSS 后，需要重命名css, 如 moon.m.0001.css 0001 是版本号，这样可以让浏览器强制加载新的 CSS storybookjs/storybook: 📓 UI component dev &amp; test: React, Vue, Angular, React Native, Ember, Web Components &amp; more!Storybook: UI component explorer for frontend developers","link":"/frontEnd/fe-tricks.html"},{"title":"front end tricks 202002","text":"[toc] JavaScript 倒计时关闭页面-蚂蚁部落123456789101112131415&lt;script type=\"text/javascript\"&gt; var otimer;var second=10;function timer(){ otimer.innerHTML=second; if(second&gt;0){ second=second-1; return false; } window.close();} window.onload=function(){ otimer=document.getElementById(\"timer\"); setInterval(timer,1000);} 以上代码实现了我们想要的功能，可以倒计时10秒之后关闭页面。 原理非常的简单，利用定时器setInterval()方法，不断调用timer()函数，每调用一次秒数减一，直到秒数变为零就执行window.close()，将页面关闭。同时每次调用函数都会将当前的剩余秒数写入div中，于是实现了倒计时效果。 相关阅读： （1）.innerHTML属性参阅JavaScript innerHTML一章节。 （2）.setInterval()方法参阅JavaScript setInterval()一章节。 JavaScript 获取倒数第二个li元素-蚂蚁部落12345678&lt;script type=\"text/javascript\"&gt;window.onload=function(){ var obox=document.getElementById(\"box\"); var oshow=document.getElementById(\"show\"); var lis=obox.getElementsByTagName(\"li\"); oshow.innerHTML=lis[lis.length-2].innerHTML;}&lt;/script&gt; JavaScript 获取网页脚本代码内容-蚂蚁部落12345678910111213141516171819function evalscript(s){ if(s.indexOf('&lt;script') == -1) return s; var p = /&lt;script[^\\&gt;]*?&gt;([^\\x00]*?)&lt;\\/script&gt;/ig; var arr = []; while(arr = p.exec(s)){ var p1 = /&lt;script[^\\&gt;]*?src=\\\"([^\\&gt;]*?)\\\"[^\\&gt;]*?(reload=\\\"1\\\")?(?:charset=\\\"([\\w\\-]+?)\\\")?&gt;&lt;\\/script&gt;/i; var arr1 = []; arr1 = p1.exec(arr[0]); if(arr1){ appendscript(arr1[1], '', arr1[2], arr1[3]); } else{ p1 = /&lt;script(.*?)&gt;([^\\x00]+?)&lt;\\/script&gt;/i; arr1 = p1.exec(arr[0]); appendscript('', arr1[2], arr1[1].indexOf('reload=') != -1); } } return s;} 给出了核心代码，直接套用即可。 JavaScript 替换字符串全部指定内容-蚂蚁部落将字符串中所有的字符”n”替换为字符”b” 12345String.prototype.replaceAll=function(str,repaceStr) { return this.replace(new RegExp(str,\"gmi\"),repaceStr) // \"gmi\" ? }var str=\"antzone\";console.log(str.replaceAll(\"n\",\"b\")); 正则表达式删除字符串两端空格-蚂蚁部落12345678String.prototype.trim=function(){ var reExtraSpace=/^\\s*(.*?)\\s+$/; return this.replace(reExtraSpace,\"$1\");}var str=\" antzone \";console.log(str.length);var strNew=str.trim();console.log(strNew.length); CSS 紧邻下一个兄弟元素-蚂蚁部落123.antzone+li{ color:red;} 代码将class属性值为antzone的li元素的紧邻下一个兄弟li元素的字体颜色设置为红色。 +选择器可以参阅CSS的相邻选择符(E+F)一章节。 CSS 获取所有紧邻兄弟元素-蚂蚁部落123.ant ~ li{ color:red;} 将class属性值为”ant”元素后面的li元素字体颜色设置为红色，具体参阅CSS E~F 兄弟选择器一章节。","link":"/frontEnd/front-end-tricks-202002.html"},{"title":"jquery复习","text":"样式篇 第1章 初识jQuery1&lt;script type=\"text/javascript\" src=\"./static/lib/jquery.js\"&gt; 1234// $(document).ready() 的作用是等文档的节点都加载完毕后再执行后续的代码$(document).ready(function(){ $(\"div\").html(\"hello jquery\");}); 1-4 jQuery对象与DOM对象1234567// 标准js处理var p = document.getElementById('imooc');p.innerHTML = 'adsfas';p.style.color = 'red';// jquery处理var $p = $('#imooc');$p.html('adsfaf').css('color', 'red'); 1-5 jQuery对象转化成DOM对象12345678var $div = $('div')var div = $div[0] // jquery对象转dom对象// 或者 var div = $div.get(0)div.style.color = 'red'// 1-6 DOM对象转化成jQuery对象var $div = $(div); // $(dom)var $first = $div.first() 第2章 jQuery选择器jQuery 参考手册 - 选择器 2-1 id选择器1$(\"#id\") 2-2 类选择器1$(\".class\") 2-3 元素选择器12$(\"p\")document.getElementsByTagName('div') 2-4 全选择器（*选择器）1$(\"*\") 2-5 层级选择器12345678// 子元素选择器$(\"parent &gt; child\")// 后代元素选择器$(\"ancestor descendant\")// 相邻兄弟元素选择器$(\"prev + next\")// 一般兄弟元素选择器$(\"prev ~ siblings\") 2-7 基本筛选选择器1234567891011121314$(\".div:first\")$(\":first\") // 匹配第一个元素$(\":last\") // 匹配最后一个元素$(\":not(selector)\") //一个用来过滤的选择器,选择所有元素去除不匹配给定的选择器元素$(\":eq(index)\")// 在匹配的集合中选择索引值为 index的元素$(\":gt(index)\") // 选择匹配集合中所有大于给定 index(索引值)的元素$(\":even\") // 选择索引值为偶数的元素,从0开始计数$(\":odd\") // 选择索引值为奇数的元素,从O开始计数$(\":lt(index\")// 选择匹配集合中所有索引值小于给定 index参数的元素$(\":header\")// 选择所有标题元素,像h1h2,h3等$(\":lang(language)\")// 选择指定语言的所有元素$(\":root\") // 选择该文档的根元素$(\":animated\") // 选择所有正在执行动画效果的元素 2-8 内容筛选选择器1234567$(\":contains(text)\") //选择所有包含指定 文本 的元素$(\":parent\") // 选择所有含有子元素或者文本的元素(即非空)$(\":empty\") // 选择所有没有子元素的元素(包含文本节点)$(\":has(selector\")) // 选择元素中至少包含指定 选择器 的元素// 1) :contains与:has都有查找的意思，但是contains查找包含“指定文本”的元素，has查找包含“指定元素”的元素// 2) 如果:contains匹配的文本包含在元素的子元素中，同样认为是符合条件的。// 3):parent与:empty是相反的，两者所涉及的子元素，包括文本节点 2-9 可见性筛选选择器12$(\":visible\") // 选择所有现实的元素$(\":hidden\") // 选择所有隐藏的元素 2-10 属性筛选选择器12345678910$(\"[attribute]\") // 选择所有具有指定属性的元素$(\"[attribute='value']\") // 选择指定属性是给定值的元素$(\"[attribute^='value']\") // 选择指定属性是以给定字符串开始的元素$(\"[attribute$='value']\") //选择指定属性是以给定值结尾的元素,这个比较是区分大小写的$(\"[attribute!='value']\") // 选择不存在指定属性,或者指定的属性值不等于给定值的元素$(\"[attribute|=value]\") // 选择指定属性值等于给定字符串或以该文字串为前缀(该字符串后跟一个连字符\"-\")的元素$(\"[attribute*='value']\") // 选择指定属性具有包含一个给定的子字符串的元素(选择给定的属性是以包含某些值的元素)$(\"[attribute-='value']\") // 选择指定属性用空格分隔的值中包含一个给定值的元素$(\"[attributeFilter1][attributeFilterN]\") //选择匹配所有指定的属性筛选器的元素 2-11 子元素筛选选择器1234567// 选择所有父级元素的第一个子元素$(\":first-child\")$(\":last-child\")$(\":only-child\")$(\":nth-child(n)\")$(\":nth-last-child(n)\")// :first只匹配一个单独的元素，但是:first-child选择器可以匹配多个：即为每个父级元素匹配第一个子元素。这相当于:nth-child(1) 2-12 表单元素选择器12345678910$(\":input\") // 选择所有 input, textarea, select和 button元素$(\":text\") // 匹配所有文本框$(\":password\") // 匹配所有密码框$(\":radio\") // 匹配所有单选按钮$(\":checkbox\") // 匹配所有复选框$(\":submit\") // 匹配所有提交按钮$(\":image\")// 匹配所有图像域$(\":reset\") // 匹配所有重置按钮$(\":button\") // 匹配所有按钮$(\":file\") // 匹配所有文件域 2-13 表单对象属性筛选选择器1234$(\":enabled\") // 选取可用的表单元素$(\":disabled\") // 选取不可用的表单元素$(\":checked\") // 选取被选中的&lt;input&gt;元素$(\":selected\") // 选取被选中的&lt;option&gt;元素 第3章 jQuery的属性与样式12345678910111213141516171819202122232425262728293031323334// 3-1 .attr()与.remov...attr(key) 获取key属性值attr(key, value) 设置attr(attributes) // attrs: {key1: val1, key2:val2}.removeAttr(attributeName) // 3-2 html()及.text().html() 获取.html(htmlString) 设置.text().text(textString)// 3-3 .val()// 获取、设置表单元素的值.val().val(value)// 3-4 增加样式.addClass().addClass(className) // 为每个匹配元素增加一个或多个样式名// 3-5 删除样式.removeClass().removeClass([className]) // 每个匹配元素移除一个或多个用空格隔开的样式名// 3-6 切换样式.toggleCla....toggleClass(className) //如果存在（不存在）就删除（添加）一个类// 3-7 样式操作.css()// 获取.css(propertyName) // 获取匹配元素集合中的第一个元素的样式属性的计算值.css(propertyNames) // 传递一组数组，返回一个对象结果// 设置.css(propertyName, value ) // 设置CSS.css(properties) // 可以传一个对象，同时设置多个样式 DOM篇第2章 DOM节点的创建2-1 DOM创建节点及节点属性创建元素：document.createElement设置属性：setAttribute添加文本：innerHTML加入文档：appendChild 2-2 jQuery节点创建与属性的处理1$(\"&lt;div class='right'&gt;&lt;div class='aaron'&gt;动态创建DIV元素节点&lt;/div&gt;&lt;/div&gt;\") 第3章 DOM节点的插入3-1 DOM内部插入append()与appendTo()b加到a中: 12a.append(b) b.appendTo(a) 3-2 DOM外部插入after()与before()3-3 DOM内部插入prepend()与prependTo()3-4 DOM外部插入insertAfter()与insertBefore()第4章 DOM节点的删除4-1 DOM节点删除之empty()的基本用法1$('.hello').empty() 4-2 DOM节点删除之remove()的有参用法和无参用法12$('.hello').remove()$(\"p\").filter(\":contains('3')\").remove() 4-3 DOM节点删除之empty和remove区别 empty()方法并不是删除节点，而是清空节点，它能清空元素中的所有后代节点 该节点与该节点所包含的所有后代节点将同时被删除; 提供传递一个筛选的表达式，删除指定合集中的元素 4-4 DOM节点删除之保留数据的删除操作detach()detach()不会把匹配的元素从jQuery对象中删除，因而可以在将来再使用这些匹配的元素。与remove()不同的是，所有绑定的事件、附加的数据等都会保留下来。$(“div”).detach()这一句会移除对象，仅仅是显示效果没有了。但是内存中还是存在的。当你append之后，又重新回到了文档流中。就又显示出来了。 第5章 DOM节点的复制与替换5-1 DOM拷贝clone().clone()方法深度 复制所有匹配的元素集合，包括所有匹配元素、匹配元素的下级元素、文字节点。clone(ture) 不仅仅只是克隆单纯的节点结构，还要把附带的事件与数据给一并克隆了 5-2 DOM替换replaceWith()和replaceAll()二者方向相反 12$(\"p:eq(1)\").replaceWith('&lt;a style=\"color:red\"&gt;替换第二段的内容&lt;/a&gt;')$('&lt;a style=\"color:red\"&gt;替换第二段的内容&lt;/a&gt;').replaceAll('p:eq(1)') 5-3 DOM包裹wrap()方法.wrap( wrappingElement )：在集合中匹配的每个元素周围包裹一个HTML结构 1$('p').wrap('&lt;div&gt;&lt;/div&gt;') 5-4 DOM包裹unwrap()方法去除1层父级元素 1$('p').unwrap(); 5-5 DOM包裹wrapAll()方法给所有p元素增加一个div包裹 1$('p').wrapAll('&lt;div&gt;&lt;/div&gt;') 5-6 DOM包裹wrapInner()方法将合集中的元素内部所有的子元素用其他元素包裹起来 1$('div').wrapInner('&lt;p&gt;&lt;/p&gt;') 替换前 12&lt;div&gt;p元素&lt;/div&gt;&lt;div&gt;p元素&lt;/div&gt; 替换后 123456&lt;div&gt; &lt;p&gt;p元素&lt;/p&gt;&lt;/div&gt;&lt;div&gt; &lt;p&gt;p元素&lt;/p&gt;&lt;/div&gt; 第6章 jQuery遍历6-1 children()方法$(“div”).children(“.selected”) 6-2 find()方法.find()和.children()方法是相似的1.children只查找第一级的子节点2.find查找范围包括子节点的所有后代节点 6-3 parent()方法因为是父元素，这个方法只会向上查找一级;parent()无参数 6-4 parents()方法类似find与children的区别，parent只会查找一级，parents则会往上一直查到查找到祖先节点 6-5 closest()方法从元素本身开始，在DOM 树上逐级向上级元素匹配，并返回最先匹配的祖先元素$(“div”).closet(“li’)注意：jQuery是一个合集对象，所以通过closest是匹配合集中每一个元素的祖先元素 6-6 next()方法next()无参数允许我们找遍元素集合中紧跟着这些元素的直接兄弟元素，并根据匹配的元素创建一个新的 jQuery 对象 6-7 prev()方法6-8 siblings()siblings()无参数取得一个包含匹配的元素集合中每一个元素的同辈元素的元素集合注意：jQuery是一个合集对象，所以通过siblings是匹配合集中每一个元素的同辈元素 6-9 add()方法123$('li').add('p')$('li').add(document.getElementsByTagName('p')[0])$('li').add('&lt;p&gt;新的p元素&lt;/p&gt;').appendTo(目标位置) 6-10 each()12345$(\"li\").each(function(index, element) { index 索引 0,1 element是对应的li节点 li,li this 指向的是li}) 更多jQuery基础(五)一Ajax应用与常用插件-慕课网 jQuery基础修炼圣典—动画篇 12341. // $div是一个变量名？不加$?var $div = $('div')var div = $div[0] // jquery对象转dom对象","link":"/frontEnd/jquery%E5%A4%8D%E4%B9%A0.html"},{"title":"js script","text":"js script 回文十进制数求用十进制、二进制、八进制表示都是回 文数的所有数字中， 大于十进制数 10 的最 小值。 1234567891011121314151617/* 为字符串类型添加返回逆序字符串的方法 */ String.prototype.reverse = function (){ return this.split(\"\").reverse().join(\"\"); }/* 从 11 开始搜索 */ var num = 11; while (true){if ( (num.toString() == num.toString().reverse()) &amp;&amp; (num.toString(8) == num.toString(8).reverse()) &amp;&amp; (num.toString(2) == num.toString(2).reverse())){ console.log(num); break; } /* 只搜索奇数，每次加 2 */ num += 2;}","link":"/frontEnd/js-script.html"},{"title":"nodejs-helloworld","text":"七天学会NodeJS","link":"/frontEnd/nodejs-helloworld.html"},{"title":"vue.js2.5基础入门视频教程-慕课网","text":"1-1 课程介绍.mp4vue官方文档 2-1 创建第一个Vue实例.mp412345678910111213141516171819202122&lt;!DOCTYPE html&gt;&lt;html lang=\"en\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;Vue 入门&lt;/title&gt; &lt;script src=\"vue.js\"&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=\"root\"&gt; &lt;h1&gt;hello {{msg}}&lt;/h1&gt; &lt;/div&gt; &lt;script&gt; new Vue({ //el确定挂载点 el: \"#root\", data: { msg: \"world\" } }) &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 2-2 挂载点，模版与实例.mp4挂载点、模板、实例之间的关系vue中的el确定挂载点。模板：挂载点里面的全部内容，可以直接写，也可以在Vue里面添加template 123456789101112131415&lt;!-- &lt;div id=\"root\"&gt;--&gt;&lt;!-- &lt;h1&gt;hello {{msg}}&lt;/h1&gt;--&gt;&lt;!-- &lt;/div&gt;--&gt;&lt;div id=\"root\"&gt;&lt;/div&gt;&lt;script&gt; new Vue({ //el确定挂载点 el: \"#root\", template: '&lt;h1&gt;hello {{msg}}&lt;/h1&gt;', data: { msg: \"world\" } })&lt;/script&gt; 2-3 Vue实例中的数据,事件和方法.mp4插值表达式 a在 new Vue({data: {a: 123}}) 中定义 12345&lt;h1&gt;{{a}}&lt;/h1&gt;使用a-text也可实现同样的效果&lt;h1 a-text=\"a\"&gt;&lt;/h1&gt;或&lt;h1 a-html=\"content\"&gt;&lt;/h1&gt; 1234567891011121314151617181920212223242526272829303132&lt;!DOCTYPE html&gt;&lt;html lang=\"en\" xmlns:v-on=\"http://www.w3.org/1999/xhtml\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;Vue 入门&lt;/title&gt; &lt;script src=\"vue.js\"&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;!--添加点击事件--&gt; &lt;!--添加方法1--&gt; &lt;div id=\"root\" @click=\"handleClick\"&gt; &lt;!--添加方法2--&gt;&lt;!-- &lt;div id=\"root\" v-on:click=\"handleClick\"&gt;--&gt; {{msg}} &lt;/div&gt; &lt;script&gt; new Vue({ //el确定挂载点 el: \"#root\", data: { msg: \"world\" }, methods:{ //定义方法 handleClick: function(){ this.msg=\"hello\"; } } }) &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 2-4 Vue中的属性绑定和双向数据绑定.mp41234567891011121314151617181920212223242526272829303132333435363738&lt;!DOCTYPE html&gt;&lt;html lang=\"en\" xmlns:v-on=\"http://www.w3.org/1999/xhtml\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;Vue 入门&lt;/title&gt; &lt;script src=\"vue.js\"&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=\"root\"&gt; &lt;div title=\"this is title1\"&gt;hello world&lt;/div&gt;&lt;!--属性绑定--&gt;&lt;!-- 方法1：--&gt;&lt;!-- &lt;div v-bind:title=\"title\"&gt;hello world&lt;/div&gt;--&gt;&lt;!-- 方法2（缩写，更常用）：--&gt; &lt;div :title=\"title\"&gt;hello world&lt;/div&gt;&lt;!-- 双向数据绑定--&gt;&lt;!-- 对比，单向：:value --&gt;&lt;!-- &lt;input :value=\"content\"&gt;--&gt;&lt;!-- 对比，双向 v-model --&gt; &lt;input v-model=\"content\"&gt; &lt;div&gt;{{content}}&lt;/div&gt; &lt;/div&gt; &lt;script&gt; new Vue({ //el确定挂载点 el: \"#root\", data: { msg: \"world\", title: \"this is title2\", content: \"content\" }, methods:{ } }) &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 2-5 Vue中的计算属性和侦听器.mp41234567891011121314151617181920212223242526272829303132333435363738394041424344&lt;!DOCTYPE html&gt;&lt;html lang=\"en\" xmlns:v-on=\"http://www.w3.org/1999/xhtml\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;Vue 入门&lt;/title&gt; &lt;script src=\"vue.js\"&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=\"root\"&gt; 姓: &lt;input v-model=\"firstName\"&gt; 名: &lt;input v-model=\"lastName\"&gt; &lt;div&gt;{{firstName}} {{lastName}}&lt;/div&gt; &lt;div&gt;{{fullName}}&lt;/div&gt; &lt;div&gt;{{count}}&lt;/div&gt; &lt;/div&gt; &lt;script&gt; new Vue({ el: \"#root\", data: { firstName: '', lastName: '', count: 0, }, // 计算属性 computed:{ fullName: function () { return this.firstName + ' ' + this.lastName } }, // 监听器 watch: { lastName: function () { this.count ++; }, firstName: function () { this.count ++; } }, methods:{ } }) &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 2-6 v-if, v-show与v-for指令.mp4123456789101112131415161718192021222324252627282930313233343536373839404142&lt;!DOCTYPE html&gt;&lt;html lang=\"en\" xmlns:v-on=\"http://www.w3.org/1999/xhtml\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;Vue 入门&lt;/title&gt; &lt;script src=\"vue.js\"&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=\"root\"&gt;&lt;!-- v-if 删除或添加元素--&gt; &lt;div v-if=\"show\"&gt;hello world&lt;/div&gt;&lt;!-- v-show 隐藏或显示元素--&gt; &lt;div v-show=\"show\"&gt;hello world&lt;/div&gt; &lt;button @click=\"toggle\"&gt;toggle&lt;/button&gt;&lt;!-- v-for --&gt; &lt;ul&gt; &lt;li v-for=\"item of list\"&gt;{{item}}&lt;/li&gt; &lt;li v-for=\"(item, index) of list\" key=\"index\"&gt;{{index}} {{item}}&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;script&gt; new Vue({ el: \"#root\", data: { show: true, list: [1, 1, 3, 4, 5], }, // 计算属性 computed:{ }, // 监听器 watch: { }, methods:{ toggle: function () { this.show = !this.show } } }) &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 3-1 todolist功能开发.mp41234567891011121314151617181920212223242526272829303132333435363738394041424344&lt;!DOCTYPE html&gt;&lt;html lang=\"en\" xmlns:v-on=\"http://www.w3.org/1999/xhtml\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;Vue 入门&lt;/title&gt; &lt;script src=\"vue.js\"&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=\"root\"&gt; &lt;div&gt; &lt;input v-model=\"thing\"&gt; &lt;button @click=\"submit\"&gt;submit&lt;/button&gt; &lt;/div&gt; &lt;ul&gt; &lt;li v-for=\"item of list\"&gt;{{item}}&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;script&gt; new Vue({ el: \"#root\", data: { thing: \"\", list: [], }, // 计算属性 computed:{ }, // 监听器 watch: { }, methods:{ submit: function () { if (this.thing.trim()===\"\") return; this.list.push(this.thing); // append 失败 // this.list.append(this.thing); this.thing = \"\"; } } }) &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 3-2 todolist组件拆分-1.5.mp412345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667&lt;!DOCTYPE html&gt;&lt;html lang=\"en\" xmlns:v-on=\"http://www.w3.org/1999/xhtml\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;Vue 入门&lt;/title&gt; &lt;script src=\"vue.js\"&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=\"root\"&gt; &lt;div&gt; &lt;input v-model=\"thing\"&gt; &lt;button @click=\"submit\"&gt;submit&lt;/button&gt; &lt;/div&gt; &lt;ul&gt; &lt;!-- 3. 属性传值 --&gt; &lt;todo-item v-for=\"(item, index) of list\" :key=\"index\" :content=\"item\"&gt;全局组件&lt;/todo-item&gt;&lt;!-- &lt;todo-item1&gt;局部组件&lt;/todo-item1&gt;--&gt;&lt;!-- &lt;li v-for=\"item of list\"&gt;{{item}}&lt;/li&gt;--&gt; &lt;/ul&gt; &lt;/div&gt; &lt;script&gt; &lt;!--全局组件--&gt; // 注册后即可直接在HTML中使用 Vue.component('todo-item', { // 1. 定义属性 props: ['content'], // 2. 使用属性 template: '&lt;li&gt;{{content}}&lt;/li&gt;' }); //局部组件 // 声明后，在Vue中添加components // var todoItem = { // template: '&lt;li&gt;item&lt;/li&gt;' // }; new Vue({ el: \"#root\", // components: { // 'todo-item1': todoItem, // }, data: { thing: \"\", list: [], }, // 计算属性 computed:{ }, // 监听器 watch: { }, methods:{ submit: function () { if (this.thing.trim()===\"\") return; this.list.push(this.thing); // append 失败 // this.list.append(this.thing); this.thing = \"\"; } } }) &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 3-3 组件与实例的关系.mp4组件也是实例, 也可以添加methods data等属性new Vue(){} 实例中的template属性没有定义时，为挂载点下的HTML 12345678910111213&lt;!--全局组件--&gt; // 注册后即可直接在HTML中使用 Vue.component('todo-item', { // 1. 定义属性 props: ['content'], // 2. 使用属性 template: '&lt;li @click=\"itemClicked\"&gt;{{content}}&lt;/li&gt;', methods: { itemClicked: function () { alert('clicked'); } } }); 3-4 实现todolist的删除功能.mp4组件之间通过属性传递值 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667&lt;!DOCTYPE html&gt;&lt;html lang=\"en\" xmlns:v-on=\"http://www.w3.org/1999/xhtml\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;Vue 入门&lt;/title&gt; &lt;script src=\"vue.js\"&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=\"root\"&gt; &lt;div&gt; &lt;input v-model=\"thing\"&gt; &lt;button @click=\"submit\"&gt;submit&lt;/button&gt; &lt;/div&gt; &lt;ul&gt;&lt;!-- @delete 或 v-on:delete 监听子组件--&gt; &lt;todo-item v-for=\"(item, index) of list\" :key=\"index\" :content=\"item\" :index=\"index\" @delete=\"handleDelete\" &gt;全局组件&lt;/todo-item&gt; &lt;/ul&gt; &lt;/div&gt; &lt;script&gt; Vue.component('todo-item', { props: ['content', 'index'], template: '&lt;li @click=\"itemClicked\"&gt;{{content}}&lt;/li&gt;', methods: { itemClicked: function () { // 子组件被点击，通知父组件删除 this.$emit(\"delete\", this.index); } } }); new Vue({ el: \"#root\", // components: { // 'todo-item1': todoItem, // }, data: { thing: \"\", list: [], }, computed:{ }, watch: { }, methods:{ submit: function () { if (this.thing.trim()===\"\") return; this.list.push(this.thing); this.thing = \"\"; }, handleDelete: function (index) { // delete 失败 // delete this.list[index] // 从index开始删除1项 this.list.splice(index, 1); } } }) &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 4-1 vue-cli的简介与使用-1.5.mp4https://cli.vuejs.org/zh/npm install -g @vue/clinpm install -g @vue/cli-init 12345678910111213➜ WebstormProjects vue init webpack todolist? Project name todolist? Project description A Vue.js project? Author? Vue build standalone? Install vue-router? No? Use ESLint to lint your code? Yes? Pick an ESLint preset Standard? Set up unit tests No? Setup e2e tests with Nightwatch? No? Should we run `npm install` for you after the project has been created? (recommended) npm To get started: cd todolist npm run dev components: {App} // {‘App’: App} 键值相等可简写单文件组件app.vuetemplate script style 3个标签template 下只可有一个元素 网页自动刷新 4-2 使用vue-cli开发TodoList.mp4npm run dev 执行的命令定义在package.json scripts中 12 4-3 全局样式与局部样式.mp41234scoped : 局部的样式&lt;style scoped&gt;&lt;/style&gt; 4-4 课程总结-1.5.mp412","link":"/frontEnd/vue-js2-5%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8%E8%A7%86%E9%A2%91%E6%95%99%E7%A8%8B-%E6%85%95%E8%AF%BE%E7%BD%91.html"},{"title":"vue","text":"引入json文件import data from ‘static/h5Static.json’此时，data已经被解析为字典 Vue对list的增删改查删除123456789delete(id) { for (const v of this.list) { if (v.id === id) { const index = this.list.indexOf(v) this.list.splice(index, 1, this.temp) break } }} 新增1this.list.push(car)","link":"/frontEnd/vue.html"},{"title":"前端工具","text":"[TOC] Online CSS3 Code Generator With a Simple Graphical Interface - EnjoyCSS 前端常用插件、工具类库汇总 - 站长实用工具 DaiCuoBBs","link":"/frontEnd/%E5%89%8D%E7%AB%AF%E5%B7%A5%E5%85%B7.html"},{"title":"golang projects","text":"[toc] 一. 开发工具1)sql2go用于将 sql 语句转换为 golang 的 struct. 使用 ddl 语句即可。例如对于创建表的语句: show create table xxx. 将输出的语句，直接粘贴进去就行。http://stming.cn/tool/sql2go.html 2)toml2go用于将编码后的 toml 文本转换问 golang 的 struct.https://xuri.me/toml-to-go/ 3)curl2go用来将 curl 命令转化为具体的 golang 代码.https://mholt.github.io/curl-to-go/ 4)json2go用于将 json 文本转换为 struct.https://mholt.github.io/json-to-go/ 5)mysql 转 ES 工具http://www.ischoolbar.com/EsParser/ 6)golang模拟模板的工具，在支持泛型之前，可以考虑使用。https://github.com/cheekybits/genny 7)查看某一个库的依赖情况，类似于 go list 功能https://github.com/KyleBanks/depth 8)一个好用的文件压缩和解压工具，集成了 zip，tar 等多种功能，主要还有跨平台。https://github.com/mholt/archiver 9)go 内置命令go list 可以查看某一个包的依赖关系.go vet 可以检查代码不符合 golang 规范的地方。 10)热编译工具https://github.com/silenceper/gowatch 11)revivegolang 代码质量检测工具https://github.com/mgechev/revive 12)Go Callvisgolang 的代码调用链图工具https://github.com/TrueFurby/go-callvis 13)Realize开发流程改进工具https://github.com/oxequa/realize 14)Gotests自动生成测试用例工具https://github.com/cweill/gotests 二.调试工具1)perf代理工具，支持内存，cpu，堆栈查看，并支持火焰图.perf 工具和 go-torch 工具，快捷定位程序问题.https://github.com/uber-archive/go-torchhttps://github.com/google/gops 2)dlv 远程调试基于 goland+dlv 可以实现远程调式的能力.https://github.com/go-delve/delve提供了对 golang 原生的支持，相比 gdb 调试，简单太多。 3)网络代理工具goproxy 代理，支持多种协议，支持 ssh 穿透和 kcp 协议.https://github.com/snail007/goproxy 4)抓包工具go-sniffer 工具，可扩展的抓包工具，可以开发自定义协议的工具包. 现在只支持了 http，mysql，redis，mongodb.基于这个工具，我们开发了 qapp 协议的抓包。https://github.com/40t/go-sniffer 5)反向代理工具，快捷开放内网端口供外部使用。ngrok 可以让内网服务外部调用https://ngrok.com/https://github.com/inconshreveable/ngrok 6)配置化生成证书从根证书，到业务侧证书一键生成.https://github.com/cloudflare/cfssl 7)免费的证书获取工具基于 acme 协议，从 letsencrypt 生成免费的证书，有效期 1 年，可自动续期。https://github.com/Neilpang/acme.sh 8)开发环境管理工具，单机搭建可移植工具的利器。支持多种虚拟机后端。vagrant常被拿来同 docker 相比，值得拥有。https://github.com/hashicorp/vagrant 9)轻量级容器调度工具nomad 可以非常方便的管理容器和传统应用，相比 k8s 来说，简单不要太多.https://github.com/hashicorp/nomad 10)敏感信息和密钥管理工具https://github.com/hashicorp/vault 11)高度可配置化的 http 转发工具，基于 etcd 配置。https://github.com/gojek/weaver 12)进程监控工具 supervisorhttps://www.jianshu.com/p/39b476e808d8 13)基于procFile进程管理工具. 相比 supervisor 更加简单。https://github.com/ddollar/foreman 14)基于 http，https，websocket 的调试代理工具，配置功能丰富。在线教育的 nohost web 调试工具，基于此开发.https://github.com/avwo/whistle 15)分布式调度工具https://github.com/shunfei/cronsun/blob/master/README_ZH.mdhttps://github.com/ouqiang/gocron 16)自动化运维平台 Gaiahttps://github.com/gaia-pipeline/gaia 三. 网络工具 四. 常用网站go 百科全书: https://awesome-go.com/json 解析: https://www.json.cn/出口 IP: https://ipinfo.io/redis 命令: http://doc.redisfans.com/ES 命令首页: https://www.elastic.co/guide/cn/elasticsearch/guide/current/index.htmlUrlEncode: http://tool.chinaz.com/Tools/urlencode.aspxBase64: https://tool.oschina.net/encrypt?type=3Guid: https://www.guidgen.com/常用工具: http://www.ofmonkey.com/ 五. golang 常用库日志https://github.com/Sirupsen/logrushttps://github.com/uber-go/zap 配置兼容 json，toml，yaml，hcl 等格式的日志库.https://github.com/spf13/viper 存储mysql https://github.com/go-xorm/xormes https://github.com/elastic/elasticsearchredis https://github.com/gomodule/redigomongo https://github.com/mongodb/mongo-go-driverkafka https://github.com/Shopify/sarama 数据结构https://github.com/emirpasic/gods 命令行https://github.com/spf13/cobra 框架https://github.com/grpc/grpc-gohttps://github.com/gin-gonic/gin 并发https://github.com/Jeffail/tunnyhttps://github.com/benmanns/goworker现在我们框架在用的，虽然 star 不多，但是确实好用，当然还可以更好用.https://github.com/rafaeldias/async 工具定义了实用的判定类，以及针对结构体的校验逻辑，避免业务侧写复杂的代码.https://github.com/asaskevich/govalidatorhttps://github.com/bytedance/go-tagexpr protobuf 文件动态解析的接口，可以实现反射相关的能力。https://github.com/jhump/protoreflect 表达式引擎工具https://github.com/Knetic/govaluatehttps://github.com/google/cel-go 字符串处理https://github.com/huandu/xstrings ratelimit 工具https://github.com/uber-go/ratelimithttps://blog.csdn.net/chenchongg/article/details/85342086https://github.com/juju/ratelimit golang 熔断的库熔断除了考虑频率限制，还要考虑 qps，出错率等其他东西.https://github.com/afex/hystrix-gohttps://github.com/sony/gobreaker 表格https://github.com/chenjiandongx/go-echarts tail 工具库https://github.com/hpcloud/taglshi","link":"/go/golang-projects.html"},{"title":"go入门及资源网址","text":"Go 指南The Go programming language is an open source project to make programmers more productive. 目录 基础学习 进阶学习 社区论坛 基础学习 官方文档 Go wiki How to Write Go Code Package Documentation: The documentation for the Go standard library. Package builtin Command Documentation: The documentation for the Go tools. Language Specification: The official Go Language specification. Go 文档 Go 指南 在线练习 Go 语言教程 - 菜鸟教程 Go by Example 在线运行 The Go Play Space 进阶学习 GoDoc: Search for Go Packages. Awesome Go: A curated list of awesome Go frameworks, libraries and software. Go 语言学习资料与社区索引 Go入门指南 Golang标准库 Go for PHPer web 开发 Go 语言包管理 XORM: 简单而强大的 Go 语言ORM框架 Go开源项目速查表 社区论坛 Golang 中国: 国内较早的 Go 社区，汇聚各类信息与服务 Study Golang: 国内 Go 社区先驱，同样汇聚各类信息与服务 Revel 交流论坛: Revel 框架的中文社区 Go Forum: Go 语言爱好者英文交流论坛 golang-nuts 邮件列表: Go 语言官方指定邮件列表讨论区 Go+ 社区: Go 语言官方指定 G+ 社区","link":"/go/go%E5%85%A5%E9%97%A8%E5%8F%8A%E8%B5%84%E6%BA%90%E7%BD%91%E5%9D%80.html"},{"title":"go学习笔记2","text":"笨鸟学Go——最简单的Go教程https://www.slowbirdgogogo.com/syntax 阅读笔记https://note.youdao.com/ynoteshare1/index.html?id=f58aa20a530e9e08a71250d411ff6831&amp;type=note 接口接口的理解：struct实现interface的所有方法后，方法返回struct可以将类型写成实现的那个interface名。如：error是个接口，有Error方法 123type error interface { Error() string} 12345678910111213141516171819type MyError struct { When time.Time What string}func (e *MyError) Error() string { return fmt.Sprintf(\"at %v, %s\", e.When, e.What)}func run() error { return &amp;MyError{ time.Now(), \"it didn't work\", }}func main() { if err := run(); err != nil { fmt.Println(err) }}","link":"/go/go%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B02.html"},{"title":"go换源加速下载","text":"阿里云Go Module代理服务http://mirrors.aliyun.com/goproxy/ GOPROXY.IO - 一个为 Go 模块而生的全球代理https://goproxy.io/zh/ Go切换国内镜像源-教程-华夏梦客https://www.4gml.com/thread-144.htm","link":"/go/go%E6%8D%A2%E6%BA%90%E5%8A%A0%E9%80%9F%E4%B8%8B%E8%BD%BD.html"},{"title":"go学习笔记1","text":"从Java到Golang快速入门flysnow.org/2016/12/28/from-java-to-golang.html Hello World12345package mainimport \"fmt\"func main() { fmt.Println(\"Hello, 世界\")} 整段代码非常简洁，关键字、函数、包等和Java非常相似，不过注意，go是不需要以;(分号)结尾的。 变量1var age int =10 最后面的赋值可以在声明的时候忽略，这样变量就有一个默认的值，称之为零值。零值是一个统称，以类型而定，比如int类型的零值为0，string类型的零值是”“空字符串。 1age := 10 使用这种方式，变量的类型由go根据值推导出来，比如这里默认是int。 常量1const age = 10 大小写标记访问权限在go中不能随便使用大小写的问题，是因为大小写具有特殊意义，在go中，大些字母开头的变量或者函数等是public的，可以被其他包访问；小些的则是private的，不能被其他包访问到。这样就省去了public和private声明的烦恼，使代码变的更简洁。 包包的规则和java很像，每个包都有自己独立的空间，所以可以用来做模块化，封装，组织代码等。 和java不同的是，go的包里可以有函数，比如我们常用的fmt.Println(),但是在在java中没有这种用法，java的方法必须是属于一个类或者类的实例的。 如果我们需要导入多个包的时候，可以像java一样，一行行导入，也可以使用快捷方式一次导入，这个是java所没有的。 123456import ( \"io\" \"log\" \"net\" \"strconv\") 类型转换go对于变量的类型有严格的限制，不同类型之间的变量不能进行赋值、表达式等操作，必须要要转换成同一类型才可以，比如int32和int64两种int类型的变量不能直接相加，要转换成一样才可以。 123var a int32 = 13var b int64 = 20c := int64(a) + b 这种限制主要是防止我们误操作，导致一些莫名其妙的问题。在java中因为有自动转型的概念，所以可以不同类型的可以进行操作，比如int可以和double相加，int类型可以通过+和字符串拼接起来，这些在go中都是不可行的。 mapmap类型，Java里是Map接口，go里叫做字典，因为其常用，在go中，被优化为一个语言上支持的结构，原生支持，就像一个关键字一样，而不是java里的要使用内置的sdk集合库，比如HashMap等。 12345678910ages := make(map[string]int)ages[\"linday\"] = 20ages[\"michael\"] = 30fmt.Print(ages[\"michael\"])delete(ages,\"michael\")for name,age := range ages { fmt.Println(\"name:\",name,\",age:\",age)} 函数方法在go中，函数和方法是不一样的，我们一般称包级别的(直接可以通过包调用的)称之为函数，比如fmt.Println()；把和一个类型关联起来的函数称之为方法，如下示例： 12345678910111213141516package libimport \"time\"type Person struct { age int name string}func (p Person) GetName() string { return p.name}func GetTime() time.Time{ return time.Now()} 其中GetTime()可以通过lib.GetTime()直接调用，称之为函数；而GetName()则属于Person这个结构体的函数，只能声明了Person类型的实例后才可以调用，称之为方法。 123func GetTime() (time.Time,error){ return time.Now(),nil} 多值返回也很简单，返回的值使用逗号隔开即可。如果要接受多值的返回，也需要以逗号分隔的变量，有几个返回值，就需要几个变量，比如这里： 123now,err:=GetTime()now,_:=GetTime() 指针Go的指针和C中的声明定义是一样的，其作用类似于Java引用变量效果。 1234var age int = 10var p *int = &amp;age*p = 11fmt.Println(age) 结构体1234type Person struct { age int name string} Go中的结构体是不能定义方法的，只能是变量，这点和Java不一样的,如果要访问结构体内的成员变量，通过.操作符即可。 123func (p Person) GetName() string { return p.name} 这就是通过.操作符访问变量的方式，同时它也是一个为结构体定义方法的例子，和函数不一样的是，在func关键字后要执行该方法的接收者，这个方法就是属于这个接收者，例子中是Person这个结构体。 在Go中如果想像Java一样，让一个结构体继承另外一个结构体怎么办？也有办法，不过在Go中称之为组合或者嵌入。 123456789type Person struct { age int name string Address}type Address struct { city string} 结构体Address被嵌入了Person中，这样Person就拥有了Address的变量和方法，就想自己的一样，这就是组合的威力。通过这种方式，我们可以把简单的对象组合成复杂的对象，并且他们之间没有强约束关系，Go倡导的是组合，而不是继承、多态。 接口Go的接口和Java类型，不过它不需要强制实现，在Go中，如果你这个类型（基本类型，结构体等都可以）拥有了接口的所有方法，那么就默认为这个类型实现了这个接口，是隐式的，不需要和java一样，强制使用implement强制实现。 1234567type Stringer interface { String() string}func (p Person) String() string { return \"name is \"+p.name+\",age is \"+strconv.Itoa(p.age)} 以上实例中可以看到，Person这个结构体拥有了fmt.Stringer接口的方法，那么就说明Person实现了fmt.Stringer接口。 接口也可以像结构体一样组合嵌套，这里不再赘述。 并发Go并发主要靠go goroutine支持，也称之为go协程或者go程，他是语言层面支持的，非常轻量级的多任务支持，也可以把他简单的理解为java语言的线程，不过是不一样的。 两个goroutine可以通过channel来通信，channel是一个特殊的类型，也是go语言级别上的支持，他类似于一个管道，可以存储信息，也可以从中读取信息。 12345678910111213141516package mainimport \"fmt\"func main() { result:=make(chan int) go func() { sum:=0 for i:=0;i&lt;10;i++{ sum=sum+i } result&lt;-sum }() fmt.Print(&lt;-result)} 以上示例使用一个单独的goroutine求和，当得到结果时，存放在result这个chan里，然后供main goroutine读取出来。当result没有被存储值的时候，读取result是阻塞的，所以会等到结果返回，协同工作，通过chan通信。 对于并发，go还提供了一套同步机制，都在sync包里，有锁，有一些常用的工具函数等，和java的concurrent框架差不多。 异常机制相比java的Exception来说，go有两种机制，不过最常用的还是error错误类型，panic只用于严重的错误。 123type error interface { Error() string} go内置的error类型非常简洁，只用实现Error方法即可，可以打印一些详细的错误信息，比如常见的函数多值返回，最后一个返回值经常是error，用于传递一些错误问题，这种方式要比java throw Exception的方法更优雅。 Defer代替finallygo中没有java的finally了，那么如果我们要关闭一些一些连接，文件流等怎么办呢，为此go为我们提供了defer关键字，这样就可以保证永远被执行到，也就不怕关闭不了连接了。 123f,err:=os.Open(filename)defer f.Close()readAll(f) 统一编码风格在编码中，我们有时为了是否空行，大括号是否独占一行等编码风格问题争论不休，到了Go这里就终止了，因为go是强制的，比如花括号不能独占一行，比如定义的变量必须使用，否则就不能编译通过。 第二种就是go fmt这个工具提供的非强制性规范，虽然不是强制的，不过也建议使用，这样整个团队的代码看着就像一个人写的。很多go代码编辑器都提供保存时自动gofmt格式的话，所以效率也非常高。 便捷的部署go最终生成的是一个可执行文件，不管你的程序依赖多少库，都会被打包进行，生成一个可执行文件，所以相比java庞大的jar库来说，他的部署非常方便，执行运行这个可执行文件就好了。","link":"/go/go%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01.html"},{"title":"《go语言核心编程》阅读笔记1","text":"第一章 基础知识 函数以func开头，{必须在函数头所在行尾部 字符串用双引号 -&gt;go build hello.go -&gt;./hello 标识符 包括fallthrough go也有+= -= … ++ – 字符串 字符串是常量 12var a = \"hello\"b:= a[0] 字符串转换成切片[]byte(s)要慎用，每转换一次都复制一次内容 1b := []byte(s) 字符串的切片 与原字符串指向同一底层数组，一样不能修改，字符串的切片操作返回的仍是string，而非slice 字符串可以转换为字节数组，也可以转换为字数组 12b := []byte(s)c := []rune(s) 字符串的运算 12c := a+blen(c) 指针 数组 go不支持指针的运算 数组的初始化 1234a := [3]int{1,2,3}a := [...]int{1,2,3}a := [3]int{1:1, 2:3} // 没有初始化的位置为零值a := [...]int{1:1, 2:3} // 数组长度由提供的最大索引决定 数组创建完长度就固定了，不可再追加元素 切片 切片的创建 123456789// 1. 通过数组创建array := [...]int{1,2,3,4,5,6,7,8,9}slice := array[1:3] // 同Python，Java 左闭右开// 2. 通过make创建a := make(int[], 10) // len==cap==10b := make(int[], 10, 20) // len=10, cap=20// 直接声明切片的类型变量是没有意义的var a []intfmt.Printf(\"%v\\n\", a) // [] 切片支持的操作：len() cap() append() copy() 1234// 将c添加到b中 （返回新的slice，不改变b）b = append(b, c...)// 将d拷贝到c中 (不改变c)copy(c, d) // copy 只会复制c d中较短的 map map的创建 123456// 1. 使用自变量创建ma := map[string]int{\"a\":1, \"b\":2}// 2. 使用make创建mb := make(map[string]int)// 删除delete(ma, \"b\") go内置的map不是线程安全的，标准包sync中的map是 修改map中元素的值，最好整体替换 123456//如, 不要使用：ma[1].age = 19// 改为a := ma[1]a.age = 19ma[1] = a struct初始化 123456789// 1. 按照类型声明顺序，逐个赋值// 不推荐, 一旦struct增加字段，整个初始化语句会报错a := Person{\"Tom\", 21}// 推荐的初始化方式// 2. 使用field名字初始化，没有指定字段的为零值p := &amp;Person{ Name: \"tata\", Age: 21,} ifgo没有a?b:c 12345if [;] {}else if {}else{} switchfallthough强制执行下一个case子句（不判断下一个case条件）当所有case不符合时执行default， 且default语句可以放到任意位置。 标签和跳转1234567891011L1:for i:=0; ; i++{ for :j=0; ; j++{ if i&gt;=5{ break L1 } if j&gt;10{ break } }} 1234567891011L1:for i:=0; ; i++{ for j:=; ; j++{ if i&gt;=5{ continue L1 } if j&gt;10{ continue } }} 第二章 函数不定参数不定参数必须是函数的最后一个参数不定参数名在函数体内相当于切片切片可以作为参数传给不定参数， func(slice…) 12345678910111213func sum(a, arr ...int) (sum int){ sum = a for _, v := range arr{ sum += v } return }func main(){ slice := []int{1,2,3,4} array := [...]int{1,2,3,4} // 数组不可作为参数给不定参数 sum(0, slice...)} 函数签名fmt.Printf 的%T 格式化参数打印函数类型2个函数相同的条件是，拥有相同的形参列表和返回值列表，形参名可以不同 1fmt.Printf(\"%T\\n\", add) // func(int, int) int 12345678910111213141516171819package mainimport \"fmt\"func add(a, b int) int { return a + b}func sub(a, b int) int { return a - b}type Op func(int, int)int //定义一个函数类型,输入的是两个int类型 //返回值是一个int类型func do (f Op, a, b int) int { //定义一个函数,第一个参数是函数类型Op return f(a,b)//函数类型变量可以直接用来进行函数调用}func main() { a := d(ad,1,2)//函数名a可以当作相同函数类型形参,不需要强制类型转换 fmt.Println(a)//3 s := do(sub, 1, 2) fmt.Println(s)//-1} 1f := sum //函数可以直接赋值给变量 匿名函数作为返回值 1234567891011121314func wrap(op string) fun(int, int) int{ switch op{ case \"add\": return func(a, b int) int{ return a+b } case \"sub\": return func(a, b int) int{ return a-b } default: return nil }} deferdefer注册多个延迟调用，先进先出主动调用os.Exit(int) 退出进程时，defer将不再执行（即使defer已经提前注册）一般defer语句放错误检查语句之后，不然有可能产生panic，如： 12345dst, err := os.Create(dst)if err != nil { return}defer dst.close() 闭包闭包最初的目的是减少全局变量,在函数调用的过程中隐式地传递共享变量,有其有用的面;但是这种隐秘的共享变量的方式带来的坏处是不够直接,不够清晰,除非是非常有价值的地方,一般不建议使用闭包。对象是附有行为的数据,而闭包是附有数据的行为,类在定义时已经显式地集中定义了行为,但是闭包中的数据没有显式地集中声明的地方,这种数据和行为耦合的模型不是一种推着的编程模型,闭包仅仅是锦上添花的东西,不是不可缺少的。 panic recoverpanic主动抛出错误，recover捕获panic抛出的错误recover只有在defer后面的函数体内被直接调用才能捕获panic异常（？） 第四章 接口接口类型查询语法： 12345678switch v:= i.(type) { case type1: xxxxx case type2: xxxxx default: xxxxx}","link":"/go/%E3%80%8Ago%E8%AF%AD%E8%A8%80%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B01.html"},{"title":"Java tricks","text":"[toc] 降低 idea 的 CPU 使用率IntelliJ IDEA 卡顿CPU 使用率超过100% – 软体工程师的踩雷笔记 04-03Java 程序该怎么优化？工具篇原创 一猿小讲 一猿小讲 1周前 程序员：为什么程序总是那么慢？时间都花到哪里去了？ 面试官：若你写的 Java 程序，出现了性能问题，该怎么去排查呢？ 1. hprof 工具 hprof 工具是通过织入监控代码，来对 Java 程序进行监控的一款工具。可以监控 Java 程序在运行时占用的 CPU，及统计堆内存使用等。 例如：每隔 10 毫秒采样 CPU 消耗信息，并把信息保存到 hprof.txt 文件中。 1java -agentlib:hprof=cpu=times,interval=10,file=hprof.txt class 指令运行完，打开 hprof.txt 便很容易统计出哪些方法的运行耗时较长。 例如：输出 Java 应用程序中各个类所占用的内存百分比。 1java -agentlib:hprof=heap=sites,file=hprof.txt class备注：若未指定 file=hprof.txt，则默认会生成 java.hprof.txt 文件 打开输出的文件，效果如下。 例如：将 Java 应用程序的堆快照保存在文件 core.hprof 中，然后就可以使用 VisualVM 等工具来分析这个堆文件啦。 1java -agentlib:hprof=heap=dump,format=b,file=core.hprof class 采用 VisualVM 工具打开 core.hprof 文件进行分析堆快照，效果如下。 2. JConsole 工具 JConsole 是 Java 自带的图形化性能监控工具，可以让你摆脱命令行排查问题的痛苦。通过它，会非常容易的监测 Java 程序的运行情况。 2.1. 连接要监控的 Java 程序 首先进入 JDK 安装之后的 bin 目录，若是配置过 Java 的环境变量，直接运行 JConsole 就行，效果如下。 若是要监控本地 Java 进程，直接选择列表中的名称进行连接即可。 若是要监控远程 Java 进程，需要在远程 Java 程序启动时，需要加上下面几句话。 1# 远程服务器的ip地址-Djava.rmi.server.hostname=127.0.0.1 # 指定jmx监听的端口-Dcom.sun.management.jmxremote.port=8099 # 指定jmx监听的端口-Dcom.sun.management.jmxremote.rmi.port=8099 # 是否开启ssl-Dcom.sun.management.jmxremote.ssl=false # 是否开启认证-Dcom.sun.management.jmxremote.authenticate=false 若是在 IDEA 开发工具中进行验证，按照下图进行配置，跑程序就行。 若是命令行启动时，按照下述方式配置，启动就行。 1java -cp . -Djava.rmi.server.hostname=127.0.0.1 -Dcom.sun.management.jmxremote.port=8099 -Dcom.sun.management.jmxremote.rmi.port=8099 -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false className 启动远程 Java 程序，JConsole 输入远程服务 IP 和 端口，连接即可。 2.2. 监控 Java 程序概况 如图所示，JConosle 连接上要监控的 Java 程序后，可以很方便的查看堆内存使用量、线程数量、加载类的数量以及 CPU 的占用率。 2.3. 内存监控 如图所示，在 JConsole 提供的内存监控页面，不仅能看到堆内存的使用情况，而且能查看非堆区的内存使用情况等等。另外，还提供了让 Java 应用强制进行一次 GC 的功能。 2.4. 线程监控 如图所示，通过 JConsole 提供的线程页面，可以方便查看系统内的线程数量，以及程序中所有的线程，并且还能看到线程的栈信息。另外，该页面还提供了检测死锁的支持，那么就可以快速的帮我们定位死锁的问题啦。 2.5. 类加载情况 如图所示，JConsole 还能够显示类加载情况，包括已经装载的类数量，以及已经卸载的类数量。 2.6. VM 摘要 如图所示，JConsole 提供的 VM 概要页面，能够显示当前 Java 应用程序的基本信息，包括运行环境、系统线程信息、堆信息等等。 2.7. MBean 管理 通过 JConsole 提供的 MBean 页面，我们可以对应用中的 MBean 进行统一管理，鉴于之前在剖析 Resin 服务器源码的时候，我们多次用到过，本次不再铺开去说。 3. VisualVM 工具 Visual VM 是可以替代 jstat、jmap、jhat、jstack 命令的一款故障诊断和性能监控的可视化工具，甚至可以替代 JConsole，所以我们还是有必要进行了解一下。 3.1 连接要监控的 Java 程序 首先进入 JDK 安装的 bin 目录，运行 jvisualvm，启动起来后和 JConsole 一样，可以选择本地和远程进行连接，效果如下。 3.2 概述 **** 如图所示，通过 VisualVM 提供的概述功能页，可以很方便的查看 Java 程序的进程 ID、JVM 参数、系统属性等等信息。 3.3 监视 **** 这块和 JConsole 很像，VisualVM 将 CPU 使用情况、堆使用情况、类加载信息以及线程都做了图形界面展示，可以很直观的进行监测。 3.4 线程监控 VisualVM 可以展示详细的线程信息，让线程信息一览无余，并且会自动进行死锁检测，如果在当前程序中找到死锁，则会提示“检测到死锁”。另外，通过线程 Dump可以导出当前所有线程的堆栈信息。 3.5 抽样器 Visual VM 提供 CPU 和内存两个抽样器。通过 CPU 抽样器，可以帮助我们快速找到程序中占用 CPU 时间最长的方法；通过内存抽样器，可以帮助我们查看当前程序的堆信息。 CPU抽样器效果图： 内存抽样器效果图： 3.6 Profiler Profiler 的功能和抽样器其实差不多，只不过抽样器是抽样进行检测，而 Profiler 是全面进行检测。 点击 CPU 按钮，效果如上图所示，则开启一个 CPU 性能分析会话，等 VisualVM 收集和统计完相关性能数据信息，将会显示在性能分析结果。 若点击内存按钮，则开启一个内存分析会话，等 VisualVM 收集和统计完相关性能数据信息，将会显示在性能分析结果，效果如上图所示。 3.7 快照 VisualVM 很多地方，都提供了快照功能，可以让我们保存某一个时刻应用程序的堆信息、线程堆栈等等保存成快照，以便性能优化后进行对比、分析使用。 3.8 插件 VisualVM 还可以通过安装插件，来实现更多可能性。 3.5. 数学运算，搞不好会倾家荡产。 输出结果：0.010000000000005116，一般遇到需要用到浮点数运算的地方，都可以使用 java.math.BigDecimal。 建议修改为： 注意构造 BigDecimal 的参数为 String，千万别搞错了，这也是新手易犯的问题。 有些时候怎么调，都不通，就想知道 jar 包里面都写了点啥？在此，推荐一款用的最多的反编译工具 JD-GUI SonarQuable，它是一个用于代码质量管理的开源平台，也有助于帮你进行代码审查，提升代码质量。 Java 程序该怎么优化？技巧篇Java 程序该怎么优化？技巧篇 1.字符串处理优化，乃优化之源。1.1.字符串分割 从运行效果， StringTokenizer(?) 其效率高于 split() 方法。所以，在能够使用 StringTokenizer 进行处理的地方，就尽量使用 StringTokenizer 进行字符串分割处理。1.2. 字符串拼接 使用 + 号拼接字符串，其效率明显较低，采用 StringBuilder 来完成字符串连接性能相对较好，同理，如果需要考虑线程安全的情况下，可以选择 StringBuffer。 善用 arraycopy()，让数组复制不再难。 对数组的操作，如果能用 System.arraycopy() 这个方法实现，建议尽量去使用。 12# srcPos destPosSystem.arraycopy(src, 0, dest, 0, size); Arrays.copyOf() 底层还是调用 System.arraycopy() 来实现 集合用的多，使用场景要注意。 充分的选择好数据结构进行数据存储，便是最好的程序优化 缓冲，让子弹飞一会儿。 所以，文件读写操作时尽量都使用缓冲流进行操作，有助于提升性能。 缓存，让坐飞机的和坐驴车的打交道。 针对银行编码等一些使用频率较高的业务数据，或者来之不易的计算结果，都可以保存到缓存中，当再次使用时，直接从缓存中获取，而不需要再占用宝贵的系统资源。 目前有很多基于 Java 的缓存框架，而我用的最多的是 EhCache(?)。 日志记的好，线上没烦恼。 一个优化原则。先实现业务功能，再考虑优化性能，如果功能都没实现，谈其它的都白扯。 一个调优思路。 03-29GsonFormat我们在接外部接口时，别人给了一串JSON串，我们在代码中需要将JSON中的字段封装到一个类中，一个一个输入挺麻烦的，这时GsonFormat就可以派上用场了。它可以帮助我们根据JSON中的key快速生成我们需要的类。 它的使用快捷键是Option + S GsonFormat 作者：Jackeyzhe链接：https://www.jianshu.com/p/d7282aec7665来源：简书著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。 02-17AssertJ一分钟入门 - 简书 02-14PatMartin/Dex: Dex : The Data Explorer – A data visualization tool written in Java/Groovy/JavaFX capable of powerful ETL and publishing web visualizations. 02-09写 Excel wordJava POI Excel - Java代码实例™Java POI Word - Java代码实例™ 写pdfJava iText示例 - Java代码实例™ 读 PDF XML HTMLApache Tika示例 - Java代码实例™ 目录 文件处理Java目录 - Java代码实例™ 了解如何在Java编程中访问和操作目录。下面是有关Java编程中访问和操作目录最常用的例子 - 示例 如何递归创建目录？ 如何删除目录？ 如何确定一个目录是否为空？ 如何确定目录是否隐藏？ 如何打印目录层次结构？ 如何打印目录的最后修改时间？ 如何获取文件的父目录？ 如何搜索目录中的所有文件？ 如何获取目录的大小？ 如何遍历目录？ 如何查找当前工作目录？ 如何在系统中显示根目录？ 如何在目录中搜索文件？ 如何显示目录中的所有文件？ 如何显示目录中的所有目录？ Java文件 - Java代码实例™ 了解如何使用Java编程中的文件操作。下面是常用的一些例子 - 示例 如何比较两个文件的路径？ 如何创建新文件？ 如何获取文件的最后修改日期？ 如何在指定的目录中创建文件？ 如何检查文件是否存在？ 如何设置文件为只读？ 如何重命名文件？ 如何获取文件大小(以字节为单位)？ 如何更改文件的最后修改时间？ 如何创建一个临时文件？ 如何向现有文件中附加一个字符串？ 如何将一个文件复制到另一个文件？ 如何删除文件？ 如何读取一个文件？ 如何写入一个文件？ 2020年1月20日(星期一)JMeter 官网地址 ：https://jmeter.apache.org Apache JMeter是Apache组织开发的基于Java的压力测试工具 是的就是用来压测的，你怎么模拟很多请求呀，就用它就对了。 2020 年 1 月 15 日可以提高千倍效率的Java代码小技巧 - 51CTO.COM程序员必须搞懂的20个Java类库和API - 51CTO.COM一、日志相关类库Log4j 、 SLF4j 和 LogBack应该熟悉日志记录的利弊， 并且了解为什么 SLF4J 要比 Log4J 要好 二、JSON 解析库Jackson 和 Gson 三、单元测试库常见的单测框架有 JUnit , Mockito 和 PowerMock 。 四、通用类库例如 Apache Commons 和 Google Guava。 五、Http 库Apache HttpClient 和 HttpCore 等开源类库 六、XML 解析库市面上有很多 XML 解析的类库，如 Xerces , JAXB , JAXP , Dom4j , Xstream 等。Xerces2是下一代高性能，完全兼容的 XML 解析工具。Xerces2 定义了 Xerces Native Interface (XNI)规范，并提供了一个完整、兼容标准的 XNI 规范实现。该解析器是完全重新设计和实现的，更简单以及模块化。 七、Excel 读写库Apache POI API 八、字节码库javassist 、Cglib Nodep 、 ASM 。Javassist 使得 Java 字节码操作非常简单。它是一个为编辑 Java 字节码而生的类库。 九、数据库连接池库Commons Pool 和 DBCP 十、消息传递库Java 提供了 JMS Java 消息服务，但这不是 JDK 的一部分，你需要单独的引入 jms.jar。类似地，如果您准备使用第三方消息传递协议， Tibco RV 是个不错的选择。 十一、PDF 处理库iText 和 Apache FOP 类库 十二、日期和时间库Java 8 自带 十三、集合类库虽然 JDK 有丰富的集合类，但还是有很多第三方类库可以提供更多更好的功能。如 Apache Commons Collections 、 Goldman Sachs collections 、 Google Collections 和 Trove 。Trove 尤其有用，因为它提供所有标准 Collections 类的更快的版本以及能够直接在原语(primitive)(例如包含 int 键或值的 Map 等)上操作的 Collections 类的功能。FastUtil是另一个类似的 API，它继承了 Java Collection Framework，提供了数种特定类型的容器，包括映射 map、集合 set、列表 list、优先级队列(prority queue)，实现了 java.util 包的标准接口(还提供了标准类所没有的双向迭代器)，还提供了很大的(64 位)的 array、set、list，以及快速、实用的二进制或文本文件的 I/O 操作类。 十四、邮件 APIjavax.mail 和 Apache Commons Email 提供了发送邮件的 API。它们建立在 JavaMail API 的基础上，提供简化的用法。 十五、HTML 解析库jsoup 可以解析 HTML，创建 HTML 文档 十六、加密库Apache Commons 家族中的 Commons Codec 就提供了一些公共的编解码实现，比如 Base64, Hex, MD5,Phonetic and URLs 等等。 十七、嵌入式 SQL 数据库库H2 是一种内存数据库，可以嵌入到 Java 应用中。在跑单测的时候如果需要一个数据库，用来验证 SQL 的话，H2 是个很好的选择。还有 Apache Derby 和 HSQL 可供选择。 十八、JDBC 故障诊断库有不错的 JDBC 扩展库的存在使得调试变得很容易，例如P6spy，这是一个针对数据库访问操作的动态监测框架，它使得数据库数据可无缝截取和操纵，而不必对现有应用程序的代码作任何修改。 P6Spy 分发包包括 P6Log，它是一个可记录任何 Java 应用程序的所有 JDBC 事务的应用程序。其配置完成使用时，可以进行数据访问性能的监测。 十九、序列化库Google Protocol Buffer是一种轻便高效的结构化数据存储格式，可以用于结构化数据串行化，或者说序列化。它很适合做数据存储或 RPC 数据交换格式。可用于通讯协议、数据存储等领域的语言无关、平台无关、可扩展的序列化结构数据格式。目前提供了 C++、Java、Python 三种语言的 API。 二十、网络库一些有用的网络库主要有 Netty 的和 Apache Mina 。如果您正在编写一个应用程序，你需要做的底层网络任务，可以考虑使用这些库。 Java 性能瓶颈分析工具1. Java Mission ControlguiOracle Java 官方项目 2. Tprofilercli命令行TProfiler 是淘宝开源的一个可以在生产环境长期使用的性能分析工具。 3. JprofilerguiJProfiler 是由 ej-technologies 公司开发的一款性能瓶颈分析工具。 4. ArthasArthas 是阿里最近刚刚开源的 Java 生成环境诊断工具。Arthas 支持在 Linux/Unix/Mac 等平台上进行一键安装，现在处于试用于反馈阶段，感兴趣的同学可以自己研究试用。","link":"/java/Java-tricks.html"},{"title":"你真的会写java吗 阅读笔记","text":"[toc] beandomain 包名一个数据库表 应该对应一个 普通的 entity 对象，因此包名应为 com.xxx.entity DTO只要是用于网络传输的对象，都应该被当做 DTO 对象，若约定某对象是 DTO 对象，就把名称改为 XXDTO, 比如订单下发 OMS: OMSOrderInputDTO. DTO转化DTO 是系统与外界交互的模型对象，那么肯定会有一个步骤是将 DTO 对象转换成 BO 对象（？）或者普通 entity 对象，让 service 层处理。 场景12345678910111213141516@RequestMapping(\"/v1/api/user\")@RestControllerpublic class UserApi { @Autowired private UserService userService; @PostMapping public User addUser(UserInputDTO userInputDTO){ User user = new User(); user.setUsername(userInputDTO.getUsername()); user.setAge(userInputDTO.getAge()); return userService.addUser(user); }} 使用工具网上有很多工具，支持浅拷贝或深拷贝的Utils. 举个例子，我们可以使用org.springframework.beans.BeanUtils#copyProperties对代码进行重构和优化 BeanUtils.copyProperties是一个浅拷贝方法，复制属性时，我们只需要把DTO对象和要转化的对象两个的属性值设置为一样的名称，并且保证一样的类型就可以了。如果你在做DTO转化的时候一直使用set进行属性赋值，那么请尝试这种方式简化代码，让代码更加清晰! 1234567@PostMappingpublic User addUser(UserInputDTO userInputDTO){ User user = new User(); BeanUtils.copyProperties(userInputDTO,user); return userService.addUser(user);} 转化的语义123456789101112@PostMapping public User addUser(UserInputDTO userInputDTO){ User user = convertFor(userInputDTO); return userService.addUser(user); } private User convertFor(UserInputDTO userInputDTO){ User user = new User(); BeanUtils.copyProperties(userInputDTO,user); return user; } 这是一个更好的语义写法，虽然他麻烦了些，但是可读性大大增加了，在写代码时，我们应该尽量把语义层次差不多的放到一个方法中 抽象接口定义当实际工作中，完成了几个api的DTO转化时，我们会发现，这样的操作有很多很多，那么应该定义好一个接口，让所有这样的操作都有规则的进行。如果接口被定义以后，那么convertFor这个方法的语义将产生变化，他将是一个实现类。 看一下抽象后的接口: 123public interface DTOConvert&lt;S,T&gt; { T convert(S s);} 虽然这个接口很简单，但是这里告诉我们一个事情，要去使用泛型，如果你是一个优秀的java程序员，请为你想做的抽象接口，做好泛型吧。 我们再来看接口实现: 12345678public class UserInputDTOConvert implements DTOConvert { @Override public User convert(UserInputDTO userInputDTO) { User user = new User(); BeanUtils.copyProperties(userInputDTO,user); return user; }} 我们这样重构后，我们发现现在的代码是如此的简洁，并且那么的规范: 1234567891011121314RequestMapping(\"/v1/api/user\")@RestControllerpublic class UserApi { @Autowired private UserService userService; @PostMapping public User addUser(UserInputDTO userInputDTO){ User user = new UserInputDTOConvert().convert(userInputDTO); return userService.addUser(user); }} review code12345678910111213141516171819202122public class UserInputDTO { private String username; private int age; // getters and setters public User convertToUser(){ UserInputDTOConvert userInputDTOConvert = new UserInputDTOConvert(); User convert = userInputDTOConvert.convert(this); return convert; } private static class UserInputDTOConvert implements DTOConvert&lt;UserInputDTO,User&gt; { @Override public User convert(UserInputDTO userInputDTO) { User user = new User(); BeanUtils.copyProperties(userInputDTO,user); return user; } }} 1234567// 然后api中的转化则由:// User user = new UserInputDTOConvert().convert(userInputDTO);// User saveUserResult = userService.addUser(user);// 变成了:User user = userInputDTO.convertToUser();User saveUserResult = userService.addUser(user); DTO对象中添加了转化的行为，我相信这样的操作可以让代码的可读性变得更强，并且是符合语义的。 利用工具类优化GUAVA的源码，发现了com.google.common.base.Convert这样的定义: 12345public abstract class Converter&lt;A, B&gt; implements Function&lt;A, B&gt; { protected abstract B doForward(A a); protected abstract A doBackward(B b); //其他略} 从源码可以了解到，GUAVA中的Convert可以完成正向转化和逆向转化，继续修改我们DTO中转化的这段代码: 12345678private static class UserInputDTOConvert implements DTOConvert&lt;UserInputDTO,User&gt; { @Override public User convert(UserInputDTO userInputDTO) { User user = new User(); BeanUtils.copyProperties(userInputDTO,user); return user; }} 修改后: 123456789101112131415private static class UserInputDTOConvert extends Converter&lt;UserInputDTO, User&gt; { @Override protected User doForward(UserInputDTO userInputDTO) { User user = new User(); BeanUtils.copyProperties(userInputDTO,user); return user; } @Override protected UserInputDTO doBackward(User user) { UserInputDTO userInputDTO = new UserInputDTO(); BeanUtils.copyProperties(user,userInputDTO); return userInputDTO; } } 看了这部分代码以后，你可能会问，那逆向转化会有什么用呢？其实我们有很多小的业务需求中，入参和出参是一样的，那么我们变可以轻松的进行转化，我将上边所提到的UserInputDTO和UserOutputDTO都转成UserDTO展示给大家: DTO： 1234567891011121314151617181920212223242526272829303132333435public class UserDTO { private String username; private int age; // getters and setters public User convertToUser(){ UserDTOConvert userDTOConvert = new UserDTOConvert(); User convert = userDTOConvert.convert(this); return convert; } public UserDTO convertFor(User user){ UserDTOConvert userDTOConvert = new UserDTOConvert(); UserDTO convert = userDTOConvert.reverse().convert(user); return convert; } private static class UserDTOConvert extends Converter&lt;UserDTO, User&gt; { @Override protected User doForward(UserDTO userDTO) { User user = new User(); BeanUtils.copyProperties(userDTO,user); return user; } @Override protected UserDTO doBackward(User user) { UserDTO userDTO = new UserDTO(); BeanUtils.copyProperties(user,userDTO); return userDTO; } }} api: 1234567@PostMapping public UserDTO addUser(UserDTO userDTO){ User user = userDTO.convertToUser(); User saveResultUser = userService.addUser(user); UserDTO result = userDTO.convertFor(saveResultUser); return result; } 当然，上述只是表明了转化方向的正向或逆向，很多业务需求的出参和入参的DTO对象是不同的，那么你需要更明显的告诉程序：逆向是无法调用的: 12345678910111213private static class UserDTOConvert extends Converter&lt;UserDTO, User&gt; { @Override protected User doForward(UserDTO userDTO) { User user = new User(); BeanUtils.copyProperties(userDTO,user); return user; } @Override protected UserDTO doBackward(User user) { throw new AssertionError(\"不支持逆向转化方法!\"); } } 看一下doBackward方法，直接抛出了一个断言异常，而不是业务异常，这段代码告诉代码的调用者，这个方法不是准你调用的，如果你调用，我就”断言”你调用错误了。 关于异常处理的更详细介绍，可以参考我之前的文章:如何优雅的设计java异常 ，应该可以帮你更好的理解异常。 bean的验证应该保证任何数据的入参到方法体内都是合法的 4.5. 拥抱lombok4.5.1. 去掉Setter和Getter123@Setter@Getter// @Data,@AllArgsConstructor,@NoArgsConstructor 。。。 4.5.2. bean中的链式风格什么是链式风格？我来举个例子，看下面这个Student的bean: 123456789101112131415161718192021public class Student { private String name; private int age; public String getName() { return name; } public Student setName(String name) { this.name = name; return this; } public int getAge() { return age; } public Student setAge(int age) { return this; }} 仔细看一下set方法，这样的设置便是chain的style，调用的时候，可以这样使用: 123Student student = new Student() .setAge(24) .setName(\"zs\"); 相信合理使用这样的链式代码，会更多的程序带来很好的可读性，那看一下如果使用lombok进行改善呢，请使用 @Accessors(chain = true),看如下代码: 1234567@Accessors(chain = true)@Setter@Getterpublic class Student { private String name; private int age;} 这样就完成了一个对于bean来讲很友好的链式操作。 4.5.3. 静态构造方法静态构造方法的语义和简化程度真的高于直接去new一个对象。比如new一个List对象，过去的使用是这样的: 1List&lt;String&gt; list = new ArrayList&lt;&gt;(); 看一下guava中的创建方式: 1List&lt;String&gt; list = Lists.newArrayList(); Lists命名是一种约定(俗话说：约定优于配置)，它是指Lists是List这个类的一个工具类，那么使用List的工具类去产生List，这样的语义是不是要比直接new一个子类来的更直接一些呢，答案是肯定的，再比如如果有一个工具类叫做Maps，那你是否想到了创建Map的方法呢： 1HashMap&lt;String, String&gt; objectObjectHashMap = Maps.newHashMap(); 好了，如果你理解了我说的语义，那么，你已经向成为java程序员更近了一步了。 再回过头来看刚刚的Student，很多时候，我们去写Student这个bean的时候，他会有一些必输字段，比如Student中的name字段，一般处理的方式是将name字段包装成一个构造方法，只有传入name这样的构造方法，才能创建一个Student对象。 接上上边的静态构造方法和必传参数的构造方法，使用lombok将更改成如下写法（@RequiredArgsConstructor 和 @NonNull）: 12345678@Accessors(chain = true)@Setter@Getter@RequiredArgsConstructor(staticName = \"ofName\")public class Student { @NonNull private String name; private int age;} 测试代码: 1Student student = Student.ofName(\"zs\"); 这样构建出的bean语义是否要比直接new一个含参的构造方法(包含 name的构造方法)要好很多。 当然，看过很多源码以后，我想相信将静态构造方法ofName换成of会先的更加简洁: 12345678@Accessors(chain = true)@Setter@Getter@RequiredArgsConstructor(staticName = \"of\")public class Student { @NonNull private String name; private int age;} 测试代码: 1Student student = Student.of(\"zs\"); 当然他仍然是支持链式调用的: 1Student student = Student.of(\"zs\").setAge(24); 这样来写代码，真的很简洁，并且可读性很强。 4.5.4. 使用builder （？）Builder模式我不想再多解释了，读者可以看一下《Head First》(设计模式) 的建造者模式。 今天其实要说的是一种变种的builder模式，那就是构建bean的builder模式，其实主要的思想是带着大家一起看一下lombok给我们带来了什么。 看一下Student这个类的原始builder状态: 123456789101112131415161718192021222324252627282930313233343536373839404142434445public class Student { private String name; private int age; public String getName() { return name; } public void setName(String name) { this.name = name; } public int getAge() { return age; } public void setAge(int age) { this.age = age; } public static Builder builder(){ return new Builder(); } public static class Builder{ private String name; private int age; public Builder name(String name){ this.name = name; return this; } public Builder age(int age){ this.age = age; return this; } public Student build(){ Student student = new Student(); student.setAge(age); student.setName(name); return student; } }} 调用方式: 1Student student = Student.builder().name(\"zs\").age(24).build(); 这样的builder代码，让我是在恶心难受，于是我打算用lombok重构这段代码: 12345@Builderpublic class Student { private String name; private int age;} 调用方式: 1Student student = Student.builder().name(\"zs\").age(24).build(); 4.5.5. 代理模式 （？）正如我们所知的，在程序中调用rest接口是一个常见的行为动作，如果你和我一样使用过spring 的RestTemplate,我相信你会我和一样，对他抛出的非http状态码异常深恶痛绝。 所以我们考虑将RestTemplate最为底层包装器进行包装器模式的设计: 123456789public abstract class FilterRestTemplate implements RestOperations { protected volatile RestTemplate restTemplate; protected FilterRestTemplate(RestTemplate restTemplate){ this.restTemplate = restTemplate; } //实现RestOperations所有的接口} 然后再由扩展类对FilterRestTemplate进行包装扩展: 123456789101112131415161718192021222324public class ExtractRestTemplate extends FilterRestTemplate { private RestTemplate restTemplate; public ExtractRestTemplate(RestTemplate restTemplate) { super(restTemplate); this.restTemplate = restTemplate; } public &lt;T&gt; RestResponseDTO&lt;T&gt; postForEntityWithNoException(String url, Object request, Class&lt;T&gt; responseType, Object... uriVariables) throws RestClientException { RestResponseDTO&lt;T&gt; restResponseDTO = new RestResponseDTO&lt;T&gt;(); ResponseEntity&lt;T&gt; tResponseEntity; try { tResponseEntity = restTemplate.postForEntity(url, request, responseType, uriVariables); restResponseDTO.setData(tResponseEntity.getBody()); restResponseDTO.setMessage(tResponseEntity.getStatusCode().name()); restResponseDTO.setStatusCode(tResponseEntity.getStatusCodeValue()); }catch (Exception e){ restResponseDTO.setStatusCode(RestResponseDTO.UNKNOWN_ERROR); restResponseDTO.setMessage(e.getMessage()); restResponseDTO.setData(null); } return restResponseDTO; }} 包装器ExtractRestTemplate很完美的更改了异常抛出的行为，让程序更具有容错性。在这里我们不考虑ExtractRestTemplate完成的功能，让我们把焦点放在FilterRestTemplate上，“实现RestOperations所有的接口”,这个操作绝对不是一时半会可以写完的，当时在重构之前我几乎写了半个小时,如下: 1234567891011121314151617181920212223242526272829public abstract class FilterRestTemplate implements RestOperations { protected volatile RestTemplate restTemplate; protected FilterRestTemplate(RestTemplate restTemplate) { this.restTemplate = restTemplate; } @Override public &lt;T&gt; T getForObject(String url, Class&lt;T&gt; responseType, Object... uriVariables) throws RestClientException { return restTemplate.getForObject(url,responseType,uriVariables); } @Override public &lt;T&gt; T getForObject(String url, Class&lt;T&gt; responseType, Map&lt;String, ?&gt; uriVariables) throws RestClientException { return restTemplate.getForObject(url,responseType,uriVariables); } @Override public &lt;T&gt; T getForObject(URI url, Class&lt;T&gt; responseType) throws RestClientException { return restTemplate.getForObject(url,responseType); } @Override public &lt;T&gt; ResponseEntity&lt;T&gt; getForEntity(String url, Class&lt;T&gt; responseType, Object... uriVariables) throws RestClientException { return restTemplate.getForEntity(url,responseType,uriVariables); } //其他实现代码略。。。} 我相信你看了以上代码，你会和我一样觉得恶心反胃，后来我用lombok提供的代理注解优化了我的代码(@Delegate): 12345@AllArgsConstructorpublic abstract class FilterRestTemplate implements RestOperations { @Delegate protected volatile RestTemplate restTemplate;} 这几行代码完全替代上述那些冗长的代码。是不是很简洁，做一个拥抱lombok的程序员吧。","link":"/java/%E4%BD%A0%E7%9C%9F%E7%9A%84%E4%BC%9A%E5%86%99java%E5%90%97-%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0.html"},{"title":"job","text":"嗨，请准确无误地输入密码查看哟！ 7415f154670ac8d2437aa89bb772b0520436c1b8dffe114179e60661f08196f3e23226a155689d8cd63f69c7e93b9bf9ba0eddfc75f3e06b00742f6de2cec4238f7d90517bfa71cfa81afdfafc0a3d62f817abd38aa109d85644efe15d5facc96c4a9ed4f864566c8ce1662e6e26565230d38df0c21b8d9805ec46e4ddf40119b75100736ab6be834d6386f00cca7e5af5b8e200ecdb5b7e6c311c76a0b375502950fa2660d2e05594534aa30e0785c1a8f0df00fa85149cdccafaa492e21cf9727fd7ac5f06e2d1123f1ec3033ed6c9344e20114db6cbd781e8acaa87d308d48c06543471c0b47d22d258773deda2c0012823be8f1ba02a91defb966c7b9c3bc74ab9ef40963ab1600335ef841414431338d9d5c6f61f0c969240f43b4b4294fc7599ca549910eb7707d9aaf0b491ef6902e0610fb26c3afd398aef753de022712a91c3bc407240522b82efc395db7f1151c01aaef53778ca1dadd193eb752957ff8671f231a986c6233d6ed1814f4af0e5cd311fe818e83d74fbac10d33629183f8b432e852546664a5ede07f8de3701daa6110088063551a0551ebf8a8c1d2285ec41043506763037f3d7219bfb19fe39034e249b07f4a65da27950020c16eb040c2f3adaf8b7ef5369c4ba0fc6b6885eabf6bc2e1bd0c3cd6593cf16933524d448930ad9a031e37c1cdce2caf7145cc97b97d1af995f186459e82c8cae8b33462f944d4e45c86ad1fdf72ac514b3f36a2bf9b48ab9f701306b3c9885fe0f9cb93ea55a26a9f1026d04dcd6a2f7bf9e3e11274863947952f384816c585579ae5852a8c5be33e81a82fdd2f306f73f4091275c417defeb0b79769e6eda422e1e1c2cd164e2d8834251076a771b81b5357f27858beaac27b0d3e1dc9ff00c23adf9130431813ac55cba12beadd6eaf25cb785e6c2f620f1dd1dbaa0b38a85be6112de5f5317475de2a4cfc8f7926a1339141a8278156c5a49503975844fb41fd06f95f6dee30c14c13c16f6aab05be29b2b1d1b8a9e90183b25f79f56c75943e7c0aa4d00c8299374d2cfbe4036415c2b14b905171e7bab4e01d0dd788510618b93a2297cb035f4bfe72ab4f2e73b01a0321f74b4d4f6500c0b06ce5bbb252391602b4cddc13b1d30a023caae4cf32cc1bea4d3efa070e6a1ef346769451a575fa25c5639553a7bb23548fd7772224e466d9892e7d3f2b309deb2d3d289d0a65bb782665249d50e9a45c1c588313a2fe3047f0f8f2a6e4cf8819e3c522ad4d2c059365c5f5053efe002f147ff97b62907c75bd90d7a32fc391df462754c1f72cf661bb7dd4dccea41ab1adc541fe8df7bb70bffba7885776e32bd4e35a95c85f923b9a373dfe66bdc4c3b9328516d52e84d12ded5cdc64b6a2158c29a336ea6ab4b82edd32bd3fb232167de80a31773d714b1a3fa06ac56d479dfc550179ccb96a039e4c2204a7134882aea4571d7ed2552e68d5b7274ef1b492d36209152930881bddd0739a64e23475b9a32d191348f8ddcc7335c48b381443319a390b809482f158a231b1506e795fed45f202795ba62bd23d7871a1db5bdc158b4eb920494b230130b57c8488fbd1da06a4beefbb937aad345fde2b6a745bdebc1e183b2fb1c2f7eb5ef11c9a5c48dbc3ec698179d7bcd71cc5722c7179bea1ff8612aa80ac4166b4383f421e268a1f0c4805841a21e6becc29d8a97b7aba4d49b1af068a22579f2b3b5cacbecb5727419c93e5bba7c51fe3d6efcfdbf975999059c706fb48a36e1f7d68391fcd91eeff59981afe914bebf6959a7e78e6f0f03089c76c82ef1db27a3022e2c1dd80bcabafdd821aed6aabf1f1163d30bcfd3450548453d942491d6fd7aae148b410dd3c15f0975da1f212aa5a9cbabfc3e657fa7b5edb6fd6ad5fa77d19dc5fd0275edd4eef684d4704931416f3228665bb58108bf0606d74ccb26adc735cfd73dbb185161a0017e93e3a06de9bd5658a3a8610f1e073057724d1f9f9c6278b23b77244e7cc6aa099caa716af8f9e09e2d279ee2e5960d74113e4530f4914ff3d090c3cd7f14e961232740e18ece84ff0cb8d786fc20624891a7e4dbf578a6c1ae95d23afd065cf0fb877b528bd1e5432e68469fe138f57b6f846da855ce1838968383a0a2c03ed103758e2392de107b7093ebedf3cc96ac566ab581ed3095298a8cc697a319b3df020075b3a1a4015933de7c8430d90b625c4cc6de02c5cea3a9495b7d4b5da895ae0899c3ab9d565c3bff20d6035a01ec6972e918ff20d3f934a29606dd3ffad469f85afb806654eebf07c48e314e21607d4663c13a14c3af7f8e937ae6568cc6214a2ee5441272d3e54a6b77824bd3d966d91d7045983b0ac7f79bc6b183d3b2e43127aef1e71972ca36880a413772e004b92bbd20f26a60c77de4ce4d6b2feca296e15d368f9d693b65b1597c774cbf0899ff8fbd20d8c059cd4d2c267af7b248adaa07e02ee50a0ebe3898a0f4adbe7104520546e5eb472a8ae97dbd5606a9eb9a778e14eb6e8f4a034dac33ae614fd390e32385d918957b16e773cd96e1d8475ad96eea955534ec1fe12820d290457bfb0cce72116f793341a7165db0cff26c72a1047545d7f614d52ed1478082f1fa758eb5f99f81d50ea11ef62b3e7bb110aa2f1c7fdcd402f1703de9c8c94d88ed01a0e79ade6eeca877cf8e797f8c626d5364fab8be1d800a03a306b7ee162cd61ff54e555997c5f64b74082b31dec44c2341f96589470f5b96edb2c08b558b9b47ab3d3d4a6ae3884101a494574f1cacc3e8ac5a39e1826930e22f41fa6dfd09afae79123c181095c3e5455a3bf8b936c2e379d05b7a8f36ae26053bdbe08ec99cbcec20f152ce1eef2bdbf54310a812df967ce23a95ede506a09b687ad3228a85922a28fda50f39ec694600484377c9cd6ad39945a1b7bd5e0570a49451cdba048e6b1a1449dccf59c66157b719639254ed86d6d75e19a6bedf1d8ea481154125dbb6b6114864e89bae9150ca0498d8d17c49047fa4c3290f03f80f8e934617c36d1655f458b2dcda221b9603bb0a783f572b337122a53fb289b5754b193925367757675ccfa12403984e10db41f808750172d10619eee31a5b29a23ae1b6b77c9d03d3daab48dfe9320d563994be83b37c7db68f58ac5ee600da8df80145428d3dffd4757f7e404af7d9106d41f5f36d5678d0bb4eb0833e4740f1749864d8c27fe83e54d5ad4667609a3f6a09a58d8c3ea947cc3b4b67bd326187b2255cf03681e266332ff0368c471609ca4d4e097431166c98192725d9d337063bc0061beb30dd9f5df8cefc25c97f70a4716531757c311d93e8599aab12ed16b028429b70615b32929123393f684a7432480b3b785c0f6cebb17813e35201ba79261086642880708d2c2b10faa97b08002e498774ac6b88cc8b99389ff0811f65e37272d3c0ff2e8eea772af418f0bdd5cea47d5cd0e29771753ec090e7f8c397b59fc5295f0bc2f8aac5649e01506bb839b9885268d73d8771703322a75458811a7b1a9779a0a39aacaf9257289eef258147d78f52e4290fc6896276585f7288265c606d5b05f45642748b3b95f2e5834374880baa1a499eb131584deed91286de64e182dbff7ac5c15b42e820fa4bdeb92f2c016a8ac3c5dd93cf9d6be103ed638497635ad5527aa581ab8f38fb0df2f979d0fd006514a6e50f45c4f447534e270cbf2ccc91244493c759067631de064d42a9051a552e5e030fe0fa277c477565606ed2e0da6c974e034a5e61398f11b04b9c912a86f004ade7c190fb7a79570713e2143a75616e6cc0e24686dd9af64e4e898fef1246d101d9cc0d9907b91e9a975131b7a6c070b9719c60e36f3a4005022952afa96156c447ccab0a4f2b33fe9fc20defe001618e0741a6f48ad82b4f2f16d095456c64451f687f226eb80b0d64ab06906573703d9bb2d5360db5b3820fdb1d3aca554b44db469427bc73a773eaed13fa28602e57822545b568c881e3ccb767b1c6d8647e09d1489769a3dd384b4276ce2fec5ac4d3ba574f617427640882cc39ac697657e82660a7335e3144ca7438f12c1e5e3fea617d33357b5bb8b041f0c43a8475da1292bf2fd6a5c45b32255d8110550e1a0c5b11330c80cb502c34d56b1cbdefd6341d0397aed4a8afd43411f235c2474c14a55d3c5abd8549cfb9bed34e65a0a08ed6bfd71ac33b98754adb72eea2ba9195202179b8091bb3c3cb3a379bfff5dd42589eb7617f92c0b8bebf5403be03b385f24d260aa37e152d1e7ede568e1744e244bb32afe960bd4fc8ace2dd79c8ab938b36c7d8262cbaadfd13f59d10894621987ff03aaa373299ef9b258a55f38e6adb2330e211abd2f52e0d2bb6af3c5e63d3f741af6d0997bae3f9e6360d71df4c27e9eca5f3f29501d884682f164da4a2b58dd25fb80a9e53311cc0a102c4bb13dedfe454b192860adccd3cf4ee1de146c73f2dfe46a3d802782be5698eb9cc605d1115f055091720228bbf32114c46ef9edc5db09440d8a5e6cad1e5d25fa2bab3b947949ee59c965f1717ef9e69348f078982e5c2dfd420ed4bad9a06ae3b965440b83d47bb36618f40a33d8114f471de22b17e4d57623415be99258b958c8b74d6d549cdf69b6fa7ced47468db4581f882f495e228692434d6c6724c411310202a807639e7e34722e4cd0fda6030d1fa9af246859dfad0cfdd022ddb8be08beff954c71944dd906b247032aac39ec674530e0fbc7c85d4a82c6c5ef3239aa24bc25111bc2813b1349bf67ac3fedc69f12b10ed6bfc4ef56a247aeb4f6d5357a8a93085efb5df2fffd2faf2be2f6d16b629bb2f241dc45e2a722ea69831b47ffcaa3d08a3909c2e3ce464b21133fee6891dd4991552cd476ff52fb6e14a2fac22a777e56c2a3c2a11eb32ca67502045acf4ff2bf633c51e4180206a16714063a6a6c7f4124283e2f3bed087078c8910c6a988cdfcaad52c733a755c15df930b908c7f6b12de6bd41ec12d445c7303cb57d1b32413f86f17aecc1fba02660dc91fb73d189233788815ac8504530a9603ebc45a19924a054c4e4f610d57011b049c6e6fcff6f51c688c77b3ca68c63fd6cd8f2da887be5ec806ae2b51f6e7a1e0802f74f2a13f0a90beac516a862fed713920a0cb171c87ac3e8dd4575ba9bee20eb5d1b1ec1cffb67495583d09d61a02b9d4d3b506b1d003d660f06bdca43e4ae1413361a2196fc98c2e365cff05c45ad397892f14a4383520381e7fc2853a20de858977466ae56bd17a6d261bb291f1c90c01a09ec452136ff6c76dc1d9fe272642fea481f0adfafc4bb85eeaa15158b0ffaf0f8956c12f60a2be734c2a7fb0e7a977035a33b6546b380cad7e7df103c0d326c89cbee30b6b592af70f49c919b416fdb7b795b608bfb5b49334edf5249c96c1b641c10040b5cbbc07b088806eaddb7c082c44d779aafac79a7008129382437e18ca731f4abf5c66a6d5b4ecc796ea24f53cdc060df4bfb22ac1933af6ef1d283957dc845cb395823d4bade9e697ba72751b92090964f3764d94bf10e011743e3c1b38dee749ccc8841ce2e1b8b01d6cf86c028c4732e212ef3d677bb84806bdcfae055faa8b39349d10052ddd7b57f01e7b81ee0d81a77853f59f281132de260d99d70d6c65aa126f005b9c4045f611a612f54a4989a87af8316aebcb5b2552b07d1c61d99a18d0d3af5426ff2242caf1db96660c6c92eae9209cee3f8bde5d26b42a168b6258fe1d826229a828b23580e7386a3b9f25cf90807fd6d2805ecf7daa26b24092c5206186c5e0a38e342b423487f35f375005af1635285ddcfcbfafad698183b97c2f3eff59d4999ce3fb3260922a3fc42d9eb29e4a76378b77f36bd1be325f09d74ecd8a4da479189714f37adb415d9bf09f9d1d4016584c475e90927bfeaf4ead7e74b11ad60f0a7c8f326405399da87cf3aa4e75cb4e8f49156f8138437ce2e6a9c425e2e67bde1f2d01c144025b1b3b6ff7d4b6366b2743e6378831d030f3b393837497e6af7dbab032d99dfa3999ebb7ee9bbfccf15ed37f1b07b5eb1d666c07e42e486e2faa929b7108042618d352c5b51807e91cf000ff2bc6f4b61009072e8abd01dc7ec0bd7a459834cd2cefb860c6e52736e74103e96a89c29c21a4264f9da116c286a6e84bef468d922f9598e69b88a3e6f9449f5377a140778b92bf735ea23e4e8e0f99e6c566a62a34f04138910f365d5d1f8fc33371066e12887c60a0b0f8afa70a03b2a907999fc6cf26116993c24a244859b0c0372c5a870edaf94dc52aa1a7715f95fb951b41b519640664c76d4421b4a06624cfcc2e730231727af9738f187fae690bcbc96cc3d64e587c036017b8b519f7a4dc27d90963cef21824b5d3aec5ffba79ff92f79da0e92acd1084bb33ff555cc0c58e39c05c1bda28f32583a31390df83621df7259d0e61765b7a99e4e3d89dcce0603fb9c76ee66998a52b9eae5c00d6b4fb1166c85b7a4f0e803728cef0b64972901e55f34e173b22a971feebd25c0a388f3a2c10d2583c5830a011f131bcb997fcbb8515a431b83b87b565fa12e5c9ccb495477dae0bb61b6611916f69f604fb403ccfe0970fd07d451b8629bd62ccc86c459b0927e000b4a3cca3c2e0b74561f9a91f9281e9e94df4577b951ab739d21768a67fe56b15febf067595cdaa15a7848b730161185a1e566924b6e594c6620db29c3d074aee1cf95516a11b755c5060493a2329fe95ae1e04cd38f5c388bed6ec11c8ab598be65d728bb84fece0d2725950d4bb58bca691d707721df10e732be37a5bccdf7e2d068d293a5c638fd1e772025f585c5fbc467a1063d8d5b8b707ea1c957f36135db883e86b0b89e848e0877c6f1ded870665fb539b06f51edad0c4276c6f86cdd36c72fdfde5b653a4b4d2d9d00ea0ba954a5222933220e15fb56bbc6b7291721e37d8201cb9b90c2f2c4a7603b75d60f8f0e5d7b2fad5d297ff4234509a9b032a984a0dc5638660e11dffd1b28873f3f501e7770ba1f98e896d01d0ecd3268c1c2a87dc86c7492b946861a6f2688f5f19799062d7cbba64be7acb8238d9840843346cf189b7cf3ab1efe7dcdbf06bf83727a4529965d9cbc0af8afbdbfb0c30488a9e8797f29b04ba9e186dbf23e09093c98588cf6620815547916ca3cfba65b92fa0930129e367903a5f794a32d042d0cabf819ec8ab5a221a81a1dba133169ff8c391a56a37835c98b76e6596ec5ccdf8e2b3def1e5e7720feead584d3fc3547f1c713bd76d3d3f377de3bb3248eab26af977561fad366913b680cc37f3985adb7eb8fa0db1354d7f4e5d1a5d2de9d908d9133c6082e6bcdf2868ef8cf935f28ff6df8f22165b7df1100ceead9db0812d3e550ca291be9fed072d87d72a691f57e7abf70d993486c930654a02e7d9cd7e6a4366ee11772b6ca41a211613b742b0f43a3eeacad5c206d44ba8c5aac141c9836f18b039d63f854cf31bb131d3530492513f89f5fa77e032fdf4a5da8d343dfe68949f10f2f000c41d64b915774361c71c918293bd10cf8e0cfa18f26da429237e730dcb7899e69aafa40d6bdfa3342207ef17e212fded2ae41e30279624160cf87c022b1e6d65d2fe78706b1469dbf84b93b6c4d54b71de06db1be2031d8d24b6454edfb5b29f71f1b423f8d161af894a857a4fda378941b4321e164ccb4e612f25440da82a5e45ab82fed71190c5dd9080c9342c49c36aeda850525cba8d6ea882f251d63daccb77727a62b53b7f0c06c8cad95b459c23542552f0b7d3bb884aabe3fdb91522b92926e97125a9d8891e498c72b3e430cc271176d41d2bc362ae57687572885126f3e9e3464e9a2b091c85e5d4e90110a4f01d9579fd890b2e14277af440e415ee058704202cc52173e485430ad81a59baaf698aefd42e20b74bcc211364e73914addb18123f741e3a8b5dd25a4f5494ff32fca167c18780dee5f7b844f1c1848bc8ba3cb5f0cb460be9d303f8d00e1ecd8e9c3bd8c3ee59ae116a874fa3ed3f2f1b73a4a061ae192c3765a09e0f32de314192f8863aaf8385668e9ef7d7557c60e961c9ba71f30b139cd8ddb0ba9a390e6d57d1fa3fca26bfa891b5db38776b0ff6ee6079c308a95c5dc6257945cf3655b0acc7d4eb43dac7a96c31c02a5379844eee0b1a35a5b95e2b7a2c73f10a3da39f3ab3569a2c534eebc8904f19fb4ebb37ccda6f4e2c5eba2ccc0f34f3002bf072e41bd0d248ce8f56b8736f66360aecb460ab9a745ec58754b87f8c6b4deb19e2762c5ae053293cf02214339a5f1104ea397a91d006dcd9f9826fbb8921d9d5ddb93f7b371ac797e109186c0ce30a2e90a8b93f079d0ce062c3070f22fadf4353ec83f68f97c27dcfcbca2dfc35395d1a9cbee9015fbc9472b67bf03b1a36ae1c022dfede2a0d0603627626da6d5e7782d08ef5ab0770f3a6ba22993ca0f2abb4c0b2b5e96f3e3a105d9f3324464996","link":"/other/job.html"},{"title":"hexo","text":"hexo 安装、使用安装见 https://wuzequn.com/2018/04/27/blog-build-and-ipv6-tools http://www.dragonbaby308.com/hexo 初始化项目hexo init blog 配置修改 bog 项目下的_config.yml 文件，D:\\01 Code\\hexo_config.ymllanguage: zh-Hans 使用创建新文章hexo new new-article 重新发布hexo clean;hexo g;hexo s hexo clean hexo generate 或 hexo g hexo server 或 hexo s 部署到 github 服务器部署 （一） 本地 + github.io 白嫖部署 生成 github.io 仓库首先注册并登录 GitHub，创建新 public 仓库，仓库名称一定要是：YourGitHubName.github.io（YourGitHubName 是你的 GitHub 昵称，大小写敏感！） 本地安装 Hexo 的 git 部署插件在 Hexo 的目录下，输入 npm install –save hexo-deployer-git，会报一个 peerDependencies WARNING，可以忽略。 本地修改_config.yaml 文件在 Hexo 目录下，找到_config.yaml 文件，在#Deployment 做如下修改： Markdown # Deployment ## Docs: https://hexo.io/docs/deployment.html deploy: type: git repo: https://github.com/DragonBaby308/DragonBaby308.github.io.git #你的 github.io 的网址 branch: master #“type:”、“repo:”和“branch:”后都要带一个空格 部署hexo d部署成功后，浏览器输入 YourGitHubName.github.io 即可访问，其中 YourGitHubName 是你的 GitHub 昵称，且大小写敏感见 详见 http://www.dragonbaby308.com/hexo/ 发布hexo clean;hexo g;hexo d 输入 github 账号名，密码 hexo d 即 hexo deploy 其他配置Hexo+Next 个人博客主题优化 - 简书https://www.jianshu.com/p/efbeddc5eb19 主要配置了： Hexo 之 next 主题设置首页不显示全文(只显示预览) - 简书https://www.jianshu.com/p/393d067dba8d Hexo+Next个人博客主题优化 - 简书https://www.jianshu.com/p/efbeddc5eb19 Dragonstyle’s Home – 记录、分享、交流http://www.dragonstyle.win/ 修改文章宽度https://ihaoming.top/archives/9a935f57.html deploy 免账号密码 可将_config.yml 中的 repo 修改为如下标准格式：repo: https://用户名:密码@github.com/用户名/用户名.github.io.git这样做的好处就是每次 hexo deploy 提交时不需要输入账号密码。 hexo的首页只显示文章的部分内容让hexo的首页只显示文章的部分内容而不是全部 | 朱启的个人博客 1234567891011第二种方法在你写 md 文章的时候，可以在内容中加上 &lt;!--more--&gt;，这样首页和列表页展示的文章内容就是 &lt;!--more--&gt; 之前的文字，而之后的就不会显示了。效果上面两种方式展示出来的效果是不一样的。第一种修改 _config.yml 文件的效果是会格式化你文章的样式，直接把文字挤在一起显示，最后会有 …。而第二种加上 &lt;!--more--&gt;展示出来的就是你原本文章的样式，最后不会有… 换电脑见 https://feijunjie.github.io/2018/10/10/20181010-%E5%A6%82%E4%BD%95%E5%9C%A8%E5%8F%A6%E4%B8%80%E5%8F%B0%E7%94%B5%E8%84%91%E4%B8%8A%E7%BB%A7%E7%BB%ADhexo%E5%86%99%E5%8D%9A%E5%AE%A2/ 注意事项在标题开头使用如下形式[精]精华文章会报错 在代码块中使用了双花括号，，使用这个会让markdown文件出错，在花括号中间随便写了一个单词就解决了 问题search一直加载解决办法： 查看search.xml的请求 打开新窗口，直接访问xml网址，查看哪一行解析失败，回到请求页面，查看是哪个文件 去vim查看异常字符 热度统计没生效Next 解决 Busuanzi 统计浏览失效 | G加菲 文章置顶Hexo文章置顶的方法 - 简书 侧边栏添加自定义文件夹【Hexo + Next】侧边栏添加自定义文件夹（如友链）_Spr Chan的博客-CSDN博客 Archive页面显示文章数量npm install hexo-generator-archive –save _config.yml中新增相关配置archive_generator: per_page: 40 #值为0表示不分页，按需填写 yearly: true #是否按年生成归档 monthly: true #按月归档index_generator: per_page: 40 #值为0表示不分页，按需填写 yearly: true #是否按年生成归档 monthly: true #按月归档 tag_generator: per_page: 40 #值为0表示不分页，按需填写 yearly: true #是否按年生成归档 monthly: true #按月归档 category_generator: per_page: 40 #值为0表示不分页，按需填写 yearly: true #是否按年生成归档 monthly: true #按月归档 EIO: i/o error➜ hexo hexo dINFO Deploying: gitINFO Clearing .deploy_git folder…FATAL Something’s wrong. Maybe you can find the solution here: https://hexo.io/docs/troubleshooting.htmlError: EIO: i/o error, stat ‘/Volumes/Data/01 Code/hexo/.deploy_git/2019’➜ hexo open .在finder中，删除文件夹再hexo deploy hexo文章模板设置 | 拈花把酒偏折煞世人情狂 Hexo设置网站的图标Favicon | G加菲在线免费将图片转换成ico图标格式-转换成ico hexo中文版 ![fWXaVcbtCg8kMNo](https://i.loli.net/2020/01/14/fWXaVcbtCg8kMNo.png) jaredly/hexo-admin: An Admin Interface for Hexo 图片和描述123photos:- http://bruce.u.qiniudn.com/2013/11/27/reading/photos-0.jpgdescription: 03 junit 多环境撰文hexo与github pages共同搭建博客有一个麻烦的地方就在于多环境下要同步本地的博客内容很麻烦，唯一的方法就是你用要么一个硬盘云盘之类的要么就是用github之类的，每次有更新你就同时把本地的博客文件都同步上去，毫无疑问这非常麻烦。之前想要自己写一个自动化工具来做这个事情，这几天发现有人已经写好了，可以直接用，这里直接贴出链接，里面也有详细的说明，按照步骤来做就好了。hexo-git-backup SEO当我们搭建一个网站之后，如果没有做一些相关的搜索引擎优化SEO，那么我们的网站是很难获取来自搜索引擎的流量的，用户很难在搜索引擎上搜索到我们网站的内容，所以在这里我们要为Hexo网站做一些简单的搜索优化。上周刚搭建好博客的时候只有谷歌能搜索到自己的博客，百度直接搜域名都没有任何信息，主要原因是因为Github Pages屏蔽了百度爬虫，百度根据没办法知道我们博客的内容，所以我将博客同步到两个平台上，一个Github，一个国内的Gitcafe，目前搜索自己博客的相关信息基本都在第一条。 SiteMap首先安装hexo的sitemap网站地图生成插件： 12npm install hexo-generator-sitemap --savenpm install hexo-generator-baidu-sitemap --save 在你的hexo站点的_config.yml添加下面的代码： 12345# hexo sitemap网站地图sitemap:path: sitemap.xmlbaidusitemap:path: baidusitemap.xml 配置成功后，hexo编译时会在hexo站点根目录生成sitemap.xml和baidusitemap.xml其中sitemap.xml适合提交给谷歌搜素引擎，baidusitemap.xml适合提交百度搜索引擎。 蜘蛛协议robots.txt在source目录下创建robots.txt文件，添加下面的一段代码： 12Sitemap: http://www.linbinghe.com/sitemap.xmlSitemap: http://www.linbinghe.com/baidusitemap.xml 请自行改成自己的网站。 完整robots.txt文件内容： 1234567891011121314# hexo robots.txtUser-agent: *Allow: /Allow: /archives/Disallow: /vendors/Disallow: /js/Disallow: /css/Disallow: /fonts/Disallow: /vendors/Disallow: /fancybox/Sitemap: http://www.arao.me/sitemap.xmlSitemap: http://www.arao.me/baidusitemap.xml 谷歌Search Console与百度站长工具这两个平台都是便于管理自己的网站，查看爬虫爬去频率等等，这两个的使用都不难，但是两者都需要通过验证，只要搜索这两个平台，到各自官网添加域名，按照文档说明通过验证即可。谷歌可以通过提交站点地图提交我们的sitemap.xml，百度目前已经禁止了。 主动推送新链接解决百度爬虫被禁止访问的问题，提升网站收录质量和速度。 1npm install hexo-baidu-url-submit --save 在 站点配置文件 中添加如下代码： 12345baidu_url_submit: count: 5 ## 比如3，代表提交最新的三个链接 host: blog.tangxiaozhu.com ## 在百度站长平台中注册的域名 token: ## 请注意这是您的秘钥， 请不要发布在公众仓库里! path: baidu_urls.txt ## 文本文档的地址， 新链接会保存在此文本文档里 为了主动推送链接，你还得在全局配置文件的deploy中添加配置： 12deploy:- type: baidu_url_submitter Hexo: 给博客添加百度统计当Hexo博客被百度、必应、谷歌搜索引擎收录以后，有件重要的工作是统计博客的访问情况，比如博客的历史访问量、搜索关键字、访问来源、访问地域等统计数据。 百度统计 能方便的完成网站访问量分析统计，本文简单演示下Hexo+Next博客配置百度统计功能。 开通百度统计帐号 在 百度统计 注册帐号。 帐号注册成功后，在网站列表中添加目标网站。 获取跟踪代码 网站添加之后在代码管理模块选择代码获取，可以看到如下代码: 123456789&lt;script&gt;var _hmt = _hmt || [];(function() { var hm = document.createElement(&quot;script&quot;); hm.src = &quot;https://hm.baidu.com/hm.js?____________________&quot;; var s = document.getElementsByTagName(&quot;script&quot;)[0]; s.parentNode.insertBefore(hm, s);})();&lt;/script&gt; 这段代码需要用户添加到网站全部页面的 `` 标签前，Next主题已对百度统计进行配置优化，只需要配置主题配置文件即可，下面会详细介绍。 其中 hm.js? 后面的字符串为用户的 key 值，将 key 值记录下来，后面会用到。 配置主题配置文件 配置主题配置文件 /d/hexo/themes/next/_config.yml ，配置 baidu_analytics 参数，如下: 12# Baidu Analytics IDbaidu_analytics: 上面步骤中记录的百度统计里用户的key值。 修改完参数后执行 hexo g 和 hexo d 命令部署博客。 验证百度统计 之后仍然在代码管理模块的代码获取页面进行验证，如下图: 上图表示验证通过。 一般过20分钟左右就可以看到网站分析数据，过了几小时后，已经看到博客的访问统计分析数据，如下图: 网站列表 - 网站中心网站概况 - 百度统计 评论Hexo使用gitalk作为评论插件 | VoidKing Hexo使用livere作为评论插件 | VoidKing gittalk 好看，livere 加载快 (…) Gitalk评论插件使用教程 - 个人文章 - SegmentFault 思否 邮件订阅Publicize :: Email SubscriptionsHow To Set Up RSS Feed For WordPress Using Feedburner ico图标制作,在线Favicon.ico制作转换工具,实时预览ico生成效果,ico图标下载 将Hexo博客部署到云主机","link":"/other/hexo.html"},{"title":"markdown语法及编辑器","text":"编辑器 小书匠 优点：功能齐全，全平台支持,有html转markdown功能[鸡肋] 缺点：界面不好看，不能直接打开文件修改 其他软件： Markdown 编辑器推荐 | Markdown 简单的世界 markdown语法学习Markdown 简单的世界 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364Markdown 基本语法 | Markdown 简单的世界- 用反引号` 来标记内联代码，它们会解释成&lt;code&gt;标签- 链接[an example](http://example.com/)[an example](http://example.com/ &quot;Optional Title&quot;)- 图像![Alt text](/path/to/img.jpg)![Alt text](/path/to/img.jpg &quot;Optional Title&quot;)- 自动链接如果链接的地址和名字重复，可以用尖括号语法将其简化。+&lt;http://example.com/&gt;就相当于[http://example.com/](http://example.com/)- 代码区域有两种方式标记代码区域，原生风格是行首缩进死个空格。- 链接要么加上尖括号，要么两端加上空格。- 还有一种是github的风格，代码段的前后用三个反引号独占一行来标记- 可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：+* * *********- - ----------------------------------------- 新建、删除或修改文章后，不需要重启hexo server，刷新一下即可预览- 一行文字就是一个段落- 如果你需要另起一段，请在两个段落之间隔一个空行- 不隔一个空行的换行行为，在一些编辑器中被解释为换行，即插入一个&lt;br /&gt;标签。对与另外一些编辑器，会被解释为插入一个空格。对于后者，若要插入换行标签，请在当前一行的结尾打两个空格- 可以使用星号*或下划线_指定粗体或者斜体- *这是斜体*_这也是斜体_**这是粗体*****这是粗体+斜体***- 一部分编辑器支持删除线，它不是经典markdown中的要素。用波浪线~定义删除线- 通过在行首加上大于号&gt;来添加引用格式- 引用可以嵌套：+&gt; This is the first level of quoting.&gt;&gt; &gt; This is nested blockquote.&gt;&gt; Back to the first level.- 无序列表使用星号、加号或是减号作为列表标记- 有序列表则使用数字接着一个英文句点· Highlighted Source : http://lnr.li/Q3Y2A/· Original Source : https://wizardforcel.gitbooks.io/markdown-simple-world/content/2.html","link":"/other/markdown%E8%AF%AD%E6%B3%95%E5%8F%8A%E7%BC%96%E8%BE%91%E5%99%A8.html"},{"title":"rss","text":"[toc] 工具rss 验证Feed Validator 网页版The Old Reader Home Page - AZ Reader MacReeder Android(未测试) News+：可高度自定义的全能阅读器 FeedMe：功能丰富还免费 Readably：简洁又好用的轻量级阅读器 SwipeNews：高颜值 RSS 工具 Read：手动订阅者的最佳选择 Palabre：支持插件扩展的阅读器 Newsfold：体验沉浸式阅读 Windows RSS 追踪 Chrome 插件 查看当前网站可用 RSSRSSHub Radar - Chrome 网上应用店 生成 RSSFeeds | FeedOcean 限量 20 个，操作简单 Full RSS - Full text rss feed generator 100% success &amp; freeFeed43 : Zronghui’s feeds 无限数量，较复杂 相关教程介绍 | RSSHub 打造属于自己的RSS源 - 萤火之森 RSS定制个人高质量信息流 - 简书 生成和订阅任意网站RSS工具-实现RSS全文,邮箱和手机APP提醒 RSS 工具大全 – 幻璧 查看浏览器中网页编码的通用方法找到Console标签，输入命令document.charset 需要订阅的网站编程科技爱好者周刊 · 语雀 – https://rsshub.app/yuque/doc/102804 guanguans/favorite-link: ❤️ 每日收集喜欢的开源项目 | RSS 订阅 | 快知 app 订阅 – https://rsshub.app/github/file/guanguans/favorite-link/master/README.md 521xueweihan/HelloGitHub: Find pearls on open-source seashore 分享 GitHub 上有趣、入门级的开源项目 – https://rsshub.app/github/file/521xueweihan/HelloGitHub/master/README.md Weekly Review | Baeldung – https://www.baeldung.com/feed 最近7天热门分享 - 开发者头条 – https://feed43.com/8633017563184185.xml 软件Recently Added - MacMenuBar.com – https://macmenubar.com/feed/ 帖子回复排行 - 排行榜 - 吾爱破解 - LCG - LSG |安卓破解|病毒分析|破解软件|www.52pojie.cn – https://feed43.com/3380182813145783.xml 原创工具 - 『原创发布区』 – https://www.52pojie.cn/forum.php?mod=rss&amp;fid=2 果核剥壳 - 还原软件的本质 – https://feed43.com/4874650357564440.xml 分享者 - 优质破解软件、互联网资源分享 – https://feed43.com/4223122352386404.xml 小众软件 - 分享免费、小巧、实用、有趣、绿色的软件 – http://feeds.appinn.com/appinns/ 【最美应用】 - Android 一起发现好用、好看、好玩的应用 – https://feed43.com/3860164582806815.xml 异次元软件世界 - 软件改变生活！ – https://feed.iplaysoft.com 反斗软件 – https://feed43.com/6686431683726277.xml 精品绿色便携软件 – https://feed43.com/7557338185735120.xml 芊芊精典 | 优质互联网资源分享与交流！ – https://feed43.com/3512786450224168.xml 不死鸟 - 分享为王 – https://feed43.com/8584272185423565.xml 盒子部落 - 互联网资源分享平台 – https://feed43.com/8107787027631862.xml 安卓应用 - 大眼仔旭 – https://feed43.com/1652573841537568.xml 异星软件空间 | 感受不一样的精彩体验！ – https://feed43.com/0450245615005046.xml 编码看似有问题，实际没问题 编者序 · Chrome插件英雄榜 – https://feed43.com/0273635824543181.xml 精品MAC应用分享 – https://feed43.com/8857213541600761.xml 一梦全网线报软件发布群 – 网址发送 post 请求 其他介绍 | RSSHub – https://rsshub.app/rsshub/rss 少数派 - 高效工作，品质生活 – https://sspai.com/feed 无作为|分享不仅仅是一种态度！ – https://feed43.com/7114536122142655.xml 電腦王阿達 – https://www.kocpc.com.tw/feed 电脑玩物 – 楚盟网 – 记录学习分享的个人网站 – Trending Python repositories on GitHub today – 最终效果","link":"/other/rss.html"},{"title":"you_get 自定义","text":"you get简介you-get 用来下载哔哩哔哩多p视频缺点: 不能指定开始p 下载的视频没有放在子目录里面 不支持失败重试 有时候，一集下完了还在疯狂下载，下十几个G都不停的 针对前2个缺点，做出自定义 项目地址：soimort/you-get: Dumb downloader that scrapes the web 操作过程记录git clone12git clone https://github.com/soimort/you-get.gitcd you-get 修改代码common.py添加start参数 12345678910111213141516171819# script_main 方法中， parser = 下一句parser.add_argument( '--start', help='start from index [start]' )# 修改 download_mainif args.start: start = args.startelse: start = 1ic(start)download_main( download, download_playlist, URLs, args.playlist, output_dir=args.output_dir, merge=not args.no_merge, info_only=info_only, json_output=json_output, caption=caption, password=args.password, start=start, **extra) extractors/bilibili.pydownload_playlist_by_url 中 123# 添加ic(kwargs['start'])start = int(kwargs['start']) 12345678if sort == 'video': initial_state_text = match1(html_content, r'__INITIAL_STATE__=(.*?);\\(function\\(\\)') # FIXME initial_state = json.loads(initial_state_text) # 添加下面几行 title = initial_state['videoData']['title'] kwargs['output_dir'] = os.path.join(kwargs['output_dir'], title) if os.path.exists(kwargs['output_dir']): os.system(f\"mkdir -p '{kwargs['output_dir']}'\") elif sort == ‘bangumi’: 上面 12345678for pi in range(pn): if pi + 1 &lt; start: continue self.prepare_by_cid(aid, initial_state['videoData']['pages'][pi]['cid'], 'P%s. %s' % ( pi + 1, initial_state['videoData']['pages'][pi]['part']), html_content, playinfo, playinfo_, url) self.extract(**kwargs) self.download(**kwargs) 再次修改修改内容：1. common.py123456# if args.skip_existing_file_size_check:# skip_existing_file_size_check = Trueskip_existing_file_size_check = Trueif args.output_dir == '.': args.output_dir = '/Volumes/My Passport/data/ut下载/0 未分类/ytdl videos/bilibili'ic(args.output_dir) 12345678910download_main( download, download_playlist, URLs, True, # URLs, args.playlist, output_dir=args.output_dir, merge=not args.no_merge, info_only=info_only, json_output=json_output, caption=caption, password=args.password, start=start, **extra) 2. extractors/bilibili.py123456789101112title = initial_state['videoData']['title']kwargs['output_dir'] = os.path.join(kwargs['output_dir'], title)if not os.path.exists(kwargs['output_dir']): os.system(f\"mkdir -p '{kwargs['output_dir']}'\")try: videos = sorted(os.listdir(kwargs['output_dir']), key=lambda i: int(i.split('.')[0][1:])) if videos[-1].endswith('download'): os.system(f\"rm '{os.path.join(kwargs['output_dir'], videos[-1])}'\") start = int(videos[-1].split('.')[0][1:])except: start = 1ic(start) pip install .1pip install . 使用shell然后就可以用 –start 参数例如： 1you-get --playlist --skip-existing-file-size-check --start 27 -d -o '/Volumes/My Passport/data/ut下载/0 未分类/ytdl videos/bilibili/test' https://www.bilibili.com/video/av81274709 python123456import sysfrom you_get import common as you_getdirectory = r'/Volumes/My Passport/data/ut下载/0 未分类/ytdl videos/bilibili/test'url = r'https://www.bilibili.com/video/av81274709'sys.argv = ['you-get', '-d', '-o', directory, '--playlist', '--start', '27', url]you_get.main()","link":"/other/you-get-%E8%87%AA%E5%AE%9A%E4%B9%89.html"},{"title":"图床","text":"zronghui’s uploaded images - ImgurAdd Client - Imgur API Access - SM.MS | DashboardSM.MS v2 API Docs 使用软件：upic使用图床：imgur","link":"/other/%E5%9B%BE%E5%BA%8A.html"},{"title":"快捷键","text":"pycharmshift+opt 鼠标拖动：可以竖着选取文字 mweb 快捷键command d: 任务列表 （改，同有道云笔记）ctrl option d: 代码块 （改，同有道云笔记）ctrl 1: 1级标题 （有道云笔记是command 1） vimshift + [ / ] 上下区块跳转 itermcommand + d 窗口分成左右 command shift + d 窗口分成上下","link":"/other/%E5%BF%AB%E6%8D%B7%E9%94%AE.html"},{"title":"斐讯K2路由","text":"[TOC] 刷华硕固件 手机上连接无线网，查看无线网详情，可以看到路由器配置地址 手动更新 刷V22.6.526.199官方固件 刷入Breed 刷入第三方固件 斐讯K2 V22.6.526.199官方固件-刷机备用下载-斐讯固件-U盘量产网 斐讯K1、K2、K2P 刷机、刷入Breed 辅助工具 | tb moonjoin/k2-firmware: 斐讯K2刷机，固件，breed 桥接设置 shadowsocksr 设置","link":"/other/%E6%96%90%E8%AE%AFK2%E8%B7%AF%E7%94%B1%E5%88%B7%E6%9C%BA.html"},{"title":"爬取 SP 图片","text":"[TOC] 爬取网站下的所有卡片 https://southparkphonedestroyer.fandom.com/wiki/Characters 用 siteSucker 爬取网页内容命令行123grep -o --nocolor --nofilename --nonumbers \"https://vignette.wikia.nocookie.net/southparkphonedestroyer/images.*png\" | sort | uniq | grep -v '\"' | grep -v ' ' | pbcopycd 图片保存目录pbpaste | xargs wget 解释Grep 是 ag 的alias wget 是 axel 的 alias ag 默认支持正则，注意需要用引号包裹 12-o --only-matching Prints only the matching part of the lines--[no]numbers grep -v 反选 感想命令行还挺好用的，熟悉的话比 Python 脚本高效","link":"/other/%E7%88%AC%E5%8F%96-SP-%E5%9B%BE%E7%89%87.html"},{"title":"thoughts","text":"嗨，请准确无误地输入密码查看哟！ d4ddde657b62ae9d724a3e00dfabc05a45fdaf36a8bc4373ea59463028fb879d7feb8b7a65d7d5ead04ef94e89f63e42406e79a4cfc2b0e9f3ed2eb2c4b78519ae43f6ea133ab0dd7c1c2986347ad1a45f219cd4106da9a2efa9a716fcb9e34e0637ed3d1e0a869d88aa11c66aad810b9e84d432362e998598d66230694e9e4bdb50ca4213b03a21115488f8641ecfa1","link":"/private/thoughts.html"},{"title":"加密文章测试","text":"嗨，请准确无误地输入密码查看哟（密码：123456）！ 42401e656a30ed09e8e3b0fbe2fbd18ae1b8c2138de0b629bd1233cbc0cc80918b020088b54c79621b8ef9a9af7b0f06b4f358e8c86ef99d097fb161589581b453752da7da2e21aa4d35b94c835c62d1204ab327d5d9241d6be3c6b4b1e68d3697229826ffa52b53920e92cbe496af209269f803aa7450ba136338b0e891ba54f6fe48d0d23c1ba5b981305fdee3badd054b7ad20712af650adf010b25c3fa117b769979c2ef7a2ccccee14b24ed84530b911e7b68c43d9f4592ba8687b2c7fb","link":"/private/%E5%8A%A0%E5%AF%86%E6%96%87%E7%AB%A0%E6%B5%8B%E8%AF%95.html"},{"title":"烦人的网页编码问题","text":"[TOC] 请求网址乱码： 一开始以为是压缩问题： content-encoding 和 accept-encoding response headers中的content-encoding request headers 中的accept-encoding content-encoding是指网页使用了哪种压缩方式传输数据给你，accept-encoding表示你发送请求时告诉服务器，我可以解压这些格式的数据。 二者的关系是，对方网页会根据你发送的accept-encoding来决定用什么格式(content-encoding)传给你。 Python 中，若不添加 accept-encoding, requests 默认添加 r.request.headers[‘Accept-Encoding’] 为 ‘gzip, deflate’ 若 ‘Accept-Encoding’: ‘’，则 response 应该没有压缩 1234567891011headers = { 'Accept-Encoding': '', 'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36'}r = requests.get('https://zhuanlan.zhihu.com/python-programming', headers = headers)&gt;&gt;&gt; r.headers['Content-Encoding']Traceback (most recent call last): File \"&lt;stdin&gt;\", line 1, in &lt;module&gt; File \"C:\\Program Files\\Anaconda3\\lib\\site-packages\\requests\\structures.py\", line 54, in __getitem__ return self._store[key.lower()][1]KeyError: 'content-encoding' 获取网页正确编码requests会从服务器返回的响应头的 Content-Type 去获取字符集编码，如果content-type有charset字段那么requests才能正确识别编码，否则就使用默认的 ISO-8859-1 所以 requests 的 response.text 有可能是乱码的 12345ic(doc.headers, chardet.detect(doc.content), doc.apparent_encoding, doc.encoding)# ic| doc.headers: {'Content-Type': 'text/html', 'Last-Modified': 'Sun, 01 Mar 2020 00:49:50 GMT', 'Vary': 'Accept-Encoding', 'ETag': 'W/\"5e5b06ae-1da6a\"', 'Expires': 'Sun, 01 Mar 2020 02:44:33 GMT', 'Cache-Control': 'max-age=300', 'P3P': 'CP=CAO PSA OUR', 'Content-Encoding': 'gzip', 'Content-Length': '25940', 'Accept-Ranges': 'bytes', 'Date': 'Sun, 01 Mar 2020 02:44:01 GMT', 'Age': '267', 'Connection': 'keep-alive', 'X-Hits': '4'}# chardet.detect(doc.content): {'confidence': 0.99, 'encoding': 'GB2312', 'language': 'Chinese'}# doc.apparent_encoding: 'GB2312'# doc.encoding: 'ISO-8859-1' 查看网页正确编码的方法response.apparent_encoding 或者 chardet.detect(response.content) requests的返回结果对象里有个apparent_encoding函数, apparent_encoding通过调用chardet.detect()来识别文本编码. 但是需要注意的是，这有些消耗计算资源. 正确的编码还可能存在于 meta 中 1&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=gbk\" /&gt; python requests的utils.py里已经有个完善的从html中获取meta charset的函数. 说白了还是一对的正则表达式. 12In [32]: requests.utils.get_encodings_from_content(r.content)Out[32]: ['gbk'] 总之，网页乱码的情况下，可以用 response.apparent_encoding 获取正确编码xx，再用 response.encoding = ‘xx’ , 然后就能调用 response.text 参考文章Headers设置之Accept-Encoding - 知乎代码分析Python requests库中文编码问题 – 峰云就她了","link":"/python/01-%E7%83%A6%E4%BA%BA%E7%9A%84%E7%BD%91%E9%A1%B5%E7%BC%96%E7%A0%81%E9%97%AE%E9%A2%98.html"},{"title":"10 python tips","text":"","link":"/python/10-python-tips.html"},{"title":"python weekly","text":"[toc] joblib/joblib: Computing with Python functions. Joblib: running Python functions as pipeline jobs — joblib 0.14.1.dev0 documentation mstamy2/PyPDF2: A utility to read and write PDFs with PythonPyPDF2 Documentation — PyPDF2 1.26.0 documentation mkepub库用Python和GooPyCharts创建图表彩色化终端文本: 让Python变得更便捷 Better Python tracebacks with Rich 类似于 pretty_errors JustPy 仅用 Python 写网页 vardbgA simple Python debugger and profiler that generates animated visualizations of program flow, useful for algorithm learning. 查看代码执行过程 类似于 http://pythontutor.com/visualize.html#mode=edit georgek42/inlinec: Effortlessly write inline C functions in Pythonmaxhumber/gif: ✨ Better animated Matplotlib gifs syncPlaylist在网易云音乐与 QQ 音乐之间同步歌单。易于使用、配置方便、代码简单，用到的技术：requests + beautifulsoup 以及 selenium + phantomjs GetSubtitles通过拖曳视频文件进终端，一步下载字幕 到视频对应文件夹，并重命名字幕名称为视频名称。Ubuntu 16.04、Windows 10上测试通过，同时兼容 Python2、3。Python 的魅力之一就是可以快速实现一个适合自己的小工具 Cool ✌️ pdir2Python 程序员需要一个更好的 dir() —— 以更加友好的显示 dir() 输出的结果 myclimycli 是一个带语法高亮、自动补全的 MySQL 命令行客户端工具。例如，连接数据库方法：mycli -h localhost -u 用户名 数据库 locust模拟用户行为的负载测试工具，包含友好的 Web 页面，如下图： flask-limiter一个 Flask 的扩展库，它可以根据访问者的 IP 限制其访问频率、次数等。 httpstathttpstat 美化了 curl 的结果，使得结果更加可读。同时它无依赖、兼容 Python3、一共才 300 多行。还可以显示 HTTP 请求的每个过程中消耗的时间，如下图： yakutils — yakutils 1.6.0 documentation read_csv¶ read_json¶ json_defaults¶ ? date_to_iso8601¶ datetime_to_iso8601¶ datetime_to_unixtimestamp¶ iso8601_to_datetime¶ md5¶ sha1¶ sha384¶ sha3_384¶ setup_logging¶ random_string¶ random_tolerance¶ update_qs¶ szsdk/quick: A real QUICK Qt5 based gUI generator for ClicK willmcgugan/rich: Rich is a Python library for rich text and beautiful formatting in the terminal. Rich print function Console Printing Console Logging Markdown Syntax Highlighting Tables Welcome to Rich’s documentation! — Rich 0.3.2 documentation scylla：一款高质量的免费代理 IP 池工具，仅支持 Python 3.6。中文文档，特性如下： 自动化的代理 IP 爬取与验证 易用的 JSON API 简单但美观的 web 用户界面，基于 TypeScript 和 React（例如，代理的地理分布） 最少仅用一行代码即可与 Scrapy 和 requests 进行集成 jiaaro/pydub: Manipulate audio with a simple and easy high level interfaceloguru：一个让 Python 记录日志变得简单的库 mahmoud/awesome-python-applications: 💿 Free software that works great, and also happens to be open-source Python. awslogs：一个简单的命令行工具，用于在本地查询 Amazon CloudWatch 日志，强大的支持多实例日志汇总查看。简单的查看命令：awslogs get /var/logs/syslog ALL -s1d 14、termtosvg：Python 写的终端记录器。通过命令 termtosvg 运行该工具，然后在终端执行你要展示的命令，最终输入 exit 命令结束录制，本地会生成一份 SVG 动画，可用于分享、展示终端操作。效果如下： 15、cx-extractor-python：这是一个对网页正文进行抽取的工具。 cx-extractor 算法的 python 版本，改进了原有算法，使其支持中英文，对新闻类网页正文抽取效果较好。示例代码： 123456from crawler.cx_extractor_Python import cx_extractor_Pythoncx = cx_extractor_Python()test_html = cx.getHtml('http://news.163.com/16/0101/10/BC84MRHS00014AED.html')content = cx.filter_tags(test_html)s = cx.getText(content)print(s) 2020年1月25日bullet：一个支持终端输入和菜单选择的 Python 库。可以让使用者在终端上用方向键移动、单选、复选、密码输入等，而且支持定制化格式和颜色。看下面的效果图你就知道它是干什么 TagUI-Python：一个 Python 自动化操作的库。比如：自动打开网页并截图，示例代码： 12345t.init()t.url('https://www.google.com')t.type('q', 'decentralization[enter]')t.snap('page', 'results.png')t.close() 2020年1月20日(星期一)guanguans/favorite-link: ❤️ 每日收集喜欢的开源项目 | RSS 订阅 | 快知 app 订阅 scrapydweb Python 爬虫框架 Scrapyd 集群管理的全功能 web UI，支持 Scrapy 日志分析和可视化、自动打包、定时器任务和邮件通知等特色功能。 Python爬虫代理IP池(proxy pool) jhao104/proxy_pool: Python爬虫代理IP池(proxy pool)facert/awesome-spider: 爬虫集合 hustcc/JS-Sorting-Algorithm: 一本关于排序算法的 GitBook 在线书籍 《十大经典排序算法》，多语言实现。 injetlee/Python: Python脚本。模拟登录知乎， 爬虫，操作excel，微信公众号，远程开机 Kr1s77/awesome-python-login-model: 😮python模拟登陆一些大型网站，还有一些简单的爬虫 0xHJK/Proxies: 100行Python代码快速获得一个代理池，两分钟获得数千个有效代理 kenwoodjw/python_interview_question: 关于python的面试题 Python/Golang Web 入坑指南 — python-web-guide 0.1 文档 Python教程 mahmoud/awesome-python-applications: 💿 Free software that works great, and also happens to be open-source Python. 2020 年 1 月 17 日(星期五)emeryberger/scalene: a high-performance, high-precision CPU and memory profiler for Python安装pip install scalene 使用默认只测 CPU timepython -m scalene test/testme.py 优点line_profiler 将程序拖慢 12 倍，scalene 的性能有很大提升 alan-turing-institute/CleverCSVdetect_dialect: takes a path to a CSV file and returns the detected dialectread_csv: automatically detects the dialect and encoding of the file, and returns the data as a list of rows. pytest-testmon只运行受影响的 test rq/rq: Simple job queues for Pythonjob queue? carlosperate/awesome-pyproject2020-1-14打印太多东西到屏幕上，会严重拖慢程序执行速度使用Newspaper框架抓取新闻 – 前端开发，JQUERY特效，全栈开发，vue开发 2020-1-13codetiming · PyPI1pip install codetiming usage As a class: 1234t = Timer(name=\"class\")t.start()# Do somethingt.stop() As a context manager: 12with Timer(name=\"context manager\"): # Do something As a decorator: 123@Timer(name=\"decorator\")def stuff(): # Do something ### [robdmc/crontabs: A cron-like utility for Python](https://github.com/robdmc/crontabs) #### Installation 1pip install crontabs UsageSchedule a single job 点击查看代码 1234567891011from crontabs import Cron, Tabfrom datetime import datetimedef my_job(*args, **kwargs):print('args={} kwargs={} running at {}'.format(args, kwargs, datetime.now()))# Will run with a 5 second interval synced to the top of the minuteCron().schedule(Tab(name='run_my_job').every(seconds=5).run(my_job, 'my_arg', my_kwarg='hello')).go() Schedule multiple jobs 点击查看代码 ​```python from crontabs import Cron, Tab from datetime import datetime def my_job(args, *kwargs): print(‘args={} kwargs={} running at {}’.format(args, kwargs, datetime.now())) All logging messages are sent to sdtoutCron().schedule( # Turn off logging for job that runs every five seconds Tab(name=’my_fast_job’, verbose=False).every(seconds=5).run(my_job, ‘fast’, seconds=5), # Go ahead and let this job emit logging messages Tab(name=&apos;my_slow_job&apos;).every(seconds=20).run(my_job, &apos;slow&apos;, seconds=20),).go() 12345678910111213141516171819202122232425262728&lt;/details&gt;##### Schedule future job to run repeatedly for a fixed amount of time&lt;details&gt; &lt;summary&gt;点击查看代码&lt;/summary&gt;```pythonfrom crontabs import Cron, Tabfrom datetime import datetimedef my_job(*args, **kwargs):print('args={} kwargs={} running at {}'.format(args, kwargs, datetime.now()))Cron().schedule(Tab(name='future_job').every(seconds=5).starting_at('12/27/2017 16:45' # This argument can either be parsable text or datetime object.).run(my_job, 'fast', seconds=5)# max_seconds starts from the moment go is called. Pad for future run times accordingly.).go(max_seconds=60) ## 2020-1-3 [knowsuchagency/klaxon: Mac OS notifications from Python](https://github.com/knowsuchagency/klaxon) ## 2020-1-1 ### pretty_errors [onelivesleft/PrettyErrors: Prettify Python exception output to make it legible.](https://github.com/onelivesleft/PrettyErrors/) ​```pythonimport pretty_errors 123456789101112131415![zIxVZ2C](https://i.imgur.com/zIxVZ2C.png)### horology 钟表学，测试法[mjmikulski/horology: timing functions, contexts and for-loops](https://github.com/mjmikulski/horology)#### 可用作装饰器```pythonfrom horology import timed@timeddef foo(): pass wrap your code using with statement1234from horology import Timingwith Timing(name='adaf: '): code block 读写 Excelpylightxl · PyPIWelcome to pylightxl’s documentation! — pylightxl 2019 documentation 有意思的库kkroening/ffmpeg-python: Python bindings for FFmpeg - with complex filtering supportneeru1207/AI_Sudoku: GUI based Smart Sudoku Solver that tries to extract a sudoku puzzle from a photo and solve it","link":"/python/python-weekly.html"},{"title":"todo","text":"[TOC] 自建 RSS 服务器 （RSS2.0 RSS1.0 ATOM1.0 的区别？ ）高效工作—优雅的阅读微信公众号 | 冰蓝记录思考的地方 rss 二次筛选 给你的静态博客带来 RSS 订阅 - 少数派 Cli 将 md 的图片调整统一的缩放比例 根据 requirements.txt 找到相应的 package 简介PePy - icecream Download Statsicecream · PyPI 自定义一键配置 Mac 的脚本，可能下次换电脑才有机会修改了 zronghui/dotfiles-1: 🖥️ Automated Configuration, Preferences and Software Installation for macOS lio-mengxiang 的个人主页 - 专栏 - 掘金 sindresorhus/awesome-lint: Linter for Awesome lists 加密、解密文件gui，里面放置密码，网站的 token，阿里云容器镜像服务 OHTTPS - 免费HTTPS证书 521xueweihan/git-tips: Git的奇技淫巧 springboot 制作 daily plan + schedule 实时监控路由器设备网速 查询online_host: curl $’http://192.168.0.1/stok=B%7B0O*0%5Bj0KMpBsgn8b%7B50X\\u0021%2Bun09xTGs/ds' -H ‘Connection: keep-alive’ -H ‘Accept: application/json, text/javascript, /; q=0.01’ -H ‘X-Requested-With: XMLHttpRequest’ -H ‘User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36’ -H ‘Content-Type: application/json; charset=UTF-8’ -H ‘Origin: http://192.168.0.1' -H ‘Referer: http://192.168.0.1/' -H ‘Accept-Language: zh-CN,zh;q=0.9,en;q=0.8,und;q=0.7’ –data-binary ‘{“hosts_info”:{“table”:”online_host”},”method”:”get”}’ –compressed –insecure 登录: curl ‘http://192.168.0.1/' -H ‘Connection: keep-alive’ -H ‘Accept: application/json, text/javascript, /; q=0.01’ -H ‘X-Requested-With: XMLHttpRequest’ -H ‘User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36’ -H ‘Content-Type: application/json; charset=UTF-8’ -H ‘Origin: http://192.168.0.1' -H ‘Referer: http://192.168.0.1/' -H ‘Accept-Language: zh-CN,zh;q=0.9,en;q=0.8,und;q=0.7’ –data-binary ‘{“method”:”do”,”login”:{“password”:”0UQ0oQry9TefbwK”}}’ –compressed –insecure 多个 RSS: {name: url, } 每分钟查询一次，看是否有变化 RSS 怎么解析？ 判断系统，是 Mac 的话弹窗提醒，在 Linux 上邮箱提醒","link":"/todo/todo.html"},{"title":"Python tricks","text":"[toc] tabulate 表格化打印文本astanin / python-tabulate — Bitbucket 支持中文对齐 1234567891011In [1]: from tabulate import tabulateIn [2]: table = [[\"Sun\",696000,1989100000],[\"Earth\",6371,5973.6],[\"Moon\",1737,73.5],[\"中文测试\",3390,641.85]]In [3]: print(tabulate(table))-------- ------ -------------Sun 696000 1.9891e+09Earth 6371 5973.6Moon 1737 73.5中文测试 3390 641.85-------- ------ ------------- 颜色打印日志，支持 crontab 自动发送邮件给自己 coloredlogs · PyPI xpath1234from lxml import etreexml = etree.HTML(r.text)currentPrice = float(xml.xpath(\"//span[@id='last_last']/text()\")[0]) 生成requirements.txt查找python项目依赖并生成requirements.txt_Python_orangleliu 笔记本-CSDN博客 使用pip freezepip freeze &gt; requirements.txt这种方式配合virtualenv 才好使，否则把整个环境中的包都列出来了。 使用 pipreqs这个工具的好处是可以通过对项目目录的扫描，自动发现使用了那些类库，自动生成依赖清单。 缺点是可能会有些偏差，需要检查并自己调整下。 123pip3 install pipreqspipreqs ./cat requirements.txt 有意思 f-strings can also be simulated with ‘Hello {name}. You are {age} years old’.format(**locals())` imgmaker-把文字转成高清图片minimaxir/imgmaker: Create high-quality images programmatically with easily-hackable templates. 123456# 文件的访问时间 accessos.path.getatime(filePath)# 文件的创建时间 createos.path.getctime(filePath)# 文件的修改时间 modifyos.path.getmtime(filePath) kootenpv/cliche: Build a simple command-line interface from your functions maxbachmann/rapidfuzz: Rapid fuzzy string matching in Python using the Levenshtein Distance 最大 int float 1234import sysself.m = sys.maxsizefloat('inf') 12345678910111213141516171819202122232425262728293031from pykeyboard import PyKeyboardEventimport timeclass TapRecord(PyKeyboardEvent): def __init__(self): PyKeyboardEvent.__init__(self) def tap(self, keycode, character, press): print(time.time(), keycode, character, press)t = TapRecord()t.run()import chardetfencoding=chardet.detect(u\"test string\")print fencoding# 从URL地址提取文件名import osurl = 'http://www.jb51.net/images/logo.gif'filename = os.path.basename(url)print(filename)# 去除扩展名print os.path.splitext(filename)[0]# 打印方法名import inspectimport sysfor method in inspect.getmembers(sys.path): print method Wgetwget.download Python Example out 自动识别 dir 或文件 12import wgetwget.download(book_url, out=self.outdir, bar=wget.bar_thermometer) ipython 安装自动补全pip install pyreadline或pip3 install pyreadline 按tab即可自动补全 Pip 升级 package12pip install -U you-getpip install --upgrade you-get iredis：Python 语言写的支持自动补全、语法高亮、命令提示等的 Redis 命令行客户端。超好用，真是相见很晚啊 03-27Python string 速度优化 btwael/superstring.py: A fast and memory-optimized string library for heavy-text manipulation in Python 有意思的几个库 Python-Markdown/markdown: A Python implementation of John Gruber’s Markdown with Extension support.sloisel/pyptex: Python Preprocessor for LaTeX 03-23vardbg一个 Python 脚本的调试工具，并可以生成脚本运行流程的可视化视频。 123456pip3 install vardbg# run filevardbg run insertion_sort.py -o qsort.json# or run a method# vardbg run sort.py quick_sort -o qsort.json -a 9 -a 3 -a 5 -a 1vardbg replay qsort.json -v sort_vis.mp4 03-12Environs 读取环境变量Python 使用 environs 库来更好地定义环境变量 | 静觅 environs: 简化环境变量解析sloria/environs: simplified environment variable parsing 可以从当前 shell 的环境变量中获取，或者 .env 文件 1234# .env 没有前缀名# 不用写 exportAPP_DEBUG=falseAPP_ENV=prod 12345678export GITHUB_USER=sloriaexport MAX_CONNECTIONS=100export SHIP_DATE='1984-06-25'export TTL=42export ENABLE_LOGIN=trueexport GITHUB_REPOS=webargs,konch,pedexport COORDINATES=23.3,50.0export LOG_LEVEL=DEBUG 123456789101112131415161718192021from environs import Envenv = Env()env.read_env() # read .env file, if it exists# required variablesgh_user = env(\"GITHUB_USER\") # =&gt; 'sloria'secret = env(\"SECRET\") # =&gt; raises error if not set# castingmax_connections = env.int(\"MAX_CONNECTIONS\") # =&gt; 100ship_date = env.date(\"SHIP_DATE\") # =&gt; datetime.date(1984, 6, 25)ttl = env.timedelta(\"TTL\") # =&gt; datetime.timedelta(0, 42)log_level = env.log_level(\"LOG_LEVEL\") # =&gt; logging.DEBUG# providing a default valueenable_login = env.bool(\"ENABLE_LOGIN\", False) # =&gt; Trueenable_feature_x = env.bool(\"ENABLE_FEATURE_X\", False) # =&gt; False# parsing listsgh_repos = env.list(\"GITHUB_REPOS\") # =&gt; ['webargs', 'konch', 'ped']coords = env.list(\"COORDINATES\", subcast=float) # =&gt; [23.3, 50.0] 03-11Python自动化 Python in GitHub Actions · Homepage of Hynek Schlawackgithub action python test - Google 搜索 Django 调用流程图meshy/django-schema-graph: An interactive graph of your Django model structure 死链检测检测 URL、目录、文档的死链 butuzov/deadlinks: Health checks for your documentation links. https://pypi.org/project/deadlinks creating command line user interfaces创建命令行用户界面能用 py_cui 写 2048 游戏jwlodek/py_cui_2048: A command line ascii version of the 2048 game written with the help of the py_cui library. jwlodek/py_cui: A python library for intuitively creating CUI/TUI interfaces with widgets, inspired by gocui. 自定义快捷键的功能dibsonthis/keyboard_listener: Keyboard Listener is a module that allows you to create custom hotkeys (combinations) or custom keywords and bind them to custom functions in Python pytest-responsemockMock response idlesign/pytest-responsemock: Simplified requests calls mocking for pytest 简繁转换简易中文简繁转换 — zhconv 1.2.1 文档 1pip install zhconv 12from zhconv import convertprint(convert('我幹什麼不干你事。', 'zh-cn')) zh-cn 大陆简体zh-tw 台灣正體zh-hk 香港繁體zh-sg 马新简体zh-hans 简体zh-hant 繁體 03-101os.path.dirname(__file__) 03-06pip离线安装依赖包 - 曾春云 - 博客园 pip安装离线本地包 导出本地已有的依赖包 1pip freeze &gt; requirements.txt 将依赖包下载到本地 12# 下载到当前目录,指定pip源pip download -r requirements.txt -d . -i http://mirrors.aliyun.com/pypi/simple/ --trusted-host mirrors.aliyun.com 创建虚拟环境 12345# -q 安静的方式创建# --no-site-packages 不拷贝本地的第三方包,创建干净的虚拟python运行环境# --python=python3.7 指定创建python版本环境# .venv 虚拟环境目录virtualenv -q --no-site-packages --python=python3.7 .venv 进入虚拟环境 1source .venv/bin/activate 安装本地依赖包 1pip install --no-index --find-links=. -r requirements.txt pip 其它使用方式 安装最新版本 1pip install 'SomeProject' 安装指定版本 1pip install 'SomeProject==1.4' ss 1pip install 'SomeProject&gt;=1,&lt;2' 安装兼容某个版本的包 1pip install 'SomeProject~=1.4.2' 升级安装 1pip install --upgrade SomeProject 指定依赖文件安装 1pip install -r requirements.txt 安装从版本控制服务器 1234pip install -e git+https://git.repo/some_pkg.git#egg=SomeProject # from gitpip install -e hg+https://hg.repo/some_pkg#egg=SomeProject # from mercurialpip install -e svn+svn://svn.repo/some_pkg/trunk/#egg=SomeProject # from svnpip install -e git+https://git.repo/some_pkg.git@feature#egg=SomeProject # from a branch 安装从其它索引服务器 1pip install --index-url http://my.package.repo/simple/ --trusted-host my.package.repo SomeProject 安装时，如果默认索引服务器没有该依赖包则提供搜索额外的索引服务器进行搜索获取 1pip install --extra-index-url http://my.package.repo/simple SomeProject 安装从本地 1pip install -e &lt;path&gt; 或者 1pip install &lt;path&gt; 安装从压缩包 1pip install ./downloads/SomeProject-1.0.4.tar.gz 安装从本地目录搜索依赖包 123pip install --no-index --find-links=file:///local/dir/ SomeProjectpip install --no-index --find-links=/local/dir/ SomeProjectpip install --no-index --find-links=relative/dir/ SomeProject 安装从其它源 1pip install --extra-index-url http://localhost:7777 SomeProject 安装预发布版本 1pip install --pre SomeProject 安装前配置 123$ pip install SomePackage[PDF]$ pip install SomePackage[PDF]==3.0$ pip install -e .[PDF]==3.0 # editable project in current directory 02-28Personalize your python prompt | Arpit Bhayani 02-14Debugging in Python — A cakewalk with pdb - Python Features - Medium 02-13Pathlib (3.4+)12345from pathlib import Pathroot = Path('post_sub_folder')print(root)path = root / 'happy_user'print(path.resolve()) Type hinting (3.5+)123def sentence_has_animal(sentence: str) -&gt; bool: return \"animal\" in sentencesentence_has_animal(\"Donald had a farm without animals\") Enumerations (3.4+)Python3提供的Enum类让你很容就能实现一个枚举类型： 123456789from enum import Enum, autoclass Monster(Enum): ZOMBIE = auto() WARRIOR = auto() BEAR = auto()print(Monster.ZOMBIE)for monster in Monster: print(monster) Built-in LRU cache (3.2+)缓存是现在的软件领域经常使用的技术，Python3提供了一个lru_cache装饰器，来让你更好的使用缓存。 12345678910from functools import lru_cache@lru_cache(maxsize=512)def fib_memoization(number: int) -&gt; int: if number == 0: return 0 if number == 1: return 1 return fib_memoization(number-1) + fib_memoization(number-2)start = time.time()fib_memoization(40)print(f'Duration: {time.time() - start}s') Extended iterable unpacking (3.0+)*_用来抛弃元素 123456789101112131415head, *body, tail = range(5)print(head, body, tail)# 输出： 0 [1, 2, 3] 4py, filename, *cmds = \"python3.7 script.py -n 5 -l 15\".split()print(py)print(filename)print(cmds)# 输出：python3.7# script.py# ['-n', '5', '-l', '15']first, _, third, *_ = range(10)print(first, third)# 输出： 0 2 Data classes (3.7+)Python3提供data class装饰器来让我们更好的处理数据对象，而不用去实现 init() 和 repr() 方法。假设如下的代码: 1234567891011121314class Armor: def __init__(self, armor: float, description: str, level: int = 1): self.armor = armor self.level = level self.description = description def power(self) -&gt; float: return self.armor * self.levelarmor = Armor(5.2, \"Common armor.\", 2)armor.power()# 10.4print(armor)# &lt;__main__.Armor object at 0x7fc4800e2cf8&gt; 使用data class实现上面功能的代码，这么写: 12345678910111213141516from dataclasses import dataclass@dataclassclass Armor: armor: float description: str level: int = 1def power(self) -&gt; float: return self.armor * self.level armor = Armor(5.2, \"Common armor.\", 2)armor.power()# 10.4print(armor)# Armor(armor=5.2, description='Common armor.', level=2) Implicit namespace packages (3.3+)通常情况下，Python通过把代码打成包（在目录中加入init.py实现）来复用 在Python2里，每个目录都必须有init.py文件，以便其他模块调用目录下的python代码，在Python3里，通过 Implicit Namespace Packages可是不使用init.py文件 sound/ Top-level package __init__.py Initialize the sound package formats/ Subpackage for file format conversions wavread.py wavwrite.py aiffread.py aiffwrite.py auread.py auwrite.py ... effects/ Subpackage for sound effects echo.py surround.py reverse.py ... filters/ Subpackage for filters equalizer.py vocoder.py karaoke.py02-10neovim: 新时代的 vim，我在这个配置(https://github.com/PegasusWang/vim-config)上自定义了自己的配置，使用起来性能和反应速度上远超原生的老古董 vim meld/vimdiff: 文本比对工具。 tmux/tmuxp wemux: tmux 共享，https://github.com/zolrath/wemux sshfs: 本地挂在服务器文件夹 tmate: https://tmate.io 终端共享工具，结对编程。很多现代化编辑器 vscode, atom 提供结对编程的插件。 asciinema: 终端会话记录工具。https://asciinema.org/ devdocs.io: 文档查询工具 gitx(mac):方便查看代码提交历史，便于了解整个代码仓库是怎样一步步构建的。http://gitx.frim.nl/user_manual tig: text-mode interface for git. 喜欢命令行的可以尝试下。 https://github.com/jonas/tig EditorConfig: http://editorconfig.org/ 用来统一编辑器配置。如果成员用不同的操作系统和编辑器，建议使用。尤其是对于 python 这种使用缩进的语言 mac-setup: https://github.com/sb2nov/mac-setup mac 下各种编程语言开发环境配置指引 《使用vim+tmux+zsh+autojump高效工作》 prospector: 集成了众多python代码检测工具 mccabe: 圈复杂度检测工具。McCabe 是一种度量程序复杂度的方法，如果单个子程序复杂度过高，或许就需要拆分逻辑提高程序的易读性。 bandit: 用于Python代码的安全性分析，openstack 的项目 https://github.com/openstack/bandit rope，可以用来重构等，功能强大。笔者经常用rope自动帮我重新整理导入的包顺序。 Pyreverse: 代码 UML 生成工具, 帮助我们理解继承关系 (https://pythonhosted.org/theape/documentation/developer/explorations/explore_graphs/explore_pyreverse.html) Epydoc: Automatic API Documentation Generation for Python 2to3/python-modernize: python2 转 python3 工具。目前 Instagram 已经全面迁移到 python3 编写2/3兼容代码：http://python-future.org/compa pigar: 找出项目使用到的依赖库 buildout: 项目构建工具 pyenv/virtualenv/pipenv：多版本管理 bitbucket: 类似 github，好处是支持免费的私有仓库 cookiecutter: 一系列项目模板生成工具，懒人必备。https://github.com/audreyr/cookiecutter。笔者之前内部项目就直接用 flask-cookiecutter 直接生成的。 yeoman: http://yeoman.io/generators/ 前端项目模板生成工具 ant-design: 后端管理后台项目解决方案 https://ant.design/docs/react/p Api 工具 checklist: http://python.apichecklist.com/ 日志、异常收集工具 Sentry: 用来记录异常非常好用，能看到完善的栈信息，方便排错。 Fluentd 管理及运维、监控工具(devops很火) Supervisor.进程管理 Fabric.应用部署 docker.最近比较火的容器技术。很多采用微服务架构的公司使用 docker 作为容器部署服务，或者构建一致的开发环境 SaltStack和Ansible. 配置管理 StatsDGraphite等web监控 调试工具 ipdb/pdb: ipdb 支持自动补全，比原生的 pdb 要好用一些。 pdbpp: https://pypi.org/project/pdbpp/ https://curl.trillworks.com/ 把 curl 命令参数转成 requests 代码。 https://github.com/NickCarneiro/curlconverter/。 httpie postman http://httpbin.org curl/requests 互相转化: https://github.com/oeegor/curlify https://github.com/spulec/uncurl 抓包和下载工具 mitmproxy: 用 python 实现的终端命令行抓包工具，可以将请求直接导出成 python 代码，笔者经常用来抓包和调试。 charles 爬虫相关 Scrapy: 知名的爬虫框架。生态比较丰富 pyspider: 国人写的一个不错的爬虫框架 requests lxml/BeautifulSoup/pyquery: 解析 html，xml 等。 tornado: 异步的 http client 可以写爬虫 redis/celery: 实现队列、异步爬虫。异步方案也比较多 phantomjs/puppeteer: 用来处理动态网站。puppeteer 基于 nodejs 异步任务框架 celery: python 社区一个流行的异步任务框架 压测工具 locust: python实现的压测工具。http://locust.io/， 有 web 界面 ab wrk Profiler pyflame: https://github.com/uber/pyflame 数据库工具 mycli: mysql 命令行补全等。https://github.com/dbcli/mycli MysqlWorkbench/Sequel Pro: mysql 客户端工具。 Navicat Premium: 强大的数据库管理工具，收费 Medis: redis client 工具 MongoChef: Mongodb 客户端工具 2020 年 1 月 15 日(星期三)Python技巧小贴士 - 51CTO.COM 字符串一次性执行多个 replace12345678user_input = \"This\\nstring has\\tsome whitespaces...\\r\\n\" character_map = { ord('\\n') : ' ', ord('\\t') : ' ', ord('\\r') : None } user_input.translate(character_map) # This string has some whitespaces... 迭代器切片(Slice)如果对迭代器进行切片操作，会返回一个「TypeError」，提示生成器对象没有下标，但是我们可以用一个简单的方案来解决这个问题： 12345import itertools s = itertools.islice(range(50), 10, 20)for i in s: ... 跳过可迭代对象某些元素比如跳过文件的注释代码 1234import itertools for line in itertools.dropwhile(lambda line: line.startswith(\"//\"), string_from_file.split(\"\\n\")): print(line) 实现上下文管理12345678910from contextlib import contextmanager @contextmanager def tag(name): print(f\"&lt;{name}&gt;\") yield print(f\"&lt;/{name}&gt;\") with tag(\"h1\"): print(\"This is Title.\") 控制可以/不可以导入什么在 Python 中，所有成员都会被导出(除非我们使用了「all」)： 1234567def foo(): pass def bar(): pass __all__ = [\"bar\"] 在上面这段代码中，我们知道只有「bar」函数被导出了。同样，我们可以让「all」为空，这样就不会导出任何东西，当从这个模块导入的时候，会造成「AttributeError」。 实现所有比较运算符的简单方法为一个类实现所有的比较运算符(如 lt , le , gt , ge)是很繁琐的。有更简单的方法可以做到这一点吗？这种时候，「functools.total_ordering」就是一个很好的帮手： 1234567891011121314151617from functools import total_ordering @total_ordering class Number: def __init__(self, value): self.value = value def __lt__(self, other): return self.value &lt; other.value def __eq__(self, other): return self.value == other.value print(Number(20) &gt; Number(3)) print(Number(1) &lt; Number(5)) print(Number(15) &gt;= Number(15)) print(Number(10) &lt;= Number(2)) 用「total_ordering」装饰器简化实现对类实例排序的过程。我们只需要定义「lt」和「eq」就可以了 限制「CPU」和内存使用量？如果不是想优化程序对内存或 CPU 的使用率（how），而是想直接将其限制为某个确定的数字，Python 也有一个对应的库可以做到： 12345678910111213141516171819import signal import resource import os # To Limit CPU time def time_exceeded(signo, frame): print(\"CPU exceeded...\") raise SystemExit(1) def set_max_runtime(seconds): # Install the signal handler and set a resource limit soft, hard = resource.getrlimit(resource.RLIMIT_CPU) resource.setrlimit(resource.RLIMIT_CPU, (seconds, hard)) signal.signal(signal.SIGXCPU, time_exceeded) # To limit memory usage def set_max_memory(size): soft, hard = resource.getrlimit(resource.RLIMIT_AS) resource.setrlimit(resource.RLIMIT_AS, (size, hard))","link":"/python/Python-tricks.html"},{"title":"待rss","text":"[TOC] 新鲜应用 - 马可菠萝 windliang 高清杂志网【官网】 Chrome插件(谷歌浏览器插件) - 提供Chrome商店中优秀的Chrome插件推荐与下载服务 博客文章 | BEWINDOWEB 前端 - 掘金 - juejin.im - 一个帮助开发者成长的社区 创造者日报 - 每天发现有趣的产品","link":"/todo/%E5%BE%85rss.html"},{"title":"待爬取","text":"[TOC] 工具图片下载库Quickstart — wildebeest 3.0.3 documentation 图片：K站壁纸 | 安卓绅士网 | 第 2 页 ifloli 摇摇乐 - NO.001 浴巾篇 - ACG盒子の妹子图 探索 热门 - LALAの图库 其他架构师程序员.net core c#论坛","link":"/todo/%E5%BE%85%E7%88%AC%E5%8F%96.html"},{"title":"git tricks","text":"嗨，请准确无误地输入密码查看哟 ","link":"/tricks/git-tricks.html"},{"title":"openProject","text":"嗨，请准确无误地输入密码查看哟 ","link":"/tricks/openProject.html"},{"title":"tricks 2020 01","text":"嗨，请准确无误地输入密码查看哟 8ad592f1a9331b4b40cc672a95df48b38496ef775250eed621494c6dbe5d69dd77d2079775f50feae083d3de3154f0caf37b5413af63152a57b9d4995ada29856e733458dd78cfd2ff53a7b743cd92f77705f74b7645775178d46f93093ba46fe9c39b774894fbf747e4455d462fd5da0394a68cca6d61e8f3a11b7bbcf397b5c21654002d877cd44fb19b6f068d5b1ac74950b1a8892ef12767f48edee12e752482787c945a07662cf94bb416d70aeab93031de5a6cc185dd027c7fbafac5c534faccb4bab1452ebcb50b78eed3b40f91852166560e569496c2a77ebba8627db5a74a4007a1e7d5c34ebbec797902a9309c85a0d49b266f72adeac216787ef036575e21ff9859ba3ae85887168958c77acf6b799fa0ccb6ea64aa9dd02af4608c22a69ac241ce41bd1c6a474b99613828dd9b64934d0db8e5d5aeaf19dedf736acc6a8f3e607ab2b51fff16150e2b6bb359ed57cfbfd6ed8a72fcb24bf183cba763c496b96e1bc47179234c86495ffbcf8dcc9234da212e4c1796430cfb790fa671057b302b52c6ff271cfdb280fd796efefd5ffec39231c28d49a8168a9b1051462f9cb57d9710d4f6284e6205dda3c7e1227f2e064fe8f0b7780d25478d46a922fb0731cf4fdb0e5d55405ec2656ded6ca49d0c4cbfbaa91c900fffce43179e5d6afac1895ffb025fc07bf88367143d7e9215eb509c081770847af2335a2b6b00542a0d8a7a5bfda35ad9169d13ec5a1332931097d07c2c4a11d92b931255b5b41fdb14d8036cbd468d5888f76b26c4d0f574e8efa8323c0e3e25ca3076fa689206ae017d200360b96150fb96bf26a6bb23d22316f583775b5671c2aaebd4acae987d2c1debf946cea0c6933b0b6aded583b1b6fbaefa07ba1122dafaaa7a9f030bd5f9f95d318f9fd6ce9d7c6dcc4724b619075e4d084f2d0af04798e538b4c5a59d5fb9b7e1a975279782f1227287dc9960cf0f68e712934c3eaca79e6ac85b7fa120c03a8479889e1ce3417d343aa51cc2d1e1a1cc30b02c68c64e92e092ed4a997a73a26bc6d491bdb0a9a9427ea3d77b0ab3dda7ac97d11749fc3bde8f8f7f3d6766b20f83e95c327dcb5c52c67b79e5ed04d009cc1ef95be5cd14bf885fd2b06e70c56d1895c6bca482fd7d9a2f892a7073fd7a7a7a371fe6422db48f2e87d85c87fdeebc554ec5cefb2848b08569108ece4b6ace59dda364a84505f0c502cf913ab150f195ee8ef0f11831acca11602469e51b480484ea9ac5e590d1729c95f0314fdda393843385eb7ed15ce33050a709329f4e5dcebcc7a2904b787968728dee44c6bb7704770013e8083e31be7b6c55b17303c2f9acf9ddfbda75c619d24e042e778f948ca7119cc4ad9c0b2aefda5670fedf51a1f6de0c24f62e6d4a6aa886ba73d1c0f0afb8b0c86f388388a56d31bfefd7a52d6e125f07bd2b83204d389aa98a4e61bda469fcc7bc8533528c9d88f24a165da8c45b00603d9db684e579141e6632d5a2367e681ebd5323b3f05c8f72828fdcba894252bc6bd99b39675956bf0855b0bda9e216d1f3ff04229262e756aadd357b90d116bcc6acf2cd11e6db2f64a5b253f8e1f841bb95e042134cd3a3c86ad058b44eb11129dfba629e421d269ece0793e10bff2955e2fda0cc1885a85a30e38a2e7d7c327b39ee80a32fcb1710f24834b1b8db65ff9faf9f73e2a9b013750112c767f492c8ef9fa8bf3067ebb970651df777ae081b6c6329ed5786cf101792a3af494b706317b92f935b7e3071e8c53c6143877997b10c318ffcb38703a7e8fe35da4293ed47160daddec63b3252957a1c496783f0bda12dea596f007fe00a4b251f35cdd259cac6a1dc28165b7df67a610c6a81570a0b17d169402af118f49de9f8092f26de7e2166e3c574630bccee51ef14d9fe74e408d33d168af217b4d02de0a43f5161cdde6da522b1799cd22f89a24e35e7393ac8c65daa943a5ea4fb9d884d63a5a9eef90b7781e7a47b8f1567239cf4d1246f94ca40bbca7ce30096aaaac257a108c96edd0b9111597db2f0f6bf991786b02e6dd6e4656456d4c23c3dad6111f3eb0942afdb7f6f0b1689986cab2cbdffaf022656d287e75e844d2c0cbf7ae0f9ddf12cb38f8434a967a253c274367ab18c842b47c96ff831b57c8b47e121944ce1e28b2df2233f15955f23be39315dc25cc9df47a014db1d8e0cf3ce79b981bfb8d21a8b08d368cc3b164cba5751666acf3c44df626006afc17286d2713941e76933bd93e6850c219ac66c9ed49bcb23377c8ad231d7a63575d311a97fc56cdffc0bb56f0c547f8cc0e9023bcc6c6b079f88fad76a1977f50d6a0409c2dd336baadff406d25a38045ecc3e407f7ed61b9ec5a99e8f9308f57389de0f9c1f62369321461c8e1b37f86153caaf669aed9117c462103725adb4c5462be3b1ec2e2ebd5e83b228831476bedd44a282c0ed624dbfbeb67c60ecdde5d697411104539aa7bcc8c895a08d9fb474d710ccdb757e65edc75adf13c23109d893636b4e44c14e7940d74710fcca3ef86b1a7351fc503afb8c47369dd7359ca494f25a83af03b790c2deda443f862674c3f324de52b26a59bd1c11c8ec9ed40881a3e1c4912d7161e082c02ae358b159ff7d75a0318fb990dc8743eee2a627d4d36180e5da961ebad883f1b25488cc35e74270baf66e631b166265dc23f9d3a896c4e3f26415554988e778f2a27be6a2fa5f81df2a4769fcd9421d71f0daaf24087ba1f09eac8ac82f2d2ebff7544c1236dad1b182d052525802c20d3160b946f06213a8eef53a37a04dbf4b3a8a32b74013dd276b5f16987c714b09692e25fb8003ac128e6f176f6a6a40ba094b52f28a3c7ca64355f39a7bd1115db8ea644d4578699fb34ce398e6399fba194ea570854140fbe214acdcbbfcbbfdf7d6591b4bdec51c9f1a32e297492fe03294dcec9417c9b6fa04148db72cca552de8315aca49e0e183ce400fa56ced0ed79168fcceab5304c612fa3b004f6f4a7df781eb9c6751a9a22deda9bc874e700396bc4ff6027349548561c50f772ecb012fd5d691c12b7f1ed2c24ab860711a041c9a43cecd2f951d493b2b1a0e35f0167f0f8b9e794597c6d453b83429eb6d4a10735682667b30088fa9394f0d0ce0d6b4c2e8076742dc0399011cf9610b92822a44bfc8c880bc13dfde9867f6a971b01151be9863dddc779f7a854049c1aeb4fe060e654e757e27a533440fcccf38fa7ff8381d8de6c505039ae667089de73b2ebbb5f75f34e21f17c569ff5884342bf0798240834133db391f0adb071909a0a5720d3883e2ce1005959f9aab953b46b7d44f2c39b5a1b4f16c66426f4a29b7add37c984008f6aa5339f6dee7ab9cb485bfd11983fbde9b8b7d4397ee870af3735ea3281629ff5f40042e397b808104c48690dc78cb67611b5430d4032d4de9e1cc13e03127dec2dcf1d3f24ac12627cd3d5120add7dad2cbae7073f60353975bf889f4f17fc0fbe20b21f5da17a1b77215a564ee317b4c15a3205e109fe5eb18014774f3f38ea3dacd0213f2464afe6b91ebb7931e24e64ccc609bb37d02afa3cb2c8694aa1e0a2657e5a8bb7d0f082e160baf09d36ae95a8f1858389aedaf5e44779fa3ac65c1954171b155423c282dfbd39b02ec1d1091b2a9f007f13b5a371d250aa34d2a858193581233124f94f943f03e003d9cb9e043dfe64a773151e3d438dec95a3c0a4b46888259b49dd3738a4862064beb287ce50b2a0a80d790a73875696f6bde18ca9690f6930f8c5cf985601e802a8eb12e21d4e71cd2cfe91f629196093414d9abb684c4ecf135d8d9071a16431e3154e03d2bb946043a4e5142ddf5724be851e88d9bc5cda7ae43ddc619e97fe6bbcf72a090949f5944eecdb82a43fe9ac47f8d099bafda3286355dcdaddaeabbc1725fea393d1d5cbd3cf96fc1325ad2f4a0d92d167c1117982d1c93f758b8d2836f417beeaf70597e85b52a4c0a5d73ee2af74b190ad74f9c1ee80664e7152fac256ad8227a23e29badb4f5e1674c220caffab71cfadee85b2164b9a80f64dc5b1a09ebe2696140f5f264ec49d779cd834bac621a285f41a810ad9f5d37e4fffb9d4977cc6aa252b0b8d0c9ba40621f6f4704e914822ec62dfc66a6085bc759a63aa238fb7e261cb99e0f8ee44018ebbe665689456e94aeeb51efa34fb52df4bff33d2ea82387e252871ce6534312ffcfe7dd23b17092431f7b7fe1d04d6139da3809fe60cf51059d5c5edca2bebcfbe3c8dcc9964451ecc5d513050dfa2420905510a1aa5feb0289220b849983b141dbe1ffa60922f32d0b6c4f0f2bf41cd14a230cf1dacb1d7c3a2235f1ad4262423f8d3df41459066512bf5475fee8882dcbd581307032c82ffc02485a59f2e20f141705e95f960dd902ba030072782b0eb519a0e1ccd2b183503313c78a7f422d8bc18a67406d73fbd5371010a8e4c00fcba4b2426ee19c324201b9b8f6cbffddc1c26f72b23fcd4f3d2a33acc5e33e6e46fa75ba875477db1f4a4dc72666dd34ce0712c1b668e1fce792cf51912029ffc3f4055a4b467419595393dab532bfca54a165b825a8e2a845f2dd6a1b61b8d1e431fe3166eede4e0700afe4f03580179dee8c43816fc9eb2a065cbffc03f7767f90619499593caf483ef16a561fbd1395768ccb2ccc42164ae2cc362307da945532c63e60cbdbdfe29c23cbc1e2522f99b5e010e264068b2faece0c7f2f86cf56ea0a2a099d0c334f39350492ebc6a29c0d861debb7414ec743270959f61b21b94e061e298891dfac763fbcfe34a42e919dd4a5a71ff6f510928c50c2d5526338272cb26d140d8469ffcd60626abc98c1c20afb962e5384896ccce905f43ea3db16909e8632219b4ba43b943993faafd58359dba3fce26ed03d260fd412f853ec9b0d16cd5e390a2ae4e5a7695a37b3c233b37db6331edb884d45b4f49d0bd39233e47af3cc091bab37dcb2fd982efaa95b73d626b3a9fe8acba76c32ee859168fa3ea92be82288e584f179333a74ce2052eece217cc664138f86ef3f141fa3c33de9fecbbf96f87bcdd1ae45a25eb19474991e6f45e6e7f84f6b28d7781f9d0b8cb5f4b742bd55dd45c9098daa186d9515a0c2998e4a173c9800a432216ef0cf5907e2993df95dbcfb0184526196983e52c799c08703c9fa343ffeeb00c5268ea14b072de660223ecad3c17338d0e694d03fd5ed1bbca27a22864f91ea77a7adfde6e37e29fd898f160cb551c94a2840347420a6c3860ea93fe09f11fda9b96d08238b4eee2d2ce52b0a2a7317054535aceab6b2d3d173808c9d11e53eed64beaa970cf9abd77a45efa6fd47e8b979b39134f390c817b8d114d2307c3abedbc6ca2cddfa097dc6a7793e76d985134c5fcffa87aba89a3a433b653be76559bc3a7efe04b1b98567b04fffd5cc9df2a0321eaf1198e86352d217fb7926fafb106681834554a1502cb1bded67ef37c1b4babae2ab7bf782f7900a9f716d338df846d4727d54fadf0be7c7239692f9cc6d8fe482bfdac2e809bce069612b5069ce168b3f8d50536573118dc71d8f741a35c61ca036c509ea03c6c32c131d3a284795e073a3503edea0294f44b5ba76b2c45826ae8b88e9a4388c9943d65354fcd258930d37e37a7a89a796f823cf87647766b9ba31507fd4523c2cbc8b8e290d15f9e783d1832e540b000c1889d56e39cbd2daaa44e960ed01d17e8ba39d78112c170b760b6a9740e922e3c5b7c0060c7971aebf0485f628213a63028b864d721a8d8f0da4057612998c1a696947461f1b210fff39f8081c6fb6b2745d67ffd5787930f8464e000a196aaed6dd64e8f7b76437058b0d982f8a5e84936685b7dadcdce3a2621193750160f0e0b674dbe81432029eccf9d44fa45a0041ee0f1c84d3802454bbbcfb614298f60efcb00d49ba76fd7cb2ef592fc9595a10179426b93fbcff5a7b95985f071f43e4dce3266e905c24da423d9ec8b69fba229dcf133afdd7d996b9e08a2a9dc449dc8e9adbd29c75233437fd432641d3df0fc028004779d13c893d69456789e9a1f3f65e4a793e1e3c4388a75d8a3bad2d2bceb3e2aec599fe6f08e1713f8f90ecefabc0e7fd9228de7ccfcc46d1972aef238eb066d106f7ac3fe03a51b2de5bb81c2f3f1f5446315ea075345b808d86f0161a9b12a72ce5f7dc40b68b6b6f6442298ed41aadf9258a41629e361800a75d0b2639b5dc7b956931335fa50b486a7a3d0f6ddf66f66686573f149dc6fd695716e303ef304c3219442444a7a38192425ca29c66a57db2e27609911c91fbaf364e64ad8c6b9c0e2a555635c7a23155107a90967cb29e1284b2edf656131475127e33767a9a5177e126bdd71c7ead5c5cfe92a5a21e85ae8a5e992d2f2bb44318058aa767e9229fb8b4e7917ce1bfe3f278ae323d9ef98131bb52e5485455ad9fd4a7fe57e1d39992c099c9df522cd73db7cd969bd8915b586089ff0787ec3a971fe6a7c8ebcb150feba0d250102e42ddf77bcb8ca51b74213bc322d12fe4f9a083f6fd4c4f30a128f1291312df7547101ef968362d259a15025bfcb8100bd77c41606af6dbeb4d879c326bbdeca37b5483bf72c081e13adc06ba75ac069dbcdf25c2d5547c752444064d3b320044f0ccb2468f65e2b55f6d8662a59e198a9ff1e80ab02fd3fa262bf707559c91941cbf215b1440adc115bbc556f150c2688775fdf24f56451d3caac4942d45cb2809aa2d69f83e278d2b25f11cf63eb719bfa7ff95f5f9e52af0ed9730d56277af05f1ec74634dcf67ee6fb6088500b3a160e57f87a355e67bfc3e02e80f85afd33ef376e5a8c69607aa149a0c7d5cf94d0f012ebbc8119175223b3440f64c77f014b0f1ac31937955a077508c58466dd4988e7b1f51e96229a64537a1688a37420219a722dcc330f3649d25836bd26554fecd978f71dfe6f2b01c1b773444d9ad64fa3e540e25de6c59f623c5c670a90aace0539461b0c39784fd4f9826ebbd4f481d803b945e51ce4e7c4039a1c1db5a317cd4c50bf64a4808811a045cc08c3e844ebebe1e18d5089faf94c03a497315ff31183e741a6517c5148110000de7c6cff553ad1e672e13558f9ab6a56ecd96fc0f94fe8804dc791d1dd8878cb0793f1173fb4f9707b087091fbc973dbe43133926345005488b89e8597914506f9d7c6a1c81b2d98da2eebea8ed7570f98202729fd6cc5eee59eca63d697bf4bcddfc900ec6541552ec120a3a10fb400afa8c0f32b420962b71e8422d58c02258acb43b8ec2c7c63dcdbc6a88bce4120fe725138c70939c9b7588282ed370c514111e0458687dbb25e39e58f699e77f7e4ef7ba05faae901365baf06e252162595d07d611423e31e6204d487786ed0b4b4e2c1c5990a734eebb0eda6998b5c5650c9cef828582cf0458a2a631668495c24d497150bd3404a4f80eabe5fad03636ec14d11610c6f5c1efd44465ff1edc912725a3e267d94181f91da6142fa0aa46838522e6bd5386657c8235e7bbe5474b7f7d697faa8c836ad1c84437201a4b9778bf3def504976d2f91ad2b4829fd0bc1b3d02ab91354ea446fe26fc5b863f35e0ce0ca8d1a0d5383eeebd783ce22e8f4655cbb7773491466820a56fdf8f0ad39f9a9e0a9b0ab859591da873d6083fc91ad3e3213f6e8cc2d4e0a5a97d0e73b2a37d67508d6ceb0f042cf90f8093015f53ed8cb337c6c6bf73c9245fd9d5763d5e9ef5c48bf4bba43b9c9517d9e625c95390adf4ca2cfbd2ff82946b38bd039c389bf227bb125be7ed2e6839348521306ec5c639deb4869c8c89119425762b781bc74a292ddc113ca06fb8c3f65fb8bdf8a85dca8cc57b426061dd152ccbb28c6aa798cb93d1b1b03bc99e76aa5dcd790f163e9c925350ac5d1043078f0e12b9a719191f3955772cf3b1f4ec37c9f5256c81be5ae60dfb52641c55edea92dd2473621aeffb7b29733e1294bdb5857c1b076555d7616a1fb7e773bc17ca1dfabdd62850c60c592f909594f641eadcfd6cb41c19c012f0705dd42d27c09c3e53b109712fdcd51b96c75935d09493d053abd4b50aab162bffcf3762b40229ea6ddb12560e7c4ad9e769d2766cbe817d3769a67820a48e3a1a2809f46c02ab8a39af2c63dfbe430d67890cfbf0859659f1fea8f005bd7166a35fc9482a5f4633fd3cf535fb859f7ed87ac565e36c468fd25d0cc69c0633cfd3420deb52ca18a540f54b0f625e904d49caafc0c3ac798185186c599ea5e56960136df7ec7b422d968fb0da71766329c05f30edafb36744132a7e9f819d140871b3c6ac45eff6170edd42dad134662929aed5371bd5fc9dd9b3897116c4a3eb16be9b497f72c66a5a56c63d65cd6b3f4bb7331e4ba1450f49d88de7ced690703e8bd69e4deb50b5c47ff30c7f6a4804b61a4a1af51e6e3d5009de328787526a1d375abcae870ade1ed62b48ff12ddb5e1c64adab206d5625aa84b1c94ad0bdbb3eff607dbb916a685212094bc5488a8138658cba9a5713c97875b8029694c432801527043a731c2d6bc6a94630c444be322325a10199447f9576184bf1462567548125405acb54de36d9a0f3c2bf0f481010a13db016a8ea736bf547e16402bb7a2f2e89691c825d69298a6e461cfba3fe799abb26e8802157ddb9b39787be7bf6c4246400f190797ef220bdddc0e3a659fef99dff21dc7d58024d849d14bd4bdd0dfa31ab17719ebf17df40ae3a1da5eb96933655d14a0224fca4d1720d2418d7e7c67dd20ad567f9f8c20a664efa22b3ecd855cc92ae54f928e29800edfed8c68034f24473cb694375d33dac2bd677bf8c0bf1c469d01b4e913bcf9fc2f0498cf736ab95036ab93fd144acc8e181539bd334c3bd928962b0f45dd9920658e898d70aff002b79578d61a2405642d1564e048d17aef38ca15d22366ea2a1b5d0fbf46d19a228b63a5a8bcf2d563285ee718c60d1829f3976ea33e96b6d9ff9adc002949021dc3640c336369b5e9e2227795a103c4613f74f364dc7d32d82d506a76a2241d027354f6b76b2b17e10e6b6c48abc2e97895a671e5878265d71b41d5dd796a948c75121bda8d7306d7e67f60eb1b8a1c4543b8f1fd7cc531f40ce91c75db91824778e30c0651b6ae1204482c866c03ec8ee64433862f98af03cad3d54dbf6668d19d8200473c5db46945df781554935912867df39d3d324311289e62225a3d897bd5113ce1a9bae8ce3cf69f26debaf3fa67ca672a8b54abcb560bb0c5e53b82c663c7c00f5b61a4837bea5083a77cc8bf41c123d2492be934c03f900a6b45dbf0c913951dd7ffb513ba5538404d6661cfffb1789316e2df9972f11eaff93aad2cef8410faa71a63bb1f9d6c94edfff4609cc24d3a9b293f2e7f7c1cca383e5477ca7cb26ad59b008a5a55b29c0f246128e2dcdf8dccbf29e33edeabb49501e10a5218b7397f11c72966bd2f622d0e3c8030211f77c51a0ddc25bc40b9a90c5eba875ea00ff52377c8ffa93862f7836fd48e5ffc66ec3c070d4c702730d41d771135c4bd1bff419240aa8fb2fe1c33a611526a923c8db674685c380522fe534969cda63c0331f1362549100351bc6e0095f934b8f9bc95202f0daafc8e08827802ef734f49dbcc5ad9a56a29a4e70e50a94dd8f63d1e15176e69e0b4211368efdfe80499f528dff98821b65d15d23b519294bc62cbafc360b102d179ab182ca381045e8beaf370d012f10ae6604e7d7de403856731ab55aa8d52f41fb59b909f2bacb2fc597c0b4aac9e0420a6e56c6c272636f6f623de88d480fba3490744c34ec2e615e9885207fba25bbe389ab23bbac10d5c0922a07acab7fedcc169ba66a0a2131d7d14bc6b0c08a5ac1f19edd1269d9333c3e11b1dddf17b61de592c2373086161a5b7187d5ada593218a393ad951ff6f529d238b9dd13ae3ce94752e480328a69a94d12f9e8dbd86e1a2d29bcb28e8941e719f7a753d47d4aba631691086d083c5148b6be5cbd423cb05446577df4490181f33f361efa7fefa65538e279c8930a19aa80c461ae1e2850fea992ed82c98c49b05b84afbd4b4c930395a473087782aa1d156d52598cea20c42416828cd49101b6872bad8f4ddea2dab4658d75563ae4936ac9bb364adabf352eb0fc395a768d5e006ed9e690aa7fce67b1636b35b7f18d3a7930e07a81af158ea5f02ed51f2e61199e95b069785e1785811ea560a94f891756ce7831168b571d56f88c0effc416397022b59aab9b150376fd27181e22c4a7f9826e49120eecd13812edd0d56804c6a69e131ae9d51445e86b23671a18aefb698db773a359b10fb1e72ce35af0fc01757f8d7f3d7e78723f4b681213a7797ee131491ebf2dd5275522f2f4b9c6c494c1f396aa25cc0ec0ed3403ba919a725b4960e889fa7c425e263cdb784f8117524a979b9de5ded855b1f54233f859864ca574efa6a663f958e0914253f8133650f3c9f2f002b8850b7b9adeb1d46f07067c48995f432cd469fa2b426580a8f12aeb61472d5817a6c29f8ab09570a547d813d400fd6d71f640625e572db958faa4cec86821190136639dbc3c0fa408def7a7c3d4fccb2272569bb7bee4464d10cf703dbe657199ce6ffb5527b8749df18d8e128a75d13b9388039994dc5ad4eaadc2fe268a867738883001f67c9b09cd3d11f16e65f91b607898e2763188b850b0550768fbe5d548f1e7428e6b5ffb77fd12beacd18ed8a2ecfe5d5b96fad667d51e39462296a85fbbf29e842450315e141fece76f7d26e09857b2133be67ea7a082f6850eb2014f48652a0320baac5b0abccec4ec1699a6cb4c2befde39a4a8774f460d3de71791db65d513aac9e77f32ad640329caa2eceef17ab0f06f42dd093de5870283ee451921744377998b4a0cb45aa24cb4987e151c7e8813738a3c5f341357f2dfcf4cc26bc69ac064f754fe5730b9b6a22737587fe972f99d60381c732e9a04f87b44c06a851f3c92eff2289daec08a60f0ee13697bb5a4bc3b181c44ae177be83be5f0d885ce15222bdbe34f5dc1f95d589fbec824b45b43c44671cfa77faa4966bfc17313996929211e313e7c393bcaf03e804952c4c71c32face6d27eebc236fc3336ab4f0c3fe79a49f85b2ef519b878b7e7d1d344efbe4aba5426d0a61469652ecc6553c3a5f0d2afc6fa8df5908948cf45a2430dd9c83353a04ff0a621f3a322d76fe6053adb9867c96ffbaa918d0caca0b0d543b45fba0a74dfd65f141fe725746b4ffc7cc3b1b3da00ddf553f292b5a9d267cfa1d652dac585ffc532495e55580d32371956928a5617ac1e329729e3161639a7d46261b4b2919ccb57612829d71db85c487b54d2b6266e1a95c24043de115d16a5ce4044f29167f3743d3cbdd759e8514a187d2c6cbc9a08b0866172525fb029aa2931eb973ff18cb0dc5e1db627cc3cc3cd152aafeccaf97aee3b792ac9dc15217ee3135f5f2c99487b05cea204530d1a97954e6722ce0acefc1138a42be05aa631793fd45d3c3d6a001fef727670525af9c22a2e5399c0e824f411d6e6df8da0304fe747cbdfdfca50e3497cfee893ed8c0eaaece93d0733b348846b0d880086317a4f68623f85a99fabbca9477620ed4e2c8336a3d31a1eebd51e5ea8d527a66ba33059d92483a60449191d8cfc3e09e4adead2a9655697aaaea475288ab6ae2092c3b3848535cc007efb216949f5e39524e0c85e077c97219ce91965b7cf0112bd7d694c0e4470a2c4b89a3659659a550142c58d86edaba47d73dc44feb4439c3aac784423d99fabceb7a76c7ef3177a0b3c8186e0d34baeb5241c87b6514eda9c8757a67f9f0f3e3c28c8a97963ba0d8944b10777be1f5313bb7205cb886d6539d2fea06ff29ba681c4c90474567fe6efa571679b0f058ea894798895e530e4143924560a6b85c4da6a1c69712e96af0c899361d5f7589ca6093ca584b7aeb712b62e24cc0d32bfacf683651f626bd1f39b1939b05c6227525b884ca57d91d5f758624b557e7daef192654e060e13288b665c6d62c65dd99a028376a5f7d34cf2c11d5508f4e134ee00a6d34bcf34d31f24814f688404bd5f3f2731ffb37b9b453d87b3ea6b399fb011139d956c5e9d16d19b9bbeddb2542f14c6bad5207bd3202e8eda5e22e06c72a043cab13b9c45701691b8ff8bf01050554fd124007871032026e040ff931854293a7a7a23554c2643bcfbb06bf7389b53291d7a61731c2cf8a7ceb95131d7b6bff3ea035bacf200a34989baae72fe8deb74bde667a016f51fa60a469584558473b712bc44adafe8aaaa3ddf1f16828af1e55baf0296b9e00e80f2721c01f4b382c91c573368c3884a5f2679dea58822a8117f057e347550c72f9dbbfd9518f5abdd3d70d70c4f67bb7d1995ea0d587d5aa29cad87384146fc8a1345a03ac044b8b525754a3b4f6acd7cde7de5bfd5037b6d762d8a4eb088088459e22c281b6797a74369e2eb64cf2eab15d79a1a18dfccf1facef2c7f1a48a5e975b0d3827485c93093af44f2682147c288255a78646291e6c0d00b3c7ff5a59288fba09b8e142ee582274e44c281ccc0df512ab8c14a8da476f66e559589bca5fccd321be3b982c9716aa15d94c6ee88c89607cd285dcea83ba52c5314096b62ef2264b267017e37d79829c2fe089c0ad93ba62a61233667d0bdc0dbc54c62f9cd71a443b84b4a87cc93da577225ee8676643612ba80f56597f9fa874db29b214b70ba9dbadb04009a96989cb7bff78c99feeaaec32011dbf30def06fcb51e66ca78f206e1724a92222616fd35ab48310f7ab8d305d8d5ddd8726181e8927bc56e2686dd9a6deb64e3925eb223cadf4a018d21990d4870a888afca4014623d6bef9ed7e10528efde2c5c523e37934bc431922ac0c566a11af2ac5ffb28ccabe6cdd41ff92ab31906ac3ec76a8a44a378599ced8f36ec0fe07aaa5d13092bfd01bf439c3102b45240104676d8a553322c9dfeff98f7d5a310a5641bf3963548dcb80f52c9f546caaa4422a291a42ff88a68807242f9f985b50e13dc72781587cbffd5f145851508cf175a2eada2ef25a242f46724346f149df906ee1bc23259bdc882293f0a14722511bbe8f1c89bdf87a55825ab3c491274c4b40d079947593d61bb4999e51371ed86f882ab9c510ae1a63aa91662f3221628bb07aba18450b3fb2ee3f08017aa6c3f8b2612de01e17027e6e83e5ca33759cdf9cd2dda12407a7c03afe584df97f0128fd05fe1b38955db0af4434cbf2b0c37c611ac780eaae95fbac383baddcb8cb6b255fcf1678bc57f699dc76e82696802de9a12a93ad3a8a61c2eac76dc351f936c548785cd11d373016b7fbdc427c569805cee69c0992a345a4c9b63062027157dbd869091b40145dc2b9da2e01164f613911fdc932722c91cae9a5d6b7765654039887a207dfeeac35e3ee8b35ea654739d43e1fe24fc141dcd4f59243bd78bf4fb78bbeffe3402c125cc0dda9311eb4e30610d8caa6c6d7a83d0ec3db4202d944d7199c06d7e71c776568ec37fe121497f810aec19e88c2a63357d5fd50b0e080d866492d21c62c3a15d16918ed0c8c2cd6ab5ead370b5ac789f49af164209fc72627af8ba1445e3fb3b1838ba2beb76d4246248b933faeac27652a8534fc1d9c95b7cb1fccc1f38ccf224667a9bcdd4a3c3674d364ea2c6ba09092fec3cc5f6d6289de18ae2a273526ad1659c2872ee6f790841dba3ca8f0c5c08ec79e8d6790967fff638fee80e25d3e41f961a8a92c9d6e320d99dfc03c1b9a5e1f7d3277f8b5d425d7737ef2bfffd595fee921cd749a7626f6122d39ca6669ea31cfa8d973cb33683699fc8ea37d639e4f9417b168bbeb37a6bed523131caafa5fb7c67e6135d850816026b064662eeb9ed15bb270bf69b849259070cc7a47679c114c088a5b34f124f058fbf776dd9f6c24d92180ac1bdd62b5930ff00a3413fef7af7ee6409d3ded5438fdcb0a024b005a1feaeecf56414290fec45bce2c0b247cfd5073640161c1e3127c33e055de6f68c4633487906697d14bff5d69f39006bec72e45124758d75f8c436f19e504a6e60c514d2250cc5aa0c0815cf40e06086202b5e408c6432d3be47705510ac6a76d69177fd19b9ecc59e75ab0014d9cf4c05f96cb253cf56d128153f37c4732b1071084c4768f4d49a83e3c1b6049f5aee41c8ddc2b7d9371e38282512e922319b1a155b806b83ae04e7ecd5c894c21f1ee7da64af26d2d398d5e81ae77656e53b0bef64b545dac114f918731465e79f7fb155d457aca69c13395c6a79db46e12a111f396d968e14c816eb42585bb260859bd27a665e001c7ac9a24333ee372ea484b0a7414e1e7dc724811659908c1d8099f20ad29d0f9ee9ea514442508e0f61534eb01273f10253331c3cf42e42be45c8907e325ce2e5b73c5a229deaee3365358f8062820f96e7bccdfe8ea3bb08a3ee814a138883a0c88e9c35cdde7aff451bd321b097aac43d2fbabd6a1cfa27016641b6cd8396e0ebb5bb067baf07e228843f40b50034b680d98ec35e100d5dc73a1b6fd296db6744c8cb6fa676513a021758a94683ce5aab8bab09a8d887af0da509cca623015a6ab142f0fa381cc82b9b0508407bf245a940b5776c17523fe6974cbb434502c05f329390ede6ea647b7b5e78e71caab5b454a7f49a88358a08bfe330a90f0aaa2926eb11ef1f73428b0a5bd8757c4b2c4e7925818f9b62f57b2d15ab30fcb88c8a4b30e28d8220b5e6f9489055c38aa035422372c60d266e4b5e276c6af50f2392acef8887bc80838518d948e971bd3956d86de8c6c0e932eedc5118e445e8c4d4b6f86742714948c1ef09ee17eaf1687c524778fe92bbf0dc632b657e42154fa5d24a244ec4c48cbe6a57e5d819119e6ea3dcd664b5fc8f5368d06aa9e3715bda00d05fdec364180a31467ac465d8bfdb824edb1283362ae63ee7d6e1c0b769a5693a60da3d9d3ec814ca500f531ad46201d2f3b120f22f2017752ea7ca4bea11f875df3c640e254df9da8e9081c733aae74663fcb982d1dc67e77bfaa618df465df6154d222f00ff286fcd57e6dd10b35db2a33679d0216b81a777f7c8e9483a90ac22d51893099ca31750a32b0e5aa77bf5a471542affc83b8f29197e4126f283f74e8263d9a4200dcb8294ed63868e4a572237ce5b92ca5beda267eac31e4ef0cbb71bb09b5735ababd211bfdec0db4417c99b947298cf4ed755d9ca1d30c1a1ecc2dc3365db30b737fd4d1474862fd91155718ebecee78cb1fcc4c8ae750dd7d2498a222f9bd950b5c1a32c65470371ca7dc9e6dfe8bf5e17e10c6981c12877460315bf8a557d2f8b7726e17c7dbfb4797f6be346e9eb60bb2e61c7ba0cc89ac7f6c5896cfaa95f3fef3ae23215f0970c7cfc62e627164db3c0634833bc4be97eb7ce416c37e8fc00ed204d19cf49f752862a42d1f57152000673d6fcdf391706f9ef6fc5f774601046d43697549badb20eed6ecf771840f9ff73d222d8984a29f58646e44b2fcd09dc2a149a9c192d745d4d50f517cfdc25fefac876723bef21b8620e9c3056a7feb9c4abef5c2b97f2a3f808fc7bd29ecc4ac15b0edf5bcf8dce46fdf6f25e099b4f2b3be2b47140a8ac6bdc33f576b821dbc34f08270c36d0d932682f8f6f1efa6daded43fd9b361da037e6e774f08ae0b5b50d96b07ebf0a4c9707f2ecf778eb238663c629fe900b74785a9985ae925ef2857234b2b9dcc91ef67612494a9d4f715fa3255fb6daae881452a0f1aed2ea7170b0aca6f06f743e5207056bf5ac72ff01f66851e81653404e570910fbafdd49eacc7afe8c37649d66917b778aa3c0ce40a5ec2c513ed119337af50d04933a33199cb88b8578d3370a5eb59e874fb657d29a6472d2a54d03d125022004406c4e14b24bae005d2a9f34d5a47d3b55ba9379c2bc96892b3b64a6c6bfd9a5977441538bd0267f8d737c9a5549f9a4799dfc83aae46d2b175bff5bee79dd42c6107f7a602b50c40963df5f5678e6c5724968408aba3f1098f4bd6410e1a2d49164578a0988e7b224fa7b9f16a74e96afaa36810a304aa8bf46b0fa94b4a1c91c108745f3b36c680b7259d201493ab8934e24dc40ddee6554c2a5226ccd858ed402943a81433acf8b67e0468975984e32500907aba084c00cd8168f96c43ca600f33ab675735b94ecfa63b3bc9432cbfc11441d9a13bff15531dbadb940155948ea6b0b7be496aade78d8807e9eddd646735450f6753635be4deed709dc1825578b6ffe892993d3572db07145247367bdaab636db0264bd4ed58cd977592d0bd5eac2d5a83d68411daf323e4451b8c7c8388ed2001fef75ba786932556d40fb358d5bd093947d39ea62ee2d2046bc12665c827dfd5cc28fd08c9a95db161c0ba382d5b183147e71faba451b75fe3f93c9350f80ade798b88faa136e258355ba2a0f7060aa3e5abc754fd0c64f80e5cbb4a1d0708e2b894a11336529f03dc070ccd29dcec38749137d45b661ec2e24425bc95bfba3835a758d0604cd9628047f81578bde54c272223a47308b2b712a73388d85ab03cc737a3eb0eb90b9a4622225b7c459fc2d4f8fece2906ca6a804b4624eb3d6b227727b1c665a4c105c6eff1da2e4b2446d371a4fb289c22288e0ecfb08cb978ca57b2685056f4a887fbffcf541de2966065a38a0ec8108ba2b4853370f93aa526a0fc8e575bbd43342411bbde4358842c392624f6c94e159f1dac59897fc04629aec568105be9e10ef98ac544464a043433e4afa8eff1703dda104b45bbe3550d4148626708ec3471003e2d5b833c11d76b62da4709fd34e3458a3630d63e0bbc3f5d712e47c09dfb712c44b7da8496f0387e41e756bbff08fbc97ff4b7181459c8ff59bff7b7384191f95551c6ed5341cd56a4e99646f9105cef98c8d91d099da6b57daec0bc2aa67a4a0e0f3255c3e29ac763df7bb7907d898801f575ddab5fd43ba7760c4cfc80c647aa4ba5665d77e6abb382d91c83731740f3684d8d8beaba3c9ed4e8678be7deb60616aac819d4e35c781460421b0bb06fc8e1e98787c19305cbc37e86681ff641a7c6fdcb55e91a5b111a8ae1e781e0685ab9663e3337df8699070af48dad22a43ff3e9887da05edbc1e10570e3452b0c2e5f596aba5ce0ad663d2469739159834926a193c3a8b9f4cb4dd646044a5943dc4a5042dc24c5cdc7a0be40acd80dcaf1af586dc6e2a31b0eb34d0466f1508ef1aed77a1200666a904a4da6ee80e5a5b27a2bd67dbc28703677616cc91f4371d52e1d11a228e69bbb51b030e7470186bf121046082513a08262b4f4b566ab130c7d32ac13bcdb7000a1c69067877775cb12a7ef7ffd314f1252408526d5935b0f75aea25bb9cdc5c007f72a39547e77088762a3d92b04d62b28b9b2afd9f4cbff122249ede4042d9e5c334e2e753dce2cc2ef1e6bbac73eb3a8577e643149040a80d3289e0dbd9d4a0045cc2b0351006e14e6299819bbf9413302a2f1e260bdddabfa05ec8cdcc8a17fdf70fdd11f309f4bf9dce0960cf12e1594b674e332386b26ad6d6c37cec5338a1336f13d92d762b853fe6cb0a05113d929e7f834e5a8fc23365e6cd8ff52b8a4d191487c28209d816af2b815816bd546e57664be36621c23ba276bd5bde5c026bb57e478ee2f63a54f9b22f174384bd235057d30e1d8197b2b5163acf0a868f615edea788636d3c867df7043a12c1d3e1ea09310f43880c683577b5dea3b05faacd149d16af47fb6428598ea37810d7726c39a9f2c28d4e5b4c4c23cd2b06b0dd1a1769324cdd2b7add3d79284701737ba3fdae34913631f25470ff6b78d055eed90ab9878e1f3023fba6559579891a0cf123a305075ae042555ea81a54468b45f77074a641a4ca1c7239d6a47951616e264df0c50e129be6420ea718b53f2c8e531b2551f0ba03accd9004404ea7eb455bc09f0fa033ba9361615265f579fe462e73877e419b16ccfdd777bc769ccfd57e52203131c87e085d45cc361c1e5b73e44675b16a085cd0f6ff62444d7a37c4b42001e18817cc44f70816189509b6f1156655af1ccb71243c07428e1929e7787ac34841eb01e093d314f6c2bba3e44290a94675c182e4cc191de37d8cc58c56d0434a20025483bc3cad810dc6fa6926e4beb4d2a5e34cb324a5e1dd06481184d7fea8c1d26fabefc0e4f2f9f8daaab0f74851c64e08feeccd808925729727a156eddc0dcd0423f66859f18cf1e275ba9eca476fe60a2ecb33cf3733d5efb1cd0d422d310ef20bd73976a535b19b50478470df308292d9a9355e303ef78e06f1618d5febc134e091a0e33e62187055a55d7fc4f5adc58aa0a37b5bdfbd9c939a9f8b6beb0c2dd80e3096e3e1a79b53afce1fcafe84b42efe79a51969830718f1ad717278f09bccb0bc27bb5f5ba15b12572f4d88f8b1800e8e81e4127c7302d77b8e4ca43b221f463f64dcf8cc491af3ac6ca05cffd439ad2a6df492900be5f94851112b809bcbcfa1e68c2392526ae96b4d607bdc4ea0681eb8eaad023a7f7702005cdb2b514a4bd1f79d64a554f42800858bc0239a32e77e6c4a6893d6407c7338a70473cf8dc56155981cfd4d4a4308f1ce247d71ef8692cd1fec60f9e2ee75c7e8ac8b77e005418728f6d61597288e30a27c9c3580c1ffdffc86ae18c1984fc62021a0043e455cf299b7c40cce4df3a9f6b005940294be5da2616654a6e66b44395842cd3ef610f0d2781602824d3661066d626b4053b1dcaaf7eed46403dc813429c8bfbd38e566c9df769c06cbbf2a6e6f24c5cf71277e67d49fdb5971ab12649cbf5ce98f6555b9a72003f403d955a5f7045381dc9857f43669369236a7220909f245b375d681a9eafd8d938451d52752745ae307a11ab53a3ed3f06e7e0081e77aee596bec046471730e05af9897e731d0a5e44c218cc222bf709bd2b1ba7f2eac71cb47a0460f74a0434ad97fca4d19da4d20b20ea543ac8777cbbbb498bf02299dac4e79f1b32c15028924240c3b7712f02168d8ee7894d4d74278150712303cbecd5a7b171bf08cc61c76b448f65682209e3efa2a691570969e47884b9b1dbdcb7220abd818aa573461ba00c2ea6f7bdd957e25707cfff686bd60166816b9d787ca2c6120cba9ac9aca84a0b559ce036a25954c6f42af60c8b773aa079178673bd517d601bcc6b8b479192df1394255842deee70040b1b948866f4123f7d8abf546f4b2e7d05161270327abd8f4ea748c31b482420742308c8da47221cb65a0d3d30157df5643659581ce9b30907cd1d1a0bed4209f62d444855608c93c271b39bc2804ccfb0b68cf135578aad06aeb02b8b3e8781190df6edff249d5c9a5c324ef718981c1b7cdf140d3b10223f11d6ceb650e491868e3c7e0c129ce9413e48132d03216e406fd55d4aee4af918de67a620f2a0c6844547407dc1d9e1be557dc1d04a3ca0ca2035442957c551f09933b627665414775c22764c0f064ee82ccbd452886543a12f0477305b102f49c5e332494ec1585cb5774a1e2edb55128f4309b9fc5cba7adfe525b43e657093749f8a4cf801fdb9628699d15f5490983e99b15e37dadd6516e734d4dee04119d15d66a08d466df091583c727f617d7599feed1cd1c573d2f1780f2aa35c0ed60176cdd366ec17583925e4098aaf7cbaaff6ab79254580b64f9d6cc411a0d575c341aadab718159d2001a3bd58f56f3c0d7bbb8ab87677a4a78957341ac76edabf3308accc305954646f8ee2ea6cb55144043bcce208082772753378a8e55e22d6ea3002049cd0304b6eb056c2bccc502de4df21c72ed6cabd95918a1860364ac9237866e4b2d8edc0bdcae71f04b2b3e78a5c5571d257990aa06d918779e9741930640979b9ea3ded781c3f3b5d04abaaa74fd2bb9c1fd00c9e4e816ab0ab8c91f661fc85c979f1ef31fc43b3eef9e71b6fd62033645d43b48fcbfbefa3782f07737e8a8b07753d27aa3700fd7f449b9e6526dcbc7f2e262df02e3d49341973c9b77786e34027e90286aabe065f6b5335dbe2d6c916edde5129c72f605d36ddda1964cc7fdf200367952ca8d840c2765eea320891ca52ef3dbf4b8f5c31fc7e3d8fe093d45060b3d9756819e078bcf20fd205bad1b8e9e39a4a3b56683793f86db11bc68160f29257439d1a268ef02905f53b533d599340fabcf2529a01ccc6814999c687d3a6f5eeb1d82ded8b68c31695c9a621c96e843d7ee8c88ea5bb4a9aef7c20aebbb986c7565f48e214c78f6734fb902289cd5597d4ecca927f6c8aaace654c400d2cae0cd5cdd31640a065c03ea9561f23d02b20dcd5831dd12949a7741ed9d3c4d269b3f9ba3025a8590285f1b42c6884c0516b75e9971e9f70c7ab6e032412ee0036311b817e0f6abc0c9c583ad0817ca3d7084104f4a12766ae4a7c1e16c3af4cc0c245f70319ccb9dc800e4d38701aefa83f72ddd310463792b0c5af790446afe4f1c8e57530f3a0481049647963c08cfa46402b1d796174bb478e78ed692b76649894d52c1325205ecde07a1952f732ed3d45c8f1427cd120951173af9a1157a980914963fe300e57511cd0b1ae693a44f7ae76da4c0d717eb907540085c6d4696f4f3533c8e1d8b01dfa3d7f653e17afbb4cf6affe3884cc7ee1fa9eaadf7f7f26d747e32b79638b0f46128e58611fe7451080edebeebf07f63917be8f014686c3c3e67467dae6fcb3c8a0889e902cc722c5804e7230ac69048ab109bff120fc9777e90f9de1af618e0a46d1a4fbe721d5531d8eb79591996e20390a61fa9a30d21f2b07508cd8c02ead1be709e143ba56c25cb68fde783c190961d07bb916c63ed68a455bcc2580d94a25cad86e0bed6f5e8cb44bc909a6d7e2fc94b1df4214bccf156ceaee7ddf6ec68f2fdd762bf13c81b702d1959a0ed77445de7d8255b88d2ec4541b9c9866e1ea7a1602a6182fcec5260bd511ab652cd021c1ac2b14e216e75899b35d2ba1a26e8b0158ba6e04b3f1192f53e5c08ab0527b5004ec7084f68a3f2c8e78aaa02c0e5cfaad719d1bd5eb2e52326fc430adbcbe078dfcfc2b1af669478c4e87b5c47786dd7654a4bdb27842a89fe72ca1f83a7ac73ef43f56f65b25ca52a8dfe21c08c14d18b99ef4b7513b47cb2719b3465ba1393fd03a3026627ea42a239a1bef441e0bc259ed1c700720e735a1d66321250f6f6ae4a0d79d8e38b6153bd208f73c5f2ff1c629f8ebdb7b7083a18df3f82bffbfe0af15357bce6c48cd359031638cfab54dc16b2f5cb8b402b7400cd4caa552e346755047fdf8c451707c06cb6a76833540142ade6374d17874fec8e14737f266b5f0e8f3d8760b3bb868741123fb249b8c8390b9a0504e9338e58bc3f802d989ab53886fe54e44a23508781cbc5579b0b91074f1e6ed0cea3f572c0705f774c08a012a6e2d100a2128ca80cadf025b804977e6aa50bc23dc27dced7949d7aff87c5f134ecf36e6881d9fa1f615f8955f518de0dd5f98c371b94c8987d3571cf57acd198b1012c010d853db285c832b1cd8f96223e41c7b59e80653d0ca81aa8fcd90299a54ac726b1a77686f9808150d162c94161603fef249bd97f4905b31a1bad33afd7f6c4cdd4d21ef1b47a88377196489c2c721bc0482b4b55029b73972bfcea6b80107435f1c34ed709c29bf8c4fa0744265a462d0d911f6255901d73659dca442d805308ceb2c4aae67f06d3858541eb83cab95dcfb2437bcaa8b697717540c8e5a95dd5929b60ca24362760e023c5d452c0f448261ae8dff0b37fcd81f20bacdf5f30992d9f41b37056f3029ab4ccabc64fd8aae557afc6367e5a684b52c1244e3a92395559e5814da76239c07c6e22fbabf86e78af52ccdeee723585a70d57886d80c9c797ff927a7967da87026b47448272f0f8a59b2d7d565deadb6401987f7ae9ec0578280a0a106e9c153a5b778a46e25fa62d9c6756f6e8e914104bbc70a217076ff9360f117e6417c7ac19bd35ddac85a99b178fd1bf98dedab79209bf67274252abf0f81d37417a22ede5589dd0191efb3fd2f8c062c7addd4bb8fb80a3b3e1e80869739f6dd2e8f50756bb48e84528f69aa0df4782610108dbecdb97ffef7f4715c5811cc0814a6288e2352e99236b249a9a8545a0ca8b14de474b63c69e13cbc374bcaabb125d48bc994aa397bfe0105a2fe4ce4fe7d4a1c9bc91903c57873069e421686ba0cf04ac7bfe3cd0f9eafd64deff69401332649ae6c27d3d993dc939e8c17390393b7fcdf6413e1ce596b7f2337ca649a500635046552329a77645e1bb6ac76ef5a9b5e8a9a30fff61a7799b4f46ba96cc4f68bb95620410b1bdeae0b244eef52ce6ade03a3d32ef193aee392c7913e55123e383039c7a75ff702a4a9540fd65af2d57b0ad5e05a3999673980c053031e14fb3c13cea7a273a2b5bce205f9b4c70f46912a3a34bcdeb5e5de511e2a245be8f14a0220d31fdd87be29c23168fcb14384d0fdbeff8673ba2b92898c2ff3b8b0dcae6a440d4a0944a6a11c13167e20ae79b2b61b7ef4af375fc22416a2cae9251b931df6ee8feb53dfd8c25345f3b42a92d8e4362cccdb64f45a70dd282900af6b3adf6aeb7ac1bcaf0858ab4205c3465d66825ad56d191bde176d13ad8e23786349b67453b28ab649abca2ae2bc930652fbcd9e454fb5129cf1bd4aad73219cf196e6d8fddc9eb0d7167b684002a818df87185f24726b3c55c9677c37015d4f7a3b79a4d6ac5b7d00b096bba7fb5ac59b4fa5e6c2ec58bc2c42a7d7eb1027ff5a13aa2da07bc338986485f8fca73c620bd9004a76321a7db72d19682fd8745c70a7b6a92edf45642f7e967929bd54f15a723e19a2c465c122d5f71158c21b52b3e7622b90dfe6d36fdc47ccd626e133ad2e5e2132b03f56a4ac1f59883911c256a814180bdfa0b97dae435d8b56071f85b2a90dc08587cc40d38312b4ba47d6cebcf954f88530793748ac6bc33cba5a83d9df0d61c1accd321a720f04ace45c2c2c7f5c9f61e65f4405028f5921a4f484a02729d054f68c779d976d40fe126a549f9c5a33a5815bbc22e4409a61d1335b7e87bd01ebe36b725c030469ddfc9c2bccad8e43dc6c3834aadc049ade005a28d691a2c3c041e1a5be573f01cf0c03cd3bb1fbc05bf5ce942c3a2427d9f4800f1fa85a3cc224056ebc8dd98c48b8185556afef9b462cd31c62bdc480cecd8541b7a505a2039ba61d124459be7ff0ad8618ac75738fffbe8b5603e6fee2a56f6da37bde6d67b2322a0f30950de85430aad0094275c7568bb2aa1b78f272d3a67d98061de7d9f07418a5417db98189937a1a7e09492da902e8563874c94e2454072771b73e3453ae109f413149f44f2d4e56a58f6e38a42cc5ba2ac22762e2ae1a910f514283083497f95415001d047772809a833256b750c178c165b62db24cee74067a86f174c2ca553a1dc5f1bcf592a68bb46e0f5465acaa41b03dcbc3790586df1d5e6e0cdb59e30e4f051685fb1f3713b91ca939e80198b494189532af0015c7905db9f80cff4d84210468a68720f4827149f4bff2d4715176b64c874006a4a53375eab4e50aac6b6c43844f7c315787f4122c19e3f810165169cfb10edd4424fa1d581bdafa22a51df4f05bd44a5f5618f3a440abbf63c24094349e604a44a6927852e160a15e0a488e1576d8cd15e5f14c43a619d7ca00b97aa04b8eda59eff76decdaa20f7809c17839893903791677d5da225881738ef3c1cd140c3988fd40ad1b093d4261fe12d138ad74896731084431d620e20f9d196f197ab46b53ac56cbdaa9193a4ad8f85663ba61b95039f0e9effa94790f099480c5ae4bf5510508387d09a65727c8c829f0ba0d85fb2f86cfb632996f9b0ba06d549f47ed6e788f2bbe391dca7dc487484352a9ba9fa44e490fa5c9d0909840e86c84f8d8e438b7cbac2936cb1de3a60b6e11dd43339e0b6417f3ace987303346138349491d6121566b6a0348fb873e09ba1b40b39e8592636cb32f3373069749e22f5844e58019cac324ceeb3d948e80cb20dc22d4e6bf4b84674df9ea67179915b1396c8264b540f4f46d0982bda1b655711d8995f7a7e8c549f4a65cc634163345cd217540c2a9b029d80fde50c527a9f165e2738105ea9abfe758acc8caddfdf7dacddf7499c7e2e7ebce7cbc9ad93f25881af3c7544cbf04609229cac50fd854536af3ca1511d5a356068f3bc04fc075720cf7f72b76bc6b3e27c101215fdc3fa098833b5567fad7315e14b9ae14fba4c987f1d5ab92d9fe6eab2f4ef05cb3cc6121ae5891170d2e4f2209d0f26b67b74a5ba11c466e8667e9e8b66ce5a87a90a39cd0165fc4177241a64c0f3a0a0e67bd30a334e1a8bb97e299aa16b22ff5ce98ea7e791c78d407d331b9719de6ec159c8116a543e0ab8192ebbe0dffaa2c8e738e6d0309436a35a6bc856565b9c15adc997602fd191046724e3dcc49ca9e705cc13d2ef8e31b99bf4b4f48add935828f38efe9b302d5643340ef680ed78108d476ecb36ee66e61c8d00d0160ac1091043a1de0c2e1d6a447b62946ffaf3f84b283baefbe941f83af43518c100f5953351a06215f2478a6ec2da77b8daaba55cb9591112f370ba3acbe41120aa204165146e830e130cbeb13d3ada044a85db2d58f1655c1115ee30d7bd419e08d355eb762cec8d59e8b74bde88d9d259574f62abebee84ea12fc0d3752c0cdac93ebce54623ce82307a828fb5e3568e7a3dfdcc5c0cc04ecdd386aa55ae6e6f06c92d1bff585ec8e90492f1c182d94c73d32d32d4b8d13b6be68954c2e1bd4724912c04c0e2154a413408755ceddc2a9ced4e24dffb926cda7df511cd7f5206622553db803920d8f6ea17e38947139bdbf356aeb65f73fea048cc893f2a16dec724e4594cff733ea1793810e61ab3811a494e0fcb8f8ea94bb9b3efe43d0a403aeae8fc1991330c293d838f6033496af328a6b24fa08c29061918d3b24add388b482a4dbde87108d66473a87a9fa1296fd54578c56c0b042be57f45d3e606db4c4664f6db5f9577212a550d48782c9008a879d29db6b6e80be710c6f90e5cc38bf257b816e67e3b778e2aec487369a8b93f3d0597520d0bd67f527a9a4c47c5dc553112728f3fce2bf7f9c822a695707271b0d3336f7083abe165f5d2bb6753edf0dc09aca3ff1a71cab3ba4e63ad09fb46cffc54f5460eaf9485d48c97803d7d49dcb0bad282d478ca4c59c17c23e779a3b277ceae02791d72da150aea77bc65a72dc71232987bafc0414ca94131c0bb774f55a3adea34e10401b395c7018f7c3514ea00a67da6f2f5b6640aaa08ecf27cf6061202ff6da6eb6c0fb8df0aa8492fa0ae7dababc68fa82adc5b76f9b2a4987c952dd07f3b2ec2ec7723c6845e028ae14375518cea44357224557e0d80c14dd532ce6fa1fd7d81bf05765b580ed0544cdfba7fb8bd282d09943cf6dc318a804ed9c908057b3875b8cbb78e82781e78f82c166d52f601194c78eb1c8aceb34aa77c28430e938496996137bc6557483db80a18365e78c51457d28886a909a5b6f41c88e6b03a2a271434310d686d529713f2c6a4f17e85f286a2e613a8cadefa6618ff24f21a552ca4414c77274fc61bb7efca092c029f9fb60e37185e6a9f12c095df195b9e248bb3103cd66ea8033559cc65036f3f758b6bb60ff3e8a8f357c7a666bf21d372701ac5b1365d32e8231794be77fb565520f1225a084a4c8d8ebdb26c08798214fa4758aec6d32de0fc1ffac977527701f992400036452085d48ac995803d729b5db43d1dc65d985239ff880c1ba774e8f15c6069526508ff268d5951a795c868baf2711bbdce73d659b2e5964d2680dbc9c5b077892953f8fccdfe0bfb334adc4cbbb93c9a2e182bd3fbf2bf1ae4e124329cd9e57466a913f76215800fb1c46825450533473648429a5e52c42e7504b541e0b28f6785761c259ab76cb8d1e66cbfcaa1e18f7646192f2eea61317d5d0a47c6a135b2b139ca86029a8ba473af3e3f322a97aabb08fee0a8883243db423e7d36a53523c5e533ef4a2bffdfddc74e7019a05f2156cb0c07331a9fd04fafbe88d1e35aba7b5f29f0f1bcb1aed064f60f21627e36d4493caccbdf80681b387c17b25f610c2e7ec6e8b00402d735e394e00dfddb393ea055afdcb0a0be15812fd887378c5f2ff10aacb6634dc889d6622f303ddb1a725151bdffbcc4754fc483f15dc7bf34b5ef8be4a1495bb4035cc7a202407e44337623747a3a07c09259295460cc11fd85e2c00e8386a5614be69a46d704110200c2c3842ea55a6375efc13f138cd9c00f0571f761ff7ed2b5bdc9d4d9cfd47c70564f7b97517df765ffccdbfa30da765c4bfbde4fb7eff1d7a128c3fb61149a3f3b17cee55151647274ced8c061258d448fb57c83332553333c4384e8df1119709b72433118d8db80b9cd3c6510a9ee7414d46d0ae6e9ac80a32abf19e07eb7ef2b563a2de9eb37e9a48976d847e608a5483223327354095c18c0ffd43cec90ebd411c761b664ca3a0399f92e941287101aac3a0bbb6d600ec1e54c585547fc94f164e91eb8cb5f594179fe1707ded796a8d2ccd0137a0965ebd47d8f4a18d73927a1e9e90f4044ff8157a15f053eb3803f79477d402808f141455c0788c564e3eece17addb0883fb228ecfe3dd7ac7f8f05590bcdaaff0ab2b99fb112b2d89d86908efd8e9ae4b8d45e2cf62e2d006b98282213d4fe59e39ee6bd350a3a603c71b2d66ee65a9bd395fc7f6de45730d0ded4b44ff3635fd4f88102cd8deff4790b18036061d1fc63cb9b65618323ff286748a3d1c8c97f3764e1f4f38a6e42e9c20283251eabf253bcd9bf7351e90cfadf1c9fca7d7fa979c41131fccda25652703ac1c2a8c44187cd7e6c0bf3a7d8b9616233932be2f929f3d468d9175747ddb93cd6aa6c8d706c6e458c5f2b53849365e1294274f07797ed8d2320814e7cb08101755d87886655a8ec672db2f2f8b6786a322eaae874b2e1861dff95ee1649f42f3a00b26f71de2e762da022c24231b8e26969db65bc2b5e1a35206742432fbed054d0db901cc04dd15964d04b0413c607be772da5644c10af8645cbe180e825443c19614b21584114eb13da495550c15aa95fb92dba65d53991707b948e656b8f6f8ee79899276be655f3b616e709b175f5af6b48c4d5763debfafc08c2eef57c68823c54e95bed9b3a32b41f53642d508e8f8f7f6808d44093d62de36ed5174a67c5639c2df12c76f6ae338290f2290a4f2790b726732ad6a55e9621f7285963af6d12da96d9de1300e57643b3d0c27358917a76e6f4282764dc858026730f6433a21df395a08c5833a859b55d9f201887d24aba429a5d09b31c97e56701975f76c0a1785b1e152e8bc2c0c9c57441b3107a2673f246cdc73b949b17f4dba70d38e383d88f5493b6c623294240c57cbf55eb4bfa2eba9f07de4cc5b8f4af9ac8d7947e10d52b19fb6d84a05de59cb3bd6b94d829ad852a4672afec1db29e34ea2138961523278799a52f11029ea4764e7a52e2e70798793a6d62b787726a6aa0a7314379a7047ed1d9d3bb14132bcf5670699ca74f7a8f8e2b022ef35d3823218517b075e519b70582d8063e8ccc718faa20e9bb74d19be93bb625e08555308cfa5381b483762bd73e50be2669c909adfa87b4224b63edfa487f18a20c3b03384eac8a7a293aa31dfa57f3c2cd6c89b9cee14d6792eab2a72577de273e8aa12796decc14d0e2851dd6d3909ccefdf01158c7ffb65a20d8594366b9c0f45a6b8db5cf2c6547a455707fbc580bbb9c439a7cca9de65f2fca7ba7151242b1b40b160c8b721e72775b0f58fe1fc4a752ded1b14b687f7733ffbdfe19b56ccc864c4cc15ce48d20a9a293a2255a37d6ca3add676f0b3d9f15b8ff70f8e13e2be5fd7dca3d66953cdd23ea950437f9b856c46e1edf9f551c1236e5bae9352210dc392a84af7e5fc10dd227320c74b393ecea397addd11983d8868ae654a2c469897e7dadaeae067909ee0ec8e9de347c9db15619ef983d23ee7fc7297ea5af9b3c93ba046785806fb99ce4164ed198f96f1d741a99140735fd7725b2db64b66ee19a7e70f29384cd4ac8035f2dbe20d690a26060f0246a9563e57f087f643f62aa868a93ff7aa26bf8908f0e2ebe743698af4c117a9e3c871384ebec2d0146e44b1fd87044bc34125a53ea4d61d471b11c687e7bbbfe829800ad658a2d982dc6c2ef36633b24c2412655cffb7dda15e2634ddd8e31ab637dd79d705200761a1cb69fb734024407d3fc2840cd19c242b41ee6ef9527f3a818c3b39e660aafe0535a739769b599617f9317bd9e918e87335510c9574571846a9b4345aec3cfc25f2df85c23d645fe02eed1bf75b40164c3f2484183390c6c9facf7e0f1039563c1a0b350bc5ff31b0f036374ff0846c58d62a208876c4908ef2fe431407a1ad477f73eb94883819b5bcf79516c2ec7f8dc65576feb3b8a85c6b24c7f970947ca5eb04e1fc89b61307901c41d77d9258cc791494b9e251e6ac8bec0d6efb9084a503656c9fda813600bc9d157cc547424ffcdb03202438bbc68228e5a982723795301c159cee75ea2b86a0125c94ac030e2b535421b85aed58f3454f79d24a006882cec126c83409627e39f0b7d68ffe52e620aad44e838e4b648d1d1e43b494f2fff782dae5a3ddfe2934b25310be2d1eb87c59e96ba551830e22288b389b2a79677416cbac37e2315ca4abc2f45e19c9c84b920072f68fdd33abeaff0516d535ebf75f78f93daed0d29c6a804f1d2bd689d6abc00eb18a27fd2d10cfa2f5a740bc1861ba5ed499ce9d8e76d62702815683f91061e1dfa7c30b09f542dc932ed07973d524ff8a4ae11cdb0ca85a38d1f45d3bb94a03f8cef92d60699274d0371e5f9e3164d1c8de2763f413af3c0dff0b9210c9226ff59092fb63d0f65174c878a47c7f3cc4b43628e2b8c17dffe4041bb048a491c4b49cb9b9f3fbbb2f28f253417cd4558221c923a4e45492c7c4f374c4cbe6d666ed95e23fd2fb24118bcf3f0bf41d61ee671aa2f6584d6b792231843dacc380dfd049a8e7b3a1c628aeb0487fbd0783b9cb0be2f7338fba511f73b8c0e74650869e3d0a16c428d2ed3a0a9d3e4e2ae97bf72bc47892d73d18479de0e37d800e2345190caf8d6de6223ff897765b3e475c434f1fa2895518c94ec9a0e98ec4b52c877c2074af90204cc7d3ec449f90e7fd21fa61cd43931b9ad9baf98638e96cdc214ba541fbe914bf124f424d67ad988a5743d8d9b87fc29a0f9702aa0d71f4013f3d9efc526c999b86bb1ddcb05c08a887ddb3fbd7ef44970163bdf19cfff306fcfc4336980447ad20db0307996200f0c7bba9c25d0d46d6601e179b6f8b8b1a72bd78e0a90e17850e17290e42bf90c5ce2e04299632ceeb0a88e760e1c318f83e467fc38aa27989a5ebc76ccfc8535467847d604376ae9e66f908f1387c84aa928486d9433f783708246179e1a47f7f17095c34a20c9acc4cb9bb69dc5330d7a9eeaa4e8644d81ec7538a0c243a1e990553574589298c5dc18c2c74c2f284bcc2edd21f813a7875c4456925872e60e58dd745ca952c629662a121e7d295e5cf10d1aeb9e6c3d8df2aad78bd4f4dc2404ebaf09b9dc0b067013cd8f6c8ecdac8d59d760a3f31188b871158cd10b8d59339aad2f8a0865ddd660a5a04e1271d16da0c0ee26656430a939a1537ed548aa61066afba59aac88714b6fb52bc582cbb324c7182c09729c40a2a87839faf336faca1f2041f38e5fb13bc08aebfa623edf5d0a3c89326b1f745564edbb4c51ada7bfbc3ddd6a0df0f2e03a8acb5bf3282210e959868941838668e7fa1b02b2e53e5ad150852be084cbe072b30029507a529129bf7f57493290e3a4d5edc1ccd492b2c28e4e14021c36d8c4fc104058ea98a44531df7fce2749941cb8f60c7b4c1add25ef2a25d741001ceac53029f49cade486a0d69bd9c9e01cf040ba4ccbc66f9e8186bfb65e8c3f6768d42580dab91f3b186fabda16ec295e3b3870628d03c5cb56a95d5242ca9dacdb61b1b5cfad1b1a3c1f765c0d03b65389e43f1a77504299800d09e58e26e22eab0660b9d73396b7ead92df50b4c143680c0d49eab7971f734af7338374ecd75613ddbc16b3654ac1a0cc95e9d6cd105e8c46ac59d742b5e078790e3fe50770639bcb88f8e29066c79dba1659b6410c6617fba5e815cac47a0f720ea647fe68a6e6086365e12f022bd532e88315e1740d324c37b7dc47492760686376274d33deedf631a7f69998d5333c0a0c29a6d03d47c1d676fbccfc8d4dcafe9d1fb0d0f1569a7338d24312eb37e848693542f9b263f0d01790335fe46800409c908fe5aaa9083d7924476bbc57e81019da64cbfcc8a98440eb9b4e96209e0ad5b38a51d1f6346d3730cad3fed027abb65b358f60d009ad2962671b0671d82e78d7a0db57eac325d1772960e1f5f89119c83905942184dbb97f3d3d9f6b76b6d87665b17424699b0cb3bfcd64eec0038459d9bb22f68fbaf8fdff5b76f3d2d15a55c97b67847ceab0707e031bda66ea0ff83a41cbe7730e252329766002d348f11bf1d29f3a4f198d9d1f54d8baf19e1e2fe6391be956a86d9a4fa82b3e1f53187e5c12a9455855705bb3f5ba5826f1551a5f028fb9372b7afdaaa8ca5f78d45ce3b34b2de2e33b74a4246590c5c213775a435754af102b3790932c70e4e7bfa6d30446197754b2325a1c2280f17f984e5f9e484a4dbd257aa238190f38869fd1daf4353870544d00b59ed680de972357da9bbc7615ed669bfef0cbf9135803aae9c7a3a20061b4b572a1bbc37901ee8be20949380e68b1ccc81f888c35ae833c9968285a544ffcc8ba5f7b5ee8d8034b8d8575a45ec49e1f3e7d4d5abc02116182340925fbeabbda3cd927e76ca1cf27d8583de5c491f6adac42d85d83208101090480178eeb556e97049a50ab8c1e4e32caf0402adffe5ac831e3ca013c45ff422477b323ae1afd1900041bf61d79565096fb2c759a730cab226cc879568c45884d846d7e000093846dcef3c863d5f45ce0e34462bababdd4653db5aec9c6d6e366ba102d002bfff498ea14b55ffbb343aede7acb949d7c736f704355db3bd7c9c0e7c471d77180a2d53768a34a95896bc316eca54033bb912050c1ebd4555137dc7ee32bd96ce9882db93a1021456872216f847008cbdcf72fa5723a66076872400f575c1c5157a07b7414b00bf38fc7a3db8259b8536b9a2df355772b9e1b970ce163f4d7d1c5520d847c316d1eeafb394ded76702ed04e981de7018e49e789ff877a47c635a982dbcca54b6585f3034dd5b0d8b8b73cefd4824fac9c3a13750117f100632d9d783ca3961d8d04890d7f123f38b6d016bc9d4cd130e275985a0d253aeabdd142eb55289339a1818b210bc7cd7ca1c29a79de26d931d1383b5a740188063c2b6c4bfcc032bd899802023db5c8810189fdaa17d0917525139f999fc36df3a59e8cf57b9413a27eb53b8c2953ae604de355ac03feeafe95eba7d2aa0d0c22ee560eb18c97f809d05f2408ac1725bbcf47ca6226230dfe94c30249e97bf398b5dd080cbfaa98f1751b79372fa2fb0cc3cf3ec7cf23803e67bdefa5029dc3b57f3a18974c4c5d362aa033c310ab1873d2ee2805ff808e23f672d6fc38558083ce5d19bda7c7a4a1650967d8b2f5a058264505964cf1df2c073346897a2dcec860a4bbe177a49aeb824a63f01f5b7cb0e72853f3de22eaf79d657d07fa7bd1cd29ee4b65543d4d94cc67b1e3eee5f38c553e30fc613387acc154354c2b43699e521a29e00af2c7f9d9fe9370009da1daf8dd798f35b9e0014035a775e4697d4e10ba74bdf4b1cbbad3b95642392d764a1ba81f7dc5639454afcb9fc15f69a1505c89c49d637f8a35fe2c148899acea436a2902e0e596d1973468bf16b58d3af6d64656926df7bfccc0d35b033ffeb612f29bf3e9b986aa66ac54e81e2f80822e5bc136394f737dea190bc150ffa8dfa23fb23b322f98ef215f57abeceaf01c348667765e83db8d6603a8bc949168373ca9e9b29f4a7a376a9a502ff355ca04d5e9f27bf90ff73fe18524eb1af81a86dd24cb01969dee3665e923d32adbbab989bdead5bf4a5928e14116b69eba3df2514395a0844a043fdf1172b566de1c1346e100cb15e6719b1f3376e3f6b645e1b9c351c46ef36a7e47139673d53c09da90e5f967802746187bc264667fcb661b5926c36d3e392fa3c5017b9c1d5759fed39005cf798d6dc2c4b6abd3efbc394a54274f7445a25c9ab05c8c179d88a3efa8937b3e1868aed81e7eb8d295b645c7a6ed7fcaf9a1f5e1fde681dae20e7a553bb4468408846b62e600f8726b4e08a4c9516d4c255c9d139c71a02d562910e7fe2e8848864a22de3b6f8ad5abd187c5fef561d025800ade4bf5cdda734f9c819125115d51b0b5a356d1adb0e77d5de1c273d6976ea8d13d715c97d6ce332b384fb6f400e2c868f255ce9842906ca61b081ccdcca68ecc3299b512cc5f739df6431f3f3f295788f32f988f7dd4d5ce3626d979cd48702a16f89a55113a0e9f4ad139fe49dcca3cb1cf07262128adab947de68088e329d7d7f7fd25477fbd3d7cb62bc086a59b1ced2500f3ead1b76ae2ab90cebced2f8884f872e46e1edc3ac69f876df4bcaf89494e70292cb5b6daf02ccb547c89cb940b11fdf43fc93892aa0aad973fee592d240f44d85fb4bbb241f758a46ec338516791918fd85a61fdfcf33b521d4610726fe6d91aaaa9184a478a8300b4527633d480289bb900f06f2e3eaac1fc67bbaf6146b5b5cfb5c7287eb8f227c5d8b8d6119f1b4b05f49236a0cd41420eaa0663a029f9140d02741b6c170ade976b440900e63362bd157c337d7587844ac9cf9dfe180152c81adc57074912ada2ccb97731ed05d2deadd22de61fc88dec42d14c125e29798a3c7ad971e649d806002ff291e9dbd2b39d5f5d3415a5cb65827ed2ebd71ea6c60b0ed59d6041e2b433f7982eb4f8cf72b218c0fb67a94313b63f0c9b4960271d9012e405d481af04c0958a2b354a9e7d7b63ffde69dc140c94077a807c0265737e83b11c605b74f20ecc6dff86f42ce0dbd0b3b44d076eb89da2fc5ee9c5af6853c3abb1b4d768178db29745ee47dc7500e0fd4c08f9b662b88b76dd6ac69bcbab9e411172246bb05f4b2c2172c9672bb152c8efa0b8e18adcc2f5f6239fda57efb3d9b7491afe7615469cda157be145fcf05e8761da4061897b20d7629d77299a9a2cf11a1f1be6ba2acab52339d67dd7a2dda7f8f1688cbc1d34fe320163b378a08f16b003ab6d911c1a702def441cbbeeda5ebde0ff20d5e992326b0d250eca49390e81b6f7f9fb7ba58f32c6dcb3e4634193644c74640f24d6dbb13cf439a2abfea24128aca9141fb185ba06945979b5758baa190ba64ebc8011e045ce4e6fa8a4c0bedcc0a43da787889cfff339d5ed612722144ddf5a1e4399f948f26c502ecb2ff452a90f1f3f400b16f28ff569c55379fca539ad0c62e463193369124065eccbc99641cf9ef6e538d5f3f16fd2ca6ec87637143b144d4533182c1b74e21076368b140c2a85c6734828faa1b788d2b4316e911ca8cb5aa37cc2d91c7b8413501211879c5440f2b2786bbd34854b69e89368d26d8d4f18c438bb64478e5c573932ef74b520a22751a043f52ca99cc4a8eec172a842a1334f316ce27eb7172b7618d7305e87b02e7e3b5e2e4c80def163840fcbebd70d46357c098aad58a0c88fb589a75c90c720a50a2b7e58f4f1e9e35277ad68d8fa5ef1259b2c79c0eecfa79eba6cbb37aa971d4ada21bc46d3e3382c705620629291583b3a8c842f2178372ebc2d16ba08dd3ff2f760b909b7368d6a97fb80f206a72cd64952390020a7d55c65f0c03e76a492093b13c2bdaa741d0b569dd5f772a9d33d7b6eabdc566a6f5c8cf93cb4a76e370895e6f1acf24392a0cb356cbd4b429ea4d7ba2a85f79fe5a0e5f86fa02c6c6f467373bacdbba2d6d80d4dea56d90bb5222586a043eef85f78cdac90d79ba54f43b1cd1706698b2f235dac37e7d62d29da9620dea5899e7f36813cf56e6671ca264269edd2ba47e040f621d4addeef30b97aa5f78caa6fa8876a28a0c6c8bc3b767f221225e479fdd653c7ca163619f159c2a9c00277d9214f7724a1d641e90597deb03b97430a703eefc6ddbadaaca18bd3caded5374d983c5164f9b100e304c6cfb2f3b2b7dfc38eb85ac3f9907b5abae8e32e2db0176fa0ba02dce4156e823014321fba278c5b5245c9dbc0df2cef690dd0ba38d9b7659a7a6fb577b69eeea2e54535192b2704e33fa2a48271c57877d309ae84085bfbb6184876282fc2c2b406c961a514f92a2d58b2eb127e67e297fc891c2a87b7880e2dcfd289ba2526e0ce0c3691d4d9a78ef56dd1f3417995193999b597853a8c2c47df9d42fcf8fdf3bee32e073a89ddc660897ecfea5d583d1e0acb248b7e1383459eceaf20bd02f8b513407e25a50b2c8b37626a88b32a334f73725e1fb78b99bac1d19fa4c430c14fdcd5332ddf6e2a7df7667e99b2b25a7e728b04daeccc84e0210477a7ef49c1006da038a7ce088dc837535c6e5b2daa1150e779bf3a151200ae47998d49dc25253084300e6b5bbe763469ec517550e72de1db893c251f2db90f9d7054c961d93bd11794f43d09fef76eee79d8db16884842e772cac787024a6ee784914925ffd47915619ddaaa8dbdd20e16c59ae80bdb03a626fd0610b13bbf06ab1928eff033f7cfdc2185525ac056a46720ccdcc7a2b68427fbc1f9caecffed94979eacb9561429e9a3dd22c60615e8b702b36d2017b85d7f020af721437b0063702cdb3e25978b1f431219de18bbaf4716aacc4940d4d135fbb6c87e4816541933abdc1e3460e35f64f26f7d3e10ef681abc3f6a22ad961f0c2884c0e2e4cd38f782f43c7249cbf93a4a2712ffa813d1ad78c267f778e05df4537a2dbf59fe66c573d9bd960584e41b796a9c2082ac03193bf499ca61c1737ccd6f54c9f216c0de05158e9d92d0c2ec7c48b657df79aa4d8c0989f62c6aa37227aa94590f13f22d85620a77086c83618c0b15a1e4f6d2ccecadd4082794444e5320287d866fe14a6006fefd2426948d00ef7bbd6867c7f2dad9ea2895bffc38b36999a49a2867c04fa8c7df258a9d6b6e1f735ff611f16387b4b37b990b4d171d3bd1a8b0d5458a177390594a785cfdfa9650d28a40bfdd0364125090e1491d1b33250970db1690f92d943e576c4f41d6177234241d253d39b4e18cd8dbade897766b6ece9f6f7dfbcf1556b3e4e4a1882356f684ea856f58097219c6b9974b34df11aaa441712e63915cbe327a3af2ff34525ead2e00a02e5c21d54096bc17b25f531726a2a33e6fe6065f35b3b9b3bf8e19cd1c825f6f046dfb78ae2eba60b3c07c24d8016d2ccbcef39de1641a0de49667ecb2145cc7a2c49a93caf7030ec6da3d2ce1c4c85bf6f945d093eca01d34ca22008597a0c0f00f91cdb0b7b55ebf35886e11f82665a3a0c31967f467f96a9e1e9175398df6434cf59fefcefe3bb1268c264bb39af9b522f280a0b753a5c1fe20bc18dd4a30018e61b2df885e2f3ae27256563d7d1d35fee47335a6f2ec3e8c889275373537a400310bf0efe06861188bdb5a0f278b6e749d94f81036e2f985a2648d630c11c443fa3c1bc6422e96b70a0fa8f06c7df451448654aeadb22353bc054a2f7a6903aae02d418268ba57e587dd884b38e2f297e8b951b0b63d0f91af5d1b82b60910d0616df7abf7643fd271e1db7ad4cd8148bd7c3f18b1f9573abb396c420723627d8d9ef3a5156f37cea980173cff6271c637596f8a9c59afc607451d4103089289b29081e1eabf143a25c318336c74d2f09cd9f08402139e561919cddb7f644c00ac6655daf4b709c23a2312c127cade490ae2572b92dd817651c94205982e2e7b9014b03f0dfcca1f34b0df23329c96227bf9f070ba31dae1fa8330bf1a7929342788c1ac719c16ca68de263e6d0f8572537ffa9301a0d4ae0bd5e0e246560625180c51ca82af9f95b530f9252e42b08f2bccd62eb69730d19f4427aff82004d1d94716f9b7093d9489cba878c17b3b2b7f01ede6d9b4a21a4e6eedab7cdd184bad80b0501101427ec8eb566b026c562a88d167989ae01d9ea67c586490a0265c864119228832e0259fc594feae7787ca9873db0be356865e364ad5337e5414e1a6efb9eada31013b020271b770d347ab205c9ac5142e890604628bda379a70f90ab971d48e2181a020f2bd21dc1258d3452070f7d07ee989d01c82752a5284ef866fc0295d19a956e27bb723f8699d054d0b006d02391f75c3cc5fb154d8b298674e01f603872525a1834f64f899ce13fa76b398c58f7d8247d3c24ef22e679ff5a794f63aec2bde43f76c164d4abf5c729076e9e94b460b9c95eca50ca782b6ff20cd6510e7ec33c4e3075885aee5b4a9f3944ef0b53912343885aea0ee66c2b24d56fd0ab49c466529dc97b20cb59bc3de812eaad315f0cabc1f7cc6b33c13ad61de2ec3101ebe789bb577b83fff42c6ceb0b59934ad7aab484d2094a85f3be90605d3385b6e437c3ee29a493d5201fc69114f32bdfba3c99c137918295caaa42569ccf6e668da732a98d99d4180caba94a039ac0bf0405c8eb09fd7eb64a0e99de225818ce7398e3ed1d87d099bcc03c2ec1d8da5a3461310e6e4448fd404823faca1541002c945c62a7347d137f6f22e19a7d48df632cb636363d58b094f4e8ecb30e94e201dd8aa199b77be3b21c1300c2efd0fe9da53a76d381e02bc49f9e3c082d0cf393df5368bc97369c8a25506dbd7a1f6315dd1fb3d15e72f07503d74ec53ed11cd9dc6ecd386bea469e5ac7cecbe614fbe495fd2784b5fcfbd5bbba07ae1c11288821b5c0e49ad96110e0515091a846d7cd0bdbf84f718e0c404f55d8cac5f7b0f6260c0b9ef4ef19e72ac7126dcfcb3f51fb9c58815169bea0792c21191b1ea0ebf9f33406941158d4f8374532e1e9dd6f4cad1ab029daa0de94feb509a351e9dec93472895644b7a53ae429ab8d345715a62d8f592dc5fe8391745bc1a40b0da2cfb38443809a14aa375bd8c6758a9e733837cc5f76ee4a0f929562dd47bbe165ecadcc6108aec4b5e549fcf9b51bcf2ad8be40dbbfc81bd5902d4067ab11cb9e0716f4d9edc5bd93ea075945258faa623d3522979a990e8ce9c7dee009cdea798d6dce76ba7dbf72ca5a8b565e34c063f503beccd3179a50cc0996dd35b208c579fc9523b6ae412af6916f121de4826718a234cbdf08705473bbace2be607a58476b8836a8cdf9604e4a83390a7b098d47227b73dee653bb6a3567915865b4907e0cd4bb645793722881f03c1ed023cfe5d9f57bb5ac4778bad3596655f1301e54566fff46ff09f2d2fada8856da9aaef0c019401c79c37de6a09145919c0198ca25fc4b053858b128753a241f2cb937f824592e734cce27c285ac0ce593c37e3d49510bd409135e42e5d18875fc69dc4fa7f12fa8167c1395ca0744014fe473a6429884b054d98e9e3f5cc24e63ed024de4ccd0f4cc38711e57d7a69e4d9aac0e93fe00d482ca26526312bbf9bbb947f0346d48e8aaea8f1744f2c2d170f0c3b23086f73eb7050c55c4fba92fb8de6c0fab0830961caafa23c4acefd1d3dd81affa358e552d26a36da55c02b6aaf92d93c2452c637e139742a1e55c4f80de5ac1c84915b1a6123ebd545ae1e682f3459d256c9f49d68e52add9dada2adfe8f0a36c5dcd16363d8dd5dbe144c742456fb1f91bdffd66e3f581dfd012414fe4a2a3e6934e57a6de0c4f0b8ac64cc3d3ea7407d5813ae242cf8ff9306209d2edc02b3e911a3b125d8871db546328c23dd27216a573e5b7f273ebd9b413a3cd4c87d864091207a33bc186388dbd439af912e169804238b164ab50a92d8faaf04de7f384817382dc8d1dc1f1673a5ad3aa91dfe0ce54e6efda5e46f5d6d25195ffc2006ca83a38d45aad7f58058ea9c2abf7796eb98c11a9ced0d6c25ca3d48c5895c307dff364d69ffc5971dbf217c32e0bf44b3514b0f0b9a7d5728931430e7f3141b200f678b18dce5cdc4a9fd95d578f6065394850f79373c0f8bff9b1cc66d1ddedc56e46a04035ebca8c92f9c2092db99577f165d75b8ee2549a341788cc86b8c7ee8b462f3e593113bd4705922ce123ccf444b4ad0970f988ed257dcf4720ce6cd788962ceece19e72c73869673288584487c93d941e7f78fc2926d93beb61c726f334b2475e6923e8101212bd83b80a4aa0569c23a851dfedcdf6750e461c07fade5741b0decd10e1ed6f7b94a8a0093919752cca5ad9884913c502c8611c464e57ae67df079005a86ee380633398cb7859120554ee92db3ed2097c196dc5dc0f64d6023e52010dee7ac3ac5acb02b7067e5c7facfc09408ef88dbf7df7f9fea75d50e02b9c54a87dbe9467d2016d7b218fcd453a1d2cb7962a976eb403fc4ae558fd8af7755f0add809ca27f5d805f9f7f427205a1f0187fa3eacdcdf43edf4a552ca3b5e09350522c3a9054b316f61a795a1a0494616a09b353527b59fdc412f1bcbc213f092fff4e4582f5308df9532bd4112c7c7bdadf9206fb633649fcc233ca710997e7eb5fe532357d8a6ad6ca7c2c3f01abb2259903b4aa9089e86e36fc6cfda5e3ba3d407ba5a93c4785ab55c68a44f80aaa497ee5666527cda8dabd8eb31064c98c6727d6d96e38aca4692c777da604b7c05c0ed2a4693505cd3f69927716e1f5f2ff6924f8f901d4a813c39aaf305523b0ef699441e39d63f6f97011f11191618e1e9d6b0c4943c830680f7b4352dc48ad531c8e9d6e8906dbe09d93092ffd51761862bf2060e073299b6eaf5b62599af524131f9d4d3d4437b9b4e576a7af40d807b009651e5709e035d436c47bf59b39f5629cdf89d2153f5cb7f8fab3fd56e67f69f9646f5c38abf4cc70bad1e808f6469b33b05a6968d746f580e576effc61cb6db418df36da39bfd5de7f1c9d9e75f6cff824d7f196c726e654bdaf9e6078800d1cf8e679f83f6f5fcc4fb18f4998109bd76af778749463f3d9e09bb55c1049c892ea1c85c14d09d5b278d0039b0a7c2993d278d6ec47a64f4482db66f999767f4ec35f84eccc5058f13e06071aeab5e175e5284dec4ce4cb0f3946cd62a653980d61ea9f2e65980dca37dca3b44c9ee6f217d9d1c1d05e52671515aa30c04980069c6964825c262f8201bc05164ebece21541e46cb36f0a271a636733686b8e49339a1a72a3906b91be7ab34f89e05b4721c325a1fdb2f41e27535ec256d49ef51f1ac4d435960418b6a55b5267d6cd89595e2fe7ad215208b641515e317c1274c9ab77b6fb2205a06ff9987e620f6390d41b2ead02b41f14bda5397cdaf24ed1d86ec88dc4dc792bf1c73a65ba7ee7ea917d163cbf5b99362658cc25b33adae783ad358cad8bac9882e494c6ed64f0bf066b9704aeb732d2c47001a23eb12539e76132bc33d57278877996b72a0f34ed48dc9aa6618036563b848eafc854070ccabe4bbafafc94feb218e5b848fc933ed6a627885dbea9e28f96d9bb23b8c92a0da40711d44867c199f13c37e4fa93055ad70a36a5a911ba8f0bb501154004d1992583f45d972df79dd5287f54eb4c3a03a9b0a49dcf6a1eabb49cebd2790b644543538401635067072cd4bb1bbb1d34f1a51acc0dcda11db527ce251c4cf288e0568be3b3b69af22305df9c2008c1406bcf36aefee7c0a556e17073e473f8ccc8730c9f6bf5c45673621e0dd50bbce80b257199920a2e929c95deb54c4fc120223ca0bf93142d04c8697d4977b5a36cf07b50be632c20a90a89cf6728a8ee7020a69ba30e422e387775251264596afcd940f6dc841ad4c2fb16a2f7fbe316884545b964b943aa6d62707519984b064e26c168fe4b273cc3c2f67c4d560a418db9c1aed464c56e242b0d50f39cb094dfe676f0772ba580502cc6ff58fcf3cbc0a854bb2f432c24830bfe98cebe8c5a95cf3d3cac346d4d5899fdfd6e4e8b6c8f7779d69bc29f8a3406399837aaf3116ed6f66078c6bf58fe0aff98eb96031d3dadf78f4dc812cd4c7a3e35f4f25924065d6d28a29e533f7b191e31a26bb2042199b3321023bdeb11be5deb8b707f2044eebc727994882a0c0553ab4ebf18edb9ef0193caba3c64e4607239500cafdd591ae83ae99ab41318fb1fdbc1c84123057172907ad535cf45745511138d38608b0b9148bb17df3b33ab36cf7935ed3f9151a79cf613bbc76f56d0c1763fa135ad7ddb3e482cb7cc1c3ae969e54758c7e906d267116574886942040179095947fcf7e6d88bef760db6ad22f9a5bb1852b71fcc7c307ccdf59c658f7e59dd083222cc041918551a6e197ba52ed6ba305ea909965b0a1afa86334e8d9866aa3d6e74a037a7d51af745f0131db693633d35f22b443b5e7877b3f7c68997ab67a9da93980c6917a7501fb406d6a5514cf44ca64e83db12683dc1de559515fa7049d425d9e6feaeadb4ab697046008317e7e6d0754280099ef42360c47fcf6e664ba1ad05df6015cb04498603a3ac46fe14252575795bd61b310b56260ab25f3eca3d120c09184f34c05c409306b3c325dc80872f596c7bda72cc44cba6189eb63ca177caa799d297c2e4c6657d7993116ec141ab7af465a6ccc9faffd70aa3ccac0e96781dfd47ee202a79ca6c4b2962c4af7fdfab7bde28b5723701dcdc623da39ca8e3a4239f0909fa0eb895d4a309cf9980053acffc539c171ef5ec6942518d6fb148ca2d77321b00aeb797005ccb52672ce89e354f35f4e980cf95e40f96902b6430b0f0edf941c209a0d7ad4dcbd80ee539ac86c65886dbe54c747a081975b7199e94f56dae2e96f1aa744052e2141ae9f74b108afa41a8626bf1a81d597ed424eaf5c9e4461a0af24b140604a80b7fa7e9a9d9f1867e9cafb07e2acee73deda86be7cb9ea2fde11f3a575ddb1ad2e06fde85472d23e8663f66dc9c507826dc003deac2005aaec156fde90a8fd7ca5f52d448c4d27b0c9c04961a1fe514cd29541d592399031e46a1cc8dea1e91d2097ed7358d8d9b7b86ba8b12a522e2f90f458bed13d74f207b2be8498ff3be05f7cf5cd4065ca35aa9c31a353b12f25d8c00356f1f3183f999a89dc46725a984ef00b991ab6dd58bab41aed400eceb88e4916661a8c4fd6ded42957c282e3d9ef469702012b8c6320389095cffe7a2e050c33323f2db0919826804873918e659a6fdf8dd1bd9a4669d44ac840d2ec6bb0b18da21183fae0b023cff1305d8bb989a5ed5dfab8da5a360aa166697e4e1eedac9ef068f71de8ca87ad0fbf6181ebd064f69617d343fd0ec26a476b6b146be5a2742683c9e7cb5e6a192216a50c90e207b30f41ded1f5c436fd93ec214dcf3dc990cc7fe6f8603178fd3f8a52055b3dc0c455009a80b6f7c9baccbfb34fe7508127dbcff1df0a2b11901e558bf7cc87bb601c30ba495fc00bcb8867ff8b7e101ec270f637f2c2dbee67f55529e89b83ce63c6b37c598d53bdf400d79fd0269697028f9936e31e94272555b13d5c08b139373bdd5ef219ced50c9d48dba4d8b885228c85b073db6aa9b5f149c76bcaa4721fab5e72ad7641c54bd903477d7039d4da996e51785d4b05ceabb26c1170b3b217f0aa097d8a73345071d01eb9267d04f6c5fa3eaecf52c71c36affaf27d5b62a7d8a165235c590cb4822035adad18d0f250a545722b07ceb5fc963a7dc3aa8dca07e6dffe873425861d45c7c40b46aa7bddcd6706cd3dded3bd18903c16e4337e718acd339f9990c9aec07b8ba6b99f3570616d92692dec8f8b8c470a37d027a8357364975609a5da6a1d9b91cb4f099bf9d49035d030572c87ef9d252782b32403074224e92277d2e5e34b6c69dde95c95b45b8d26afbb0881e41511ff7b46c242e6edb794a0808b4514dfe727f62d9fd9e7094f2e85fa7129f9f045787ca95e442bb2f51834e0369dff25d27b080992b4789cec06a8646bebaa7271b457ff266eb9cbc9086e2a4b41031c6ed53da5970032876ec8513837a85ce2e74a2f0a293d8b45017a7cc1d3a467dea2d02e2f963ae70912fe478aa67013341c49358e6cd526ceb3c3f7d852688bd6b001dafc2417140636ce3b9e745716bb8eac3dec87379cbbacbc8ef289d7b6a7dc934c249db2c91984e10bb7fd6c57678a148ef9e27d6fe3d07936c69556c7bca33e374d02e8f059a472fc809a5c00fbe37405cb4ab2ef386fef8bcd11c3522b27e07756cccf077d92e27a5e9b8e9255ad1cd7da383dd5272e4897310deab92366f8a63923ed0a7c200a917c80cb772041d3b91681f39826a24c0932d187e59066fb79a08f5829388addaef37d9218223cc2640217c51940dc3717c9b7fe63cdc5e802bca6d4fecf3e7c749e50a320788abbb976ada86aac363b3c9d00d3d4b67efd8893b0a24c79c69c69399f12de482e4e9c8981f8e950a3f1a07f15330425275e45596579ef9c9af68af80697048b9ab2bfed7be919d202bb430da145a87934c0d69ba4cba0f66ae68d36b0574853c9efc218eebf40f8814e4cd9142f34c9d661f28716934ea8944612f356a01a687d41f0f06dbce6a0479812cac0f526b55c21bc1032714c1b3ffc048c1e7ab5b76d03c7a081a07ec9d23f277b2a71de22f2687e2c946e71fb018bd8403516994b5a2c0d23e4396f1145fd1367db36bb98c53cbc90bb335886865ab6f7d95ae10893f71896fb68f0d73e22c3b31446ab024bac45fc40adafb6bb79c81b387405308dab02ed628850afc1ab56859bc090ed9275ec715cec38270ed1d97a78c7905cfee462bfff76c5cfd1edf2d46f32ff1226e9e463961188269423233d64d388d9d4dc0520f777723333b3be8e1c51385897499b3d92b26173a3a2a85131943c4dc90715fdfc73bc32a7f7f6ebd7c007e48f5d158b3b3fa2a61b10763ef4811744f9d50e99ddc73af24d409013ec038ab503ba19cacead086ace058329575b723746959eb0fe3cf0bd3dd5058f3a7fba2fc99f21594de5ed00592dea3fc463af746085053ff43bf966197519d4fa5516f1d5485e6b8a6104beb3b25126f2719ccd0bb498eebf58001dca75cf5c3786a3f5dcb49316d38edf057fda11b82253873c533e611f90fbfa9222d90f1687e8d4170bf3a981409f6d1689914a6755ce0f4e12fd51a7349d92698dcc979517dd3752de50892e60e5b047426c079f1006f699d48a80f9e8fdca7f30f1e298597f90df66e8d712bba8d5709edd901971e6d4933bb0b0d35517adc4b9eff27724a8e64f168fdc6896d4c1e03137620fd5ae6b82a1b89db6e27195efa7e3fbbfb1f54a99659f513450915f867174618efe704057379746860093f023d10e048ae74b672cb917a0e0ec0955c0fbc4db56f180aa3d1a145fd393e71a2ab574a34bfd93901e3ad232363b0377e4510b0a28ed0d675f33192bba7cc95abf6f6199ef1dd54608d1aa44357622522cc92b82279339c6dfe833dd4535e4538fb48156fd560def3a213e4a455742b780fea1f960c6e798c3ce1c440885193c9b07fcd70adcce61c55fd96a4b6f805760ee75815a32c0f3993f45831fe5c0367fa346d46820b9dd54c67247e3e179cb2fce99e83ebe5056d6ba44e85d94edbb301b5c3d0acb94d002f2fd48200dfa753e84328226c0c22ba5da248218912d139f9f51d62bca04f7b3c8ea5224f10e42a9e6b149d63d22778aa43e8227f8a591cd9a3a95c3ae9058342caedd1c406a07728111d9d0f09d609d07c07cf4459c26d89a94d2ee25d9ca5e618d4b5c027bcef3d94123490fe7e59336a5a8c4dee91863b0ad14ab0f9e142840c5e5f46b7abd2d997b4cb0f09d04d41b7cf645f5fb1c8e6adffa3f93c4012da8b0502600d201599bb04a75f26c50b84009072e32b720a38157c11e2c985def6c74cbd82d068c8c46d8f12df556ac6cf4c7100a2e519fe1b25930814997482dda911d2027953b31c3a42778c351b30ebfd1f6cf60c5ea807aec74a19d99fbba709ebc805795bb4381d61ea77a69896846d835a849ac55e835aa0a8b3e44846c4c8e734abbef9798f9253a40ef3472c53e99911c0d7391fc7341103717bedb7d9970ebe94befc12a390294c0b9bb00f1c5e8c6297210a461e081f57e2816b55a9121517eb3cd560efd2fb742fc5aef8f978bc562d432172b87102c5bd0a0edbe74e7531bbd310576c56ea2664377da0216ee5d2e9b3c7e54bcbc3de32644c50355e75c3233433512b88bfdb6ca4a3d1e882f1e1df380389bd22469da00204d38589dea9cb02605951d296587bad9cd0f4a842f03fd126971db0871b2c4255067243d79a9d1faaa49770a663463d2b1ce18790c20da2ef10d3c9526794b22b364c95715216b67160a48536276ffa9dbfa913fadf80988de8404742e95306853e76aa6fa57e9ee92d52fc4d5052b4af76389aa3c03d7f0a948a6fbe97581cd690725c041076ed023ed2be76f49c345964df3fb9dcf1c49d7908b301ed67c54e94ca0ffab4012c033c16899f5ed64b4601285c76ccf5f8e303d472cb7abea55b90522af7a11960914f02da3a5cc26591d7086777b01214734644b2fd383bb88c28463bb9d3d5a89a9bff6bd9e10dcb4fae147d8edfcf2045b3773ec3c0026eb7314dc24dd083071ff6ceb64a9020dddae2a4569b03edd0e298b1cae9a100b5c59b772d7d907a57b5463e22a8aac7c74591628d38ad2f55791727c6ae0aa20a284d4dae4164ae11c55403ae39d3d1f57eef9b76757c7789d54a2f5b8a4783bdd10c6ea18e4e5790eb3d1e5c92a6ca46677e66b5e8c4b2d45320a36a0ccaffa3f25c0b5623c0228a84a0a91b0a8214113a7f727b6d1d814e391331c1c7ede0698569c44d3c63e707d08d76b89bba3ac484497f613f07c9262b643d45162c681ff75617f8eab45b629d92c37a3877e1850373bd7aa6229f8a01be1cd8c2191a3ba82d24ca75f06eb20b27ae2548712b14e8226f3dbdba0ccb073c303eefa780a1237902dac1d85cdb94d9f99cc66dc77d0206fc641bc93f777040ebc6d3b73454910a48c0ab43ebda12594c0a4c3e974758cb55f3a1f7e23dc6ad4de5d3a43b895d68a43396fd49b2617a5a2d09896eac3c4215aadc7ce6a57ec67d8ecf94396d1705aa936e0a562cfcb8b67b32fe6953a386772d6c7fb80ac9cc359f395055cc662c1b123c80bf5dd5e9281d9a3d028fc032bc1c491653db359c3987a5a7cc305677a6a13481c709bb915aa1bb429c32f60d5d605ebb7956fd422a4522db23cf6f477be386aee37117b7eaee5da2b5c3f7e54ee40ab898bdf022fe5412129bf237b70d8f699f15bf04fee8ed6745311804379166519778bfbdf77ec4f63827c19a1b69d59d495bb7fe9f2075039b8b6914a10025d1570b6b1dc1fffc9a2eda7d501458dcf1f2efdce1d40e683b7213363e790fa126b95b42abb575eeeda0c098ec12392dd62cb05fa4076f36c03735c6ab41921c2edd0c7a2cf5d5047e02ef195c753e5510078e0823bee869b0ac1fa831c4b2d754ff37d8100784e2f4126aec953d9fe24993db17cf73ab8cc42c4ba273f96c6f1ac31f9bbf7cb359afefa1138a253c7f7e3cb5acca4a98a818c2122ec7334855e42552e6bf8fa46fc84e8b578c6825640cdb681c3c6e29667e4163ccaf4c16825a744c9e24d2371de012f23926a578c9268b270c302151e00aab940d40124d80c58a1063eb7991c35ee28ef54186f63fbfb56c7307f9fa3ec27a2838f80bfb25cb9f6353939b07f651c9c8457893ee3481df488c4724fa1aa2ef0c88496db5ee4840de7223805afa198753d064e2a3164aa527a393a45b5fec4e39fdb921fccda1900c97fbf247834d177bb4d86f09b9387d4a2aaa67e025a07b5de865945dedecc642a5a7af7074ef94d29d0e68976cc21e104228051f9c756559f2b2f708738651e8068d8cf376a40125d4893be846efaa44f3b757937e303417092e1399f5279138dde612420e9c24dc7e732b6920d2d2df50d524e7d4ec44b1a342cec265cd24c8a23e5f3c4aa83d0a008fb5cb7993a2a3b615996a777554d56f13f1037a36ca80091c2f9d93cca235babf0a24389ed1bdcbcf6ca7554019a309bbc4bd37ef25cbb2d06beda327ee1c8522ec76138ccd97ebeeb3f8af9c3659557814bf68142515dae312b77cf64fd1376cbc8a200372b7d185d27168a96b760f295690b99a94e7b18c3a522e928cd14c5570e91dc34ec0d62263ebcb8be926fff9eebf77ca6870ffde5eec68a189bf678f02a8b89e2e97eada9ee8cd1218fe90892e44697da5d45cfe96b782fbc41787687d15e90c5bec4b6c30a99bfed7f65413be6e7148f9031a06164abdc33cb2768dc68a3378559f33be649cb7a260c91acdc4f403a3e955deb733b16570d82e882fcdfeec646000cb161f133486f054c8708284d1eee76566f0b2865911a9be802b81e8349b7960350fbf74783ade7e82867490dea601a28adad20f5264468c24ba697540df0054ac49fd0e5c2a978026c25a756a206371f3c04189885a31bad0f8b1207bacc1492b49fa6793e76883ef2599fac29a50b24b917af8eed0ed566f9d347b6f1aa8a0601fa177d494a311c22c90726edf78f5601bdb97e09488aaf7bc762c12e56bc6d99cc8a2029e80f88895c823d775f97d7175db292c71acc08be0e89a59e83826d1e74a1a1c0dca27cb92fa1f2383503ba15662b6aa752d23953de049b2e0d28c65c4b68bee6e9e24e2be3a81e19e2c3ab0672b16dc4550be4695a83f8b07b09e66a3a7ced128f3e723ac7d45db2024bd594d9eaf82001e766dce84f66d388ec68a8234000b98920cd477041543f7be8d1d27d44060f177e72bba03ae1c842945e45de0bf4d75e7a5762c96452cb7eccd7e53b8599fb948fc94c166b45c1b12ea6b2ed6cb7e276ac2b51e58d6ec493de28d11bbc8b59dd32804dda23a8667162bbe177f589d4eb39f072124a4d18b54c74bc06e0687720879b78d9be32dd64c2481b6272f48408a57465c00aebbb23a6bf9709086b50693b65df5e038b901a9b7f11da8e7c9f051133cd756ded8f8a89b95c0c91647ed2d61d91e36bca00c453cc9c7ff2fa37c7c9c3a73f2d0f34ef5321b78f83279acef965b7350f37da4681bf823952157c74fc3370d3e109d4365677303ed426689caa8cf1f81e2357b5b252d9d90ed9f5774fdc0984cc23365b2b63de984b98bd562310a09ce394f930d56ed42a3e46ca066f71ba3d1b8a25bc9ff4470fca13f6f15c22f3f8eea36d52ac3ae9a549a2b3a9f82de326e20945455428b1863fe58ad3b6ee4432f6697d1301e0d7e5f399b30e2011101a2f5b53cb81e258fe155d7f9489e1852aa9c5dd64562ac8d869b89bf9a4b419edd2ae34b600a64188e4ed49b0efbcc86fd8cbcdbaddaeb5c92bda0c0931e4873034ea5d9f459bdcb809ce07a892377cba2df528b59a2643285964a766b98fac20f21dda575a6c6b4ff85703fa2cb7b6396b1a64881e1278fb7f2de0ccd614b8f7c2831f24df749cd8928813499e127ebeed33604300e2e4ad285233fb53f311eca634a7703f3090b242d57198fa44794cb7a62dd0241568d8bcd2f56ca86ffc90d94a35614eaf4ce1a0a454feb0a92a3a51d88361bb33920e260b015e1a5ba54e2f8376ec2bba4573afb11d600ef45dcb2ca779c3781e3b30d4d81e8d6a48094f91bb45abf4eae043647f20a6c218d50d9cf8f7dd3dec9aab9f59ef8cae716fbf48d109e7d45dc8d59eab18ce6751ee8b26445ed9775c063fb80f06d44cd3236809d3b7f66a2453d941ccd1f1459704d07b143f2d9a9da20b104261ebf816939ceb3fb46bea6dd8736b4aad90f28da56222b0e511244f8167543588b5e8ed004abb3e846892fa3b33cc284832c01f9b2df9259e03098949e618b08396d7b105b0f76179b1a1d059b20e35d1c232f169a14ce3d397237670fa0acf5d4b2afff4e8fcec96b37970806000486b076b38af35c1cbade612287e3c3447e7b01c6d611cd723ef7e6e150087058a2b05bbf387c53939eded2060b67ee05be395923253ed38c593ed6e8ef59cb571cf1f38ca6d151496a706a1397ce429c96a0e563bdb8c9242257305cf092f4290578a640901b1b491cc8baaa59ddd23316e2b6a1a4f34e28ef6b3ea881cb3b182a42bd6d229ee5eded19c299db0856d6fcd6e42ded7588777d76c9762278964531f4d7a141e90ca196271421b16cc169f37c57c0a69945d3992971342e40b59353109c56bba3d443479d1fdcf2ddda2f7f8f4de65f5a93eaa2d90697d19488f037e5a47122aacc5aa164371ecfc18e9867b49f260dabd510fc6c2c3c3517c96ec5334958103ff11c717c3a72b9c31d77da552d072ab64ac83fa73feaa00fc2bf1b7e7ef10631e75d84bdab2edf6044439340425c9e112170cd7faee0075de5c8911b7562a8a1716141a3634bd12a82b73e4829704e25b537e5bedb51a20b9a59989d6e65f8df214b6f6bb092d2ed0ac4039991521e2c58d1e6aedb1391716778c1b779141c77a29762e5ac3f918d221a21d5a1d39ba9e2da68729763212fe91cb995df07a9e6c1b5e7a62307c796df5284150a7f76004f4d08d7f17fab2ba1c7ac6bf3c2af402f9c957224f66dd8bfee031bbe8352e506d28d602362e0d77f66d35c7cd396321d6cda9022ba59b8aadd19c365470eb94df9a63f23d537f3b995c590a3e203bf340c079f0d531e6bc9a052fff6a144d529d657bf0a20db91ed97f9c6cd1769c5c477bebaf01246a97c27a6164231da00cf7427b64258c7b57a37dba146945bd62f70f20301f63506fcf1b82593dc06a92ae70db7bea9913f445b3b8b4ac95983bf6190742cbcde6c7441f1cc9c7898e72aeb181eb811a9c0fe294593cb3e6d8d0b1c22c0497216aedf17364f9fa4a3ff9133f05a23a8a80448fecebb22531d5f89c3df246da019a2754a568a456f93610963fc4d9f6ddc4cdc9e16c0644d460ec496f8a098818c04cbfdd5a623758b9ffd05a6d883070b70c61c42a11c220a99722b82bc23f3b30b0c0e79fda43683932c8bc5769292fd9a60ce5dd40c3101124672ffe837bf48ab9cbab2a003a5bf46b58d85cb642eb27ad35c2ed5190a0c42bd461acdbac094d929fcb7777365cccf4bd76b92050e4c12586493ff2c52de75e10beda4e1bf3068a12094e2f22a48d699f1c923552bb23e0cfb599eeb4dc2c3e8ea9642dbfa6ec4a5e1e48b0ec9e2f5b4fd1519464b3fa5c9906be3eb58fc8ab442c31be99d8307dd2e88bd80aeaaeb04a14e6936c21394f0cea8e56f21dc3840b7f58167d58a1a317993a5db9fe260fdef64aef6ec2c58ab34ba5b9fb446aad55af9afc042044e78912fb46abfba6c08fcebb43a385237f34bc6873c0360e1de169b708593e9201086bf6e092d4676d290a3a6565c05de7beee2e0476ee2aec214abb7a020998ae00fb4baa70b73af68fe7ec388c7b88cf5cb8c8df70b82106fa46846b41e908527425bedcc4957b4e599fddafe818964ade182214c71b7da7c91cd2aa45020639054145daa57e50e92959a7f532364a9c550c52fc386b1cf59a7ec28642e4bd02a44b51deabebc48ee6417a635fd421e6fc0f00afebb4c3edf627872b989968e2d32838b6c8671833268136535c9117ef6e6e60a5bfdfc3b7c539b81153f2796894bbb244298415d8d8dbc5540e62328ab04a8735b3dfb95e41b7415e8b4903ffe00893352e85c0cb8276e536148f747d6d0842b3f6e223fb36978d3a58d013857bc26e7b0c9eada88163579b487e9740ae6d5d6fced363835138f98ae21a4a043c25abfced2f2fd50d01d7fb2cef7499cbbd5336265da3d7f1e717e81c1164e4d65e81b914761ec1e0a320f10bad091f5e5fba3a5c25a3895482e396514d35b277b9b2306fe198e69586fa2fb0543193dd9fffafc33a57ed725768f3399397768579ac7e0a4e40f0bc20f7c79f61b19b7e658a3ead1894b70b1b18885a0338963571d1434e7fba1a74a51d74e9fbddc0eaa7698b1c19793589d0658a21e4fb7c1e0d4a192aec7193366119ccf4db27464cc976fa4d33ccef0cca3c2baedc639da467abd9ed9515091a4a4e1052127a970abe781c5dc34dd57b96731174e184ae7f856afec16ff69233f3fe30d4803700255ce9f5823b09d39de241f69500d84be927d092484ea4445b68b82311782a123e90e30f451d1167de30a1515af50c6240cb6d6e2bf880d6ced149bf9285d11e99fd1683c3893766afdfcefcaf0fc6153e68ea1036ed900c3b0e9573efd0b4a39239ac2abd053c9bbd2549b7cecbd10a8b951488d6afc60987573f370e8a219bb89f0da09a735d7791b751bcea9a0586af61375615638b8ac793914edd7a9eb6d3a7af19666a6af73596e7dd06d524ea9e8c528b1857ceeb6570b14352d440995716cd8d8ff994de98beae12c552f8f831c9b3d688f8d14b811e87e36c0ed25eb047a0a802fd791fd9e58508cfa800486ff5e2a9a948ea7289a6fa957b3a74cf254e2188b570d73ea2c09df0bfd780435daa93660a3a9b6a344d8d53346056089a1f34e25ce900052b9d924045140f8831e13542e1297f29a154226df4bc0","link":"/tricks/tricks-2020-01.html"},{"title":"tricks-2020-03","text":"嗨，请准确无误地输入密码查看哟 ","link":"/tricks/tricks-2020-03.html"},{"title":"tricks-2020-02","text":"嗨，请准确无误地输入密码查看哟 ","link":"/tricks/tricks-2020-02.html"},{"title":"tricks-2019-12","text":"tricks-2019-12 2019年1月17日(星期四)yAnXImIN/weiboPicDownloader: 免登录下载微博图片 爬虫 Download Weibo Images without Logging-ingui PPLink - 帮电脑/手机搭建直连通道日常干货在线工具网站分享平台 – SBKKOlinux下替换多个文件中的指定字符串 - 简书 2019-12-31iSlide Mac 玩转输入法每个输入法不一样，以搜狗为例：u 生僻字模式v 数字、小数、日期、算式自定义短语 小鹤双拼 除了搜狗输入法，还有这些好用的输入法。触宝输入法笔画过滤。首先用拼音拼出你想输入的字词，然后直接在键盘上手写笔画进行 QQ输入法快捷翻译 讯飞输入法语音识别，包括方言 百度输入法设置-&gt;高级设置-&gt;管理个性短语-&gt;编辑个性短语懒人短语，类似于“自定义短语” AutoDraw手画icon，ai智能识别 Markdown[TOC] 用来显示Markdown目录有道云笔记 默认支持Markdown印象笔记也支持，需要建立Markdown笔记 WPS有团队文件功能知页 - 用简单的方式，制作专业的简历下载收费 图表秀——免费在线图表制作工具,数据可视化工具PDF24 Tools在线格式转换 All2Allwin桌面分屏看微信文章WeRss - 微信公众号RSS订阅今天看啥 - 让阅读更高品质学习工具 – 微信公众账号和文章的导航及推荐 – 传送门 2019-12-30传输文件的网址：Send Large Files - Free Secure File Transfer - TransferNowP2P傳檔 – 免費資源網路社群 其他网址：国外网站推荐-分享互联网-外国网站大全歌曲大全-音乐聚合搜索引擎-音乐免费下载mp3-音乐免费下载办公资源网_海量办公资源及素材_精美创意模板下载国外网站推荐-分享互联网-外国网站大全PM25.in | 北京PM2.5及空气质量指数(AQI)互联网运营者必备之的修炼清单- eGouz上网导航失眠怎么办？你可以试试这些助眠神器- eGouz上网导航文案创作者必备的写作辅助工具推荐- eGouz上网导航值得收藏的找书网站大全- eGouz上网导航周读：提供免费电子书下载、分享。包括mobi、epud、pdf、txt格式，kindle电子书下载 - 周读DevFreeBooksConvert any URL or Web Page to PDF. Online API servicegitmoji | An emoji guide for your commit messagesgitmoji的使用 | 我的博客GitHub - carloscuesta/gitmoji: An emoji guide for your commit messages. 😜Base64 Image Encoder在线JSON校验格式化工具（Be JSON）CarbonCSS Reference - A free visual guide to CSS 2019-12-29mac slashgtd软件，为当前所做的任务计时 open web monitor优点：在每次监测网页前可以执行一系列操作，包括去登录页面点击和填写表单，以实现登录功能缺点：免费版只能添加3个监测任务 chrome插件 distill web monitor优点：监控页面变化，发出提醒，配置方便缺点：功能单一 知乎封神榜 - 您的知乎之旅从此开始APP影院-全网最全视频库🐒 渣男: 说话的艺术读知乎-精选每日知乎热门答案6个网站磁力搜索网站JsOCR介绍 | 文档中心Windows dock牛牛TV - 搜你想看老Y的免费VIP播放器 todo:权力的游戏 万能钥匙[Vue.js]—-基于 Vue.js 2.0 的 UI 组件库 Element UI讲解_哔哩哔哩 (゜-゜)つロ 干杯~-bilibilivue+elementUI+axios管理平台_哔哩哔哩 (゜-゜)つロ 干杯~-bilibilivue.js+element-ui数据增删查改实战_哔哩哔哩 (゜-゜)つロ 干杯~-bilibili黑马2019新版java项目好客租房网上房源系统-SOA架构 源码+笔记_哔哩哔哩 (゜-゜)つロ 干杯~-bilibili 2019-12-28airpods 连接android声音小问题将耳机放入耳机盒，长按按钮15s重置耳机 2019-12-27airpods 连接Mac问题去除Android File Transfer自启动https://www.v2ex.com/t/567112 2019-12-25意志力训练冥想 （锻炼大脑）充足的休息意志力会消耗殆尽，所以重要的事情优先做 2019-12-17fakerPython最假的库：Faker - 知乎 1234from faker import Fakerfake = Faker(locale='zh_CN')fake.company()# '昂歌信息网络有限公司' js 数组中值的存在12[1, 2, 3, 4].indexOf(1)&gt;-1 // 存在value1 in [a, b, c] // 存在索引1 2019-12-14youtube视频下载插件 2019-12-11mock js官方API 可以打开控制台，随意地试验这些方法 mock js 基于Vue 2019-12-10网页中插入好看的图表 2019-12-09vuevue.js2.5基础入门视频教程-慕课网进阶vue2.5开发去哪儿网App 从零基础到实战项目 窗口最大化option 点击窗口左上角 绿色按钮 全屏 -&gt; 最大化 复制文件全路径来源 快捷键 Command+Option+C 右键文件，option 拷贝文件全路径 若要多个文件的全路径，打开一个文本编辑器，将文件拖拽进去 在Finder中查看文件夹大小1、打开Finder(访达）并进入所需查看的文件夹2、在菜单栏中选择“显示”&gt;”查看显示选项”，或者直接按快捷键 Command+J3、在弹出的窗口中勾选“计算所有大小”选项。4、关闭弹出窗口这样我们在Finder中就可以显示文件夹的实际大小了。注意：此设置不是全局设置，而是针对某一文件夹的设置，对其它文件夹需要重新设置。","link":"/tricks/tricks.html"},{"title":"资源","text":"嗨，请准确无误地输入密码查看哟 ","link":"/tricks/%E8%B5%84%E6%BA%90.html"},{"title":"信息和网络安全","text":"[TOC]","link":"/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/%E4%BF%A1%E6%81%AF%E5%92%8C%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8.html"},{"title":"Set Implementations","text":"[toc] A Guide to TreeSet in Java123456789101112131415161718192021222324252627282930313233343536373839// 2. Intro to TreeSet// 2.1. TreeSet With a Constructor Comparator ParamSet&lt;String&gt; treeSet = new TreeSet&lt;&gt;(Comparator.comparing(String::length));// 2.2 synchronized treeSetSet&lt;String&gt; syncTreeSet = Collections.synchronizedSet(treeSet);// 3. TreeSet add()// 返回 boolean, 源码如下，可以看到内部用的是 treemappublic boolean add(E e) { return m.put(e, PRESENT) == null;}// 4. TreeSet contains()// 5. TreeSet remove() 返回 boolean// 6. TreeSet clear()// 7. TreeSet size()// 8. TreeSet isEmpty()// 9. TreeSet iterator()--升序 descendingIterator()--降序// 若迭代时用treeSet 的 remove 方法，会触发 fail-fast 机制，抛出 ConcurrentModificationException 异常while (itr.hasNext()) { itr.next(); treeSet.remove(\"Second\");}// 但是若用 Iterator 的 remove 方法就没问题while (itr.hasNext()) { String element = itr.next(); if (element.equals(\"Second\")) itr.remove();}// 10. TreeSet first()// size() 为 0 的话抛出异常// 11. TreeSet last()// 12. TreeSet subSet()// return the elements ranging from fromElement to toElement// 13. TreeSet headSet()// return elements of TreeSet which are smaller than the specified element:// 14. TreeSet tailSet()// return the elements of a TreeSet which are greater than or equal to the specified element// 15. Storing Null Elements// 不可添加 null A Guide to HashSet in Java内部维护了一个 HashMap How HashSet Maintains Uniqueness?When we put an object into a HashSet, it uses the object’s hashcode value to determine if an element is not in the set already. Each hash code value corresponds to a certain bucket location which can contain various elements, for which the calculated hash value is the same. But two objects with the same *hashCode* might not be equal. So, objects within the same bucket will be compared using the equals() method.","link":"/java/Collections/03-Set-Implementations.html"},{"title":"List Implementations","text":"[toc] A Guide to the Java LinkedList1List list = Collections.synchronizedList(new LinkedList(...)); Guide to the Java ArrayList1234567891011121314// Constructor Accepting Initial Capacity**List list = new ArrayList&lt;&gt;(20);// Constructor Accepting CollectionCollection&lt;Integer&gt; number = IntStream.range(0, 10).boxed().collect(toSet());List&lt;Integer&gt; list = new ArrayList&lt;&gt;(numbers);assertEquals(10, list.size());assertTrue(numbers.containsAll(list));// insert a collection or several elements at once:List&lt;Long&gt; list = new ArrayList&lt;&gt;(Arrays.asList(1L, 2L, 3L));LongStream.range(4, 10).boxed() .collect(collectingAndThen(toCollection(ArrayList::new), ys -&gt; list.addAll(0, ys)));assertThat(Arrays.asList(4L, 5L, 6L, 7L, 8L, 9L, 1L, 2L, 3L), equalTo(list)); Immutable ArrayList in Java12345678910111213141516// With the JDK// Collections.unmodifiableList(list);List&lt;String&gt; list = new ArrayList&lt;&gt;(Arrays.asList(\"one\", \"two\", \"three\"));List&lt;String&gt; unmodifiableList = Collections.unmodifiableList(list);// With Java 9// List.of(E… elements)final List&lt;String&gt; unmodifiableList = List.of(list.toArray(new String[]{}));// With Guava// ImmutableList.copyOf(list);List&lt;String&gt; list = new ArrayList&lt;&gt;(Arrays.asList(\"one\", \"two\", \"three\"));List&lt;String&gt; unmodifiableList = ImmutableList.copyOf(list);// With the Apache Collections CommonsListUtils.unmodifiableList(list); Guide to CopyOnWriteArrayListIterating Over CopyOnWriteArrayList While Inserting when we create an iterator for the CopyOnWriteArrayList, we get an immutable snapshot of the data in the list at the time iterator() was called. 1assertThat(result).containsOnly(1, 3, 5, 8); // ? Removing While Iterating Is Not Allowed 允许修改元素，但是不允许删除 Multi Dimensional ArrayList in Java","link":"/java/Collections/01-List-Implementations.html"},{"title":"Map Implementations","text":"[toc] The Java HashMap Under the Hood12 A Guide to TreeMap in Java123456789101112131415TreeMap&lt;Integer, String&gt; treeMap = new TreeMap&lt;&gt;(Comparator.reverseOrder());treeMap.put(1, \"a\");treeMap.put(2, \"a\");treeMap.put(3, \"a\");treeMap.put(4, \"a\");treeMap.put(5, \"a\");System.out.println(treeMap.lastKey());System.out.println(treeMap.firstKey());System.out.println(treeMap.headMap(3).keySet().toString());System.out.println(treeMap.tailMap(3).keySet().toString());//1//5//[5, 4]//[3, 2, 1] Java TreeMap vs HashMap Differences Implementation红黑树 hashtable Order Null Values不允许 null 作为 key 允许 null 作为 key Performance Analysis 3.1. HashMap 3.2. TreeMap Similarities 4.1. Unique Elements4.2. Concurrent Access Both Map implementations aren’t synchronized We have to explicitly use Collections.synchronizedMap(mapName) to obtain a synchronized view of a provided map. 4.3. Fail-Fast Iterators Guide to WeakHashMap in JavaWeakHashMap 的用途？ 1234567891011121314151617181920212223242526272829303132// 2. Strong, Soft, and Weak References// 2.1. Strong ReferencesInteger prime = 1;// 2.2. Soft References// an object that has a SoftReference pointing to it won't be garbage collected until the JVM absolutely needs memory.Integer prime = 1; SoftReference&lt;Integer&gt; soft = new SoftReference&lt;Integer&gt;(prime); prime = null;// The prime object has a strong reference pointing to it.// Next, we are wrapping prime strong reference into a soft reference. After making that strong reference null, a prime object is eligible for GC but will be collected only when JVM absolutely needs memory.// 2.3. Weak References// The objects that are referenced only by weak references are garbage collected eagerly; the GC won't wait until it needs memory in that case.Integer prime = 1; WeakReference&lt;Integer&gt; soft = new WeakReference&lt;Integer&gt;(prime); prime = null;// When we made a prime reference null, the prime object will be garbage collected in the next GC cycle, as there is no other strong reference pointing to it.// 3. WeakHashMap as an Efficient Memory Cache// References of a WeakReference type are used as keys in WeakHashMap.WeakHashMap&lt;UniqueImageName, BigImage&gt; map = new WeakHashMap&lt;&gt;();BigImage bigImage = new BigImage(\"image_id\");UniqueImageName imageName = new UniqueImageName(\"name_of_big_image\"); map.put(imageName, bigImage);assertTrue(map.containsKey(imageName)); imageName = null;System.gc(); await().atMost(10, TimeUnit.SECONDS).until(map::isEmpty); A Guide to ConcurrentMap1234567891011121314151617181920212223// 2. ConcurrentMap 是一个 interface// Several default implementations are overridden, disabling the null key/value support:getOrDefaultforEachreplaceAllcomputeIfAbsentcomputeIfPresentcomputemerge// The following APIs are also overridden to support atomicity, without a default interface implementation:putIfAbsentremovereplace(key, oldValue, newValue)replace(key, value) // 3. ConcurrentHashMap// 3.1. Thread-Safety// 3.2. Null Key/Value// 3.3. Stream Support// 3.4. Performance// 3.5. Pitfalls// 4. ConcurrentNavigableMap// 5. ConcurrentSkipListMap Guide to the ConcurrentSkipListMap12 An Introduction to Java.util.Hashtable Class12 A Guide to LinkedHashMap in Java12 A Guide to EnumMap12 Immutable Map Implementations in Java12 A Guide to Java HashMap12","link":"/java/Collections/04-Map-Implementations.html"},{"title":"Map Operations","text":"[toc]","link":"/java/Collections/05-Map-Operations.html"},{"title":"List Operations","text":"[toc] Converting Iterator to List12345678910111213141516171819202122232425// 有时会获得一个 IteratorIterator&lt;Integer&gt; iterator = Arrays.asList(1, 2, 3).iterator();// 怎么转成 List 呢List&lt;Integer&gt; actualList = new ArrayList&lt;&gt;();// 1. using a while loopwhile (iterator.hasNext()) { actualList.add(iterator.next());}// 2. using java 8 Iterator.forEachRemainingiterator.forEachRemaining(actualList::add);// 3. using java 8 streams API ?// 先把 iterator 转成 iterableIterable&lt;Integer&gt; iterable = () -&gt; iterator;List&lt;Integer&gt; actualList = StreamSupport .stream(iterable.spliterator(), false) .collect(Collectors.toList());// 4. Guava// 4.1 Immutable ListList&lt;Integer&gt; actualList = ImmutableList.copyOf(iterator);// 4.2 mutable listList&lt;Integer&gt; actualList = Lists.newArrayList(iterator);// 5. apache CommonsList&lt;Integer&gt; actualList = IteratorUtils.toList(iterator);assertThat(actualList, containsInAnyOrder(1, 2, 3)); Java – Get Random Item/Element From a List1234567891011List&lt;Integer&gt; givenList = Arrays.asList(1, 2, 3);// 2.1. Single Random ItemRandom rand = new Random();givenList.get(rand.nextInt(givenList.size()));// 2.2. in Multithread Environmentint randomElementIndex = THreadLocalRandom.current().nextInt(listSize) % givenList.size();// 2.4. Without Repetitions// 获取后 remove 元素即可givenList.remove(randomIndex);// 2.5. Select Random SeriesCollections.shuffle(givenList); Partition a List in Java1234567891011121314151617181920212223242526272829303132// 将一个 list 划分为指定长度的 sublistsList&lt;Integer&gt; intList = Lists.newArrayList(1, 2, 3, 4, 5, 6, 7, 8, 9); // guava// 1. Guava// Keep in mind that the partitions are sublist views of the original collection// which means that changes in the original collection will be reflected in the partitions// 1.1. Use Guava to Partition the ListLists.partition(intList, 3);// 1.2. Use Guava to partition a Collection// 略// 2. Use Apache Commons Collections to Partition the List// the same caveat applies here as well – // the resulting partition are views of the original List.ListUtils.partition(intList, 3);// 3. Use Java8 to Partition the List// 3.1. Collectors partitioningBy// use Collectors.partitioningBy() to split the list into 2 sublistsMap&lt;Boolean, List&lt;Integer&gt;&gt; groups = intList.stream().collect(Collectors.partitioningBy(s -&gt; s &gt; 6));List&lt;List&lt;Integer&gt;&gt; subSets = new ArrayList&lt;List&lt;Integer&gt;&gt;(groups.values());// 3.2. Collectors groupingBy// use Collectors.groupingBy() to split our list to multiple partitionsMap&lt;Integer, List&lt;Integer&gt;&gt; groups = intList.stream().collect(Collectors.groupingBy(s -&gt; (s - 1) / 3));List&lt;List&lt;Integer&gt;&gt; subSets = new ArrayList&lt;List&lt;Integer&gt;&gt;(groups.values());// 3.3. Split the List by Separator// use Java8 to split our List by separatorint[] indexes = Stream.of(IntStream.of(-1), IntStream.range(0, intList.size()) .filter(i -&gt; intList.get(i) == 0), IntStream.of(intList.size())) .flatMapToInt(s -&gt; s).toArray();List&lt;List&lt;Integer&gt;&gt; subSets = IntStream.range(0, indexes.length - 1) .mapToObj(i -&gt; intList.subList(indexes[i] + 1, indexes[i + 1])) .collect(Collectors.toList()); Removing all nulls from a List in Java1234567891011121314151617181920212223242526List&lt;Integer&gt; list = Lists.newArrayList(null, 1, null);// 1. plain javawhile (list.remove(null));// 或者list.removeAll(Collections.singleton(null)); // ?// 2. Guava// 2.1 via predicates (modify original list)Iterables.removeIf(list, Predicates.isNull());// 2.2 do not modify original listList&lt;Integer&gt; listWithoutNulls = Lists.newArrayList( Iterables.filter(list, Predicates.notNull()));assertThat(list, hasSize(1));// 3. Commons// (modify original list)CollectionUtils.filter(list, PredicateUtils.notNullPredicate());// 4. java8 lambdas// 4.1 parallel (do not modify original list)list.parallelStream() .filter(Objects::nonNull) .collect(Collectors.toList());// 4.2 serial (do not modify original list)list.stream() .filter(Objects::nonNull) .collect(Collectors.toList());// 4.3 (modify original list)list.removeIf(Objects::isNull); Removing all duplicates from a List in Java1234567891011List&lt;Integer&gt; list = Lists.newArrayList(0, 1, 2, 3, 0, 0);// 以下做法均类似于 Python 的 list(set(l))// 1. plain java// using setList&lt;Integer&gt; listWithoutDuplicates = new ArrayList&lt;&gt;(new HashSet&lt;&gt;(list));// 2. GuavaLists.newArrayList(Sets.newHashSet(list));// 3. java 8 streamlist.stream().distinct().collect(Collectors.toList());assertThat(listWithoutDuplicates, hasSize(4)); Check If Two Lists are Equal in Java1234567891011121314151617List&lt;String&gt; list1 = Arrays.asList(\"1\", \"2\", \"3\", \"4\");List&lt;String&gt; list2 = Arrays.asList(\"1\", \"2\", \"3\", \"4\");List&lt;String&gt; list3 = Arrays.asList(\"1\", \"2\", \"4\", \"3\");// 1. JUnitAssert.assertEquals(list1, list2);Assert.assertNotSame(list1, list2);Assert.assertNotEquals(list1, list3);// 2. TestNG (用法类似)Assert.assertEquals(list1, list2);Assert.assertNotSame(list1, list2);Assert.assertNotEquals(list1, list3);// 3. AssertJassertThat(list1) .isEqualTo(list2) .isNotEqualTo(list3);assertThat(list1.equals(list2)).isTrue;assertThat(list1.equals(list3)).isFalse; How to Find an Element in a List with Java12345678910111213// contains indexOf loop// 略// java 8 stream api// invoke stream() on the list// call the filter() method with a proper Predicate// call the findAny() construct which returns the first element // that matches the filter predicate wrapped in an Optional if such an element existscustomers.stream() .filter(customer -&gt; \"James\".equals(customer.getName())) .findAny() .orElse(null);// guava / commons// 写的很晦涩，略 Java List UnsupportedOperationException1234List&lt;String&gt; flowerList = Arrays.asList(flowers);// Arrays.asList() 返回的 list 大小固定，不可增删（修改呢？）// 改进, 若要修改new ArrayList(Arrays.asList(flowers)); Copy a List to Another List in Java1234567891011121314151617181920// 1. 利用构造函数List&lt;Integer&gt; copy = new ArrayList&lt;&gt;(list);// 2. addAllList&lt;Integer&gt; copy = new ArrayList&lt;&gt;();copy.addAll(list);// 但是: 这 2 种方法只是复制了引用，修改一个会影响另一个// 3. Collections.copy// src dest 长度一样，dest 会被覆盖List&lt;Integer&gt; source = Arrays.asList(1,2,3);List&lt;Integer&gt; dest = Arrays.asList(4,5,6);Collections.copy(dest, source);// dest 留出前三个位置List&lt;Integer&gt; source = Arrays.asList(1, 2, 3);List&lt;Integer&gt; dest = Arrays.asList(5, 6, 7, 8, 9, 10);Collections.copy(dest, source);// 4. java 8 streamlist.stream().collect(Collectors.toList()); Remove All Occurrences of a Specific Value from a List1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465// list.remove(1) 若 1 是 int, 会被当成索引，不是 value，是 integer 才行// void removeAll(List&lt;Integer&gt; list, int element) {void removeAll(List&lt;Integer&gt; list, Integer element) { while (list.contains(element)) { list.remove(element); }}// 或者void removeAll(List&lt;Integer&gt; list, Integer element) { int index; while ((index = list.indexOf(element)) &gt;= 0) { list.remove(index); }}// 但以上方法都很慢// for loop, 但需要考虑到同时删除相邻元素时的问题// 因此，因为 for-each loop 没有解决同时删除相邻元素时的问题，test failedvoid removeAll(List&lt;Integer&gt; list, int element) { for (int i = 0; i &lt; list.size();) { if (Objects.equals(element, list.get(i))) { list.remove(i); } else { i++; } }}// using an Iteratorvoid removeAll(List&lt;Integer&gt; list, int element) { for (Iterator&lt;Integer&gt; i = list.iterator(); i.hasNext();) { Integer number = i.next(); if (Objects.equals(number, element)) { i.remove(); } }}// 建立一个新 listList&lt;Integer&gt; removeAll(List&lt;Integer&gt; list, int element) { List&lt;Integer&gt; remainingElements = new ArrayList&lt;&gt;(); for (Integer number : list) { if (!Objects.equals(number, element)) { remainingElements.add(number); } } return remainingElements;}// 或者返回 voidvoid removeAll(List&lt;Integer&gt; list, int element) { List&lt;Integer&gt; remainingElements = new ArrayList&lt;&gt;(); for (Integer number : list) { if (!Objects.equals(number, element)) { remainingElements.add(number); } } list.clear(); list.addAll(remainingElements);}// stream apilist.stream().filter(e -&gt; !Object.equals(e, element)) .collect(Collectors.toList());// 最简单的方法（你不早说）：// removeIflist.removeIf(n -&gt; Objects.equals(n, element)); Add Multiple Items to an Java ArrayList12345678// list1.addAll(list2) // Collections.addAll(list1, list2)// Collections.addAll(list1, 1, 2, 3)// 以上 2 种方法添加的都是引用// using stream 更简便，还能用 skip filtersource.stream().forEachOrdered(target::add);// 不能用collect(target::add) ，因为 collect 将所有元素看为一个整体 Remove the First Element from a List1234// ArrayListlist.remove(0);// linkedListlist.removeFirst() Ways to Iterate Over a List in Java12345// loop foreach loop Iterator// list.forEachcountries.forEach(System.out::println);// Stream.forEach()countries.stream().forEach((c) -&gt; System.out.println(c)); Intersection of Two Lists in Java12345List&lt;String&gt; list = Arrays.asList(\"red\", \"blue\", \"blue\", \"green\", \"red\");List&lt;String&gt; otherList = Arrays.asList(\"red\", \"green\", \"green\", \"yellow\");Set&lt;String&gt; result = list.stream().filter(otherList::contains) .collect(Collectors.toSet());","link":"/java/Collections/02-List-Operations.html"},{"title":"Convert Collections","text":"[toc]","link":"/java/Collections/Convert-Collections.html"},{"title":"Guava Collections","text":"[toc]","link":"/java/Collections/Guava-Collections.html"},{"title":"Java Collections | Baeldung","text":"[toc] Java Collections | Baeldung ListsList Implementations:A Guide to the Java LinkedListGuide to the Java ArrayListImmutable ArrayList in JavaGuide to CopyOnWriteArrayListMulti Dimensional ArrayList in Java List Operations:Converting Iterator to ListJava – Get Random Item/Element From a ListPartition a List in Java Removing all nulls from a List in JavaRemoving all duplicates from a List in JavaRemoving all Nulls from a List in JavaCheck If Two Lists are Equal in Java How to Find an Element in a List with JavaJava List UnsupportedOperationExceptionCopy a List to Another List in JavaRemove All Occurrences of a Specific Value from a ListAdd Multiple Items to an Java ArrayListRemove the First Element from a ListWays to Iterate Over a List in JavaIntersection of Two Lists in Java SetsSet Implementations:A Guide to TreeSet in JavaA Guide to HashSet in Java MapsMap Implementations:The Java HashMap Under the HoodA Guide to TreeMap in JavaJava TreeMap vs HashMapGuide to WeakHashMap in JavaA Guide to ConcurrentMapGuide to the ConcurrentSkipListMapAn Introduction to Java.util.Hashtable ClassA Guide to LinkedHashMap in JavaA Guide to EnumMapImmutable Map Implementations in JavaA Guide to Java HashMap Map Operations:How to Store Duplicate Keys in a Map in Java?Initialize a HashMap in JavaMerging Two Maps with Java 8Sort a HashMap in JavaComparing Two HashMaps in Java QueuesGuide to PriorityBlockingQueue in JavaGuide to java.util.concurrent.BlockingQueueA Guide to Java SynchronousQueueGuide to the Java TransferQueueGuide to DelayQueueIntroduction to the Java ArrayDequeGuide to the Java Queue Interface Convert CollectionsConverting between an Array and a List in JavaConverting Between an Array and a Set in JavaConverting between a List and a Set in JavaConvert a Map to an Array, List or Set in JavaHow to Convert List to Map in JavaMap to String Conversion in Java Operations on CollectionThe Difference Between Collection.stream().forEach() and Collection.forEach()Sorting in JavaShuffling Collections In JavaFlattening Nested Collections in JavaZipping Collections in JavaJoin and Split Arrays and Collections in JavaJava – Combine Multiple CollectionsFinding Max/Min of a List or CollectionCollect a Java Stream to an Immutable CollectionJava 9 Convenience Factory Methods for CollectionsJava Collections Interview QuestionsA Guide to Iterator in JavaGetting the Size of an Iterable in JavaRemoving Elements from Java Collections Apache Commons CollectionsApache Commons Collections BagApache Commons Collections SetUtilsApache Commons Collections OrderedMapApache Commons Collections BidiMapA Guide to Apache Commons Collections CollectionUtilsApache Commons Collections MapUtilsGuide to Apache Commons CircularFifoQueue Guava CollectionsGuava Collections CookbookGuide to Guava MultimapGuava – Join and Split CollectionsGuide to Guava Table Other CollectionsIntroduction to Eclipse CollectionsIntroduction to PCollectionsFiltering and Transforming Collections in GuavaHamcrest Collections CookbookImplementing a Binary Tree in Java","link":"/java/Collections/Java-Collections-Baeldung.html"},{"title":"Operations on Collection","text":"[toc]","link":"/java/Collections/Operations-on-Collection.html"},{"title":" Other Collections","text":"[toc]","link":"/java/Collections/Other-Collections.html"},{"title":"Queues","text":"[toc]","link":"/java/Collections/Queues.html"},{"title":"分布式消息Kafka的原理、基础架构、使用场景","text":"[toc] 分布式消息Kafka的原理、基础架构、使用场景一：Kafka简介Kafka 是分布式发布-订阅系统，在 kafka 官网上对 kafaka 的定义：一个分布式发布订阅消息传递系统。kafka 是一种快速、可扩展的、分布式、分区的和可复制的提交日志服务。 二：Kafka基本架构它的架构包括以下组件： Topic: 特定类型的消息流。消息是字节的有效负载（payload），topic 是消息的分类名或种子（feed）名 Producer：发布消息到 topic 的对象 Broker / kafka 集群：已发布的消息保存在一组服务器中 Consumer： 可以订阅一个或多个话题，并从 Broker 拉数据，从而消费这些已发布的消息 上图中可以看出，生产者将数据发送到Broker代理，Broker代理有多个话题topic，消费者从Broker获取数据。 三：Kafka基本原理 生产者将数据生产出来，交给 broker 进行存储，消费者需要消费数据了，就从broker中去拿出数据来，然后完成一系列对数据的处理操作。 kafka 官方给出的图： 多个 broker 协同合作，producer 和 consumer 部署在各个业务逻辑中被频繁的调用，三者通过 zookeeper管理协调请求和转发。这样一个高性能的分布式消息发布订阅系统就完成了。 图上有个细节需要注意，producer 到 broker 的过程是 push，也就是有数据就推送到 broker，而 consumer 到 broker 的过程是 pull，是通过 consumer 主动去拉数据的，而不是 broker 把数据主懂发送到 consumer 端的。 四：Zookeeper在kafka的作用 无论是 kafaka 集群还是 producer 、consume 都依赖与 zookeeper 来保证系统可用性集群保存一些 meta 信息。 kafaka 使用 zookeeper 作为其分布式协调框架，很好地将消息生产、消息存储、消息消费的过程结合在一起。 同时借助 zookeeper，kafka 能够建立生产者和消费者的订阅关系，并实现生产者与消费者的负载均衡。 五：Kafka的特性1.高吞吐量、低延迟kafka每秒可以处理几十万条消息，它的延迟最低只有几毫秒，每个topic可以分多个partition, consumer group 对partition进行consume操作。 2.可扩展性kafka集群支持热扩展 3.持久性、可靠性消息被持久化到本地磁盘，并且支持数据备份防止数据丢失 4.容错性允许集群中节点失败（若副本数量为n,则允许n-1个节点失败） 5.高并发支持数千个客户端同时读写 Kafka的使用场景： 1.日志收集一个公司可以用Kafka可以收集各种服务的log，通过kafka以统一接口服务的方式开放给各种consumer，例如hadoop、Hbase、Solr等。 2.消息系统3.用户活动跟踪Kafka经常被用来记录web用户或者app用户的各种活动，如浏览网页、搜索、点击等活动，这些活动信息被各个服务器发布到kafka的topic中，然后订阅者通过订阅这些topic来做实时的监控分析，或者装载到hadoop、数据仓库中做离线分析和挖掘。 4.运营指标Kafka也经常用来记录运营监控数据。包括收集各种分布式应用的数据，生产各种操作的集中反馈，比如报警和报告。 5.流式处理比如spark streaming和storm 六：ActiveMQ、Kafka、RabbitMQ消息系统的对比","link":"/java/other/%E5%88%86%E5%B8%83%E5%BC%8F%E6%B6%88%E6%81%AFKafka%E7%9A%84%E5%8E%9F%E7%90%86%E3%80%81%E5%9F%BA%E7%A1%80%E6%9E%B6%E6%9E%84%E3%80%81%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF.html"},{"title":"Apache Commons Collections","text":"[toc]","link":"/java/Collections/Apache-Commons-Collections.html"},{"title":"Dubbo面试28题答案详解：核心功能+服务治理+架构设计等","text":"[toc] Dubbo面试28题答案详解：核心功能+服务治理+架构设计等Java学习分享 1.Dubbo是什么？RPC 指的是远程调用协议，也就是说两个服务器交互数据。 Dubbo 是一个分布式、高性能、透明化的 RPC 服务框架，提供服务自动注册、自动发现等高效服务治理方案，可以和 Spring 框架无缝集成。 2.Dubbo的由来？互联网的快速发展，Web 应用程序规模的不断扩大，一般会经历如下四个发展阶段。 单一应用架构 当网站流量很小时，只需一个应用，将所有功能都部署在一起即可。 垂直应用架构**当访问量逐渐增大，单一应用按照有业务线拆成多个应用，以提升效率。 此时，用于加速前端页面开发的 Web框架(MVC) 是关键。 分布式服务架构当垂直应用越来越多，应用之间交互不可避免，将核心业务抽取出来，作为独立的服务，逐渐形成稳定的服务中心，使前端应用能更快速地响应多变的市场需求。 此时，用于提高业务复用及整合的 分布式服务框架(RPC) 是关键。 流动计算架构当服务越来越多，容量的评估，小服务资源的浪费等问题逐渐显现，此时需增加一个调度中心基于访问压力实时管理集群容量，提高集群利用率。 此时，用于提高机器利用率的 资源调度和治理中心(SOA) 是关键。 3.Dubbo的主要应用场景？透明化的远程方法调用，就像调用本地方法一样调用远程方法，只需简单配置，没有任何API侵入。 软负载均衡及容错机制，可在内网替代F5等硬件负载均衡器，降低成本，减少单点。 服务自动注册与发现，不再需要写死服务提供方地址，注册中心基于接口名查询服务提供者的IP地址，并且能够平滑添加或删除服务提供者。 4.Dubbo的核心功能？主要就是如下3个核心功能： Remoting：网络通信框架，提供对多种NIO框架抽象封装，包括“同步转异步”和“请求-响应”模式的信息交换方式。 Cluster：服务框架，提供基于接口方法的透明远程过程调用，包括多协议支持，以及软负载均衡，失败容错，地址路由，动态配置等集群支持。 Registry：服务注册，基于注册中心目录服务，使服务消费方能动态的查找服务提供方，使地址透明，使服务提供方可以平滑增加或减少机器。 5.Dubbo的核心组件？ Provider Consumer Registry Monitor Container 6.Dubbo服务注册与发现的流程？ 流程说明： Provider 绑定指定端口并启动服务 Provider 连接注册中心，并发送 本机IP、端口、应用信息和提供服务信息 至 Registry 存储 Consumer 连接注册中心 ，并发送应用信息、所求服务信息至注册中心 Registry 根据 Consumer 所求服务信息匹配对应的 Provider 列表发送至 Consumer 应用缓存。 Consumer 在发起远程调用时基于缓存的 Provider 列表择其一发起调用。 Provider 状态变更会实时通知Registry、再由Registry实时推送至Consumer 设计的原因： Consumer 与Provider 解偶，双方都可以横向增减节点数。 Registry 对本身可做对等集群，可动态增减节点，并且任意一台宕掉后，将自动切换到另一台 去中心化，双方不直接依懒注册中心，即使注册中心全部宕机短时间内也不会影响服务的调用 服务提供者无状态，任意一台宕掉后，不影响使用 7.Dubbo的架构设计？ Dubbo框架设计一共划分了10个层： 服务接口层（Service）：该层是与实际业务逻辑相关的，根据服务提供方和服务消费方的业务设计对应的接口和实现。 配置层（Config）：对外配置接口，以ServiceConfig和ReferenceConfig为中心。 服务代理层（Proxy）：服务接口透明代理，生成服务的客户端Stub和服务器端Skeleton。 服务注册层（Registry）：封装服务地址的注册与发现，以服务URL为中心。 集群层（Cluster）：封装多个提供者的路由及负载均衡，并桥接注册中心，以Invoker为中心。 监控层（Monitor）：RPC调用次数和调用时间监控。 远程调用层（Protocol）：封将RPC调用，以Invocation和Result为中心，扩展接口为Protocol、Invoker和Exporter。 信息交换层（Exchange）：封装请求响应模式，同步转异步，以Request和Response为中心。 网络传输层（Transport）：抽象mina和netty为统一接口，以Message为中心。 8.Dubbo的服务调用流程？ 9.Dubbo支持哪些协议，每种协议的应用场景，优缺点？ dubbo： 单一长连接和NIO异步通讯，适合大并发小数据量的服务调用，以及消费者远大于提供者。传输协议TCP，异步，Hessian序列化； rmi： 采用JDK标准的rmi协议实现，传输参数和返回参数对象需要实现Serializable接口，使用java标准序列化机制，使用阻塞式短连接，传输数据包大小混合，消费者和提供者个数差不多，可传文件，传输协议TCP。 多个短连接，TCP协议传输，同步传输，适用常规的远程服务调用和rmi互操作。在依赖低版本的Common-Collections包，java序列化存在安全漏洞； webservice： 基于WebService的远程调用协议，集成CXF实现，提供和原生WebService的互操作。多个短连接，基于HTTP传输，同步传输，适用系统集成和跨语言调用； http： 基于Http表单提交的远程调用协议，使用Spring的HttpInvoke实现。多个短连接，传输协议HTTP，传入参数大小混合，提供者个数多于消费者，需要给应用程序和浏览器JS调用； hessian： 集成Hessian服务，基于HTTP通讯，采用Servlet暴露服务，Dubbo内嵌Jetty作为服务器时默认实现，提供与Hession服务互操作。多个短连接，同步HTTP传输，Hessian序列化，传入参数较大，提供者大于消费者，提供者压力较大，可传文件； memcache： 基于memcached实现的RPC协议 redis： 基于redis实现的RPC协议 10.dubbo推荐用什么协议？默认使用dubbo协议 11.Dubbo有些哪些注册中心？ Multicast注册中心： Multicast注册中心不需要任何中心节点，只要广播地址，就能进行服务注册和发现。基于网络中组播传输实现； Zookeeper注册中心： 基于分布式协调系统Zookeeper实现，采用Zookeeper的watch机制实现数据变更； redis注册中心： 基于redis实现，采用key/Map存储，住key存储服务名和类型，Map中key存储服务URL，value服务过期时间。基于redis的发布/订阅模式通知数据变更； Simple注册中心 12.Dubbo的服务治理？ 过多的服务URL配置困难 负载均衡分配节点压力过大的情况下也需要部署集群 服务依赖混乱，启动顺序不清晰 过多服务导致性能指标分析难度较大，需要监控 13.Dubbo的注册中心集群挂掉，发布者和订阅者之间还能通信么？可以的，启动dubbo时，消费者会从zookeeper拉取注册的生产者的地址接口等数据，缓存在本地。 每次调用时，按照本地存储的地址进行调用。 14.Dubbo与Spring的关系？Dubbo采用全Spring配置方式，透明化接入应用，对应用没有任何API侵入，只需用Spring加载Dubbo的配置即可，Dubbo基于Spring的Schema扩展进行加载。 15.Dubbo使用的是什么通信框架?默认使用NIO Netty框架 16.Dubbo集群提供了哪些负载均衡策略？ Random LoadBalance: 随机选取提供者策略，有利于动态调整提供者权重。截面碰撞率高，调用次数越多，分布越均匀； RoundRobin LoadBalance: 轮循选取提供者策略，平均分布，但是存在请求累积的问题； LeastActive LoadBalance: 最少活跃调用策略，解决慢提供者接收更少的请求； ConstantHash LoadBalance: 一致性Hash策略，使相同参数请求总是发到同一提供者，一台机器宕机，可以基于虚拟节点，分摊至其他提供者，避免引起提供者的剧烈变动； 缺省时为Random随机调用 17.Dubbo的集群容错方案有哪些？ Failover Cluster 失败自动切换，当出现失败，重试其它服务器。通常用于读操作，但重试会带来更长延迟。 Failfast Cluster 快速失败，只发起一次调用，失败立即报错。通常用于非幂等性的写操作，比如新增记录。 Failsafe Cluster 失败安全，出现异常时，直接忽略。通常用于写入审计日志等操作。 Failback Cluster 失败自动恢复，后台记录失败请求，定时重发。通常用于消息通知操作。 Forking Cluster 并行调用多个服务器，只要一个成功即返回。通常用于实时性要求较高的读操作，但需要浪费更多服务资源。可通过 forks=”2″ 来设置最大并行数。 Broadcast Cluster 广播调用所有提供者，逐个调用，任意一台报错则报错 。通常用于通知所有提供者更新缓存或日志等本地资源信息。 18.Dubbo的默认集群容错方案？Failover Cluster 19.Dubbo支持哪些序列化方式？默认使用Hessian序列化，还有Duddo、FastJson、Java自带序列化。 20.Dubbo超时时间怎样设置？Dubbo超时时间设置有两种方式： 服务提供者端设置超时时间，在Dubbo的用户文档中，推荐如果能在服务端多配置就尽量多配置，因为服务提供者比消费者更清楚自己提供的服务特性。 服务消费者端设置超时时间，如果在消费者端设置了超时时间，以消费者端为主，即优先级更高。因为服务调用方设置超时时间控制性更灵活。如果消费方超时，服务端线程不会定制，会产生警告。 21.服务调用超时问题怎么解决？dubbo在调用服务不成功时，默认是会重试两次的。 22.Dubbo在安全机制方面是如何解决？Dubbo通过Token令牌防止用户绕过注册中心直连，然后在注册中心上管理授权。Dubbo还提供服务黑白名单，来控制服务所允许的调用方。 23.dubbo 和 dubbox 之间的区别？dubbox 基于 dubbo 上做了一些扩展，如加了服务可 restful 调用，更新了开源组件等。 24.除了Dubbo还有哪些分布式框架？大家熟知的就是Spring cloud，当然国外也有类似的多个框架。 25.Dubbo和Spring Cloud的关系？Dubbo 是 SOA 时代的产物，它的关注点主要在于服务的调用，流量分发、流量监控和熔断。而 Spring Cloud诞生于微服务架构时代，考虑的是微服务治理的方方面面，另外由于依托了 Spirng、Spirng Boot的优势之上，两个框架在开始目标就不一致，Dubbo 定位服务治理、Spirng Cloud 是一个生态。 26.dubbo和spring cloud的区别？最大的区别：Dubbo底层是使用Netty这样的NIO框架，是基于TCP协议传输的，配合以Hession序列化完成RPC通信。 而SpringCloud是基于Http协议+Rest接口调用远程过程的通信，相对来说，Http请求会有更大的报文，占的带宽也会更多。但是REST相比RPC更为灵活，服务提供方和调用方的依赖只依靠一纸契约，不存在代码级别的强依赖，这在强调快速演化的微服务环境下，显得更为合适，至于注重通信速度还是方便灵活性，具体情况具体考虑。","link":"/java/other/Dubbo%E9%9D%A2%E8%AF%9528%E9%A2%98%E7%AD%94%E6%A1%88%E8%AF%A6%E8%A7%A3%EF%BC%9A%E6%A0%B8%E5%BF%83%E5%8A%9F%E8%83%BD-%E6%9C%8D%E5%8A%A1%E6%B2%BB%E7%90%86-%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E7%AD%89.html"},{"title":"学习JVM是如何从入门到放弃的？","text":"[toc] 一、简单聊聊JVM1.1先来看看简单的Java程序1.2编译过程1.3JVM实现跨平台1.4class文件和JVM的恩怨情仇1.5类加载完以后JVM干了什么？1.5.1JVM的内存结构1.5.2例子中的流程1.6简单聊聊各种常量池1.7GC垃圾回收1.8JVM参数与调优二、JVM面试题2.1详细jvm内存结构2.2讲讲什么情况下回出现内存溢出，内存泄漏？2.3说说线程栈2.4JVM 年轻代到年老代的晋升过程的判断条件是什么呢？2.5JVM 出现 fullGC 很频繁，怎么去线上排查问题2.6类加载为什么要使用双亲委派模式，有没有什么场景是打破了这个模式？2.7类的实例化顺序2.8JVM垃圾回收机制，何时触发MinorGC等操作2.9JVM 中一次完整的 GC 流程（从 ygc 到 fgc）是怎样的2.10各种回收算法2.11各种回收器，各自优缺点，重点CMS、G12.12stackoverflow错误，permgen space错误三、总结","link":"/java/other/%E5%AD%A6%E4%B9%A0JVM%E6%98%AF%E5%A6%82%E4%BD%95%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E6%94%BE%E5%BC%83%E7%9A%84%EF%BC%9F.html"},{"title":"01 json解析","text":"[toc] fastjsonmaven12345&lt;dependency&gt; &lt;groupId&gt;com.alibaba&lt;/groupId&gt; &lt;artifactId&gt;fastjson&lt;/artifactId&gt; &lt;version&gt;1.2.62&lt;/version&gt;&lt;/dependency&gt; code1234567891011121314151617181920212223242526272829303132333435package json;import com.alibaba.fastjson.JSON;import com.alibaba.fastjson.JSONObject;import java.util.ArrayList;import java.util.List;// [Java中那些常用的json库性能比较，常见Json库用法示例代码 - 51CTO.COM](https://developer.51cto.com/art/201907/599631.htm)public class JsonTest { public static void main(String[] args) { Person person = new Person(); person.setId(1111); person.setUsername(\"zronghui\"); person.setAddress(\"广东\"); person.setAge(100); List&lt;Person&gt; list = new ArrayList&lt;&gt;(); list.add(person); // fastjson // Java对象转化成为json字符串 System.out.println(JSON.toJSONString(person)); // 集合对象转化成为json字符串 System.out.println(JSON.toJSONString(list)); // 字符串转化成java对象 Person person1 = JSON.parseObject(JSON.toJSONString(person), Person.class); // 字符串转化成json对象 JSONObject jsonObject = JSON.parseObject(JSON.toJSONString(person)); // 字符串转化成为java集合 List&lt;Person&gt; people = JSON.parseArray(JSON.toJSONString(list), Person.class); }} Person.java 123456789101112131415package json;import lombok.Data;import lombok.Getter;import lombok.Setter;@Data@Getter@Setterpublic class Person { private Integer id; private String username; private Integer age; private String address;} 问题maven helloworld8、运行程序 在运行之前需要先进行相关的配置。点击Run-&gt;Edit Configurations… 2 种运行方法 Maven项目中出现“不再支持目标选项 1.5。请使用 1.6 或更高版本。”的解决方法在pom.xml中添加： 12345&lt;properties&gt; &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt; &lt;maven.compiler.source&gt;1.8&lt;/maven.compiler.source&gt; &lt;maven.compiler.target&gt;1.8&lt;/maven.compiler.target&gt;&lt;/properties&gt; IDEA自动补全当前语句的分号command shift + enter IDEA 中快速导入 maven 依赖command + n 调出 generator 窗口，选 dependency 输入关键词搜索，搜索的速度比较慢 如何使用分页插件","link":"/java/module%20test/01-json%E8%A7%A3%E6%9E%90.html"},{"title":"02 log","text":"[toc] logSLF4J不同于其他日志类库，与其它有很大的不同。SLF4J(Simple logging Facade for Java)不是一个真正的日志实现，而是一个抽象层（ abstraction layer），它允许你在后台使用任意一个日志类库。 在代码中表示为{}的特性。占位符是一个非常类似于在String的format()方法中的%s，它会在运行时被某个提供的实际字符串所替换。 slf4j-log4j12-1.5.8.jar –- Log4J Adapter for SLF4J maven12345&lt;dependency&gt; &lt;groupId&gt;org.slf4j&lt;/groupId&gt; &lt;artifactId&gt;slf4j-log4j12&lt;/artifactId&gt; &lt;version&gt;1.7.30&lt;/version&gt;&lt;/dependency&gt; code12345678910111213package log;import org.slf4j.Logger;import org.slf4j.LoggerFactory;public class log { private static Logger logger = LoggerFactory.getLogger(log.class); public static void main(String[] args) { logger.info(\"template: {} + {} = {}\", 1, 2, 3); logger.error(\"something wrong\"); }} properties1234567891011# Configure logging for testing: optionally with log filelog4j.rootLogger=INFO, stdout#log4j.rootLogger=WARN, stdout# log4j.rootLogger=WARN, stdout, logfilelog4j.appender.stdout=org.apache.log4j.ConsoleAppenderlog4j.appender.stdout.layout=org.apache.log4j.PatternLayoutlog4j.appender.stdout.layout.ConversionPattern=%d %p [%c] - %m%nlog4j.appender.logfile=org.apache.log4j.FileAppenderlog4j.appender.logfile.File=target/spring.loglog4j.appender.logfile.layout=org.apache.log4j.PatternLayoutlog4j.appender.logfile.layout.ConversionPattern=%d %p [%c] - %m%n","link":"/java/module%20test/02-log.html"},{"title":"03 junit","text":"[toc] Junitmaven123456&lt;dependency&gt; &lt;groupId&gt;junit&lt;/groupId&gt; &lt;artifactId&gt;junit&lt;/artifactId&gt; &lt;version&gt;4.13&lt;/version&gt; &lt;scope&gt;test&lt;/scope&gt;&lt;/dependency&gt; code12345678910111213141516171819202122232425262728293031323334353637383940414243444546import log.log;import org.junit.After;import org.junit.Assert;import org.junit.Before;import org.junit.Test;/** * log Tester. * * @author &lt;Authors name&gt; * @version 1.0 * @since &lt;pre&gt;2月 8, 2020&lt;/pre&gt; */public class logTest { @Before public void before() throws Exception { } @After public void after() throws Exception { } /** * Method: add(int a, int b) */ @Test public void testAdd() throws Exception { //TODO: Test goes here... log log = new log(); assert log.add(1, 3) == 4; Assert.assertEquals(1, 2); Assert.assertTrue(true); Assert.assertNotNull(1); } /** * Method: main(String[] args) */ @Test public void testMain() throws Exception { //TODO: Test goes here... testAdd(); }} Assert例如，Assert.assertEquals(3, result); 主要有如下几个断言方法： assertTrue/False（）：判断一个条件是 true 还是 false。 fail（）：失败，可以有消息，也可以没有消息。 assertEquals（）：判断是否想等，可以指定输出错误信息。注意不同数据类型所使用的 assertEquals 方法参数有所不同。 assertNotNull/Null（）：判断一个对象是否为空。 assertSame/NotSame（）：判断两个对象是否指向同一个对象。 failNotSame/failNotEquals（）：当不指向同一个内存地址或者不相等的时候，输出错误信息。错误信息为指定的格式。 setUp每次测试方法执行之前，都会执行 setUp 方法，此方法用于进行一些固定的准备工作，比如，实例化对象，打开网络连接等。 tearDown每次测试方法执行之后，都会执行 tearDown 方法，此方法用于进行一些固定的善后工作，比如，关闭网络连接等。 Failure与Error区别单元测试的失败（Failure）与测试出现了错误（Error）JUnit 将测试失败的情况分为两种：Failure 和 Error 。 Failure 一般是由单元测试使用的断言方法判断失败引起的，它表示在测试点发现了问题（程序中的 bug）；而 Error 则是有代码异常引起的，这是测试目的之外的发现，它可能产生于测试代码本身的错误（也就是说，编写的测试代码有问题），也可能是被测试代码中的一个隐藏 bug 。不过，一般情况下是第一种情况。 常用注解 @Before初始化方法，在任何一个测试方法执行之前，必须执行的代码。对比 JUnit 3 ，和 setUp（）方法具有相同的功能。在该注解的方法中，可以进行一些准备工作，比如初始化对象，打开网络连接等。 @After释放资源，在任何一个测试方法执行之后，需要进行的收尾工作。对比 JUnit 3 ，和 tearDown（）方法具有相同的功能。 @Test测试方法，表明这是一个测试方法。在 JUnit 中将会自动被执行。对与方法的声明也有如下要求：名字可以随便取，没有任何限制，但是返回值必须为 void ，而且不能有任何参数。如果违反这些规定，会在运行时抛出一个异常。不过，为了培养一个好的编程习惯，我们一般在测试的方法名上加 test ，比如：testAdd（）。同时，该 Annotation（@Test） 还可以测试期望异常和超时时间，如 @Test（timeout=100），我们给测试函数设定一个执行时间，超过这个时间（100毫秒），他们就会被系统强行终止，并且系统还会向你汇报该函数结束的原因是因为超时，这样你就可以发现这些 bug 了。而且，它还可以测试期望的异常，例如，我们刚刚的那个空指针异常就可以这样：@Test(expected=NullPointerException.class)，此时如果出现空指针异常，反正会认为测试通过 @Ignore忽略的测试方法，标注的含义就是“某些方法尚未完成，咱不参与此次测试”；这样的话测试结果就会提示你有几个测试被忽略，而不是失败。一旦你完成了相应的函数，只需要把 @Ignore 注解删除即可，就可以进行正常测试了。 @BeforeClass针对所有测试，也就是整个测试类中，在所有测试方法执行前，都会先执行由它注解的方法，而且只执行一次。当然，需要注意的是，修饰符必须是 public static void xxxx ；此 Annotation 是 JUnit 4 新增的功能。 @AfterClass针对所有测试，也就是整个测试类中，在所有测试方法都执行完之后，才会执行由它注解的方法，而且只执行一次。当然，需要注意的是，修饰符也必须是 public static void xxxx ；此 Annotation 也是 JUnit 4 新增的功能，与 @BeforeClass 是一对。","link":"/java/module%20test/03-junit.html"},{"title":"05 Apache Commons","text":"[toc] maven12 BidiMap双向映射 123456789101112131415BidiMap&lt;String, String&gt; bidi = new TreeBidiMap&lt;&gt;();bidi.put(\"One\", \"1\");bidi.put(\"Two\", \"2\");bidi.put(\"Three\", \"3\");// get getKeySystem.out.println(bidi.get(\"One\")); System.out.println(bidi.getKey(\"1\"));System.out.println(\"Original Map: \" + bidi);// inverseBidiMapbidi.removeValue(\"1\"); System.out.println(\"Modified Map: \" + bidi);BidiMap&lt;String, String&gt; inversedMap = bidi.inverseBidiMap(); System.out.println(\"Inversed Map: \" + inversedMap); MapIteratorJDK Map接口很难作为迭代在EntrySet或KeySet对象上迭代。 MapIterator提供了对Map的简单迭代。下面的例子说明了这一点。 MapIterator接口示例 123456789101112131415161718192021222324import org.apache.commons.collections4.IterableMap;import org.apache.commons.collections4.MapIterator;import org.apache.commons.collections4.map.HashedMap;public class MapIteratorTester { public static void main(String[] args) { IterableMap&lt;String, String&gt; map = new HashedMap&lt;&gt;(); map.put(\"1\", \"One\"); map.put(\"2\", \"Two\"); map.put(\"3\", \"Three\"); map.put(\"4\", \"Four\"); map.put(\"5\", \"Five\"); MapIterator&lt;String, String&gt; iterator = map.mapIterator(); while (iterator.hasNext()) { Object key = iterator.next(); Object value = iterator.getValue(); System.out.println(\"key: \" + key); System.out.println(\"Value: \" + value); iterator.setValue(value + \"_\"); } System.out.println(map); }} OrderedMap接口OrderedMap是映射的新接口，用于保留添加元素的顺序。 LinkedMap和ListOrderedMap是两种可用的实现。 此接口支持Map的迭代器，并允许在Map中向前或向后两个方向进行迭代。 下面的例子说明了这一点。 示例代码 OrderedMapTester.java - 123456789101112131415import org.apache.commons.collections4.OrderedMap;import org.apache.commons.collections4.map.LinkedMap;public class OrderedMapTester { public static void main(String[] args) { OrderedMap&lt;String, String&gt; map = new LinkedMap&lt;String, String&gt;(); map.put(\"One\", \"1\"); map.put(\"Two\", \"2\"); map.put(\"Three\", \"3\"); System.out.println(map.firstKey()); System.out.println(map.nextKey(\"One\")); System.out.println(map.nextKey(\"Two\")); }} CollectionUtils.addIgnoreNull()检查是否为空元素 CollectionUtils的addIgnoreNull()方法可用于确保只有非空(null)值被添加到集合中。 声明 以下是org.apache.commons.collections4.CollectionUtils.addIgnoreNull()的声明 - 1234public static &lt;T&gt; boolean addIgnoreNull(Collection&lt;T&gt; collection, T object)Java 参数 collection - 要添加到的集合，不能为null值。 object - 要添加的对象，如果为null，则不会添加。 返回值 如果集合已更改，则返回为True。 示例 以下示例显示org.apache.commons.collections4.CollectionUtils.addIgnoreNull()方法的用法。在示例中试图添加一个空值和一个非空值。 123456789101112131415161718192021import java.util.LinkedList;import java.util.List;import org.apache.commons.collections4.CollectionUtils;public class CollectionUtilsTester { public static void main(String[] args) { List&lt;String&gt; list = new LinkedList&lt;String&gt;(); CollectionUtils.addIgnoreNull(list, null); CollectionUtils.addIgnoreNull(list, \"a\"); System.out.println(list); if(list.contains(null)) { System.out.println(\"Null value is present\"); } else { System.out.println(\"Null value is not present\"); } }} CollectionUtils.collate() 合并并排序CollectionUtils的collate()方法可用于合并两个已排序的列表。 声明以下是org.apache.commons.collections4.CollectionUtils.collate()方法的声明 - 12345public static &lt;O extends Comparable&lt;? super O&gt;&gt; List&lt;O&gt; collate(Iterable&lt;? extends O&gt; a, Iterable&lt;? extends O&gt; b)Java 参数 a - 第一个集合，不能为null。 b - 第二个集合不能为null。 返回值 一个新的排序列表，其中包含集合a和b的元素。 异常 NullPointerException - 如果其中一个集合为null。 示例 以下示例显示了用法org.apache.commons.collections4.CollectionUtils.collate()方法。 我们将合并两个已排序的列表，然后打印已合并和已排序的列表。 12345678910111213import java.util.Arrays;import java.util.List;import org.apache.commons.collections4.CollectionUtils;public class CollectionUtilsTester { public static void main(String[] args) { List&lt;String&gt; sortedList1 = Arrays.asList(\"A\",\"C\",\"E\"); List&lt;String&gt; sortedList2 = Arrays.asList(\"B\",\"D\",\"F\"); List&lt;String&gt; mergedList = CollectionUtils.collate(sortedList1, sortedList2); System.out.println(mergedList); }} isEmpty() isNotEmpty()12345// CollectionUtils.isNotEmpty(list) 等价于static boolean checkNotEmpty1(List&lt;String&gt; list) { return !(list == null || list.isEmpty());}// isEmpty() 与之相反 12345678// 子集CollectionUtils.isSubCollection(list2, list1);// 相交CollectionUtils.intersection(list1, list2);// 差集CollectionUtils.subtract(list1, list2);// 联合CollectionUtils.union(list1, list2);","link":"/java/module%20test/05-Apache-Commons.html"},{"title":"06 joda time","text":"[toc] Introduction to Joda-Time | Baeldung使用Joda-Time优雅的处理日期时间 - 简书Joda-Time使用手册 - 后端 - 掘金 核心类介绍下面介绍5个最常用的date-time类： Instant - 不可变的类，用来表示时间轴上一个瞬时的点 DateTime - 不可变的类，用来替换JDK的Calendar类 LocalDate - 不可变的类，表示一个本地的日期，而不包含时间部分（没有时区信息） LocalTime - 不可变的类，表示一个本地的时间，而不包含日期部分（没有时区信息） LocalDateTime - 不可变的类，表示一个本地的日期－时间（没有时区信息） maven12345&lt;dependency&gt; &lt;groupId&gt;joda-time&lt;/groupId&gt; &lt;artifactId&gt;joda-time&lt;/artifactId&gt; &lt;version&gt;2.10.5&lt;/version&gt;&lt;/dependency&gt; code123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051package jodaTime;import org.joda.time.DateTime;import java.util.Date;public class JodaTime { public static void main(String[] args) { // 1. 构造一个DateTime实例 // now DateTime dateTime1 = new DateTime(); // 指定年月日 DateTime dateTime2 = new DateTime(2020, 2, 23, 18, 12, 0); // long DateTime dateTime3 = new DateTime(12345678910L); // java.util.date DateTime dateTime4 = new DateTime(new Date()); // ? DateTime dateTime5 = new DateTime(\"2016-02-15T00:00:00.000+08:00\"); // with 设定时间 dateTime1.withYear(2019); // plus minus 加减时间 dateTime1.plusDays(5); // 获取 property dateTime1.monthOfYear().getAsText(); dateTime1.dayOfWeek().getAsText(); // 因为当时那个地区执行夏令时的原因，在添加一个Period的时候会添加23个小时。 // 而添加一个Duration，则会精确地添加24个小时，而不考虑历法。 // 所以，Period和Duration的差别不但体现在精度上，也同样体现在语义上。 // 因为，有时候按照有些地区的历法 1天 不等于 24小时。 // 因此，用 Duration 不用 Period // 实例 // 例一 计算上一个月的最后一天 new DateTime().minusMonths(1).dayOfMonth().withMaximumValue(); // 例二 获得任何一年中的第 11 月的第一个星期一的日期，而这天必须是这个月的第一个星期一之后 new DateTime().monthOfYear().setCopy(11) .dayOfMonth().withMinimumValue() .plusDays(6) .dayOfWeek() .setCopy(1) // set to monday (it will round down) .plusDays(1); // 例三 计算五年后的第二个月的最后一天 new DateTime().plusYears(5).monthOfYear().setCopy(2).dayOfMonth().withMaximumValue(); }}","link":"/java/module%20test/06-joda-time.html"},{"title":"04 guava","text":"[toc] Google Guava官方教程（中文版） | 并发编程网 – ifeve.comGuava教程™ maven12345&lt;dependency&gt; &lt;groupId&gt;com.google.guava&lt;/groupId&gt; &lt;artifactId&gt;guava&lt;/artifactId&gt; &lt;version&gt;28.2-jre&lt;/version&gt;&lt;/dependency&gt; OptionalOptional 被 Java 自带的替代 12345678910111213141516171819202122232425262728package guava;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import java.util.Optional;public class aOptional { private static Logger logger = LoggerFactory.getLogger(aOptional.class); public static void add(Optional&lt;Integer&gt; a, Optional&lt;Integer&gt; b) { logger.info(String.valueOf(a.isPresent())); logger.info(String.valueOf(b.isPresent())); logger.info(String.valueOf(a.orElse(0) + b.orElse(0))); // 获取值 // a.get() a 为 null 报错 // a.orElse(x) a 为 null 返回 x } public static void main(String[] args) { // 构造 // Optional.empty() // Optional.of(x) // Optional.ofNullable(x) 若为 null，返回代表 null 的 Optional : Optional.empty() Optional&lt;Integer&gt; a = Optional.ofNullable(10); Optional&lt;Integer&gt; b = Optional.of(10); add(a, b); }} Preconditions1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253package guava;import com.google.common.base.Preconditions;import org.slf4j.Logger;import org.slf4j.LoggerFactory;// Preconditions.checkArgument// Preconditions.checkNotNull// Preconditions.checkElementIndexpublic class bPreconditions { private static Logger logger = LoggerFactory.getLogger(bPreconditions.class); public static double sqrt(double input) throws IllegalArgumentException { Preconditions.checkArgument(input &gt; 0.0, \"Illegal Argument passed: Negative value %s.\", input); return Math.sqrt(input); } public static int sum(Integer a, Integer b) { a = Preconditions.checkNotNull(a, \"Illegal Argument passed: First parameter is Null.\"); b = Preconditions.checkNotNull(b, \"Illegal Argument passed: Second parameter is Null.\"); return a + b; } public static int getValue(int input) { int[] data = {1, 2, 3, 4, 5}; Preconditions.checkElementIndex(input, data.length, \"Illegal Argument passed: Invalid index.\"); return 0; } public static void main(String[] args) { try { System.out.println(sqrt(-3.0)); } catch (IllegalArgumentException e) { System.out.println(e.getMessage()); } try { System.out.println(sum(null, 3)); } catch (NullPointerException e) { System.out.println(e.getMessage()); } try { System.out.println(getValue(6)); } catch (IndexOutOfBoundsException e) { System.out.println(e.getMessage()); } }} Guava Ordering类1234567891011121314151617181920212223242526272829303132333435package guava;import com.google.common.collect.Ordering;import java.util.ArrayList;import java.util.Collection;import java.util.Collections;public class cOrdering { public static void main(String[] args) { ArrayList&lt;Integer&gt; integers = new ArrayList&lt;&gt;(); Collections.addAll(integers, 6, 3, 2, 7, 9); // sort Ordering&lt;Comparable&gt; ordering = Ordering.natural(); Collections.sort(integers, ordering); // reverse sort Collections.sort(integers, ordering.reverse()); // isOrdered System.out.println(ordering.reverse().isOrdered(integers)); System.out.println(integers); System.out.println(Collections.max(integers)); System.out.println(Collections.min(integers)); // max min System.out.println(ordering.max(integers)); System.out.println(ordering.min(integers)); integers.add(null); // nullsFirst nullsLast Collections.sort(integers, ordering.reverse().nullsFirst()); System.out.println(integers); }} Guava Objects类123456789101112131415161718192021222324252627282930313233343536373839404142package guava;import com.google.common.base.Objects;import com.google.common.collect.ComparisonChain;import lombok.Data;import lombok.Getter;import lombok.Setter;public class dObjects {}@Setter@Getter@Dataclass Student implements Comparable&lt;Student&gt; { private int id; private String name; @Override public boolean equals(Object o) { if (this == o) return true; if (o == null || getClass() != o.getClass()) return false; Student student = (Student) o; return id == student.id &amp;&amp; Objects.equal(name, student.name); } @Override public int hashCode() { // Objects.hashCode(field-1, field-2, …, field-n) return Objects.hashCode(id, name); } @Override public int compareTo(Student o) { return ComparisonChain.start() .compare(this.name, o.name) .compare(this.id, o.id) .result(); }} Guava集合工具不可变集合不可变集合可以用如下多种方式创建： copyOf方法，如ImmutableSet.copyOf(set); of方法，如ImmutableSet.of(“a”, “b”, “c”)或 ImmutableMap.of(“a”, 1, “b”, 2); Builder工具 细节：关联可变集合和不可变集合 可变集合接口 属于**JDK还是Guava** 不可变版本 Collection JDK ImmutableCollection List JDK ImmutableList Set JDK ImmutableSet SortedSet/NavigableSet JDK ImmutableSortedSet Map JDK ImmutableMap SortedMap JDK ImmutableSortedMap Multiset Guava ImmutableMultiset SortedMultiset Guava ImmutableSortedMultiset Multimap Guava ImmutableMultimap ListMultimap Guava ImmutableListMultimap SetMultimap Guava ImmutableSetMultimap BiMap Guava ImmutableBiMap ClassToInstanceMap Guava ImmutableClassToInstanceMap Table Guava ImmutableTable Guava Multiset接口允许 set 重复，并统计每个值的次数 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051import java.util.Iterator;import java.util.Set;import com.google.common.collect.HashMultiset;import com.google.common.collect.Multiset;public class GuavaTester { public static void main(String args[]){ // HashMultiset.create() Multiset&lt;String&gt; multiset = HashMultiset.create(); multiset.add(\"a\"); multiset.add(\"b\"); multiset.add(\"c\"); multiset.add(\"d\"); multiset.add(\"a\"); multiset.add(\"b\"); multiset.add(\"c\"); multiset.add(\"b\"); multiset.add(\"b\"); multiset.add(\"b\"); // multiset.count(\"b\") multiset.size() multiset.elementSet() System.out.println(\"Occurrence of 'b' : \"+multiset.count(\"b\")); System.out.println(\"Total Size : \"+multiset.size()); Set&lt;String&gt; set = multiset.elementSet(); System.out.println(\"Set [\"); for (String s : set) { System.out.println(s); } System.out.println(\"]\"); //display all the elements of the multiset using iterator Iterator&lt;String&gt; iterator = multiset.iterator(); System.out.println(\"MultiSet [\"); while(iterator.hasNext()){ System.out.println(iterator.next()); } System.out.println(\"]\"); //display the distinct elements of the multiset with their occurrence count System.out.println(\"MultiSet [\"); for (Multiset.Entry&lt;String&gt; entry : multiset.entrySet()) { System.out.println(\"Element: \"+entry.getElement() +\", Occurrence(s): \" + entry.getCount()); } System.out.println(\"]\"); //remove extra occurrences multiset.remove(\"b\",2); //print the occurrence of an element System.out.println(\"Occurence of 'b' : \"+multiset.count(\"b\")); } } Guava Bimap接口可以 inverse，获得 value: key 的 map 12345678910111213141516import com.google.common.collect.BiMap;import com.google.common.collect.HashBiMap;public class GuavaTester { public static void main(String args[]){ BiMap&lt;Integer, String&gt; empIDNameMap = HashBiMap.create(); empIDNameMap.put(new Integer(101), \"Mahesh\"); empIDNameMap.put(new Integer(102), \"Sohan\"); empIDNameMap.put(new Integer(103), \"Ramesh\"); //Emp Id of Employee \"Mahesh\" System.out.println(empIDNameMap.inverse().get(\"Mahesh\")); } } BiMap的各种实现 键–值实现 值–键实现 对应BiMap实现 HashMap HashMap HashBiMap ImmutableMap ImmutableMap ImmutableBiMap EnumMap EnumMap EnumBiMap EnumMap HashMap EnumHashBiMap Guava Table接口类似于 map 的 map，table(r, c, v) (row, col, value) (r, c) 确定 value 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556import java.util.Map;import java.util.Set;import com.google.common.collect.HashBasedTable;import com.google.common.collect.Table;public class GuavaTester { public static void main(String args[]){ //Table&lt;R,C,V&gt; == Map&lt;R,Map&lt;C,V&gt;&gt; /* * Company: IBM, Microsoft, TCS * IBM -&gt; {101:Mahesh, 102:Ramesh, 103:Suresh} * Microsoft -&gt; {101:Sohan, 102:Mohan, 103:Rohan } * TCS -&gt; {101:Ram, 102: Shyam, 103: Sunil } * * */ //create a table Table&lt;String, String, String&gt; employeeTable = HashBasedTable.create(); //initialize the table with employee details employeeTable.put(\"IBM\", \"101\",\"Mahesh\"); employeeTable.put(\"IBM\", \"102\",\"Ramesh\"); employeeTable.put(\"IBM\", \"103\",\"Suresh\"); employeeTable.put(\"Microsoft\", \"111\",\"Sohan\"); employeeTable.put(\"Microsoft\", \"112\",\"Mohan\"); employeeTable.put(\"Microsoft\", \"113\",\"Rohan\"); employeeTable.put(\"TCS\", \"121\",\"Ram\"); employeeTable.put(\"TCS\", \"122\",\"Shyam\"); employeeTable.put(\"TCS\", \"123\",\"Sunil\"); //get Map corresponding to IBM Map&lt;String,String&gt; ibmEmployees = employeeTable.row(\"IBM\"); System.out.println(\"List of IBM Employees\"); for(Map.Entry&lt;String, String&gt; entry : ibmEmployees.entrySet()){ System.out.println(\"Emp Id: \" + entry.getKey() + \", Name: \" + entry.getValue()); } //get all the unique keys of the table Set&lt;String&gt; employers = employeeTable.rowKeySet(); System.out.print(\"Employers: \"); for(String employer: employers){ System.out.print(employer + \" \"); } System.out.println(); //get a Map corresponding to 102 Map&lt;String,String&gt; EmployerMap = employeeTable.column(\"102\"); for(Map.Entry&lt;String, String&gt; entry : EmployerMap.entrySet()){ System.out.println(\"Employer: \" + entry.getKey() + \", Name: \" + entry.getValue()); } } } Multimap很少会直接使用Multimap接口，更多时候你会用ListMultimap或SetMultimap接口，它们分别把键映射到List或Set。 Multimap的各种实现Multimap提供了多种形式的实现。在大多数要使用Map&lt;K, Collection&gt;的地方，你都可以使用它们： 实现 键行为类似 值行为类似 ArrayListMultimap HashMap ArrayList HashMultimap HashMap HashSet LinkedListMultimap* LinkedHashMap* LinkedList* LinkedHashMultimap** LinkedHashMap LinkedHashMap TreeMultimap TreeMap TreeSet ImmutableListMultimap ImmutableMap ImmutableList ImmutableSetMultimap ImmutableMap ImmutableSet Guava 集合工具123456789101112131415161718192021222324252627282930// 用工厂方法模式，我们可以方便地在初始化时就指定起始元素。List theseElements = Lists.newArrayList(\"alpha\", \"beta\", \"gamma\");// 此外，通过为工厂方法命名（Effective Java第一条），我们可以提高集合初始化大小的可读性：List&lt;Type&gt; exactly100 = Lists.newArrayListWithCapacity(100);List&lt;Type&gt; approx100 = Lists.newArrayListWithExpectedSize(100);Set&lt;Type&gt; approx100Set = Sets.newHashSetWithExpectedSize(100);// IterablesIterable&lt;Integer&gt; concatenated = Iterables.concat( Ints.asList(1, 2, 3), Ints.asList(4, 5, 6)); // concatenated包括元素 1, 2, 3, 4, 5, 6String lastAdded = Iterables.getLast(myLinkedHashSet);String theElement = Iterables.getOnlyElement(thisSetIsDefinitelyASingleton);List countUp = Ints.asList(1, 2, 3, 4, 5);// 注: 如果List是不可变的，考虑改用ImmutableList.reverse()。List countDown = Lists.reverse(theList); // {5, 4, 3, 2, 1}List&lt;List&gt; parts = Lists.partition(countUp, 2);//{{1,2}, {3,4}, {5}}Set&lt;String&gt; wordsWithPrimeLength = ImmutableSet.of(\"one\", \"two\", \"three\", \"six\", \"seven\", \"eight\");Set&lt;String&gt; primes = ImmutableSet.of(\"two\", \"three\", \"five\", \"seven\");SetView&lt;String&gt; intersection = Sets.intersection(primes,wordsWithPrimeLength);// intersection包含\"two\", \"three\", \"seven\"Map&lt;String, Integer&gt; map = ImmutableMap.of(\"a\", 1, \"b\", 1, \"c\", 2);SetMultimap&lt;String, Integer&gt; multimap = Multimaps.forMap(map);// multimap：[\"a\" =&gt; {1}, \"b\" =&gt; {1}, \"c\" =&gt; {2}]Multimap&lt;Integer, String&gt; inverse = Multimaps.invertFrom(multimap, HashMultimap&lt;Integer, String&gt;.create());// inverse：[1 =&gt; {\"a\",\"b\"}, 2 =&gt; {\"c\"}] Iterables 常规方法 concat(Iterable) 串联多个iterables的懒视图* concat(Iterable...) [frequency(Iterable, Object)](http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Iterables.html#frequency(java.lang.Iterable, java.lang.Object)) 返回对象在iterable中出现的次数 与Collections.frequency (Collection, Object)比较；``Multiset [partition(Iterable, int)](http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Iterables.html#partition(java.lang.Iterable, int)) 把iterable按指定大小分割，得到的子集都不能进行修改操作 [Lists.partition(List, int)](http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Lists.html#partition(java.util.List, int))；[paddedPartition(Iterable, int)](http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Iterables.html#paddedPartition(java.lang.Iterable, int)) [getFirst(Iterable, T default)](http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Iterables.html#getFirst(java.lang.Iterable, T)) 返回iterable的第一个元素，若iterable为空则返回默认值 与Iterable.iterator(). next()比较;FluentIterable.first() getLast(Iterable) 返回iterable的最后一个元素，若iterable为空则抛出NoSuchElementException [getLast(Iterable, T default)](http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Iterables.html#getLast(java.lang.Iterable, T))； FluentIterable.last() [elementsEqual(Iterable, Iterable)](http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Iterables.html#elementsEqual(java.lang.Iterable, java.lang.Iterable)) 如果两个iterable中的所有元素相等且顺序一致，返回true 与List.equals(Object)比较 unmodifiableIterable(Iterable) 返回iterable的不可变视图 与Collections. unmodifiableCollection(Collection)比较 [limit(Iterable, int)](http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Iterables.html#limit(java.lang.Iterable, int)) 限制iterable的元素个数限制给定值 FluentIterable.limit(int) getOnlyElement(Iterable) 获取iterable中唯一的元素，如果iterable为空或有多个元素，则快速失败 [getOnlyElement(Iterable, T default)](http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Iterables.html#getOnlyElement(java.lang.Iterable, T)) 与Collection方法相似的工具方法通常来说，Collection的实现天然支持操作其他Collection，但却不能操作Iterable。 下面的方法中，如果传入的Iterable是一个Collection实例，则实际操作将会委托给相应的Collection接口方法。例如，往Iterables.size方法传入是一个Collection实例，它不会真的遍历iterator获取大小，而是直接调用Collection.size。 方法 类似的**Collection**方法 等价的**FluentIterable**方法 [addAll(Collection addTo, Iterable toAdd)](http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Iterables.html#addAll(java.util.Collection, java.lang.Iterable)) Collection.addAll(Collection) [contains(Iterable, Object)](http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Iterables.html#contains(java.lang.Iterable, java.lang.Object)) Collection.contains(Object) FluentIterable.contains(Object) [removeAll(Iterable removeFrom, Collection toRemove)](http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Iterables.html#removeAll(java.lang.Iterable, java.util.Collection)) Collection.removeAll(Collection) [retainAll(Iterable removeFrom, Collection toRetain)](http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Iterables.html#retainAll(java.lang.Iterable, java.util.Collection)) Collection.retainAll(Collection) size(Iterable) Collection.size() FluentIterable.size() [toArray(Iterable, Class)](http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Iterables.html#toArray(java.lang.Iterable, java.lang.Class)) Collection.toArray(T[]) FluentIterable.toArray(Class) isEmpty(Iterable) Collection.isEmpty() FluentIterable.isEmpty() [get(Iterable, int)](http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Iterables.html#get(java.lang.Iterable, int)) List.get(int) [FluentIterable.get(int)](http://docs.guava-libraries.googlecode.com/git- history/release12/javadoc/com/google/common/collect/FluentIterable.html#get(int)) toString(Iterable) Collection.toString() FluentIterable.toString() Sets 方法 [union(Set, Set)](http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Sets.html#union(java.util.Set, java.util.Set)) [intersection(Set, Set)](http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Sets.html#intersection(java.util.Set, java.util.Set)) [difference(Set, Set)](http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Sets.html#difference(java.util.Set, java.util.Set)) [symmetricDifference(Set, Set)](http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/collect/Sets.html#symmetricDifference(java.util.Set, java.util.Set)) Guava缓存工具暂时用不到 12 Guava字符串工具Guava Joiner类Joiner 提供了各种方法来处理字符串加入操作，对象等。 1234// useForNull(String) 给定某个字符串来替换null// skipNulls() 直接忽略nullJoiner joiner = Joiner.on(\"; \").skipNulls();return joiner.join(\"Harry\", null, \"Ron\", \"Hermione\"); Guava Spiltter类1234Splitter.on(',') .trimResults() .omitEmptyStrings() .split(\"foo,bar,, qux\"); Guava CharMatcher类1234567// only the digitsSystem.out.println(CharMatcher.DIGIT.retainFrom(\"mahesh123\"));// trim whitespace at ends, and replace/collapse whitespace into single spacesSystem.out.println(CharMatcher.WHITESPACE.trimAndCollapseFrom(\" Mahesh Parashar \", ' '));// star out all digitsSystem.out.println(CharMatcher.JAVA_DIGIT.replaceFrom(\"mahesh123\", \"*\"));System.out.println(CharMatcher.JAVA_DIGIT.or(CharMatcher.JAVA_LOWER_CASE).retainFrom(\"mahesh123\")); Guava CaseFormat类12 Guava原语工具Java的原生类型就是指基本类型：byte、short、int、long、float、double、char和boolean。 原生类型数组是处理原生类型集合的最有效方式（从内存和性能双方面考虑）。Guava为此提供了许多工具方法。 方法签名 描述 类似方法 可用性 List asList(prim… backingArray) 把数组转为相应包装类的List Arrays.asList 符号无关* prim[] toArray(Collection collection) 把集合拷贝为数组，和collection.toArray()一样线程安全 Collection.toArray() 符号无关 prim[] concat(prim[]… arrays) 串联多个原生类型数组 Iterables.concat 符号无关 boolean contains(prim[] array, prim target) 判断原生类型数组是否包含给定值 Collection.contains 符号无关 int indexOf(prim[] array, prim target) 给定值在数组中首次出现处的索引，若不包含此值返回-1 List.indexOf 符号无关 int lastIndexOf(prim[] array, prim target) 给定值在数组最后出现的索引，若不包含此值返回-1 List.lastIndexOf 符号无关 prim min(prim… array) 数组中最小的值 Collections.min 符号相关* prim max(prim… array) 数组中最大的值 Collections.max 符号相关 String join(String separator, prim… array) 把数组用给定分隔符连接为字符串 Joiner.on(separator).join 符号相关 Comparator&lt;prim[]&gt; lexicographicalComparator() 按字典序比较原生类型数组的Comparator Ordering.natural().lexicographical() 符号相关 *符号无关方法存在于Bytes, Shorts, Ints, Longs, Floats, Doubles, Chars, Booleans。而UnsignedInts, UnsignedLongs, SignedBytes, 或UnsignedBytes不存在。 *符号相关方法存在于SignedBytes, UnsignedBytes, Shorts, Ints, Longs, Floats, Doubles, Chars, Booleans, UnsignedInts, UnsignedLongs。而Bytes不存在。 Guava Ints类 方法及说明 static int compare(int a, int b) 比较两个指定的int值。 static boolean contains(int[] array, int target) 返回true，如果target是否存在在任何地方数组元素。 static int[] ensureCapacity(int[] array, int minLength, int padding) 返回一个包含相同的值数组的数组，但保证是一个规定的最小长度。 static String join(String separator, int… array) 返回包含由分离器分离所提供的整型值的字符串。 static int saturatedCast(long value) 返回最接近的int值。 static Converter stringConverter() 返回使用字符串和整数之间的一个转换器序列化对象 Integer.decode(java.lang.String) 和 Integer.toString(). static int[] toArray(Collection collection) 返回包含集合的每个值的数组，转换为int值的方式Number.intValue(). static Integer tryParse(String string) 解析指定的字符串作为符号十进制整数。 12 Guava数学工具Guava还另外提供了一些有用的运算函数 运算 IntMath LongMath BigIntegerMath***** 最大公约数 [gcd(int, int)](http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/math/IntMath.html#gcd(int, int)) [gcd(long, long)](http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/math/LongMath.html#gcd(long, long)) BigInteger.gcd(BigInteger) 取模 [mod(int, int)](http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/math/IntMath.html#mod(int, int)) [mod(long, long)](http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/math/LongMath.html#mod(long, long)) BigInteger.mod(BigInteger) 取幂 [pow(int, int)](http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/math/IntMath.html#pow(int, int)) [pow(long, int)](http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/math/LongMath.html#pow(long, int)) BigInteger.pow(int) 是否2的幂 isPowerOfTwo(int) isPowerOfTwo(long) isPowerOfTwo(BigInteger) 阶乘* factorial(int) factorial(int) factorial(int) 二项式系数* [binomial(int, int)](http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/math/IntMath.html#binomial(int, int)) [binomial(int, int)](http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/math/LongMath.html#binomial(int, int)) [binomial(int, int)](http://docs.guava-libraries.googlecode.com/git-history/release/javadoc/com/google/common/math/BigIntegerMath.html#binomial(int, int)) ​","link":"/java/module%20test/04-guava.html"},{"title":"07 AssertJ","text":"[toc] AssertJ一分钟入门 - 简书AssertJ / Fluent assertions for java maven12345&lt;dependency&gt; &lt;groupId&gt;org.assertj&lt;/groupId&gt; &lt;artifactId&gt;assertj-core&lt;/artifactId&gt; &lt;version&gt;3.11.1&lt;/version&gt;&lt;/dependency&gt; code123456789101112131415161718package AssertJ;import java.util.ArrayList;import java.util.Collections;import java.util.List;//import static org.assertj.core.api.Assertions.*;import static org.assertj.core.api.Assertions.assertThat;public class AssertJTest { public static void main(String[] args) { assertThat(\"aa\".equals(\"aa\")); List&lt;Integer&gt; list = new ArrayList&lt;&gt;(); Collections.addAll(list, 1, 2, 3); assertThat(list).contains(1); assertThat(list).containsOnly(1, 2, 3); }} Basic tips :Java 8 assertions, see release notes : 3.8.0 / 3.7.0 / 3.6.0 / 3.5.0 / 3.4.0 / 3.3.0 /3.2.0 / 3.1.0 / 3.0.0IDE configuration to directly get assertThat in code completionDescribe your assertion using as(String description, Object… args)call as() before the assertion 123assertThat(frodo.getAge()).as(\"check %s's age\", frodo.getName()).isEqualTo(100);// The error message starts with the given description in [] :// [check Frodo's age] expected:&lt;100&gt; but was:&lt;33&gt; Exception assertions guideUsing String assertions on the content of a fileIterable and arrays assertions :Combining filtering and assertions on iterables or arrays1234567891011121314151617181920212223242526// Filtering can be done on arrays or iterables. Filter criteria are expressed by :// - a Java 8 Predicate// using simple predicate(谓语？), best expressed with a lambdaassertThat(fellowshipOfTheRing).filteredOn( character -&gt; character.getName().contains(\"o\") ) .containsOnly(aragorn, frodo, legolas, boromir);// - Filtering on a property or a fieldassertThat(fellowshipOfTheRing).filteredOn(\"race\", MAN) .filteredOn(\"name\", not(\"Boromir\")) .containsOnly(aragorn);// - Filtering with a Conditionimport org.assertj.core.api.Condition;Condition&lt;Player&gt; mvpStats= new Condition&lt;Player&gt;() { @Override public boolean matches(Player player) { return player.pointsPerGame() &gt; 20 &amp;&amp; (player.assistsPerGame() &gt;= 8 || player.reboundsPerGame() &gt;= 8); }};List&lt;Player&gt; players;players.add(rose); // Derrick Rose : 25 ppg - 8 assists - 5 reboundsplayers.add(lebron); // Lebron James : 27 ppg - 6 assists - 9 reboundsplayers.add(noah); // Joachim Noah : 8 ppg - 5 assists - 11 reboundsassertThat(players).filteredOn(mvpStats) .containsOnly(rose, lebron); Assertions on extracted properties/fields of iterable/array elements123456789101112assertThat(fellowshipOfTheRing).extracting(\"name\") .contains(\"Boromir\", \"Gandalf\", \"Frodo\", \"Legolas\") .doesNotContain(\"Sauron\", \"Elrond\");// when checking several properties/fields you have to use tuples :import static org.assertj.core.api.Assertions.tuple;// extracting name, age and and race.name nested propertyassertThat(fellowshipOfTheRing).extracting(\"name\", \"age\", \"race.name\") .contains(tuple(\"Boromir\", 37, \"Man\"), tuple(\"Sam\", 38, \"Hobbit\"), tuple(\"Legolas\", 1000, \"Elf\")); Flat(map) extracting1234567891011121314151617List&lt;Player&gt; reallyGoodPlayers = list(jordan, magic);// check all team mates by specifying the teamMates property (Player has a getTeamMates() method):assertThat(reallyGoodPlayers).flatExtracting(\"teamMates\") .contains(pippen, kukoc, jabbar, worthy);// alternatively, you can implement an Extractor to extract the team mates:assertThat(reallyGoodPlayers).flatExtracting(teamMates) .contains(pippen, kukoc, jabbar, worthy);// where teamMates is an instance of PlayerTeammatesExtractor:public class PlayerTeammatesExtractor implements Extractor&lt;Player, List&lt;Player&gt;&gt; { @Override public List&lt;Player&gt; extract(Player input) { return input.getTeamMates(); }} Assertions on results of a method call on iterable/array elements12345678910111213141516// Like extracting but instead of extracting properties/fields// ** it extracts the result of a given method invocation on the elements of the Iterable/Array under test and puts the results into a new Iterable/Array which becomes the object under test.// WesterosHouse class has a method: public String sayTheWords()List&lt;WesterosHouse&gt; greatHouses = new ArrayList&lt;WesterosHouse&gt;();greatHouses.add(new WesterosHouse(\"Stark\", \"Winter is Coming\"));greatHouses.add(new WesterosHouse(\"Lannister\", \"Hear Me Roar!\"));greatHouses.add(new WesterosHouse(\"Greyjoy\", \"We Do Not Sow\"));greatHouses.add(new WesterosHouse(\"Baratheon\", \"Our is the Fury\"));greatHouses.add(new WesterosHouse(\"Martell\", \"Unbowed, Unbent, Unbroken\"));greatHouses.add(new WesterosHouse(\"Tyrell\", \"Growing Strong\"));// let's verify the words of the great houses of Westeros:// 对每个对象调用 sayTheWords 方法assertThat(greatHouses).extractingResultOf(\"sayTheWords\") .contains(\"Winter is Coming\", \"We Do Not Sow\", \"Hear Me Roar\") .doesNotContain(\"Lannisters always pay their debts\"); Advanced tips :Gather all errors message with soft assertions123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657// Using soft assertions, AssertJ collects all assertion errors instead of stopping at the first one.// use SoftAssertions instead of direct assertThat methodsSoftAssertions softly = new SoftAssertions();softly.assertThat(mansion.guests()).as(\"Living Guests\").isEqualTo(7);softly.assertThat(mansion.kitchen()).as(\"Kitchen\").isEqualTo(\"clean\");softly.assertThat(mansion.library()).as(\"Library\").isEqualTo(\"clean\");softly.assertThat(mansion.revolverAmmo()).as(\"Revolver Ammo\").isEqualTo(6);softly.assertThat(mansion.candlestick()).as(\"Candlestick\").isEqualTo(\"pristine\");softly.assertThat(mansion.colonel()).as(\"Colonel\").isEqualTo(\"well kempt\");softly.assertThat(mansion.professor()).as(\"Professor\").isEqualTo(\"well kempt\");// Don't forget to call SoftAssertions global verification !softly.assertAll();// When the collected assertions are all asserted together they yield a more descriptive error message:// org.assertj.core.api.SoftAssertionError:// The following 4 assertions failed:// 1) [Living Guests] expected:&lt;[7]&gt; but was:&lt;[6]&gt;// 2) [Library] expected:&lt;'[clean]'&gt; but was:&lt;'[messy]'&gt;// 3) [Candlestick] expected:&lt;'[pristine]'&gt; but was:&lt;'[bent]'&gt;// 4) [Professor] expected:&lt;'[well kempt]'&gt; but was:&lt;'[bloodied and dishevelled]'&gt;// AssertJ also provides a few ways to avoid having to call softly.assertAll() manually:// JUnitSoftAssertions with a JUnit rule@Rulepublic final JUnitSoftAssertions softly = new JUnitSoftAssertions();@Testpublic void host_dinner_party_where_nobody_dies() { Mansion mansion = new Mansion(); mansion.hostPotentiallyMurderousDinnerParty(); // use SoftAssertions instead of direct assertThat methods softly.assertThat(mansion.guests()).as(\"Living Guests\").isEqualTo(7); // ... // No need to call softly.assertAll(), it is automatically done by JUnitSoftAssertions rule}// AutoCloseableSoftAssertions@Testpublic void host_dinner_party_where_nobody_dies() { Mansion mansion = new Mansion(); mansion.hostPotentiallyMurderousDinnerParty(); try (AutoCloseableSoftAssertions softly = new AutoCloseableSoftAssertions()) { softly.assertThat(mansion.guests()).as(\"Living Guests\").isEqualTo(7); // ... // no need to call assertAll, it is done when softly is closed. }}// Using the static assertSoftly method@Testpublic void host_dinner_party_where_nobody_dies() { Mansion mansion = new Mansion(); mansion.hostPotentiallyMurderousDinnerParty(); SoftAssertions.assertSoftly(softly -&gt; { softly.assertThat(mansion.guests()).as(\"Living Guests\").isEqualTo(7); // ... // no need to call assertAll, it is done by assertSoftly. });} Using String assertions on the content of a file1234567File xFile = writeFile(\"xFile\", \"The Truth Is Out There\");// classic File assertionsassertThat(xFile).exists().isFile().isRelative();// String assertions on the file content : contentOf() comes from Assertions.contentOf static importassertThat(contentOf(xFile)).startsWith(\"The Truth\").contains(\"Is Out\").endsWith(\"There\"); Exception assertions guide123456789101112131415161718192021assertThatThrownBy(() -&gt; { throw new Exception(\"boom!\"); }).isInstanceOf(Exception.class) .hasMessageContaining(\"boom\");// 或者assertThatExceptionOfType(IOException.class).isThrownBy(() -&gt; { throw new IOException(\"boom!\"); }) .withMessage(\"%s!\", \"boom\") .withMessageContaining(\"boom\") .withNoCause();// 或者// whenThrowable thrown = catchThrowable(() -&gt; { throw new Exception(\"boom!\"); });// thenassertThat(thrown).isInstanceOf(Exception.class) .hasMessageContaining(\"boom\");// 无错assertThatCode(() -&gt; { // code that should throw an exception ...}).doesNotThrowAnyException(); Using a custom comparison strategy in assertions123456789101112// usingComparator(Comparator) example :// frodo and sam are instances of TolkienCharacter with Hobbit race (obviously :)), they are not equalassertThat(frodo).isNotEqualTo(sam);// ... but if we compare race only, they are (raceComparator implements Comparator&lt;TolkienCharacter&gt;)assertThat(frodo).usingComparator(raceComparator).isEqualTo(sam);// usingElementComparator(Comparator) example :// standard comparison : the fellowshipOfTheRing includes Gandalf but not Sauron (believe me) ...assertThat(fellowshipOfTheRing).contains(gandalf).doesNotContain(sauron);// ... but if we compare race only, Sauron is in fellowshipOfTheRing (he's a Maia like Gandalf)assertThat(fellowshipOfTheRing).usingElementComparator(raceComparator).contains(sauron); Field by field comparisons isEqualToComparingFieldByField : compares all fields/properties including inherited ones - not recursive isEqualToComparingOnlyGivenFields : compares only the specified fields/properties - not recursive isEqualToIgnoringGivenFields : compares all fields/properties except specified ones - not recursive isEqualToIgnoringNullFields : compares non null fields/properties only - not recursive isEqualToComparingFieldByFieldRecursively : compares all fields/properties recursively 1234567891011121314151617181920212223242526272829TolkienCharacter frodo = new TolkienCharacter(\"Frodo\", 33, HOBBIT);TolkienCharacter frodoClone = new TolkienCharacter(\"Frodo\", 33, HOBBIT);// 1. isEqualToComparingFieldByField// Fail as equals compares object referencesassertThat(frodo).isEqualsTo(frodoClone);// frodo and frodoClone are equal when doing a field by field comparison.assertThat(frodo).isEqualToComparingFieldByField(frodoClone);// 2. isEqualToComparingOnlyGivenFields// frodo and sam both are hobbits, so they are equal when comparing only raceassertThat(frodo).isEqualToComparingOnlyGivenFields(sam, \"race\"); // OK// they are also equals when comparing only race name (nested field).assertThat(frodo).isEqualToComparingOnlyGivenFields(sam, \"race.name\"); // OK// ... but not when comparing both name and raceassertThat(frodo).isEqualToComparingOnlyGivenFields(sam, \"name\", \"race\"); // FAIL// 3. isEqualToIgnoringGivenFields// frodo and sam are equal when ignoring name and age as the only remaining field is raceassertThat(frodo).isEqualToIgnoringGivenFields(sam, \"name\", \"age\"); // OK both are HOBBIT// ... but they are not equals if only age is ignored as their names differ.assertThat(frodo).isEqualToIgnoringGivenFields(sam, \"age\"); // FAIL// 4. isEqualToIgnoringNullFieldsTolkienCharacter frodo = new TolkienCharacter(\"Frodo\", 33, HOBBIT);TolkienCharacter mysteriousHobbit = new TolkienCharacter(null, 33, HOBBIT);// Null fields in expected object are ignored, mysteriousHobbit has a null name thus it's ignoredassertThat(frodo).isEqualToIgnoringNullFields(mysteriousHobbit); // OK// ... but this is not reversible !assertThat(mysteriousHobbit).isEqualToIgnoringNullFields(frodo); // FAIL Using a custom representation in assertions12 Extending assertions with conditions12 Creating assertions for your domain12","link":"/java/module%20test/07-AssertJ.html"},{"title":"淘淘商城 01","text":"[toc] Idea中自动注释的缩进（避免添加注释自动到行首）打开设置界面，依次选择Editor-Code Style-Java，选择Code Generation，取消Line comment at first column和Block comment at first column的选中即可。 接着同样的修改 html xml idea 导入多个maven项目将多个 maven 项目放入一个文件夹下，再用 idea 打开文件夹，打开每个项目的 pom.xml ，右键 add as maven project 项目结构 mvn install parent 和 common manager 项目中： clean tomcat7:run Maven Repository","link":"/java/taotao/%E6%B7%98%E6%B7%98%E5%95%86%E5%9F%8E-01.html"},{"title":"淘淘商城 02","text":"[toc] How can I import a database using command line?the format is: 1mysql -u username -p database_name &lt; /path/to/file.sql From within mysql: 12mysql&gt; use db_name;mysql&gt; source backup-file.sql; 注意： sql 文件外不能加 引号 GitHub 图片加载不出来v2ray 设置全局 mybatis-generator-guiGitHub： zouzg/mybatis-generator-gui: mybatis-generator界面工具，让你生成代码更简单更快捷 指南： Usage Guide · zouzg/mybatis-generator-gui Wiki 视频及可执行文件： Java程序员搬砖头神器 - MyBatis Generator GUI Maven 安装及配置export http_proxy=http://127.0.0.1:1087;export https_proxy=http://127.0.0.1:1087; brew install maven 报错： The JAVA_HOME environment variable is not defined correctlyThis environment variable is needed to run this programNB: JAVA_HOME should point to a JDK not a JRE 说明$JAVA_HOME设置错误： 12echo $JAVA_HOME/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home /Library/Java/JavaVirtualMachines/jdk tab 自动补全路径，然后在~/.zshrc 里设置变量 IDEA webapp文件夹不识别解决方案","link":"/java/taotao/%E6%B7%98%E6%B7%98%E5%95%86%E5%9F%8E-02.html"},{"title":"Java 并发","text":"CS-Notes [一、使用线程](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=一、使用线程) [实现 Runnable 接口](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=实现-runnable-接口) [实现 Callable 接口](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=实现-callable-接口) 12345public class myCallable implements Callable&lt;Integer&gt;{ public Integer call(){ return 123; }} 123FutureTask&lt;Integer&gt; ft = new FutureTask&lt;&gt;(new myCallable());new Thread(new FutureTask&lt;Integer&gt;(ft).start();sout(ft.get()); [继承 Thread 类](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=继承-thread-类) [实现接口 VS 继承 Thread](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=实现接口-vs-继承-thread) 用接口好一些 [二、基础线程机制](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=二、基础线程机制) [Executor](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=executor) 三种executor： CachedThreadPool–不限数量 FixedThreadPool–固定数量 SingleThreadExecutor–数量为一 1234567public static void main(String[] args){ ExecutorService executorService = Executors.newCachedThreadPool(); for (int i=0; i&lt;5; i++){ executorService.execute(new myRunnable()); } executorService.shutdown();} [Daemon](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=daemon) [sleep()](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=sleep) Sleep 可能会抛出InterruptedException，因为异常不能跨线程传播回main()中，因此必须在本地进行处理。 [yield()](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=yield) [三、中断](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=三、中断) [InterruptedException](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=interruptedexception) 无法中断IO阻塞和synchronized阻塞 [interrupted()](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=interrupted) 如果一个线程的run()方法执行一个无限循环，并且没有执行sleep()等会抛出InterruptedException的操作，那么调用interrupt()方法就无法使线程提前结束。 但是调用interrupt()方法会设置线程的中断标记，此时调用interrupted()方法会返回true。因此可以在循环体中使用interrupted()方法来判断线程是否处于中断状态，从而提前结束线程。 1234567891011121314151617public class InterruptExample{ private static class MyThread2 extends Thread { @Override public void run() { while(!interrupted()){ // ... } sout(\"thread end\"); } } public static void main(String[] args) throws InterruptedException{ Thread thread = MyThread2(); thread2.start(); thread.interrupt(); }} [Executor 的中断操作](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=executor-的中断操作) 12executorService.shutdown();executorService.shutdownNow(); 若要中断某个线程： 使用submit替代execute 1234Future&lt;?&gt; future = executorService.submit(() -&gt; { // ...});future.cancel(true); [四、互斥同步](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=四、互斥同步) [synchronized](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=synchronized) [ReentrantLock](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=reentrantlock) [比较](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=比较) synchronized 是 JVM 实现的，而 ReentrantLock 是 JDK 实现的。 性能大致相同 ReentrantLock可中断，而synchronized不行。 一个ReentrantLock可以同时绑定多个condition对象。 [使用选择](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=使用选择) 除非使用ReentrantLock的高级功能，否则优先使用synchronized。这是因为synchronized是JVM实现的一种锁机制，JVM原生地支持它，而ReentrantLock不是所有的JDK版本都支持。并且使用synchronized不用担心没有释放锁而导致死锁问题，因为JVM会确保锁的释放。 [五、线程之间的协作](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=五、线程之间的协作) [join()](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=join) 将当前线程挂起，直到目标线程结束。 [wait() notify() notifyAll()](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=wait-notify-notifyall) 它们都是Object的方法 而sleep是Thread的静态方法 [await() signal() signalAll()](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=await-signal-signalall) java.util.concurrent类库提供Condition类库来实现线程间的协调 condition.await() conditon.signal() condition.signalAll() 12345678910111213141516171819202122232425262728293031323334public class AwaitSignalExample { private Lock lock = new ReentrantLock(); private Condition condition = lock.newCondition(); public void before() { lock.lock(); try { System.out.println(\"before\"); condition.signalAll(); } finally { lock.unlock(); } } public void after() { lock.lock(); try { condition.await(); System.out.println(\"after\"); } catch (InterruptedException e) { e.printStackTrace(); } finally { lock.unlock(); } } public static void main(String[] args) { ExecutorService executorService = Executors.newCachedThreadPool(); AwaitSignalExample example = new AwaitSignalExample(); executorService.execute(() -&gt; example.after()); executorService.execute(() -&gt; example.before()); }} [六、线程状态](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=六、线程状态) [新建（NEW）](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=新建（new）) [可运行（RUNABLE）](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=可运行（runable）) [阻塞（BLOCKED）](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=阻塞（blocked）) [无限期等待（WAITING）](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=无限期等待（waiting）) [限期等待（TIMED_WAITING）](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=限期等待（timed_waiting）) [死亡（TERMINATED）](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=死亡（terminated）) [七、J.U.C - AQS](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=七、juc-aqs) [CountDownLatch](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=countdownlatch) 用来控制一个或多个线程等待多个线程 [CyclicBarrier](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=cyclicbarrier) 多个线程互相等待 [Semaphore](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=semaphore) 类似于操作系统的信号量，可以控制对互斥资源的访问线程数。 12345678910111213141516171819202122public class SemaphoreExample { public static void main(String[] args) { final int clientCount = 3; final int totalRequestCount = 10; Semaphore semaphore = new Semaphore(clientCount); ExecutorService executorService = Executors.newCachedThreadPool(); for (int i = 0; i &lt; totalRequestCount; i++) { executorService.execute(()-&gt;{ try { semaphore.acquire(); System.out.print(semaphore.availablePermits() + \" \"); } catch (InterruptedException e) { e.printStackTrace(); } finally { semaphore.release(); } }); } executorService.shutdown(); }} [八、J.U.C - 其它组件](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=八、juc-其它组件) [FutureTask](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=futuretask) [BlockingQueue](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=blockingqueue) java.util.concurrent.BlockingQueue接口有以下阻塞队列的实现 FIFO队列： LinkedBlockingQueue ArrayBlockingQueue(固定长度) 优先级队列：PriorityBlockingQueue 提供了阻塞的take put 方法：如果队列为空 take 将阻塞，直到有内容；如果队列为满put将阻塞，直到队列有空闲位置 使用BlockingQueue实现生产者消费者问题 12345678910111213141516171819202122232425262728293031323334353637383940public class ProducerConsumer{ private static BlockingQueue&lt;String&gt; queue = new ArrayBlockingQueue&lt;&gt;(5); private static class Producer extends Thread { @Override public void run(){ try{ queue.put(\"product\"); }catch (InterruptedException e){ e.printStackTrace(); } sout(\"produce..\"); } } private static class Consumer extends Thread { @Override public void run(){ try{ String product = queue.take(); } catch (InterruptedException e) { e.printStackTrace(); } sout(\"consume...\"); } } public static void main(Stirng[] args) { for (int i = 0; i &lt; 2; i++) { Producer producer = new Producer(); producer.start(); } for (int i = 0; i &lt; 5; i++) { Consumer consumer = new Consumer(); consumer.start(); } for (int i = 0; i &lt; 3; i++) { Producer producer = new Producer(); producer.start(); } }} 1produce..produce..consume..consume..produce..consume..produce..consume..produce..consume.. [ForkJoin](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=forkjoin) ？ [九、线程不安全示例](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=九、线程不安全示例) [十、Java 内存模型](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=十、java-内存模型) [主内存与工作内存](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=主内存与工作内存) [内存间交互操作](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=内存间交互操作) [内存模型三大特性](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=内存模型三大特性) [1. 原子性](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=_1-原子性) [2. 可见性](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=_2-可见性) [3. 有序性](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=_3-有序性) volatile满足可见性，有序性，不能满足原子性。 synchronized满足三者 [先行发生原则](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=先行发生原则) [1. 单一线程原则](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=_1-单一线程原则) [2. 管程锁定规则](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=_2-管程锁定规则) [3. volatile 变量规则](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=_3-volatile-变量规则) [4. 线程启动规则](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=_4-线程启动规则) [5. 线程加入规则](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=_5-线程加入规则) [6. 线程中断规则](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=_6-线程中断规则) [7. 对象终结规则](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=_7-对象终结规则) [8. 传递性](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=_8-传递性) [十一、线程安全](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=十一、线程安全) [不可变](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=不可变) [互斥同步](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=互斥同步) [非阻塞同步](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=非阻塞同步) [1. CAS](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=_1-cas) [2. AtomicInteger](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=_2-atomicinteger) [3. ABA](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=_3-aba) [无同步方案](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=无同步方案) [1. 栈封闭](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=_1-栈封闭) [2. 线程本地存储（Thread Local Storage）](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=_2-线程本地存储（thread-local-storage）) 每个 Thread 都有一个 ThreadLocal.ThreadLocalMap 对象。 123/* ThreadLocal values pertaining to this thread. This map is maintained * by the ThreadLocal class. */ThreadLocal.ThreadLocalMap threadLocals = null; 当调用一个 ThreadLocal 的 set(T value) 方法时，先得到当前线程的 ThreadLocalMap 对象，然后将 ThreadLocal-&gt;value 键值对插入到该 Map 中。 12345678public void set(T value) { Thread t = Thread.currentThread(); ThreadLocalMap map = getMap(t); if (map != null) map.set(this, value); else createMap(t, value);} get() 方法类似。 12345678910111213public T get() { Thread t = Thread.currentThread(); ThreadLocalMap map = getMap(t); if (map != null) { ThreadLocalMap.Entry e = map.getEntry(this); if (e != null) { @SuppressWarnings(\"unchecked\") T result = (T)e.value; return result; } } return setInitialValue();} - [3. 可重入代码（Reentrant Code）](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=_3-可重入代码（reentrant-code）) [十二、锁优化](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=十二、锁优化) [自旋锁](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=自旋锁) 在jdk1.6中引入了自适应的自旋锁，自适应意味着自选的次数不再固定了，而是由前一次在同一个锁上的自旋次数及锁的拥有者的状态来决定。 [锁消除](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=锁消除) 锁消除是指对于被检测出不可能存在竞争的共享数据的锁进行消除。 [锁粗化](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=锁粗化) 如果一系列的连续操作都对同一个对象反复加锁和解锁，频繁的加锁操作就会导致性能损耗。 锁粗化–把加锁的范围扩展（粗化）到整个操作序列的外部 [轻量级锁](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=轻量级锁) [偏向锁](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=偏向锁) [十三、多线程开发良好的实践](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=十三、多线程开发良好的实践) 给线程起个有意义的名字，这样可以方便找bug 缩小同步范围，从而减少锁的争用，例如对于synchronized, 应该尽量使用同步块而不是同步方法。 多用同步工具少用wait notify。首先，CountDownLatch, CyclicBarrier, Semaphore 和 Exchanger 这些同步类简化了编码操作，而用wait和notify很难实现复杂控制流；其次，这些同步类是由最好的企业编写和维护，在后续的JDK中 还会不断优化和完善。 使用BlockingQueue实现生产者消费者问题 多用并发集合少用同步集合，例如应该使用ConcurrentHashMap而不是Hashtable. 使用本地变量和不可变类来保证线程安全。 使用线程池而不是直接创建线程，这是因为创建线程代价很高，线程池可以有效地利用有限的线程来启动任务。 [参考资料](https://cyc2018.github.io/CS-Notes/#/notes/Java 并发?id=参考资料)","link":"/java/%E5%9F%BA%E7%A1%80/Java-%E5%B9%B6%E5%8F%91.html"},{"title":"Java-集合-总结与面试题","text":"[toc] 原文地址 https://mp.weixin.qq.com/s?__biz=MzI4Njg5MDA5NA==&amp;mid=2247484172&amp;idx=1&amp;sn=4e9ea26b6b4b88dd9619c34ea07ba45c&amp;chksm=ebd7420ddca0cb1b798bb6bce3b91216f242e7bc18c2170d26455ea632e4e14b9b250b8d1e8b&amp;scene=21###wechat_redirect 前言 声明，本文用的是 jdk1.8 花了一个星期，把 Java 容器核心的知识过了一遍，感觉集合已经无所畏惧了！！(哈哈哈….)，现在来总结一下吧~~ 回顾目录： Collection 总览 List 集合就这么简单【源码剖析】 Map 集合、散列表、红黑树介绍 HashMap 就是这么简单【源码剖析】 LinkedHashMap 就这么简单【源码剖析】 TreeMap 就这么简单【源码剖析】 ConcurrentHashMap 基于 JDK1.8 源码剖析 Set 集合就这么简单！ Java 容器可分为两大类： Collection List ArrayList LinkedList Vector(了解，已过时) Set TreeSet HashSet LinkedHashSet Map HashMap LinkedHashMap TreeMap ConcurrentHashMap Hashtable(了解，，已过时) 着重标出的那些就是我们用得最多的容器。 一、ArrayList 和 Vector 的区别共同点： 这两个类都实现了 List 接口，它们都是有序的集合 (存储有序)，底层是数组。我们可以按位置索引号取出某个元素，允许元素重复和为 null。 区别： 同步性： ArrayList 是非同步的 Vector 是同步的 即便需要同步的时候，我们可以使用 Collections 工具类来构建出同步的 ArrayList 而不用 Vector 扩容大小： Vector 增长原来的一倍，ArrayList 增长原来的 0.5 倍 二、HashMap 和 Hashtable 的区别共同点： 从存储结构和实现来讲基本上都是相同的，都是实现 Map 接口~ 区别： 同步性： HashMap 是非同步的 Hashtable 是同步的 需要同步的时候，我们往往不使用，而使用 ConcurrentHashMapConcurrentHashMap 基于 JDK1.8 源码剖析 是否允许为 null： HashMap 允许为 null Hashtable 不允许为 null contains 方法 这知识点是在牛客网刷到的，没想到这种题还会有 (我不太喜欢)…. Hashtable 有 contains 方法 HashMap 把 Hashtable 的 contains 方法去掉了，改成了 containsValue 和 containsKey 继承不同： HashMap extends AbstractMap public class Hashtable ​ extends Dictionary 五、Collection 和 Collections 的区别 Collection 是集合的上级接口，继承它的有 Set 和 List 接口 Collections 是集合的工具类，提供了一系列的静态方法对集合的搜索、查找、同步等操作 六、说出 ArrayList,LinkedList 的存储性能和特性ArrayList 的底层是数组，LinkedList 的底层是双向链表。 ArrayList 它支持以角标位置进行索引出对应的元素 (随机访问)，而 LinkedList 则需要遍历整个链表来获取对应的元素。因此一般来说 ArrayList 的访问速度是要比 LinkedList 要快的 ArrayList 由于是数组，对于删除和修改而言消耗是比较大 (复制和移动数组实现)，LinkedList 是双向链表删除和修改只需要修改对应的指针即可，消耗是很小的。因此一般来说 LinkedList 的增删速度是要比 ArrayList 要快的 6.1 扩展：ArrayList 的增删未必就是比 LinkedList 要慢。 如果增删都是在末尾来操作【每次调用的都是 remove() 和 add()】，此时 ArrayList 就不需要移动和复制数组来进行操作了。如果数据量有百万级的时，速度是会比 LinkedList 要快的。(我测试过) 如果删除操作的位置是在中间。由于 LinkedList 的消耗主要是在遍历上，ArrayList 的消耗主要是在移动和复制上 (底层调用的是 arraycopy() 方法，是 native 方法)。 LinkedList 的遍历速度是要慢于 ArrayList 的复制移动速度的 如果数据量有百万级的时，还是 ArrayList 要快。(我测试过) 七、Enumeration 和 Iterator 接口的区别这个我在前面的文章中也没有详细去讲它们，只是大概知道的是：Iterator 替代了 Enumeration，Enumeration 是一个旧的迭代器了。 与 Enumeration 相比，Iterator 更加安全，因为当一个集合正在被遍历的时候，它会阻止其它线程去修改集合。 我们在做练习的时候，迭代时会不会经常出错，抛出 ConcurrentModificationException 异常，说我们在遍历的时候还在修改元素。 这其实就是 fail-fast 机制~ 具体可参考博文：https://blog.csdn.net/panweiwei1994/article/details/77051261 区别有三点： Iterator 的方法名比 Enumeration 更科学 Iterator 有 fail-fast 机制，比 Enumeration 更安全 Iterator 能够删除元素，Enumeration 并不能删除元素 八、ListIterator 有什么特点 ListIterator 继承了 Iterator 接口，它用于遍历 List 集合的元素。 ListIterator 可以实现双向遍历, 添加元素，设置元素 看一下源码的方法就知道了： 九、并发集合类是什么？Java1.5 并发包（java.util.concurrent）包含线程安全集合类，允许在迭代时修改集合。 迭代器被设计为 fail-fast 的，会抛出 ConcurrentModificationException。 一部分类为： CopyOnWriteArrayList ConcurrentHashMap CopyOnWriteArraySet 十、Java 中 HashMap 的 key 值要是为类对象则该类需要满足什么条件？需要同时重写该类的 hashCode() 方法和它的 equals() 方法。 从源码可以得知，在插入元素的时候是先算出该对象的 hashCode。如果 hashcode 相等话的。那么表明该对象是存储在同一个位置上的。 如果调用 equals() 方法，两个 key 相同，则替换元素 如果调用 equals() 方法，两个 key 不相同，则说明该 hashCode 仅仅是碰巧相同，此时是散列冲突，将新增的元素放在桶子上 一般来说，我们会认为：只要两个对象的成员变量的值是相等的，那么我们就认为这两个对象是相等的！因为，Object 底层比较的是两个对象的地址，而对我们开发来说这样的意义并不大~ 这也就为什么我们要重写equals()方法 重写了 equals() 方法，就要重写 hashCode() 的方法。因为 equals() 认定了这两个对象相同，而同一个对象调用 hashCode() 方法时，是应该返回相同的值的！ 十一、与 Java 集合框架相关的有哪些最好的实践 根据需要确定集合的类型。如果是单列的集合，我们考虑用 Collection 下的子接口 ArrayList 和 Set。如果是映射，我们就考虑使用 Map~ 确定完我们的集合类型，我们接下来确定使用该集合类型下的哪个子类~ 我认为可以简单分成几个步骤： 去找 Tree 红黑树类型的 (JDK1.8) 去找 Linked 双向列表结构的 去找线程安全的集合类使用 是否需要同步 迭代时是否需要有序 (插入顺序有序) 是否需要排序 (自然顺序或者手动排序) 估算存放集合的数据量有多大，无论是 List 还是 Map，它们实现动态增长，都是有性能消耗的。在初始集合的时候给出一个合理的容量会减少动态增长时的消耗~ 使用泛型，避免在运行时出现 ClassCastException 尽可能使用 Collections 工具类，或者获取只读、同步或空的集合，而非编写自己的实现。它将会提供代码重用性，它有着更好的稳定性和可维护性 十二、ArrayList 集合加入 1 万条数据，应该怎么提高效率ArrayList 的默认初始容量为 10，要插入大量数据的时候需要不断扩容，而扩容是非常影响性能的。因此，现在明确了 10 万条数据了，我们可以直接在初始化的时候就设置 ArrayList 的容量！ 这样就可以提高效率了~","link":"/java/%E5%9F%BA%E7%A1%80/Java-%E9%9B%86%E5%90%88-%E6%80%BB%E7%BB%93%E4%B8%8E%E9%9D%A2%E8%AF%95%E9%A2%98.html"},{"title":"Java 集合","text":"[toc] 集合大家族 - Java 提高篇 - 极客学院Wiki 点击查看图片 ![1Ysxl73BwkfSpvM](https://i.loli.net/2020/01/16/1Ysxl73BwkfSpvM.jpg) 一、Collection 接口Collection 接口是最基本的集合接口 二、List 接口List 接口为 Collection 直接接口。List 所代表的是有序的 Collection实现 List 接口的集合主要有：ArrayList、LinkedList、Vector、Stack。 2.1、ArrayListArrayList 是一个动态数组，也是我们最常用的集合。它允许任何符合规则的元素插入甚至包括 null。每一个 ArrayList 都有一个初始容量（10）。随着容器中的元素不断增加，容器的大小也会随着增加。在每次向容器中增加元素的同时都会进行容量检查，当快溢出时，就会进行扩容操作。所以如果我们明确所插入元素的多少，最好指定一个初始容量值，避免过多的进行扩容操作而浪费时间、效率。O(1)： size、isEmpty、get、set、iterator 和 listIteratorO(n)： addArrayList 擅长于随机访问。同时 ArrayList 是非同步的。 构造函数ArrayList 提供了三个构造函数：ArrayList()：默认构造函数，提供初始容量为 10 的空列表。ArrayList(int initialCapacity)：构造一个具有指定初始容量的空列表。ArrayList(Collection&lt;? extends E&gt; c)：构造一个包含指定 collection 的元素的列表 新增add(E e)：将指定的元素添加到此列表的尾部add(int index, E element)：将指定的元素插入此列表中的指定位置。addAll(Collection&lt;? extends E&gt; c)addAll(int index, Collection&lt;? extends E&gt; c)set(int index, E element) 删除remove(int index)、remove(Object o)、removeRange(int fromIndex, int toIndex)、removeAll() 查找get(int index) 扩容ensureCapacity()，该方法就是 ArrayList 的扩容方法当我们清楚知道业务数据量或者需要插入大量元素前，我可以使用 ensureCapacity 来手动增加 ArrayList 实例的容量，以减少递增式再分配的数量 2.2、LinkedListLinkedList 是一个双向链表可以通过较低的代价在 List 中进行插入和删除操作。与 ArrayList 一样，LinkedList 也是非同步的。如果多个线程同时访问一个 List，则必须自己实现访问同步。一种解决方法是在创建 List 时构造一个同步的 List： 1List list = Collections.synchronizedList(new LinkedList(…)); 构造方法LinkedList 提供了两个构造方法：LinkedList() 和 LinkedList(Collection&lt;? extends E&gt; c) 增加方法add(E e)add(int index, E element)addAll(Collection&lt;? extends E&gt; c)addAll(int index, Collection&lt;? extends E&gt; c)addFirst(E e)addLast(E e) 移除方法clear()： 从此列表中移除所有元素。remove()/removeFirst()：获取并移除此列表的第一个元素remove(int index)：移除此列表中指定位置处的元素。remove(Objec o)/removeFirstOccurrence(Object o)：从此列表中移除首次出现的指定元素（如果存在）。removeLast()：移除并返回此列表的最后一个元素。removeLastOccurrence(Object o)：从此列表中移除最后一次出现的指定元素（从头部到尾部遍历列表时）。 查找方法get(int index)getFirst()getLast()indexOf(Object o)lastIndexOf(Object o) 2.3、Vector与 ArrayList 相似，但是 Vector 是同步的。所以说 Vector 是线程安全的动态数组。它的操作与 ArrayList 几乎一样。 2.4、StackStack 继承自 Vectorpush pop peek empty/isEmpty search 三、Set 接口与 List 一样，它同样允许 null 的存在，同时要注意任何可变对象，如果在对集合中元素进行操作时，导致 e1.equals(e2)==true，则必定会产生某些问题（？）。实现了 Set 接口的集合有：EnumSet、HashSet、TreeSet。 3.1、EnumSet是枚举的专用 Set。所有的元素都是枚举类型。 3.2、HashSetHashSet 堪称查询速度最快的集合，因为其内部是以 HashCode 来实现的。它内部元素的顺序是由哈希码来决定的，所以它不保证 set 的迭代顺序；特别是它不保证该顺序恒久不变。HashSet 底层使用了 HashMap 实现 3.3、TreeSet基于 TreeMap，生成一个总是处于排序状态的 set，内部以 TreeMap 来实现。它是使用元素的自然顺序对元素进行排序，或者根据创建 Set 时提供的 Comparator 进行排序，具体取决于使用的构造方法。 四、Map 接口实现 map 的有：HashMap、TreeMap、HashTable、Properties、EnumMap。 4.1、HashMap以哈希表数据结构实现，查找对象时通过哈希函数计算其位置，它是为快速查询而设计的，其内部定义了一个 hash 表数组（Entry[] table），元素会通过哈希转换函数将元素的哈希地址转换成数组中存放的索引，如果有冲突，则使用散列链表的形式将所有相同哈希地址的元素串起来，可能通过查看 HashMap.Entry 的源码它是一个单链表结构。 二、构造函数HashMap 提供了三个构造函数：HashMap()：构造一个具有默认初始容量 (16) 和默认加载因子 (0.75) 的空 HashMap。HashMap(int initialCapacity)HashMap(int initialCapacity, float loadFactor) 三、数据结构table 数组 + 链表HashMap 底层实现还是数组，只是数组的每一项都是一条链。其中参数 initialCapacity 就代表了该数组的长度 4.2、TreeMap键以某种排序规则排序，内部以 red-black（红-黑）树数据结构实现，实现了 SortedMap 接口 4.3、HashTable也是以哈希表数据结构实现的，解决冲突时与 HashMap 也一样也是采用了散列链表的形式，不过性能比 HashMap 要低 五、Queue队列，它主要分为两大类，一类是阻塞式队列，队列满了以后再插入元素则会抛出异常，主要包括 ArrayBlockQueue、PriorityBlockingQueue、LinkedBlockingQueue。另一种队列则是双端队列，支持在头、尾两端插入和移除元素，主要包括：ArrayDeque、LinkedBlockingDeque、LinkedList。 六、异同点出处：http://blog.csdn.net/softwave/article/details/4166598 6.1、Vector 和 ArrayList1，vector 是线程同步的，所以它也是线程安全的，而 arraylist 是线程异步的，是不安全的。如果不考虑到线程的安全因素，一般用 arraylist 效率比较高。2，如果集合中的元素的数目大于目前集合数组的长度时，vector 增长率为目前数组长度的 100%,而 arraylist 增长率为目前数组长度的 50%.如过在集合中使用数据量比较大的数据，用 vector 有一定的优势。3，如果查找一个指定位置的数据，vector 和 arraylist 使用的时间是相同的，都是 0(1),这个时候使用 vector 和 arraylist 都可以。而如果移动一个指定位置的数据花费的时间为 0(n-i)n 为总长度，这个时候就应该考虑到使用 linklist,因为它移动一个指定位置的数据所花费的时间为 0(1),而查询一个指定位置的数据时花费的时间为 0(i)。 6.3、HashMap 与 TreeMap1、HashMap 通过 hashcode 对其内容进行快速查找，而 TreeMap 中所有的元素都保持着某种固定的顺序，如果你需要得到一个有序的结果你就应该使用 TreeMap（HashMap 中元素的排列顺序是不固定的）2、在 Map 中插入、删除和定位元素，HashMap 是最好的选择。但如果您要按自然顺序或自定义顺序遍历键，那么 TreeMap 会更好。使用 HashMap 要求添加的键类明确定义了 hashCode() 和 equals() 的实现。 这个 TreeMap 没有调优选项，因为该树总处于平衡状态。 6.4、hashTable 与 hashMap1、历史原因：Hashtable 是基于陈旧的 Dictionary 类的，HashMap 是 Java 1.2 引进的 Map 接口的一个实现 。2、同步性：Hashtable 是线程安全的，也就是说是同步的，而 HashMap 是线程序不安全的，不是同步的 。但是，通过 Collections 类的 synchronizedMap 方法是可以让 HashMap 线程同步3、 hashMap 允许 key 为 null，hashTable 不行当 HashMap 遇到为 null 的 key 时，它会调用 putForNullKey 方法来进行处理。对于 value 没有进行任何处理，只要是对象都可以。 12if (key == null) return putForNullKey(value); 而当 HashTable 遇到 null 时，他会直接抛出 NullPointerException 异常信息。 123if (value == null) { throw new NullPointerException();} 七、对集合的选择7.1、对 List 的选择1、对于随机查询与迭代遍历操作，数组比所有的容器都要快。所以在随机访问中一般使用 ArrayList2、LinkedList 使用双向链表对元素的增加和删除提供了非常好的支持，而 ArrayList 执行增加和删除元素需要进行元素位移。3、对于 Vector 而已，我们一般都是避免使用。4、将 ArrayList 当做首选，毕竟对于集合元素而已我们都是进行遍历，只有当程序的性能因为 List 的频繁插入和删除而降低时，再考虑 LinkedList。 7.2、对 Set 的选择1、HashSet 由于使用 HashCode 实现，所以在某种程度上来说它的性能永远比 TreeSet 要好，尤其是进行增加和查找操作。2、虽然 TreeSet 没有 HashSet 性能好，但是由于它可以维持元素的排序，所以它还是存在用武之地的。 7.3、对 Map 的选择1、HashMap 与 HashSet 同样，支持快速查询。虽然 HashTable 速度的速度也不慢，但是在 HashMap 面前还是稍微慢了些，所以 HashMap 在查询方面可以取代 HashTable。2、由于 TreeMap 需要维持内部元素的顺序，所以它通常要比 HashMap 和 HashTable 慢。","link":"/java/%E5%9F%BA%E7%A1%80/Java-%E9%9B%86%E5%90%88.html"},{"title":"Java 集合2","text":"[toc] hashCode对于 hashCode，我们应该遵循如下规则：在一个应用程序执行期间，如果一个对象的 equals 方法做比较所用到的信息没有被修改的话，则对该对象调用 hashCode 方法多次，它必须始终如一地返回同一个整数。如果两个对象根据 equals(Object o) 方法是相等的，则调用这两个对象中任一对象的 hashCode 方法必须产生相同的整数结果。如果两个对象根据 equals(Object o) 方法是不相等的，则调用这两个对象中任一个对象的 hashCode 方法，不要求产生不同的整数结果。但如果能不同，则可能提高散列表的性能。即：如果 x.equals(y) 返回“true”，那么 x 和 y 的 hashCode() 必须相等。如果 x.equals(y) 返回“false”，那么 x 和 y 的 hashCode() 有可能相等，也有可能不等。 TreeMap一、红黑树简介红黑树是一颗自平衡的排序二叉树。平衡二叉树必须具备如下特性：它是一棵空树或它的左右两个子树的高度差的绝对值不超过 1，并且左右两个子树都是一棵平衡二叉树。也就是说该二叉树的任何一个等等子节点，其左右子树的高度都相近。 对于一棵有效的红黑树二叉树而言我们必须增加如下规则： 1、每个节点都只能是红色或者黑色 2、根节点是黑色 3、每个叶节点（NIL 节点，空节点）是黑色的。 4、如果一个结点是红的，则它两个子节点都是黑的。也就是说在一条路径上不能出现相邻的两个红色结点。 5、从任一节点到其每个叶子的所有路径都包含相同数目的黑色节点。 下图为一颗典型的红黑二叉树。 对于红黑二叉树而言它主要包括三大基本操作：左旋、右旋、着色。 左旋 右旋 1、红黑树系列集锦 2、红黑树数据结构剖析 3、红黑树 二、TreeMap 数据结构TreeMap 中同时也包含了如下几个重要的属性： 123456789101112//比较器，因为TreeMap是有序的，通过comparator接口我们可以对TreeMap的内部排序进行精密的控制private final Comparator&lt;? super K&gt; comparator;//TreeMap红-黑节点，为TreeMap的内部类private transient Entry&lt;K,V&gt; root = null;//容器大小private transient int size = 0;//TreeMap修改次数private transient int modCount = 0;//红黑树的节点颜色--红色private static final boolean RED = false;//红黑树的节点颜色--黑色private static final boolean BLACK = true; 对于叶子节点 Entry 是 TreeMap 的内部类，它有几个重要的属性： 123456789101112//键K key;//值V value;//左孩子Entry&lt;K,V&gt; left = null;//右孩子Entry&lt;K,V&gt; right = null;//父亲Entry&lt;K,V&gt; parent;//颜色boolean color = BLACK; 三、TreeMap put() delete() 方法略 TreeSetceiling：返回此 set 中大于等于给定元素的最小元素；如果不存在这样的元素，则返回 null。floor：返回此 set 中小于等于给定元素的最大元素；如果不存在这样的元素，则返回 nullhigher：返回此 set 中严格大于给定元素的最小元素；如果不存在这样的元素，则返回 nulllower：返回此 set 中严格小于给定元素的最大元素；如果不存在这样的元素，则返回 null clone：返回 TreeSet 实例的浅表副本。属于浅拷贝。comparator：返回对此 set 中的元素进行排序的比较器；如果此 set 使用其元素的自然顺序，则返回 null。 iterator：返回在此 set 中的元素上按升序进行迭代的迭代器descendingIterator：返回在此 set 元素上按降序进行迭代的迭代器descendingSet：返回此 set 中所包含元素的逆序视图 pollFirst：获取并移除第一个（最低）元素；如果此 set 为空，则返回 nullpollLast：获取并移除最后一个（最高）元素；如果此 set 为空，则返回 null。first：返回此 set 中当前第一个（最低）元素last：返回此 set 中当前最后一个（最高）元素 remove size isEmpty Java 集合细节（二）：asList 的缺陷一、避免使用基本数据类型数组转换为列表123456789101112public static void main(String[] args) { Integer[] ints = {1,2,3,4,5}; List list = Arrays.asList(ints); System.out.println(\"list'size：\" + list.size()); System.out.println(\"list.get(0) 的类型:\" + list.get(0).getClass()); System.out.println(\"list.get(0) == ints[0]：\" + list.get(0).equals(ints[0]));}----------------------------------------outPut:list'size：5list.get(0) 的类型:class java.lang.Integerlist.get(0) == ints[0]：true 二、asList 产生的列表不可操作asList 返回的列表只不过是一个披着 list 的外衣，它并没有 list 的基本特性（变长）。该 list 是一个长度不可变的列表，传入参数的数组有多长，其返回的列表就只能是多长。 Java 集合细节（三）：subList 的缺陷一、subList 返回仅仅只是一个视图subList 返回的只是原列表的一个视图，它所有的操作最终都会作用在原列表上 二、subList 生成子列表后，不要试图去操作原列表对于子列表视图，它是动态生成的，生成之后就不要操作原列表了，否则必然都导致视图的不稳定而抛出异常。最好的办法就是将原列表设置为只读状态，要操作就操作子列表： 123456//通过subList生成一个与list1一样的列表 list3List&lt;Integer&gt; list3 = list1.subList(0, list1.size());//对list1设置为只读状态list1 = Collections.unmodifiableList(list1); 生成子列表后，不要试图去操作原列表，否则会造成子列表的不稳定而产生异常 三、推荐使用 subList 处理局部列表在开发过程中我们一定会遇到这样一个问题：获取一堆数据后，需要删除某段数据。例如，有一个列表存在 1000 条记录，我们需要删除 100-200 位置处的数据 1list1.subList(100, 200).clear(); Java 集合细节（四）：保持 compareTo 和 equals 同步Collections.binarySearch(list, student);在 sorted list 中获取指定元素的索引 12345678910111213141516public static void main(String[] args){ List&lt;Student&gt; list = new ArrayList&lt;&gt;(); list.add(new Student(\"1\", \"chenssy1\", 24)); list.add(new Student(\"2\", \"chenssy1\", 26)); Collections.sort(list); //排序 Student student = new Student(\"2\", \"chenssy1\", 26); //检索student在list中的位置 int index1 = list.indexOf(student); int index2 = Collections.binarySearch(list, student); System.out.println(\"index1 = \" + index1); System.out.println(\"index2 = \" + index2);} 运行结果： 12index1 = 0index2 = 1 因为 indexOf 和 binarySearch 的实现机制不同indexOf 是基于 equals 来实现的, 只要 equals 返回 TRUE 就认为已经找到了相同的元素。binarySearch 是基于 compareTo 方法的，当 compareTo 返回 0 时就认为已经找到了该元素。在我们实现的 Student 类中我们覆写了 compareTo 和 equals 方法，但是我们的 compareTo、equals 的比较依据不同，一个是基于 age、一个是基于 name。比较依据不同那么得到的结果很有可能会不同。所以知道了原因，我们就好修改了：将两者之间的比较依据保持一致即可。 对于 compareTo 和 equals 两个方法我们可以总结为：compareTo 是判断元素在排序中的位置是否相等，equals 是判断元素是否相等，既然一个决定排序位置，一个决定相等，所以我们非常有必要确保当排序位置相同时，其 equals 也应该相等。 Iterator - Java 提高篇 - 极客学院Wiki若不使用iterator, 每一种集合对应一种遍历方法，客户端代码无法复用对于数组我们是使用下标来进行处理的: 12345int[] arrays = new int[10];for(int i = 0 ; i &lt; arrays.length ; i++){ int a = arrays[i]; //do something} 对于 ArrayList 是这么处理的: 12345List&lt;String&gt; list = new ArrayList&lt;String&gt;();for(int i = 0 ; i &lt; list.size() ; i++){ String string = list.get(i); //do something} Iterator 模式腾空出世，它总是用同一种逻辑来遍历集合。使得客户端自身不需要来维护集合的内部结构，所有的内部状态都由 Iterator 来维护。客户端从不直接和集合类打交道，它总是控制 Iterator，向它发送”向前”，”向后”，”取当前元素”的命令，就可以间接遍历整个集合。 12345Iterator iterator = list.iterator();while(iterator.hasNext()){ String string = iterator.next(); //do something} fail-fast 机制 - Java 提高篇 - 极客学院Wikifail-fast，它是 Java 集合的一种错误检测机制比如，若一个线程在遍历ArrayList, 另一个线程修改了ArrayList, 此时遍历的线程会触发fail-fast机制，抛出ConcurrentModificationException异常。 ArrayList 中无论 add、remove、clear 方法只要是涉及了改变 ArrayList 元素的个数的方法都会导致 modCount 的改变。ArrayList的迭代器在调用 next()、remove() 方法时都是调用 checkForComodification() 方法，该方法主要就是检测 modCount == expectedModCount 。 若不等则抛出 ConcurrentModificationException 异常，从而产生 fail-fast 机制。 两种解决方案：方案一：在遍历过程中所有涉及到改变 modCount 值得地方全部加上 synchronized 或者直接使用 Collections.synchronizedList，这样就可以解决。但是不推荐，因为增删造成的同步锁可能会阻塞遍历操作。方案二：使用 CopyOnWriteArrayList 来替换 ArrayList。推荐使用该方案。CopyOnWriteArrayList 为何物？ArrayList 的一个线程安全的变体，其中所有可变操作（add、set 等等）都是通过对底层数组进行一次新的复制来实现的。 该类产生的开销比较大，但是在两种情况下，它非常适合使用。1：在不能或不想进行同步遍历，但又需要从并发线程中排除冲突时。2：当遍历操作的数量大大超过可变操作的数量时。遇到这两种情况使用 CopyOnWriteArrayList 来替代 ArrayList 再适合不过了。","link":"/java/%E5%9F%BA%E7%A1%80/Java-%E9%9B%86%E5%90%882.html"},{"title":"Java 虚拟机","text":"[toc] [一、运行时数据区域](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=一、运行时数据区域) [pc register](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=程序计数器)记录正在执行的虚拟机字节码指令的地址（如果正在执行的是本地方法则为空）。 [JVM stack](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=java-虚拟机栈)每个 Java 方法在执行的同时会创建一个栈帧用于存储局部变量表、操作数栈、常量池引用等信息。从方法调用直至执行完成的过程，对应着一个栈帧在 Java 虚拟机栈中入栈和出栈的过程。 可以通过 -Xss 这个虚拟机参数来指定每个线程的 Java 虚拟机栈内存大小，在 JDK 1.4 中默认为 256K, 而在 JDK 1.5+ 默认为1M: 1java -Xss2M HackTheJava 该区域可能抛出以下异常： 当线程请求的栈深度超过最大值，会抛出 StackOverflowError 异常； 栈进行动态扩展是如果无法申请到足够内存，会抛出 OutOfMemoryError 异常。 [native method stack–本地方法栈](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=本地方法栈)本地方法栈与 Java 虚拟机栈类似，它们之间的区别只不过是本地方法栈为本地方法服务。 本地方法一般使用其他语言（C、C++ 或汇编语言等）编写的，并且被编译为基于本地硬件和操作系统的程序，对待这些方法需要特别处理。 [堆](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=堆)所有对象都在这里分配内存，是垃圾收集的主要区域（”GC 堆”）。 现代的垃圾收集器基本都是采用分带收集算法，其主要的思想是针对不同类型的对象采取不同的垃圾回收算法。可以将堆分成两块： 新生代（Young Generation） 老年代（Old Generation） 堆不需要连续内存，并且可以动态增加其内存，增加失败会抛出 OutOfMemoryError 异常。 可以通过 -Xms 和 -Xmx 这两个虚拟机参数来指定一个程序的堆内存大小，第一个参数设置初始值，第二个参数设置最大值。 1java -Xms1M -Xmx2M HackTheJava [方法区](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=方法区)用于存放已被加载的类信息、常量、静态变量、即时编译器编译后的代码等数据。 和堆一样不需要连续的内存，并且可以动态扩展，动态扩展失败一样会抛出 OutOfMemoryError 异常。 对这块区域进行垃圾回收的主要目标是对常量池的回收和对累的卸载，但是一般比较难实现。 HotSpot 虚拟机把它当成永久代来进行垃圾回收。但很难确定永久代的大小，因为它受到很多因素影响，并且每次 Full GC 之后永久代的大小都会改变，所以经常会抛出 OutOfMemoryError 异常。为了更容易管理方法区，从 JDK1.8 开始，移除永久代，并把方法区移至元空间，它位于本地内存中，而不是虚拟机内存中。 方法区是一个 JVM 规范，永久代与元空间都是其一种实现方式。在 JDK1.8 之后，原来永久代的数据被分到了堆和元空间中。元空间存储类的元信息，静态变量和常量池等放入堆中。 ？ [运行时常量池](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=运行时常量池)运行时常量池是方法区的一部分。 Class 文件中的常量池（编译器生成的字面量和符号引用）会在类加载后被放入这个区域。 除了在编译器生成的变量，还允许动态生成，例如Spring 类的 intern() [直接内存](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=直接内存)在 JDK 1.4 中新引入了 NIO 类，它可以使用 Native 函数库直接分配堆外内存，然后通过 Java 堆里的 DirectByteBuffer 对象作为这块内存的引用进行操作。这样能在一些场景中显著提升性能，因为避免了在堆内存和堆外内存来回拷贝数据。 [二、垃圾收集](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=二、垃圾收集)垃圾收集主要是针对堆和方法区进行。程序计数器、虚拟机栈和本地方法栈这三个区域属于线程私有的，只存在于线程的生命周期内，线程结束之后就会消失，因此不需要对这三个区域进行垃圾回收。 [判断一个对象是否可被回收](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=判断一个对象是否可被回收)[1. 引用计数算法](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=_1-引用计数算法)为对象添加一个引用计数器，当对象增加一个引用时计数器加1，引用失效时计数器减1。引用计数为0的对象可被回收。 在两个对象出现循环引用的情况下，此时引用计数器永远不为0，导致无法对他们进行回收。正是因为循环引用的存在，因此Java虚拟机不使用引用计数算法。 1234567891011121314public class Test { public Object instance = null; public static void main(String[] args) { Test a = new Test(); Test b = new Test(); a.instance = b; b.instance = a; a = null; b = null; doSomething(); }} 在上述代码中，a与b引用的对象实例互相持有了对象的引用，因此当我们把对a对象与b对象的引用去除之后，由于两个对象还存在互相之间的引用，导致两个Test对象无法被回收。 [2. 可达性分析算法](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=_2-可达性分析算法)以 GC Roots 为起始点进行搜索，可达的对象都是存活的，不可达的对象可被回收。 Java 虚拟机使用该算法来判断对象是否可被回收，GC Roots 一般包含以下内容： 虚拟机栈中局部变量表中引用的对象 本地方法栈中 JNI 中引用的对象 方法区中类静态属性引用的对象 方法区中的常量引用的对象 [3. 方法区的回收](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=_3-方法区的回收)因为方法区主要存放永久代对象，而永久代对象的回收率比新生代低很多，所以在方法区上进行回收性价比不高。 主要是对常量池的回收和对类的卸载。 为了避免内存溢出，在大量使用反射和动态代理的场景都需要虚拟机具备类卸载功能。 类的卸载条件很多，需要至少满足以下三个条件，并且满足了条件也不一定会被卸载： 该类所有的实例都已经被回收，此时堆中不存在该类的任何实例。 加载该类的 ClassLoader 已经被回收。 该类对应的 Class 对象没有在任何地方被引用，也就无法在任何地方通过反射访问该类方法。 [4. finalize()](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=_4-finalize)类似 C++ 的析构函数，用于关闭外部资源。但是 try-finally 等方式可以做得更好，并且该方法运行代价很高，不确定性大，无法保证各个对象的调用顺序，因此最好不要使用。 当一个对象可被回收时，如果需要执行该对象的 finalize() 方法，那么就有可能在该方法中让对象重新被引用，从而实现自救。自救只能进行一次，如果回收的对象之前调用了 finalize() 方法自救，后面回收时不会再调用该方法。 [引用类型](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=引用类型)无论是通过引用计数算法判断对象的引用数量，还是用过可达性分析算法判断对象是否可达，判定对象是否可被回收都与引用有关。 Java 提供了四种强度不同的引用类型。 [1. 强引用](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=_1-强引用)使用 new 一个新对象的方式来创建强引用。 被强引用关联的对象不会被回收。 1Object obj = new Object(); [2. 软引用](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=_2-软引用)使用 SoftReference 类来创建软引用。 被软引用关联的对象只有在内存不够的情况下才会被回收。 123Object obj = new Object();SoftReference&lt;Object&gt; sf = new SoftReference&lt;Object&gt;(obj);obj = null; // 使对象只被软引用关联 [3. 弱引用](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=_3-弱引用)使用 WeakReference 类来创建弱引用。 被弱引用关联的对象一定会被回收，也就是说他只能存活到下一次垃圾回收发生之前。 123Object obj = new Object();WeakReference&lt;Object&gt; wf = new WeakReference&lt;Object&gt;(obj);obj = null; [4. 虚引用](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=_4-虚引用)使用 PhantomReference 来创建虚引用。 虚引用又被称为幽灵引用或者幻影引用，一个对象是否有虚引用的存在，不会对其生存时间造成影响，也无法通过虚引用得到一个对象。 为一个对象创建虚引用的唯一目的是能在这个对象被回收时收到一个系统通知。 123Object obj = new Object();PhantomReference&lt;Object&gt; pf = new PhantomReference&lt;Object&gt;(obj, null);obj = null; [垃圾收集算法](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=垃圾收集算法)[1. 标记 - 清除](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=_1-标记-清除) 在标记阶段，程序会检查每个对象是否为活动对象，如果是活动对象，则程序会在对象头部打上标记。 在清除阶段，会进行对象回收并取消标志位，另外，还会判断回收后的分块与前一个空闲分块是否连续，若连续，会合并这两个分块。回收对象就是把对象作为分块，连接到被称为“空闲链表”的单向链表，之后进行分配时只需要遍历这个空闲链表，就可以找到分块。 在分配时，程序会搜索空闲链表寻找空间大于等于新对象大小 size 的块 block。如果它找到的块等于 size，会直接返回这个分块；如果找到的块大于 size，会分割为 size 与 (block - size) 两部分，返回 size 大小的分块，并把大小为 block-size 的块返回给空闲链表。 不足： 标记和清除过程效率都不高； 会产生大量不连续的内存碎片，导致无法给大对象分配内存。 [2. 标记 - 整理](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=_2-标记-整理) 让所有存活的对象都向一端移动，然后直接清理掉端边界以外的内存。 优点: 不会产生内存碎片 不足: 需要移动大量对象，处理效率比较低。 [3. 复制](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=_3-复制) 将内存划分为大小相等的两块，每次只使用其中一块，当这一块内存用完了就将还存活的对象复制到另一块上面，然后再把使用过的内存空间进行一次整理。 主要不足是只使用了内存的一半。 现在的商业虚拟机都采用这种收集算法回收新生代，但是并不是划分为大小相等的两块，而是一块较大的 Eden 空间和两块较小的 Survivor空间，每次使用 Eden 和其中一块 Survivor。在回收时，将 Eden 和 Survivor 中还存活着的对象全部复制到另一块 Survivor 上，最后清理 Eden 和使用过的那一块 Survivor。 HotSpot 虚拟机的 Eden 和 Survivor 大小比例默认为 8:1，保证了内存的利用率达到 90%。如果每次回收有多于 10%的对象存活，那么一块 Survivor 就不够用了，此时需要依赖于老年代进行空间 分配担保，也就是借用老年代的空间存储放不下的对象。 [4. 分代收集](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=_4-分代收集)现在的商业虚拟机采用分代收集算法，它根据对象存活周期将内存划分为几块，不同块采用适当的收集算法。 一般将堆分为新生代和老年代。 新生代使用：复制算法 老年代使用：标记-清除算法 或者 标记-整理算法 [垃圾收集器](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=垃圾收集器)? 以上是 HotSpot 虚拟机中的 7 个垃圾收集器，连线表示垃圾收集器可以配合使用。 单线程与多线程：单线程指的是垃圾收集器只使用一个线程，而多线程使用多个线程； 串行与并行：串行指的是垃圾收集器与用户程序交替执行，这意味着在执行垃圾收集的时候需要停顿用户程序；并行指的是垃圾收集器和用户程序同时执行。除了 CMS 和 G1 是并行的，其他垃圾收集器都是以串行的方式执行。 [1. Serial 收集器](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=_1-serial-收集器) 特点：串行 单线程 优点：简单高效，在单个 CPU 环境下，由于没有线程交互的开销，因此拥有最高的单线程收集效率。 它是 Client 场景下的默认新生代收集器，因为在该场景下内存一般来说不会很大。它收集一两百兆垃圾的停顿时间可以控制在一百多毫秒以内，只要不是太频繁，这点停顿时间是可以接受的。 [2. ParNew 收集器](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=_2-parnew-收集器) 它是 Serial 收集器的多线程版本。 特点：多线程 串行 它是 Server 场景下默认的新生代收集器，除了性能原因外，主要是因为除了 Serial 收集器，只有它能与 CMS 收集器配合使用。 [3. Parallel Scavenge 收集器](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=_3-parallel-scavenge-收集器)并行 与 ParNew 一样是多线程收集器。 其它收集器目标是尽可能缩短垃圾收集时用户线程的停顿时间，而它的目标是达到一个可控制的吞吐量，因此它被称为“吞吐量优先”收集器。这里的吞吐量指 CPU 用于运行用户程序的时间占总时间的比值。 停顿时间越短就越适合需要与用户交互的程序，良好的响应速度能提升用户体验。而高吞吐量则可以高效率地利用 CPU 时间，尽快完成程序的运算任务，适合在后台运算而不需要太多交互的任务。 缩短停顿时间是以牺牲吞吐量和新生代空间来换取的：新生代空间变小，垃圾回收变得频繁，导致吞吐量下降。 可以通过一个开关参数打开 GC 自适应的调节策略（GC Ergonomics），就不需要手工指定新生代的大小（-Xmn）、Eden 和 Survivor 区的比例、晋升老年代对象年龄等细节参数了。虚拟机会根据当前系统的运行情况收集性能监控信息，动态调整这些参数以提供最合适的停顿时间或者最大的吞吐量。 [4. Serial Old 收集器](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=_4-serial-old-收集器) 串行 是 Serial 收集器的老年代版本，也是给 Client 场景下的虚拟机使用。如果用在 Server 场景下，它有两大用途： 在 JDK 1.5 以及之前版本（Parallel Old 诞生以前）中与 Parallel Scavenge 收集器搭配使用。 作为 CMS 收集器的后备预案，在并发收集发生 Concurrent Mode Failure 时使用。 [5. Parallel Old 收集器](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=_5-parallel-old-收集器) 并行 是 Parallel Scavenge 收集器的老年代版本。 在注重吞吐量以及 CPU 资源敏感的场合，都可以优先考虑 Parallel Scavenge 加 Parallel Old 收集器。 [6. CMS 收集器](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=_6-cms-收集器) CMS（Concurrent Mark Sweep），Mark Sweep 指的是标记 - 清除算法。 分为以下四个流程： 初始标记：仅仅只是标记一下 GC Roots 能直接关联到的对象，速度很快，需要停顿。 并发标记：进行 GC Roots Tracing 的过程，它在整个回收过程中耗时最长，不需要停顿。 重新标记：为了修正并发标记期间因用户程序继续运作而导致标记产生变动的那一部分对象的标记记录，需要停顿。 并发清除：不需要停顿。 在整个过程中耗时最长的并发标记和并发清除过程中，收集器线程都可以与用户线程一起工作，不需要进行停顿。 具有以下缺点： 吞吐量低：低停顿时间是以牺牲吞吐量为代价的，导致 CPU 利用率不够高。 无法处理浮动垃圾，可能出现 Concurrent Mode Failure。浮动垃圾是指并发清除阶段由于用户线程继续运行而产生的垃圾，这部分垃圾只能到下一次 GC 时才能进行回收。由于浮动垃圾的存在，因此需要预留出一部分内存，意味着 CMS 收集不能像其它收集器那样等待老年代快满的时候再回收。如果预留的内存不够存放浮动垃圾，就会出现 Concurrent Mode Failure，这时虚拟机将临时启用 Serial Old 来替代 CMS。 标记 - 清除算法导致的空间碎片，往往出现老年代空间剩余，但无法找到足够大连续空间来分配当前对象，不得不提前触发一次 Full GC。 [7. G1 收集器](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=_7-g1-收集器)G1（Garbage-First），它是一款面向服务端应用的垃圾收集器，在多 CPU 和大内存的场景下有很好的性能。HotSpot 开发团队赋予它的使命是未来可以替换掉 CMS 收集器。 堆被分为新生代和老年代，其它收集器进行收集的范围都是整个新生代或者老年代，而 G1 可以直接对新生代和老年代一起回收。 G1 把堆划分成多个大小相等的独立区域（Region），新生代和老年代不再物理隔离。 将整块内存空间划分成多个的小空间，使得每个小空间可以单独进行垃圾回收。这种划分方法带来了很大的灵活性，使得可预测的停顿时间模型成为可能。通过记录每个 Region 垃圾回收时间以及回收所获得的空间，维护一个优先列表，每次根据允许的收集时间，优先回收价值最大的 Region。 每个 Region 都有一个 Remembered Set，用来记录该 Region 对象的引用对象所在的 Region。通过使用 Remembered Set，在做可达性分析的时候就可以避免全堆扫描。 如果不计算维护 Remembered Set 的操作，G1 收集器的运作大致可划分为以下几个步骤： 初始标记 并发标记 最终标记：为了修正在并发标记期间因用户程序继续运作而导致标记产生变动的那一部分标记记录，虚拟机将这段时间对象变化记录在线程的 Remembered Set Logs 里面，最终标记阶段需要把 Remembered Set Logs 的数据合并到 Remembered Set 中。这阶段需要停顿线程，但是可并行执行。 筛选回收：首先对各个 Region 中的回收价值和成本进行排序，根据用户所期望的 GC 停顿时间来制定回收计划。此阶段其实也可以做到与用户程序一起并发执行，但是因为只回收一部分 Region，时间是用户可控制的，而且停顿用户线程将大幅度提高收集效率。 具备如下特点： 空间整合：整体来看是基于“标记 - 整理”算法实现的收集器，从局部（两个 Region 之间）上来看是基于“复制”算法实现的，这意味着运行期间不会产生内存空间碎片。 可预测的停顿：能让使用者明确指定在一个长度为 M 毫秒的时间片段内，消耗在 GC 上的时间不得超过 N 毫秒。 [三、内存分配与回收策略](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=三、内存分配与回收策略)[Minor GC 和 Full GC](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=minor-gc-和-full-gc) Minor GC：回收新生代，因为新生代对象存活时间很短，因此 Minor GC 会频繁执行，执行的速度一般也会比较快。 Full GC：回收老年代和新生代，老年代对象存活时间长，因此 Full GC 很少执行，执行速度会比 Minor GC 慢很多。 [内存分配策略](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=内存分配策略)[1. 对象优先在 Eden 分配](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=_1-对象优先在-eden-分配)大多数情况下，对象在新生代 Eden 上分配，当 Eden 空间不够时，发起 Minor GC。 [2. 大对象直接进入老年代](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=_2-大对象直接进入老年代)大对象是指需要连续内存空间的对象，最典型的大对象是那种很长的字符串以及数组。 经常出现大对象会提前触发垃圾收集以获取足够的连续空间分配给大对象。 -XX:PretenureSizeThreshold，大于此值的对象直接在老年代分配，避免在 Eden 和 Survivor 之间的大量内存复制。 [3. 长期存活的对象进入老年代](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=_3-长期存活的对象进入老年代)为对象定义年龄计数器，对象在 Eden 出生并经过 Minor GC 依然存活，将移动到 Survivor 中，年龄就增加 1 岁，增加到一定年龄则移动到老年代中。 -XX:MaxTenuringThreshold 用来定义年龄的阈值。 [4. 动态对象年龄判定](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=_4-动态对象年龄判定)虚拟机并不是永远要求对象的年龄必须达到 MaxTenuringThreshold 才能晋升老年代，如果在 Survivor 中相同年龄所有对象大小的总和大于 Survivor 空间的一半，则年龄大于或等于该年龄的对象可以直接进入老年代，无需等到 MaxTenuringThreshold 中要求的年龄。 [5. 空间分配担保](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=_5-空间分配担保)在发生 Minor GC 之前，虚拟机先检查老年代最大可用的连续空间是否大于新生代所有对象总空间，如果条件成立的话，那么 Minor GC 可以确认是安全的。 如果不成立的话虚拟机会查看 HandlePromotionFailure 的值是否允许担保失败，如果允许那么就会继续检查老年代最大可用的连续空间是否大于历次晋升到老年代对象的平均大小，如果大于，将尝试着进行一次 Minor GC；如果小于，或者 HandlePromotionFailure 的值不允许冒险，那么就要进行一次 Full GC。 [Full GC 的触发条件](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=full-gc-的触发条件)对于 Minor GC，其触发条件非常简单，当 Eden 空间满时，就将触发一次 Minor GC。而 Full GC 则相对复杂，有以下条件： [1. 调用 System.gc()](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=_1-调用-systemgc)只是建议虚拟机执行 Full GC，但是虚拟机不一定真正去执行。不建议使用这种方式，而是让虚拟机管理内存。 [2. 老年代空间不足](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=_2-老年代空间不足)老年代空间不足的常见场景为前文所讲的大对象直接进入老年代、长期存活的对象进入老年代等。 为了避免以上原因引起的 Full GC，应当尽量不要创建过大的对象以及数组。除此之外，可以通过 -Xmn 虚拟机参数调大新生代的大小，让对象尽量在新生代被回收掉，不进入老年代。还可以通过 -XX:MaxTenuringThreshold 调大对象进入老年代的年龄，让对象在新生代多存活一段时间。 [3. 空间分配担保失败](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=_3-空间分配担保失败)使用复制算法的 Minor GC 需要老年代的内存空间作担保，如果担保失败会执行一次 Full GC。具体内容请参考上面的第 5 小节。 [4. JDK 1.7 及以前的永久代空间不足](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=_4-jdk-17-及以前的永久代空间不足)在 JDK 1.7 及以前，HotSpot 虚拟机中的方法区是用永久代实现的，永久代中存放的为一些 Class 的信息、常量、静态变量等数据。 当系统中要加载的类、反射的类和调用的方法较多时，永久代可能会被占满，在未配置为采用 CMS GC 的情况下也会执行 Full GC。如果经过 Full GC 仍然回收不了，那么虚拟机会抛出 java.lang.OutOfMemoryError。 为避免以上原因引起的 Full GC，可采用的方法为增大永久代空间或转为使用 CMS GC。 [5. Concurrent Mode Failure](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=_5-concurrent-mode-failure)执行 CMS GC 的过程中同时有对象要放入老年代，而此时老年代空间不足（可能是 GC 过程中浮动垃圾过多导致暂时性的空间不足），便会报 Concurrent Mode Failure 错误，并触发 Full GC。 [四、类加载机制](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=四、类加载机制)类是在运行期间第一次使用是动态加载的，而不是一次性加载所有类。因为如果一次性加载，那么会占用很多的内存。 [类的生命周期](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=类的生命周期) 包括以下 7 个阶段： 加载（Loading） 验证（Verification） 准备（Preparation） 解析（Resolution） 初始化（Initialization） 使用（Using） 卸载（Unloading） [类加载过程](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=类加载过程)包含了加载、验证、准备、解析和初始化这 5 个阶段。 [1. 加载](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=_1-加载)加载是类加载的一个阶段，注意不要混淆。 加载过程完成以下三件事： 通过类的完全限定名称获取定义该类的二进制字节流。 将该字节流表示的静态存储结构转换为方法区的运行时存储结构。 在内存中生成一个代表该类的 Class 对象，作为方法区中该类各种数据的访问入口。 其中二进制字节流可以从以下方式中获取： 从 ZIP 包读取，成为 JAR、EAR、WAR 格式的基础。 从网络中获取，最典型的应用是 Applet。 运行时计算生成，例如动态代理技术，在 java.lang.reflect.Proxy 使用 ProxyGenerator.generateProxyClass 的代理类的二进制字节流。 由其他文件生成，例如由 JSP 文件生成对应的 Class 类。 [2. 验证](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=_2-验证)确保 Class 文件的字节流中包含的信息符合当前虚拟机的要求，并且不会危害虚拟机自身的安全。 [3. 准备](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=_3-准备)类变量是被 static 修饰的变量，准备阶段为类变量分配内存并设置初始值，使用的是方法区的内存。 实例变量不会在这阶段分配内存，它会在对象实例化时随着对象一起被分配在堆中。应该注意到，实例化不是类加载的一个过程，类加载发生在所有实例化操作之前，并且类加载只进行一次，实例化可以进行多次。 初始值一般为 0 值，例如下面的类变量 value 被初始化为 0 而不是 123。 1public static int value = 123; 如果类变量是常量，那么它将初始化为表达式所定义的值而不是 0。例如下面的常量 value 被初始化为 123 而不是 0。 1public static final int value = 123; [4. 解析](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=_4-解析)将常量池的符号引用替换为直接引用的过程。 其中解析过程在某些情况下可以在初始化阶段之后再开始，这是为了支持 Java 的动态绑定。 5. 初始化初始化阶段才真正开始执行类中定义的 Java 程序代码。初始化阶段是虚拟机执行类构造器 () 方法的过程。在准备阶段，类变量已经赋过一次系统要求的初始值，而在初始化阶段，根据程序员通过程序制定的主观计划去初始化类变量和其它资源。 () 是由编译器自动收集类中所有类变量的赋值动作和静态语句块中的语句合并产生的，编译器收集的顺序由语句在源文件中出现的顺序决定。特别注意的是，静态语句块只能访问到定义在它之前的类变量，定义在它之后的类变量只能赋值，不能访问。例如以下代码： 1234567public class Test { static { i = 0; // 给变量赋值可以正常编译通过 System.out.print(i); // 这句编译器会提示“非法向前引用” } static int i = 1;} 由于父类的 () 方法先执行，也就意味着父类中定义的静态语句块的执行要优先于子类。例如以下代码： 1234567891011121314static class Parent { public static int A = 1; static { A = 2; }}static class Sub extends Parent { public static int B = A;}public static void main(String[] args) { System.out.println(Sub.B); // 2} 接口中不可以使用静态语句块，但仍然有类变量初始化的赋值操作，因此接口与类一样都会生成 () 方法。但接口与类不同的是，执行接口的 () 方法不需要先执行父接口的 () 方法。只有当父接口中定义的变量使用时，父接口才会初始化。另外，接口的实现类在初始化时也一样不会执行接口的 () 方法。 虚拟机会保证一个类的 () 方法在多线程环境下被正确的加锁和同步，如果多个线程同时初始化一个类，只会有一个线程执行这个类的 () 方法，其它线程都会阻塞等待，直到活动线程执行 () 方法完毕。如果在一个类的 () 方法中有耗时的操作，就可能造成多个线程阻塞，在实际过程中此种阻塞很隐蔽。 [类初始化时机](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=类初始化时机)[1. 主动引用](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=_1-主动引用)虚拟机规范中并没有强制约束何时进行加载，但是规范严格规定了有且只有下列五种情况必须对类进行初始化（加载、验证、准备都会随之发生）： 遇到 new、getstatic、putstatic、invokestatic 这四条字节码指令时，如果类没有进行过初始化，则必须先触发其初始化。最常见的生成这 4 条指令的场景是：使用 new 关键字实例化对象的时候；读取或设置一个类的静态字段（被 final 修饰、已在编译期把结果放入常量池的静态字段除外）的时候；以及调用一个类的静态方法的时候。 使用 java.lang.reflect 包的方法对类进行反射调用的时候，如果类没有进行初始化，则需要先触发其初始化。 当初始化一个类的时候，如果发现其父类还没有进行过初始化，则需要先触发其父类的初始化。 当虚拟机启动时，用户需要指定一个要执行的主类（包含 main() 方法的那个类），虚拟机会先初始化这个主类； 当使用 JDK 1.7 的动态语言支持时，如果一个 java.lang.invoke.MethodHandle 实例最后的解析结果为 REF_getStatic, REF_putStatic, REF_invokeStatic 的方法句柄，并且这个方法句柄所对应的类没有进行过初始化，则需要先触发其初始化； [2. 被动引用](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=_2-被动引用)以上 5 种场景中的行为称为对一个类进行主动引用。除此之外，所有引用类的方式都不会触发初始化，称为被动引用。被动引用的常见例子包括： 通过子类引用父类的静态字段，不会导致子类初始化。 1System.out.println(SubClass.value); // value 字段在 SuperClass 中定义 通过数组定义来引用类，不会触发此类的初始化。该过程会对数组类进行初始化，数组类是一个由虚拟机自动生成的、直接继承自 Object 的子类，其中包含了数组的属性和方法。 1SuperClass[] sca = new SuperClass[10]; 常量在编译阶段会存入调用类的常量池中，本质上并没有直接引用到定义常量的类，因此不会触发定义常量的类的初始化。 1System.out.println(ConstClass.HELLOWORLD); [类与类加载器](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=类与类加载器)两个类相等，需要类本身相等，并且使用同一个类加载器进行加载。这是因为每一个类加载器都拥有一个独立的类名称空间。 这里的相等，包括类的 Class 对象的 equals() 方法、isAssignableFrom() 方法、isInstance() 方法的返回结果为 true，也包括使用 instanceof 关键字做对象所属关系判定结果为 true。 [类加载器分类](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=类加载器分类)从 Java 虚拟机的角度来讲，只存在以下两种不同的类加载器： 启动类加载器（Bootstrap ClassLoader），使用 C++ 实现，是虚拟机自身的一部分； 所有其它类的加载器，使用 Java 实现，独立于虚拟机，继承自抽象类 java.lang.ClassLoader。 从 Java 开发人员的角度看，类加载器可以划分得更细致一些： 启动类加载器（Bootstrap ClassLoader）此类加载器负责将存放在 \\lib 目录中的，或者被 -Xbootclasspath 参数所指定的路径中的，并且是虚拟机识别的（仅按照文件名识别，如 rt.jar，名字不符合的类库即使放在 lib 目录中也不会被加载）类库加载到虚拟机内存中。启动类加载器无法被 Java 程序直接引用，用户在编写自定义类加载器时，如果需要把加载请求委派给启动类加载器，直接使用 null 代替即可。 扩展类加载器（Extension ClassLoader）这个类加载器是由 ExtClassLoader（sun.misc.Launcher$ExtClassLoader）实现的。它负责将 /lib/ext 或者被 java.ext.dir 系统变量所指定路径中的所有类库加载到内存中，开发者可以直接使用扩展类加载器。 应用程序类加载器（Application ClassLoader）这个类加载器是由 AppClassLoader（sun.misc.Launcher$AppClassLoader）实现的。由于这个类加载器是 ClassLoader 中的 getSystemClassLoader() 方法的返回值，因此一般称为系统类加载器。它负责加载用户类路径（ClassPath）上所指定的类库，开发者可以直接使用这个类加载器，如果应用程序中没有自定义过自己的类加载器，一般情况下这个就是程序中默认的类加载器。 双亲委派模型应用程序是由三种类加载器互相配合从而实现类加载，除此之外还可以加入自己定义的类加载器。 下图展示了类加载器之间的层次关系，称为双亲委派模型（Parents Delegation Model）。该模型要求除了顶层的启动类加载器外，其它的类加载器都要有自己的父类加载器。这里的父子关系一般通过组合关系（Composition）来实现，而不是继承关系（Inheritance）。 [1. 工作过程](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=_1-工作过程)一个类加载器首先将类加载请求转发到父类加载器，只有当父类加载器无法完成时才尝试自己加载。 [2. 好处](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=_2-好处)使得 Java 类随着它的类加载器一起具有一种带有优先级的层次关系，从而使得基础类得到统一。 例如 java.lang.Object 存放在 rt.jar 中，如果编写另外一个 java.lang.Object 并放到 ClassPath 中，程序可以编译通过。由于双亲委派模型的存在，所以在 rt.jar 中的 Object 比在 ClassPath 中的 Object 优先级更高，这是因为 rt.jar 中的 Object 使用的是启动类加载器，而 ClassPath 中的 Object 使用的是应用程序类加载器。rt.jar 中的 Object 优先级更高，那么程序中所有的 Object 都是这个 Object。 [3. 实现](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=_3-实现)以下是抽象类 java.lang.ClassLoader 的代码片段，其中的 loadClass() 方法运行过程如下：先检查类是否已经加载过，如果没有则让父类加载器去加载。当父类加载器加载失败时抛出 ClassNotFoundException，此时尝试自己去加载。 1234567891011121314151617181920212223242526272829303132333435363738394041public abstract class ClassLoader { // The parent class loader for delegation private final ClassLoader parent; public Class&lt;?&gt; loadClass(String name) throws ClassNotFoundException { return loadClass(name, false); } protected Class&lt;?&gt; loadClass(String name, boolean resolve) throws ClassNotFoundException { synchronized (getClassLoadingLock(name)) { // First, check if the class has already been loaded Class&lt;?&gt; c = findLoadedClass(name); if (c == null) { try { if (parent != null) { c = parent.loadClass(name, false); } else { c = findBootstrapClassOrNull(name); } } catch (ClassNotFoundException e) { // ClassNotFoundException thrown if class not found // from the non-null parent class loader } if (c == null) { // If still not found, then invoke findClass in order // to find the class. c = findClass(name); } } if (resolve) { resolveClass(c); } return c; } } protected Class&lt;?&gt; findClass(String name) throws ClassNotFoundException { throw new ClassNotFoundException(name); }} [自定义类加载器实现](https://cyc2018.github.io/CS-Notes/#/notes/Java 虚拟机?id=自定义类加载器实现)以下代码中的 FileSystemClassLoader 是自定义类加载器，继承自 java.lang.ClassLoader，用于加载文件系统上的类。它首先根据类的全名在文件系统上查找类的字节代码文件（.class 文件），然后读取该文件内容，最后通过 defineClass() 方法来把这些字节代码转换成 java.lang.Class 类的实例。 java.lang.ClassLoader 的 loadClass() 实现了双亲委派模型的逻辑，自定义类加载器一般不去重写它，但是需要重写 findClass() 方法。 12345678910111213141516171819202122232425262728293031323334353637383940public class FileSystemClassLoader extends ClassLoader { private String rootDir; public FileSystemClassLoader(String rootDir) { this.rootDir = rootDir; } protected Class&lt;?&gt; findClass(String name) throws ClassNotFoundException { byte[] classData = getClassData(name); if (classData == null) { throw new ClassNotFoundException(); } else { return defineClass(name, classData, 0, classData.length); } } private byte[] getClassData(String className) { String path = classNameToPath(className); try { InputStream ins = new FileInputStream(path); ByteArrayOutputStream baos = new ByteArrayOutputStream(); int bufferSize = 4096; byte[] buffer = new byte[bufferSize]; int bytesNumRead; while ((bytesNumRead = ins.read(buffer)) != -1) { baos.write(buffer, 0, bytesNumRead); } return baos.toByteArray(); } catch (IOException e) { e.printStackTrace(); } return null; } private String classNameToPath(String className) { return rootDir + File.separatorChar + className.replace('.', File.separatorChar) + \".class\"; }} JVM的4种垃圾回收算法、垃圾回收机制与总结Java学习分享 垃圾回收算法1.标记清除标记-清除算法将垃圾回收分为两个阶段：标记阶段和清除阶段。 在标记阶段首先通过根节点(GC Roots)，标记所有从根节点开始的对象，未被标记的对象就是未被引用的垃圾对象。然后，在清除阶段，清除所有未被标记的对象。 适用场合： 存活对象较多的情况下比较高效 适用于年老代（即旧生代） 缺点： 容易产生内存碎片，再来一个比较大的对象时（典型情况：该对象的大小大于空闲表中的每一块儿大小但是小于其中两块儿的和），会提前触发垃圾回收扫描了整个空间两次（第一次：标记存活对象；第二次：清除没有标记的对象） 2.复制算法从根集合节点进行扫描，标记出所有的存活对象，并将这些存活的对象复制到一块儿新的内存（图中下边的那一块儿内存）上去，之后将原来的那一块儿内存（图中上边的那一块儿内存）全部回收掉 现在的商业虚拟机都采用这种收集算法来回收新生代。 适用场合： 存活对象较少的情况下比较高效 扫描了整个空间一次（标记存活对象并复制移动） 适用于年轻代（即新生代）：基本上98%的对象是”朝生夕死”的，存活下来的会很少 缺点： 需要一块儿空的内存空间 需要复制移动对象 3.标记整理复制算法的高效性是建立在存活对象少、垃圾对象多的前提下的。 这种情况在新生代经常发生，但是在老年代更常见的情况是大部分对象都是存活对象。如果依然使用复制算法，由于存活的对象较多，复制的成本也将很高。 标记-压缩算法是一种老年代的回收算法，它在标记-清除算法的基础上做了一些优化。 首先也需要从根节点开始对所有可达对象做一次标记，但之后，它并不简单地清理未标记的对象，而是将所有的存活对象压缩到内存的一端。之后，清理边界外所有的空间。这种方法既避免了碎片的产生，又不需要两块相同的内存空间，因此，其性价比比较高。 4.分代收集算法分代收集算法就是目前虚拟机使用的回收算法，它解决了标记整理不适用于老年代的问题，将内存分为各个年代。一般情况下将堆区划分为老年代（Tenured Generation）和新生代（Young Generation），在堆区之外还有一个代就是永久代（Permanet Generation）。 在不同年代使用不同的算法，从而使用最合适的算法，新生代存活率低，可以使用复制算法。而老年代对象存活率搞，没有额外空间对它进行分配担保，所以只能使用标记清除或者标记整理算法。 垃圾回收机制年轻代分为Eden区和survivor区（两块儿：from和to），且Eden:from:to==8:1:1。 jvm内存结构 1）新产生的对象优先分配在Eden区（除非配置了-XX:PretenureSizeThreshold，大于该值的对象会直接进入年老代）； 2）当Eden区满了或放不下了，这时候其中存活的对象会复制到from区。 3）之后产生的对象继续分配在Eden区，当Eden区又满了或放不下了，这时候将会把Eden区和from区存活下来的对象复制到to区（同理，如果存活下来的对象to区都放不下，则这些存活下来的对象全部进入年老代），之后回收掉Eden区和from区的所有内存。 4）如上这样，会有很多对象会被复制很多次（每复制一次，对象的年龄就+1），默认情况下，当对象被复制了15次（这个次数可以通过：-XX:MaxTenuringThreshold来配置），就会进入年老代了。 5）当年老代满了或者存放不下将要进入年老代的存活对象的时候，就会发生一次Full GC（这个是我们最需要减少的，因为耗时很严重）。 垃圾回收有两种类型：Minor GC 和 Full GC。1.Minor GC对新生代进行回收，不会影响到年老代。因为新生代的 Java 对象大多死亡频繁，所以 Minor GC 非常频繁，一般在这里使用速度快、效率高的算法，使垃圾回收能尽快完成。 2.Full GC也叫Major GC，对整个堆进行回收，包括新生代和老年代。由于Full GC需要对整个堆进行回收，所以比MinorGC要慢，因此应该尽可能减少Full GC的次数，导致FullGC的原因包括：老年代被写满、永久代（Perm）被写满和System.gc()被显式调用等。 垃圾回收算法总结1.年轻代：复制算法1) 所有新生成的对象首先都是放在年轻代的。年轻代的目标就是尽可能快速的收集掉那些生命周期短的对象。 2)新生代内存按照8:1:1的比例分为一个eden区和两个survivor(survivor0,survivor1)区。一个Eden区，两个Survivor区(一般而言)。大部分对象在Eden区中生成。回收时先将eden区存活对象复制到一个survivor0区，然后清空eden区，当这个survivor0区也存放满了时，则将eden区和survivor0区存活对象复制到另一个survivor1区，然后清空eden和这个survivor0区，此时survivor0区是空的，然后将survivor0区和survivor1区交换，即保持survivor1区为空，如此往复。 3) 当survivor1区不足以存放 eden和survivor0的存活对象时，就将存活对象直接存放到老年代。若是老年代也满了就会触发一次Full GC(Major GC)，也就是新生代、老年代都进行回收。 4) 新生代发生的GC也叫做Minor GC，MinorGC发生频率比较高(不一定等Eden区满了才触发)。 2.年老代：标记-清除或标记-整理1) 在年轻代中经历了N次垃圾回收后仍然存活的对象，就会被放到年老代中。因此，可以认为年老代中存放的都是一些生命周期较长的对象。 2) 内存比新生代也大很多(大概比例是1:2)，当老年代内存满时触发Major GC即Full GC，Full GC发生频率比较低，老年代对象存活时间比较长，存活率标记高。 以上这种年轻代与年老代分别采用不同回收算法的方式称为”分代收集算法”，这也是当下企业使用的一种方式 每一种算法都会有很多不同的垃圾回收器去实现，在实际使用中，根据自己的业务特点做出选择就好。","link":"/java/%E5%9F%BA%E7%A1%80/Java-%E8%99%9A%E6%8B%9F%E6%9C%BA.html"},{"title":"Java基础-2","text":"[toc] 还在用Synchronized？Atomic你了解不？一、基础铺垫count++并不是原子操作。因为count++需要经过读取-修改-写入三个步骤 1.2 CAScompare and swap旧值 期待的旧值 新值前二者相同，执行赋值否则，自旋（重试）或什么也不做 二、原子变量类简单介绍 可以对其进行分类： * 基本类型： AtomicBoolean：布尔型 AtomicInteger：整型 AtomicLong：长整型 数组： AtomicIntegerArray：数组里的整型 AtomicLongArray：数组里的长整型 AtomicReferenceArray：数组里的引用类型 引用类型： AtomicReference：引用类型 AtomicStampedReference：带有版本号的引用类型 AtomicMarkableReference：带有标记位的引用类型 对象的属性： AtomicIntegerFieldUpdater：对象的属性是整型 AtomicLongFieldUpdater：对象的属性是长整型 AtomicReferenceFieldUpdater：对象的属性是引用类型 JDK8新增DoubleAccumulator、LongAccumulator、DoubleAdder、LongAdder 是对AtomicLong等类的改进。比如LongAccumulator与LongAdder在高并发环境下比AtomicLong更高效。 #### 2.1 原子变量类使用 12345678910class Count{ // 共享变量(使用AtomicInteger来替代Synchronized锁) private AtomicInteger count = new AtomicInteger(0); public Integer getCount() { return count.get(); } public void increase() { count.incrementAndGet(); }} 2.2 ABA问题就是可能出现某线程以为旧值没变，其实变了的情况a -&gt; b -&gt; a2个a并不相同 说明图 ![WuOFTQBhkmiC7Mw](https://i.loli.net/2020/01/13/WuOFTQBhkmiC7Mw.jpg) #### 2.3 解决ABA问题 使用JDK给我们提供的AtomicStampedReference和AtomicMarkableReference类 原理大概就是：维护了一个Pair对象，Pair对象存储我们的对象引用和一个stamp值。每次CAS比较的是两个Pair对象 #### 2.4 LongAdder性能比AtomicLong要好 原因： 使用AtomicLong时，在高并发下大量线程会同时去竞争更新同一个原子变量，但是由于同时只有一个线程的CAS会成功，所以其他线程会不断尝试自旋尝试CAS操作，这会浪费不少的CPU资源。 而LongAdder可以概括成这样：内部核心数据value分离成一个数组(Cell)，每个线程访问时,通过哈希等算法映射到其中一个数字进行计数，而最终的计数结果，则为这个数组的求和累加。 简单来说就是将一个值分散成多个值，在并发的时候就可以分散压力，性能有所提高。 手把手带你体验Stream流优点代码简洁，支持并行计算例如 12int sum2 = IntStream.of(nums).sum();int sum2 = IntStream.of(nums).parallel().sum(); 使用Stream流分为三步：创建Stream流通过Stream流对象执行中间操作执行最终操作，得到结果 2.1 创建流最常用的就是从集合中创建出流 12345678910111213141516/** * 返回的都是流对象 * @param args */public static void main(String[] args) { List&lt;String&gt; list = new ArrayList&lt;&gt;(); // 从集合创建 Stream&lt;String&gt; stream = list.stream(); Stream&lt;String&gt; stream1 = list.parallelStream(); // 从数组创建 IntStream stream2 = Arrays.stream(new int[]{2, 3, 5}); // 创建数字流 IntStream intStream = IntStream.of(1, 2, 3); // 使用random创建 IntStream limit = new Random().ints().limit(10);} 2.2 执行中间操作常见的limit - skip其他的：allMatch、anyMatch、noneMatch 返回boolean值findFirst 和 findAny 2.3 执行最终操作常见的 12String str = \"my name is 007\";Stream.of(str.split(\" \")).peek(System.out::println).forEach(System.out::println) reduce的使用sum12List&lt;Integer&gt; numbers = Arrays.asList(1, 2, 3, 4, 5);int sum = numbers.stream().reduce(0, (a, b) -&gt; a + b); 最大 最小1234// 最大值Optional&lt;Integer&gt; max = numbers.stream().reduce(Integer::max);// 最小值Optional&lt;Integer&gt; max = numbers.stream().reduce(Integer::min);","link":"/java/%E5%9F%BA%E7%A1%80/Java%E5%9F%BA%E7%A1%80-2.html"},{"title":"Java基础","text":"Java 基础 [toc] 2018 年如何快速学 Java学习 JavaWeb 的路线如下：Tomcat(简单过一下)XML/注解(简单过一下)Servlet(重点理解)HTTP 协议(重点理解)Filter 过滤器(重点理解)Listener 监听器(简单过一下)JSP(简单过一下)AJAX、JSON(简单过一下) 泛型就这么简单为什么需要泛型 首先，我们来试想一下：没有泛型，集合会怎么样Collection、Map 集合对元素的类型是没有任何限制的。本来我的 Collection 集合装载的是全部的 Dog 对象，但是外边把 Cat 对象存储到集合中，是没有任何语法错误的。把对象扔进集合中，集合是不知道元素的类型是什么的，仅仅知道是 Object。因此在 get()的时候，返回的是 Object。外边获取该对象，还需要强制转换有了泛型以后：代码更加简洁【不用强制转换】程序更加健壮【只要编译时期没有警告，那么运行时期就不会出现 ClassCastException 异常】可读性和稳定性【在编写集合的时候，就限定了类型】 3.1 泛型类1234567891011public class ObjectTool&lt;T&gt; { private T obj; public T getObj() { return obj; } public void setObj(T obj) { this.obj = obj; }} 3.2 泛型方法1234567891011121314151617//定义泛型方法..public &lt;T&gt; void show(T t) { System.out.println(t);}// 使用// 用户传递进来的是什么类型，返回值就是什么类型了public static void main(String[] args) { //创建对象 ObjectTool tool = new ObjectTool(); //调用方法,传入的参数是什么类型,返回值就是什么类型 tool.show(\"hello\"); tool.show(12); tool.show(12.5);} 3.4 类型通配符有个需求：方法接收一个集合参数，遍历集合并把集合元素打印出来 123456789101112// 1. 未指定类型// public void test(List list){// 2. 只能接收装着object的list// public void test(List&lt;Object&gt; list){// 3. ? 表示任意类型public void test(List&lt;?&gt; list){ for(int i=0;i&lt;list.size();i++){ System.out.println(list.get(i)); }} 注意： 使用？时，只能调用与类型无关的方法 3.4.1 类型通配符的上限需求：接收一个 List 集合，它只能操作数字类型的元素【Float、Integer、Double、Byte 等数字类型都行】，怎么做？？？设定通配符上限List&lt;? extends Number&gt; 123public static void test(List&lt;? extends Number&gt; list) {} 3.4.2 类型通配符的上限//传递进来的只能是 Type 或 Type 的父类 1&lt;? super Type&gt; 3.5 通配符和泛型方法通配符 和 泛型方法 实现的功能很接近，怎么选择？原则：通配符要求参数之间没有依赖关系 四、泛型的应用baseDAO 点击查看代码 1public abstract class BaseDao&lt;T&gt; { //模拟hibernate.... private Session session; private Class clazz; //哪个子类调的这个方法，得到的class就是子类处理的类型（非常重要）public BaseDao(){ Class clazz = this.getClass(); //拿到的是子类 ParameterizedType pt = (ParameterizedType) clazz.getGenericSuperclass(); //BaseDao clazz = (Class) pt.getActualTypeArguments()[0]; System.out.println(clazz);}public void add(T t){ session.save(t);}public T find(String id){ return (T) session.get(clazz, id);}public void update(T t){ session.update(t);}public void delete(String id){ T t = (T) session.get(clazz, id); session.delete(t);} 12} CategoryDao 12public class CategoryDao extends BaseDao&lt;Category&gt; {} BookDao 12public class BookDao extends BaseDao&lt;Book&gt; {} 注解就这么简单二、为什么我们需要用到注解？注解可以给类、方法上注入信息 三、基本 Annotationjava.lang 包下存在着 5 个基本的 Annotation 3.1@Overridemailto:3.1@Override重写 3.2@Deprecatedmailto:3.2@Deprecated过时在程序中调用它的时候，在 IDE 上会出现一条横杠，说明该方法是过时的 3.3@SuppressWarningsmailto:3.3@SuppressWarnings抑制编译器警告 3.4@SafeVarargsmailto:3.4@SafeVarargsJava 7“堆污染”警告 ？什么是堆污染呢？？当把一个不是泛型的集合赋值给一个带泛型的集合的时候，这种情况就很容易发生堆污染…. 3.5@FunctionalInterfacemailto:3.5@FunctionalInterface@FunctionalInterface 用来指定该接口是函数式接口 四、自定义注解基础4.1 标记 Annotation没有任何成员变量的注解：标记注解。如@Overrided 12public @interface MyAnnotation{} 4.2 元数据 Annotation带有成员变量的注解：元数据 annotation。注解中声明成员变量类似于声明方法 1234public @interface MyAnnotation{ String username(); int age();} 注意：在注解上定义的成员变量只能是 String、数组、Class、枚举类、注解 4.3 使用自定义注解4.3.1 常规使用有一个 add 的方法，需要 username 和 age 参数，我们通过注解来让该方法拥有这两个变量 1234@MyAnnotation(username=\"Adam\", age=16)public void add(String username, int age){} 4.3.2 默认值注解可以声明默认值 1234public @Interface MyAnnotation{ String username() default \"abc\"; int age() default 11;} 修饰的时候就不用给出具体的值 123@MyAnnotation()public void add(String username, int age){} 4.3.3 注解属性为 value若注解中只有一个属性 value，则可以不指定 value，直接赋值 123@MyAnnotation(\"abd\")public void add(String value){} 4.4 把自定义注解的基本信息注入到方法上? 五、JDK 的元 Annotation5.1@Retentionmailto:5.1@Retention只能用于修饰其他的 Annotation, 用于指定被修饰的 Annotation 被保留多长时间。?5.2@Targetmailto:5.2@Target只能用于修饰其他的 Annotation, 用于指定被修饰的 Annotation 用于修饰哪些程序单元5.3@Documentedmailto:5.3@Documented@Documented 用于指定被该 Annotation 修饰的 Annotation 类将被 javadoc 工具提取成文档。5.4@Inheritedmailto:5.4@Inherited@Inherited 也是用来修饰其他的 Annotation 的，被修饰过的 Annotation 将具有继承性。。。 六、注入对象到方法或成员变量上6.1 把对象注入到方法上?6.2 把对象注入到成员变量? Object 对象你真理解了吗？一、Object 对象简介主要有一下方法registerNatives()【底层实现、不研究】hashCode()equals(Object obj)clone()toString()notify()notifyAll()wait(long timeout)【还有重载了两个】finalize() 二、equals 和 hashCode 方法重写 equals()方法，就必须重写 hashCode()的方法？equals()方法默认是比较对象的地址，使用的是 == 等值运算符hashCode()方法对底层是散列表的对象有提升性能的功能同一个对象(如果该对象没有被修改)：那么重复调用 hashCode()那么返回的 int 是相同的！hashCode()方法默认是由对象的地址转换而来的 2.1 equals 和 hashCode 方法重写一般来说，比较的是对象地址是没有意义的 2.2 String 实现的 equals 和 hashCode 方法String 已经实现了 equals 和 hashCode 方法了，可以直接使用 String.equals()来判断两个字符串是否相等！ 三、toString 方法四、clone 方法4.1 clone 用法如何克隆对象呢？无论是浅拷贝还是深拷贝都是这两步：1.克隆的对象要实现 Cloneable 接口2.重写 clone 方法，最好修饰成 public 1.浅拷贝12345678public class Person implements Cloneable{ private Date date; @Override public Object clone() throws ClonNotSupportedException { return super.clone(); }} 2.深拷贝12345678910public class Person implements Cloneable{ private Date date; @Override public Object clone() throws CloneNotSupportedException { Person person = (Person)super.clone(); person.date = (Date)date.clone(); return person; }} 五、wait 和 notify 方法无论是 wait、notify 还是 notifyAll()都需要由监听器对象(锁对象)来进行调用简单来说：他们都是在同步代码块中调用的，否则会抛出异常！notify()唤醒的是在等待队列的某个线程(不确定会唤醒哪个)，notifyAll()唤醒的是等待队列所有线程 导致 wait()的线程被唤醒可以有 4 种情况该线程被中断wait()时间到了被 notify()唤醒被 notifyAll()唤醒 调用 wait()的线程会释放掉锁 5.1 为什么 wait 和 notify 在 Object 方法上？锁对象是任意的，所以这些方法必须定义在 Object 类中 5.2 notify 方法调用后，会发生什么？5.3 sleep 和 wait 有什么区别？主要的区别在于 Object.wait()在释放 CPU 同时，释放了对象锁的控制。而 Thread.sleep()没有对锁释放 六、finalize()方法finalize()方法将在垃圾回收器清除对象之前调用，但该方法不知道何时调用，具有不定性。一般我们都不会重写它~一个对象的 finalize()方法只会被调用一次 JDK10都发布了，nio你了解多少？前言Java IO，硬骨头也能变软 - 知乎按操作方式分类结构图：按操作对象分类结构图 二、NIO 快速入门3 个核心部分buffer channel selector 2.1buffer 缓冲区和 Channel 管道Channel 不与数据打交道，它只负责运输数据。与数据打交道的是 Buffer 缓冲区Channel–&gt; 运输Buffer–&gt; 数据相对于传统 IO 而言，流是单向的 2.1.1buffer 缓冲区核心要点Buffer 是抽象类ByteBuffer 是使用最多的实现类核心方法：put getBuffer 类有 4 个核心属性Capacity 容量缓冲区能够容纳的数据元素的最大数量Limit 上界缓冲区数据总数Position 位置下一个读写的位置Mark 标记记录上一次读写的位置 2.1.2buffer 代码演示1234567891011121314151617181920212223public static void main(String[] args) { // 创建一个缓冲区 ByteBuffer byteBuffer = ByteBuffer.allocate(1024); // 看一下初始时4个核心变量的值 System.out.println(\"初始时--&gt;limit---&gt;\"+byteBuffer.limit()); System.out.println(\"初始时--&gt;position---&gt;\"+byteBuffer.position()); System.out.println(\"初始时--&gt;capacity---&gt;\"+byteBuffer.capacity()); System.out.println(\"初始时--&gt;mark---&gt;\" + byteBuffer.mark()); System.out.println(\"--------------------------------------\"); // 添加一些数据到缓冲区中 String s = \"Java3y\"; byteBuffer.put(s.getBytes()); // 看一下初始时4个核心变量的值 System.out.println(\"put完之后--&gt;limit---&gt;\"+byteBuffer.limit()); System.out.println(\"put完之后--&gt;position---&gt;\"+byteBuffer.position()); System.out.println(\"put完之后--&gt;capacity---&gt;\"+byteBuffer.capacity()); System.out.println(\"put完之后--&gt;mark---&gt;\" + byteBuffer.mark()); } flip() 后，写模式转换为读模式clear() 后，读模式转换为写模式 2.1.3FileChannel 通道核心要点Channel 通道只负责传输数据、不直接操作数据的获取 channel 12345678// 1. 通过本地IO的方式来获取通道 FileInputStream fileInputStream = new FileInputStream(\"F:\\\\3yBlog\\\\JavaEE常用框架\\\\Elasticsearch就是这么简单.md\"); // 得到文件的输入通道 FileChannel inchannel = fileInputStream.getChannel(); // 2. jdk1.7后通过静态方法.open()获取通道 FileChannel.open(Paths.get(\"F:\\\\3yBlog\\\\JavaEE常用框架\\\\Elasticsearch就是这么简单2.md\"), StandardOpenOption.WRITE); channel 与 buffer 使用示例 2.1.4 直接与非直接缓冲区？ 2.1.5scatter 和 gather、字符集分散读取(scatter)：将一个通道中的数据分散读取到多个缓冲区中聚集写入(gather)：将多个缓冲区中的数据集中写入到一个通道中scatter gather 代码见原文 三、IO 模型理解3.0 学习 I/O 模型需要的基础3.1 阻塞 I/O 模型3.2 非阻塞 I/O 模型3.3I/O 复用模型3.4I/O 模型总结 四、使用 NIO 完成网络通信4.1NIO 基础继续讲解NIO 被叫为 no-blocking io，其实是在网络这个层次中理解的，对于 FileChannel 来说一样是阻塞。通常使用 NIO 是在网络中使用的，网上大部分讨论 NIO 都是在网络通信的基础之上的！说 NIO 是非阻塞的 NIO 也是网络中体现的 在网络中使用 NIO 往往是 I/O 模型的多路复用模型！Selector 选择器就可以比喻成麦当劳的广播。通过 selector，一个线程能够管理多个 Channel 的状态 4.2NIO 阻塞形态4.3NIO 非阻塞形态在客户端上要想获取得到服务端的数据，也需要注册在 register 上(监听读事件) 点击查看代码 1public class NoBlockClient2 { public static void main(String[] args) throws IOException { // 1. 获取通道 SocketChannel socketChannel = SocketChannel.open(new InetSocketAddress(&quot;127.0.0.1&quot;, 6666)); // 1.1切换成非阻塞模式 socketChannel.configureBlocking(false); // 1.2获取选择器 Selector selector = Selector.open(); // 1.3将通道注册到选择器中，获取服务端返回的数据 socketChannel.register(selector, SelectionKey.OP_READ); // 2. 发送一张图片给服务端吧 FileChannel fileChannel = FileChannel.open(Paths.get(&quot;X:\\\\Users\\\\ozc\\\\Desktop\\\\新建文件夹\\\\1.png&quot;), StandardOpenOption.READ); // 3.要使用NIO，有了Channel，就必然要有Buffer，Buffer是与数据打交道的呢 ByteBuffer buffer = ByteBuffer.allocate(1024); // 4.读取本地文件(图片)，发送到服务器 while (fileChannel.read(buffer) != -1) { // 在读之前都要切换成读模式 buffer.flip(); socketChannel.write(buffer); // 读完切换成写模式，能让管道继续读取文件的数据 buffer.clear(); } // 5. 轮训地获取选择器上已“就绪”的事件---&gt;只要select()&gt;0，说明已就绪 while (selector.select() &gt; 0) { // 6. 获取当前选择器所有注册的“选择键”(已就绪的监听事件) Iterator&lt;SelectionKey&gt; iterator = selector.selectedKeys().iterator(); // 7. 获取已“就绪”的事件，(不同的事件做不同的事) while (iterator.hasNext()) { SelectionKey selectionKey = iterator.next(); // 8. 读事件就绪 if (selectionKey.isReadable()) { // 8.1得到对应的通道 SocketChannel channel = (SocketChannel) selectionKey.channel(); ByteBuffer responseBuffer = ByteBuffer.allocate(1024); // 9. 知道服务端要返回响应的数据给客户端，客户端在这里接收 int readBytes = channel.read(responseBuffer); if (readBytes &gt; 0) { // 切换读模式 responseBuffer.flip(); System.out.println(new String(responseBuffer.array(), 0, readBytes)); } } // 10. 取消选择键(已经处理过的事件，就应该取消掉了) iterator.remove(); } }} 12} 服务端 点击查看代码 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465public class NoBlockServer { public static void main(String[] args) throws IOException { // 1.获取通道 ServerSocketChannel server = ServerSocketChannel.open(); // 2.切换成非阻塞模式 server.configureBlocking(false); // 3. 绑定连接 server.bind(new InetSocketAddress(6666)); // 4. 获取选择器 Selector selector = Selector.open(); // 4.1将通道注册到选择器上，指定接收“监听通道”事件 server.register(selector, SelectionKey.OP_ACCEPT); // 5. 轮训地获取选择器上已“就绪”的事件---&gt;只要select()&gt;0，说明已就绪 while (selector.select() &gt; 0) { // 6. 获取当前选择器所有注册的“选择键”(已就绪的监听事件) Iterator&lt;SelectionKey&gt; iterator = selector.selectedKeys().iterator(); // 7. 获取已“就绪”的事件，(不同的事件做不同的事) while (iterator.hasNext()) { SelectionKey selectionKey = iterator.next(); // 接收事件就绪 if (selectionKey.isAcceptable()) { // 8. 获取客户端的链接 SocketChannel client = server.accept(); // 8.1 切换成非阻塞状态 client.configureBlocking(false); // 8.2 注册到选择器上--&gt;拿到客户端的连接为了读取通道的数据(监听读就绪事件) client.register(selector, SelectionKey.OP_READ); } else if (selectionKey.isReadable()) { // 读事件就绪 // 9. 获取当前选择器读就绪状态的通道 SocketChannel client = (SocketChannel) selectionKey.channel(); // 9.1读取数据 ByteBuffer buffer = ByteBuffer.allocate(1024); // 9.2得到文件通道，将客户端传递过来的图片写到本地项目下(写模式、没有则创建) FileChannel outChannel = FileChannel.open(Paths.get(\"2.png\"), StandardOpenOption.WRITE, StandardOpenOption.CREATE); while (client.read(buffer) &gt; 0) { // 在读之前都要切换成读模式 buffer.flip(); outChannel.write(buffer); // 读完切换成写模式，能让管道继续读取文件的数据 buffer.clear(); } } // 10. 取消选择键(已经处理过的事件，就应该取消掉了) iterator.remove(); } } }} 4.4 管道和 DataGramChannelCOW 奶牛！Copy On Write 机制了解一下一、Linux 下的 copy-on-write1.1 简单来用用 forkfork 用于创建子进程 1.2 再来看看 exec()函数exec 函数的作用就是：装载一个新的程序（可执行映像）覆盖当前进程内存空间中的映像，从而执行不同的任务 1.3 回头来看 Linux 下的 COW 是怎么一回事二、解释一下 Redis 的 COW三、文件系统的 COW？ 给女朋友讲解什么是 Optional【JDK 8 特性】一、基础铺垫1.1Lambda 简化代码例子创建线程：123456789101112public static void main(String[] args) { // 用匿名内部类的方式来创建线程 new Thread(new Runnable() { @Override public void run() { System.out.println(\"公众号：Java3y---回复1进群交流\"); } }); // 使用Lambda来创建线程 new Thread(() -&gt; System.out.println(\"公众号：Java3y---回复1进群交流\"));} 遍历 Map 集合：12345678910111213public static void main(String[] args) { Map&lt;String, String&gt; hashMap = new HashMap&lt;&gt;(); hashMap.put(\"公众号\", \"Java3y\"); hashMap.put(\"交流群\", \"回复1\"); // 使用增强for的方式来遍历hashMap for (Map.Entry&lt;String, String&gt; entry : hashMap.entrySet()) { System.out.println(entry.getKey()+\":\"+entry.getValue()); } // 使用Lambda表达式的方式来遍历hashMap hashMap.forEach((s, s2) -&gt; System.out.println(s + \":\" + s2));} 在 List 中删除某个元素12345678910111213141516171819202122public static void main(String[] args) { List&lt;String&gt; list = new ArrayList&lt;&gt;(); list.add(\"Java3y\"); list.add(\"3y\"); list.add(\"光头\"); list.add(\"帅哥\"); // 传统的方式删除\"光头\"的元素 ListIterator&lt;String&gt; iterator = list.listIterator(); while (iterator.hasNext()) { if (\"光头\".equals(iterator.next())) { iterator.remove(); } } // Lambda方式删除\"光头\"的元素 list.removeIf(s -&gt; \"光头\".equals(s)); // 使用Lambda遍历List集合 list.forEach(s -&gt; System.out.println(s));} 1.1 函数式接口函数式接口的特点：有@FunctionalInterface 注解，接口有且仅有一个抽象方法！如 1234@FunctionalInterfacepublic interface Runnable { public abstract void run();} 二、Optional 类2.1 创建 Optional 容器创建 Optional 容器有两种方式：调用 ofNullable()方法，传入的对象可以为 null调用 of()方法，传入的对象不可以为 null，否则抛出 NullPointerException 2.2Optional 容器简单的方法1234567891011121314151617// 得到容器中的对象，如果为null就抛出异常public T get() { if (value == null) { throw new NoSuchElementException(\"No value present\"); } return value;}// 判断容器中的对象是否为nullpublic boolean isPresent() { return value != null;}// 如果容器中的对象存在，则返回。否则返回传递进来的参数public T orElse(T other) { return value != null ? value : other;} 2.3O ptional 容器进阶用法2.3.1 ifPresent 方法123456789public void ifPresent(Consumer&lt;? super T&gt; consumer) { if (value != null) consumer.accept(value);}@FunctionalInterfacepublic interface Consumer&lt;T&gt; { void accept(T t);} 用法 123456789101112131415public static void main(String[] args) { User user = new User(); user.setName(\"Java3y\"); test(user);}public static void test(User user) { Optional&lt;User&gt; optional = Optional.ofNullable(user); // 如果存在user，则打印user的name optional.ifPresent((value) -&gt; System.out.println(value.getName())); // 旧写法 if (user != null) { System.out.println(user.getName()); }} 2.3.2 orElseGet 和 orElseThrow 方法123456789101112131415public static void main(String[] args) { User user = new User(); user.setName(\"Java3y\"); test(user);}public static void test(User user) { Optional&lt;User&gt; optional = Optional.ofNullable(user); // 如果存在user，则直接返回，否则创建出一个新的User对象 User user1 = optional.orElseGet(() -&gt; new User()); // 旧写法 if (user != null) { user = new User(); }} 2.3.3 filter 方法12345public static void test(User user) { Optional&lt;User&gt; optional = Optional.ofNullable(user); // 如果容器中的对象存在，并且符合过滤条件，返回装载对象的Optional容器，否则返回一个空的Optional容器 optional.filter((value) -&gt; \"Java3y\".equals(value.getName()));} 2.3.4 map 方法12345678910111213public static void test(User user) { Optional&lt;User&gt; optional = Optional.ofNullable(user); // 如果容器的对象存在，则对其执行调用mapping函数得到返回值。然后创建包含mapping返回值的Optional，否则返回空Optional。 optional.map(user1 -&gt; user1.getName()).orElse(\"Unknown\");}// 上面一句代码对应着最开始的老写法：public String tradition(User user) { if (user != null) { return user.getName(); }else{ return \"Unknown\"; }} 2.3.5 flatMap 方法2.3.6 总结 点击查看代码 1234567891011121314151617181920212223242526272829303132333435public static void main(String[] args) { User user = new User(); user.setName(\"Java3y\"); System.out.println(test(user));}// 以前的代码 v1public static String test2(User user) {if (user != null) {String name = user.getName();if (name != null) {return name.toUpperCase();} else {return null;}} else {return null;}}// 以前的代码 v2public static String test3(User user) {if (user != null &amp;&amp; user.getName() != null) {return user.getName().toUpperCase();} else {return null;}}// 现在的代码public static String test(User user) {return Optional.ofNullable(user).map(user1 -&gt; user1.getName()).map(s -&gt; s.toUpperCase()).orElse(null);}","link":"/java/%E5%9F%BA%E7%A1%80/Java%E5%9F%BA%E7%A1%80.html"},{"title":"Java提高篇","text":"[toc] 理解 Java 的三大特性之封装用户是无需知道对象内部的细节（当然也无从知道），但可以通过该对象对外的提供的接口来访问该对象（如 setter getter）封装可以使容易地修改类的内部实现，而无需修改使用了该类的客户代码封装里面也可以写一些逻辑判断 理解 Java 的三大特性之继承继承是使用已存在的类的定义作为基础建立新类的技术，新类的定义可以增加新的数据或新的功能，也可以用父类的功能，但不能选择性地继承父类。通过使用继承我们能够非常方便地复用以前的代码，能够大大的提高开发的效率。继承所描述的是“is-a”的关系子类拥有父类非 private 的属性和方法。 构造器于构造器而言，它只能够被调用，而不能被继承。 调用父类的构造方法我们使用 super() 即可。子类默认调用父类的默认构造器，如果父类没有默认的构造器，子类的构造方法的第一句必须调用父类的构造器 谨慎继承继承存在如下缺陷：1、父类变，子类就必须变。2、继承破坏了封装，对于父类而言，它的实现细节对与子类来说都是透明的。3、继承是一种强耦合关系。《Think in Java》中提供了解决办法：问一问自己是否需要从子类向父类进行向上转型。如果必须向上转型，则继承是必要的，但是如果不需要，则应当好好考虑自己是否需要继承。 理解 Java 的三大特性之多态子类向上转型为父类，调用子类重写的方法。 Java 的四舍五入12.5 的四舍五入值：13-12.5 的四舍五入值：-12 12345678910// 方法一double f = 111231.5585;BigDecimal b = new BigDecimal(f);double f1 = b.setScale(2, RoundingMode.HALF_UP).doubleValue();// 方法二java.text.DecimalFormat df =new java.text.DecimalFormat(”#.00″);df.format(3.1415926);// 方法三double d = 3.1415926;String result = String.format(”%.2f”); 抽象类与接口抽象类1、抽象类不能被实例化2、子类必须重写抽象方法3、只要包含一个抽象方法的抽象类，该方法必须要定义成抽象类4、抽象类中可以包含具体的方法，也可以不包含抽象方法。5、子类中的抽象方法不能与父类的抽象方法同名。6、abstract 不能与 final 并列修饰同一个类。7、abstract 不能与 private、static、final 或 native 并列修饰同一个方法 接口1、方法默认是 public2、成员变量默认是 public static final 二者的差别主要体现在：抽象层次不同。抽象类是对整个类的抽象，接口仅仅对行为抽象 使用序列化实现对象的拷贝1234567891011121314151617181920212223public class CloneUtils { @SuppressWarnings(\"unchecked\") public static &lt;T extends Serializable&gt; T clone(T obj){ T cloneObj = null; try { //写入字节流 ByteArrayOutputStream out = new ByteArrayOutputStream(); ObjectOutputStream obs = new ObjectOutputStream(out); obs.writeObject(obj); obs.close(); //分配内存，写入原始对象，生成新对象 ByteArrayInputStream ios = new ByteArrayInputStream(out.toByteArray()); ObjectInputStream ois = new ObjectInputStream(ios); //返回生成的新对象 cloneObj = (T) ois.readObject(); ois.close(); } catch (Exception e) { e.printStackTrace(); } return cloneObj; } } 使用该工具类的对象必须要实现 Serializable 接口实现 Serializable 接口的必须显示地声明 serialVersionUID 字段 12345678910111213public class Person implements Serializable{ private static final long serialVersionUID = 2631590509760908280L; .................. //去除clone()方法}public class Email implements Serializable{ private static final long serialVersionUID = 1267293988171991494L; ....................} 使用 123456Person person1 = new Person(\"张三\",email);Person person2 = CloneUtils.clone(person1);person2.setName(\"李四\");Person person3 = CloneUtils.clone(person1);person3.setName(\"王五\");person1.getEmail().setContent(\"请与今天12:00到二会议室参加会议...\"); 关键字 static 静态变量是随着类加载时被完成初始化的，它在内存中仅有一个，且 JVM 也只会为它分配一次内存，同时类所有的实例都共享静态变量，可以直接通过类名来访问它。 static 修饰的方法我们称之为静态方法，我们通过类名对其进行直接调用。由于他在类加载的时候就存在了，它不依赖于任何实例，所以 static 方法必须实现，也就是说他不能是抽象方法 abstract。 被 static 修饰的代码块，我们称之为静态代码块，静态代码块会随着类的加载一块执行，而且他可以随意放，可以存在于该了的任何地方。 局限1、它只能调用 static 变量。2、它只能调用 static 方法。3、不能以任何形式引用 this、super。4、static 变量在定义时必须要进行初始化，且初始化时间要早于非静态变量。 详解内部类特点使用内部类最大的优点就在于它能够非常好的解决多重继承的问题内部类可以用多个实例，每个实例都有自己的状态信息，并且与其他外围对象的信息相互独立。在单个外围类中，可以让多个内部类以不同的方式实现同一个接口，或者继承同一个类。创建内部类对象的时刻并不依赖于外围类对象的创建。内部类提供了更好的封装，除了该外围类，其他类都不能访问。 成员内部类在成员内部类中要注意两点第一：成员内部类中不能存在任何 static 的变量和方法；第二：成员内部类是依附于外围类的，所以只有先创建了外围类才能够创建内部类。 点击查看代码 1234public class OuterClass { public void display(){ System.out.println(\"OuterClass...\"); } public class InnerClass{ public OuterClass getOuterClass(){ return OuterClass.this; } } public static void main(String[] args) { OuterClass outerClass = new OuterClass(); OuterClass.InnerClass innerClass = outerClass.new InnerClass(); innerClass.getOuterClass().display();} 12345## }Output:OuterClass... OuterClassName.this，这样就能够产生一个正确引用外部类的引用了 局部内部类有这样一种内部类，它是嵌套在方法和作用域内的定义在方法里： 点击查看代码 12345678910111213141516171819public class Parcel5 { public Destionation destionation(String str){ class PDestionation implements Destionation{ private String label; private PDestionation(String whereTo){ label = whereTo; } public String readLabel(){ return label; } } return new PDestionation(str); } public static void main(String[] args) { Parcel5 parcel5 = new Parcel5(); Destionation d = parcel5.destionation(\"chenssy\"); }} 定义在作用域内： 点击查看代码 12345678910111213141516public class Parcel6 { private void internalTracking(boolean b){ if(b){ class TrackingSlip{ private String id; TrackingSlip(String s) { id = s; } String getSlip(){ return id; } } TrackingSlip ts = new TrackingSlip(\"chenssy\"); String string = ts.getSlip(); } } public void track(){ internalTracking(true); } public static void main(String[] args) { Parcel6 parcel6 = new Parcel6(); parcel6.track();} 12} 匿名内部类 点击查看代码 1234567891011121314151617181920212223public class OuterClass { public InnerClass getInnerClass(final int num,String str2){ return new InnerClass(){ int number = num + 3; public int getNumber(){ return number; } }; /* 注意：分号不能省 */ } public static void main(String[] args) { OuterClass out = new OuterClass(); InnerClass inner = out.getInnerClass(2, \"chenssy\"); System.out.println(inner.getNumber()); }}interface InnerClass { int getNumber();}----------------Output:5 new 匿名内部类，这个类首先是要存在的。如果我们将那个 InnerClass 接口注释掉，就会出现编译出错。注意 getInnerClass() 方法的形参，第一个形参是用 final 修饰的，而第二个却没有。同时我们也发现第二个形参在匿名内部类中没有使用过，所以当所在方法的形参需要被匿名内部类使用，那么这个形参就必须为 final。匿名内部类是没有构造方法的 静态内部类1、它的创建是不需要依赖于外围类的。2、它不能使用任何外围类的非 static 成员变量和方法。 点击查看代码 123public class OuterClass { private String sex; public static String name = \"chenssy\"; /** *静态内部类 */ static class InnerClass1{ /* 在静态内部类中可以存在静态成员 */ public static String _name1 = \"chenssy_static\"; public void display(){ /* * 静态内部类只能访问外围类的静态成员变量和方法 * 不能访问外围类的非静态成员变量和方法 */ System.out.println(&quot;OutClass name :&quot; + name); }} /** 非静态内部类 /class InnerClass2{ /* 非静态内部类中不能存在静态成员 / public String _name2 = “chenssy_inner”; / 非静态内部类中可以调用外围类的任何成员,不管是静态的还是非静态的 */ public void display(){System.out.println(&quot;OuterClass name：&quot; + name); }} /** @desc 外围类方法 @author chenssy @data 2013-10-25 @return void /public void display(){ /* 外围类访问静态内部类：内部类. / System.out.println(InnerClass1._name1); / 静态内部类 可以直接创建实例不需要依赖于外围类 */ new InnerClass1().display(); /* 非静态内部的创建需要依赖于外围类 / OuterClass.InnerClass2 inner2 = new OuterClass().new InnerClass2(); / 方位非静态内部类的成员需要使用非静态内部类的实例 */ System.out.println(inner2._name2); inner2.display();} public static void main(String[] args) { OuterClass outer = new OuterClass(); outer.display();} 12345678## }Output:chenssy_staticOutClass name :chenssychenssy_innerOuterClass name：chenssy","link":"/java/%E5%9F%BA%E7%A1%80/Java%E6%8F%90%E9%AB%98%E7%AF%87.html"},{"title":"Java提高篇2","text":"[toc] 详解匿名内部类1、匿名内部类中不能存在任何的静态成员变量和静态方法2、匿名内部类不能是抽象的，它必须要实现继承的类或者实现的接口的所有抽象方法3、当所在的方法的形参需要被内部类里面使用时，该形参必须为 final4、我们一般都是利用构造器来完成某个实例的初始化工作的，但是匿名内部类是没有构造器的！那怎么来初始化匿名内部类呢？使用构造代码块！利用构造代码块能够达到为匿名内部类创建一个构造器的效果。 1234567891011121314151617181920212223242526272829303132public class OutClass { public InnerClass getInnerClass(final int age,final String name){ return new InnerClass() { int age_ ; String name_; //构造代码块完成初始化工作 { if(0 &lt; age &amp;&amp; age &lt; 200){ age_ = age; name_ = name; } } public String getName() { return name_; } public int getAge() { return age_; } }; } public static void main(String[] args) { OutClass out = new OutClass(); InnerClass inner_1 = out.getInnerClass(201, \"chenssy\"); System.out.println(inner_1.getName()); InnerClass inner_2 = out.getInnerClass(23, \"chenssy\"); System.out.println(inner_2.getName()); }} 代码块静态代码块主要目的就是对静态属性进行初始化 12345public class Test { static{ System.out.println(\"静态代码块\"); }} 构造代码块12345public class Test { { System.out.println(\"执行构造代码块...\"); }} 静态代码块、构造代码块、构造函数执行顺序1、静态代码块，它是随着类的加载而被执行，只要类被加载了就会执行，而且只会加载一次，主要用于给类进行初始化。2、构造代码块，每创建一个对象时就会执行一次，且优先于构造函数，主要用于初始化不同对象共性的初始化内容和初始化实例环境。3、构造函数，每创建一个对象时就会执行一次。同时构造函数是给特定对象进行初始化，而构造代码是给所有对象进行初始化，作用区域不同。通过上面的分析，他们三者的执行顺序应该为：静态代码块 &gt; 构造代码块 &gt; 构造函数。 equals() 方法总结数组域 : 使用 Arrays.equals在 equals() 中使用 getClass 进行类型判断我们在覆写 equals() 方法时，一般都是推荐使用 getClass 来进行类型判断，不是使用 instanceof 异常(二) - Java 提高篇 - 极客学院Wiki结论一：尽可能的减小 try 块结论二：保证所有资源都被正确释放。充分运用 finally 关键词。结论三：catch 语句应当尽量指定具体的异常类型，而不应该指定涵盖范围太广的 Exception 类。 不要一个 Exception 试图处理所有可能出现的异常。结论四：既然捕获了异常，就要对它进行适当的处理。不要捕获异常之后又把它丢弃，不予理睬。 不要做一个不负责的人。结论五：在异常处理模块中提供适量的错误原因信息，组织错误信息使其易于理解和阅读。 1234567public void test() throws XxxException{ try { //do something:可能抛出异常信息的代码块 } catch (Exception e) { throw new XxxException(e); }} 详解 Java 定时任务一、简介Timer 是一种定时器工具，用来在一个后台线程计划执行指定任务，而 TimerTask 一个抽象类，它的子类代表一个可以被 Timer 计划的任务 Timer 类Timer 类可以保证多个线程可以共享单个 Timer 对象而无需进行外部同步，所以 Timer 类是线程安全的 Timer 提供了 schedule 方法，该方法有多中重载方式来适应不同的情况，如下：schedule(TimerTask task, Date time)：安排在指定的时间执行指定的任务schedule(TimerTask task, Date firstTime, long period) ：安排指定的任务在指定的时间开始进行重复的固定延迟执行schedule(TimerTask task, long delay) ：安排在指定延迟后执行指定的任务。schedule(TimerTask task, long delay, long period) ：安排指定的任务从指定的延迟后开始进行重复的固定延迟执行。 scheduleAtFixedRate(TimerTask task, Date firstTime, long period)：安排指定的任务在指定的时间开始进行重复的固定速率执行。scheduleAtFixedRate(TimerTask task, long delay, long period)：安排指定的任务在指定的延迟后开始进行重复的固定速率执行。 [scheduleWithFixedDelay 和 scheduleAtFixedRate 的区别 - 简书](https://www.jianshu.com/p/2bed76de59a9) ScheduledExecutorService#scheduleAtFixedRate() 指的是“以固定的频率”执行，period（周期）指的是两次成功执行之间的时间 比如，scheduleAtFixedRate(command, 5, 2, second)，第一次开始执行是5s后，假如执行耗时1s，那么下次开始执行是7s后，再下次开始执行是9s后 而 ScheduledExecutorService#scheduleWithFixedDelay() 指的是“以固定的延时”执行，delay（延时）指的是一次执行终止和下一次执行开始之间的延迟scheduleWithFixedDelay(command, 5, 2, second)，第一次开始执行是 5s 后，假如执行耗时 1s，执行完成时间是 6s 后，那么下次开始执行是 8s 后，再下次开始执行是 11s 后 TimerTaskTimerTask 类是一个抽象类，有一个抽象方法 run() 方法还有两个非抽象的方法：boolean cancel()：取消此计时器任务。long scheduledExecutionTime()：返回此任务最近实际执行的安排执行时间 分析 schedule 和 scheduleAtFixedRateschedule 方法侧重保存间隔时间的稳定，而 scheduleAtFixedRate 方法更加侧重于保持执行频率的稳定 三、Timer 的缺陷3.1、Timer 的缺陷如果 TimerTask 抛出未检查的异常，Timer 将会停止整个线程 对于 Timer 的缺陷，我们可以考虑 ScheduledThreadPoolExecutor 来替代。Timer 是基于绝对时间的，对系统时间比较敏感，而 ScheduledThreadPoolExecutor 则是基于相对时间；Timer 是内部是单一线程，而 ScheduledThreadPoolExecutor 内部是个线程池，所以可以支持多个任务并发执行。 3.2、用 ScheduledExecutorService 替代 Timer对于 Timer 的缺陷，我们可以考虑 ScheduledThreadPoolExecutor 来替代。Timer 是基于绝对时间的，对系统时间比较敏感，而 ScheduledThreadPoolExecutor 则是基于相对时间；Timer 是内部是单一线程，而 ScheduledThreadPoolExecutor 内部是个线程池，所以可以支持多个任务并发执行。 旧方案 123456789101112131415161718public class TimerTest03 { Timer timer; public TimerTest03(){ timer = new Timer(); timer.schedule(new TimerTaskTest03(), 1000, 2000); } public static void main(String[] args) { new TimerTest03(); }}public class TimerTaskTest03 extends TimerTask{ @Override public void run() { Date date = new Date(this.scheduledExecutionTime()); System.out.println(\"本次执行该线程的时间为：\" + date); }} 新方案 12345678910111213141516171819202122232425262728293031323334353637public class ScheduledExecutorTest { private ScheduledExecutorService scheduExec; public long start; ScheduledExecutorTest(){ this.scheduExec = Executors.newScheduledThreadPool(2); this.start = System.currentTimeMillis(); } public void timerOne(){ scheduExec.schedule(new Runnable() { public void run() { System.out.println(\"timerOne,the time:\" + (System.currentTimeMillis() - start)); try { Thread.sleep(4000); } catch (InterruptedException e) { e.printStackTrace(); } } },1000,TimeUnit.MILLISECONDS); } public void timerTwo(){ scheduExec.schedule(new Runnable() { public void run() { System.out.println(\"timerTwo,the time:\" + (System.currentTimeMillis() - start)); } },2000,TimeUnit.MILLISECONDS); } public static void main(String[] args) { ScheduledExecutorTest test = new ScheduledExecutorTest(); test.timerOne(); test.timerTwo(); }}","link":"/java/%E5%9F%BA%E7%A1%80/Java%E6%8F%90%E9%AB%98%E7%AF%872.html"},{"title":"bio nio","text":"bio nio JavaGuide/BIO-NIO-AIO.md at master · Snailclimb/JavaGuide同步 异步？阻塞 非阻塞？ bioblocking IOsocket 和 serverSocketsocket.read() socket.accept() socket.write() 都是同步阻塞的服务端为一个客户端建立一个线程改进：线程池实现伪异步IO nionew IO可以理解为non-blocking IO实现了socketChannel serverSocketChannel nio与bio的区别：阻塞与非阻塞3个主要组件：buffer channel selectorbufferchannelchannel是双向的，而bio中的流是单向的 selector单个线程使用selector选择多个channel，已实现减少线程开销的目的 JDK自带的nio很难用，netty是一个很好地替代","link":"/java/%E5%9F%BA%E7%A1%80/bio-nio.html"},{"title":"java并发编程之美","text":"[toc] java并发编程之美","link":"/java/%E5%9F%BA%E7%A1%80/java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E4%B9%8B%E7%BE%8E.html"},{"title":"leetcode 103. Binary Tree Zigzag Level Order Traversal","text":"难度：Middleleetcode九章 题目描述Given a binary tree, return the zigzag level order traversal of its nodes’values. (ie, from left to right, then right to left for the next level andalternate between). For example:Given binary tree [3,9,20,null,null,15,7], 3 / \\ 9 20 / \\ 15 7return its zigzag level order traversal as: [ [3], [20,9], [15,7] ]Tags: Stack, Tree, Breadth-first Search Difficulty: Medium 答案 123456789101112131415161718192021222324252627282930class Solution { public List&lt;List&lt;Integer&gt;&gt; zigzagLevelOrder(TreeNode root) { List&lt;List&lt;Integer&gt;&gt; res = new ArrayList&lt;&gt;(); if(root==null) return res; Deque&lt;TreeNode&gt; lr = new ArrayDeque&lt;&gt;(); Deque&lt;TreeNode&gt; rl = new ArrayDeque&lt;&gt;(); lr.addFirst(root); while(!(lr.isEmpty() &amp;&amp; rl.isEmpty())){ List&lt;Integer&gt; l = new ArrayList&lt;&gt;(); while(!lr.isEmpty()){ TreeNode cur = lr.removeFirst(); l.add(cur.val); if(cur.left!=null) rl.addFirst(cur.left); if(cur.right!=null) rl.addFirst(cur.right); } if(!l.isEmpty()) res.add(l); List&lt;Integer&gt; l1 = new ArrayList&lt;&gt;(); while(!rl.isEmpty()){ TreeNode cur = rl.removeFirst(); l1.add(cur.val); if(cur.right!=null) lr.addFirst(cur.right); if(cur.left!=null) lr.addFirst(cur.left); } if(!l1.isEmpty()) res.add(l1); } return res; }}","link":"/leetcode/leetcode-1**/leetcode-103-Binary-Tree-Zigzag-Level-Order-Traversal.html"},{"title":"nowcoder-examination-java","text":"2019-12-05 06 07static不能用来修饰类除非类是内部类，此时该类作为外部类的成员变量，可以用static来修饰 类方法&lt;-&gt;静态方法静态方法中不能调用对象的变量，因为静态方法在类加载时就初始化，对象变量需要在新建对象后才能使用 对象空间被收集前执行finalize（）方法而不是对象空间被收集之后再执行，如果这样的话执行finalize（）就没有意义了。 关于继承和实现1.类与类之间的关系为继承，只能单继承，但可以多层继承。2.类与接口之间的关系为实现，既可以单实现，也可以多实现。3.接口与接口之间的关系为继承，既可以单继承，也可以多继承。 面向对象方法的多态性是指相同类型的变量、调用同一个方法时呈现出多种不同的行为特征 Hashtable 和 HashMap 的区别是HashMap 是内部基于哈希表实现，该类继承AbstractMap，实现Map接口Hashtable 线程安全的，而 HashMap 是线程不安全的Properties 类 继承了 Hashtable 类，而 Hashtable 类则继承Dictionary 类HashMap允许将 null 作为一个 entry 的 key 或者 value，而 Hashtable 不允许。 Hashtable：（1）Hashtable 是一个散列表，它存储的内容是键值对(key-value)映射。（2）Hashtable 的函数都是同步的，这意味着它是线程安全的。它的key、value都不可以为null。（3）HashTable直接使用对象的hashCode。HashMap：（1）由数组+链表组成的，基于哈希表的Map实现，数组是HashMap的主体，链表则是主要为了解决哈希冲突而存在的。（2）不是线程安全的，HashMap可以接受为null的键(key)和值(value)。（3）HashMap重新计算hash值 java中将ISO8859-1字符串转成GB2312编码，语句为 ？new String(“ISO8859-1”.getBytes(“ISO8859-1”),”GB2312”) java如何接受request域中的参数？request.getParameter() JAVA的跨平台特性表述为“一次编译，到处运行”Java的跨平台特性是因为JVM的存在， 它可以执行.class字节码文件，而不是.java源代码 下列关于JAVA多线程的叙述正确的是（）正确答案: B C 你的答案: A B D (错误)调用start()方法和run()都可以启动一个线程CyclicBarrier和CountDownLatch都可以让一组线程等待其他线程Callable类的call()方法可以返回值和抛出异常新建的线程调用start()方法就能立即进行运行状态 A，start是开启线程，run是线程的执行体，run是线程执行的入口。B，CyclicBarrier和CountDownLatch都可以让一组线程等待其他线程。前者是让一组线程相互等待到某一个状态再执行。后者是一个线程等待其他线程结束再执行。C，Callable中的call比Runnable中的run厉害就厉害在有返回值和可以抛出异常。同时这个返回值和线程池一起用的时候可以返回一个异步对象Future。D，start是把线程从new变成了runnable 2019-12-04下面的程序输出的结果是( )123456789101112public class A implements B{public static void main(String args[]){ int i; A a1=new A(); i =a1.k; System.out.println(\"i=\"+i); }}interface B{ int k=10；} 正确答案: i=10 在接口里面的变量默认都是public static final 的，它们是公共的,静态的,最终的常量.相当于全局常量，可以直接省略修饰符。实现类可以直接访问接口中的变量 以下叙述正确的是正确答案: D 你的答案: B (错误)实例方法可直接调用超类的实例方法实例方法可直接调用超类的类方法、实例方法可直接调用子类的实例方法实例方法可直接调用本类的实例方法 A错误，类的实例方法是与该类的实例对象相关联的，不能直接调用，只能通过创建超类的一个实例对象，再进行调用B错误，当父类的类方法定义为private时，对子类是不可见的，所以子类无法调用C错误，子类具体的实例方法对父类是不可见的，所以无法直接调用， 只能通过创建子类的一个实例对象，再进行调用D正确，实例方法可以调用自己类中的实例方法 下面代码的执行结果是 :12345678910111213class Chinese{ private static Chinese objref =new Chinese(); private Chinese(){} public static Chinese getInstance() { return objref; }}public class TestChinese { public static void main(String [] args) { Chinese obj1 = Chinese.getInstance(); Chinese obj2 = Chinese.getInstance(); System.out.println(obj1 == obj2);}} 正确答案: true 饿汉式单例模式，在类创建时，就已经实例化完成，在调用Chinese.getInstance()时，直接获取静态对象 JavaWEB中有一个类，当会话种邦定了属性或者删除了属性时，他会得到通知，这个类是：HttpSessionAttributeListener 以下哪几种方式可用来实现线程间通知和唤醒：( )12Object.wait/notify/notifyAllCondition.await/signal/signalAll wait()、notify()和notifyAll()是 Object类 中的方法 ；Condition是在java 1.5中才出现的，它用来替代传统的Object的wait()、notify()实现线程间的协作，相比使用Object的wait()、 notify()，使用Condition1的await()、signal()这种方式实现线程间协作更加安全和高效。 2019-12-03ArrayList是可改变大小的数组，而LinkedList是双向链接串列 命令javac-d参数的用途是？指定编译后类层次的根目录 -d destination 目的地-s source 起源地javac -d 指定放置生成的类文件的位置javac -s 指定放置生成的源文件的位置 以下代码执行后输出结果为（ ）public class Test { 123456789101112 public static void main(String[] args) { System.out.println(\"return value of getValue(): \" + getValue()); } public static int getValue() { try { return 0; } finally { return 1; } }} 当try，catch和finally中都有return时，先执行try中return，并暂存，再执行finnally中并返回最新的值 在jdk1.5之后，下列 java 程序输出结果为__。1234int i=0;Integer j = new Integer(0);System.out.println(i==j);System.out.println(j.equals(i)); true,true 1、基本型和基本型封装型进行“==”运算符的比较，基本型封装型将会自动拆箱变为基本型后再进行比较，因此Integer(0)会自动拆箱为int类型再进行比较，显然返回true；2、基本型封装类型调用equals(),但是参数是基本类型，这时候，先会进行自动装箱，基本型转换为其封装类型，再进行3中的比较。 说明输出结果。123456789101112ackage test;import java.util.Date; public class SuperTest extends Date{ private static final long serialVersionUID = 1L; private void test(){ System.out.println(super.getClass().getName()); } public static void main(String[]args){ new SuperTest().test(); } } test.SuperTest super.getClass().getName()返回的是test.SuperTest，与Date类无关要返回Date类的名字需要写super.getClass().getSuperclass() 以下哪些类是线程安全的（）正确答案: A D E 你的答案: 空 (错误)VectorHashMapArrayListStringBufferProperties A，Vector相当于一个线程安全的ListB，HashMap是非线程安全的，其对应的线程安全类是HashTableC，Arraylist是非线程安全的，其对应的线程安全类是VectorD，StringBuffer是线程安全的，相当于一个线程安全的StringBuilderE，Properties实现了Map接口，是线程安全的 2019-12-01javac的作用是（ ）。将源程序编译成字节码 12javac helloworld.javajava helloworld HashMap的数据结构是怎样的数组+链表 JDK8以后，HashMap的数据结构是数组+链表+红黑树HashMap内部包含了一个默认大小为 16 Entry 类型的数组 table,其中每个Entry 是一个链表，当链表长度大于等于 8 时会将链表转换为红黑树。HashMap 由数组+链表组成的，数组是 HashMap 的主体，链表则是主要为了解决哈希冲突而存在的 下面关于垃圾收集的描述哪个是错误的？a 使用垃圾收集的程序不需要明确释放对象b 现代垃圾收集能够处理循环引用问题c 垃圾收集能提高程序员效率d 使用垃圾收集的语言没有内在泄漏问题也会有内存泄露问题，例如访问资源文件，流不关闭，访问数据库等连接不关闭 重载的方法就是形参列表的不同，和返回值无关用户不能调用构造方法，只能通过new关键字自动调用。【X】 在类内部可以用户可以使用关键字this.构造方法名()调用（参数决定调用的是本类对应的构造方法）在子类中用户可以通过关键字super.父类构造方法名()调用（参数决定调用的是父类对应的构造方法。）反射机制对于任意一个类，都能够知道这个类的所有属性和方法，包括类的构造方法。 下面有关JSP内置对象的描述，说法错误的是？正确答案: C 你的答案: 空 (错误)session对象：session对象指的是客户端与服务器的一次会话，从客户连到服务器的一个WebApplication开始，直到客户端与服务器断开连接为止request对象：客户端的请求信息被封装在request对象中，通过它才能了解到客户的需求，然后做出响应application对象：多个一个application对象实现了用户间数据的共享，可存放全局变量response对象：response对象包含了响应客户请求的有关信息 volatile能保证数据的可见性，但不能完全保证数据的原子性，synchronized即保证了数据的可见性也保证了原子性java程序内存泄露的最直接表现是（ ）正确答案: C 你的答案: 空 (错误)频繁FullGcjvm崩溃程序抛内存控制的Exceptionjava进程异常消失 java是自动管理内存的，通常情况下程序运行到稳定状态，内存大小也达到一个 基本稳定的值但是内存泄露导致Gc不能回收泄露的垃圾，内存不断变大.最终超出内存界限，抛出OutOfMemoryExpection 下面有关webservice的描述，错误的是？正确答案: B 你的答案: 空 (错误)Webservice是跨平台，跨语言的远程调用技术Webservice通信机制实质就是json数据交换Webservice采用了soap协议（简单对象协议）进行通信WSDL是用于描述 Web Services 以及如何对它们进行访问 Web service顾名思义是基于web的服务，它是一种跨平台，跨语言的服务。我们可以这样理解它，比如说我们可以调用互联网上查询天气信息的web服务，把它嵌入到我们的B/S程序中，当用户从我们的网点看到天气信息时，会认为我们为他提供很多的服务，但其实我们什么也没做，只是简单的调用了一下服务器上的一端代码而已。Web service 可以将你的服务发布到互联网上让别人去调用，也可以调用别人发布的web service，和使用自己的代码一样。它是采用XML传输格式化的数据，它的通信协议是SOAP(简单对象访问协议). java用（）机制实现了进程之间的同步执行正确答案: A 你的答案: C (错误)监视器虚拟机多个CPU异步调用 首先jvm中没有进程的概念 ，但是jvm中的线程映射为操作系统中的进程，对应关系为1：1。那这道题的问的就是jvm中线程如何异步执行 。 在jvm中 是使用监视器锁来实现不同线程的异步执行， 在语法的表现就是synchronized。 关于访问权限说法正确的是？类定义前面可以修饰public,protected和private内部类前面可以修饰public,protected和private局部内部类前面可以修饰public,protected和private以上说法都不正确 对于外部类来说，只有两种修饰，public和默认（default），因为外部类放在包中，只有两种可能，包可见和包不可见。在Java中，可以将一个类定义在另一个类里面或者一个方法里边，这样的类称为内部类，广泛意义上的内部类一般包括四种：成员内部类，局部内部类，匿名内部类，静态内部类 。1.成员内部类（1）该类像是外部类的一个成员，可以无条件的访问外部类的所有成员属性和成员方法（包括private成员和静态成员）；（2）成员内部类拥有与外部类同名的成员变量时，会发生隐藏现象，即默认情况下访问的是成员内部类中的成员。如果要访问外部类中的成员，需要以下形式访问：【外部类.this.成员变量 或 外部类.this.成员方法】；（3）在外部类中如果要访问成员内部类的成员，必须先创建一个成员内部类的对象，再通过指向这个对象的引用来访问；（4）成员内部类是依附外部类而存在的，也就是说，如果要创建成员内部类的对象，前提是必须存在一个外部类的对象；（5）内部类可以拥有private访问权限、protected访问权限、public访问权限及包访问权限。如果成员内部类用private修饰，则只能在外部类的内部访问；如果用public修饰，则任何地方都能访问；如果用protected修饰，则只能在同一个包下或者继承外部类的情况下访问；如果是默认访问权限，则只能在同一个包下访问。外部类只能被public和包访问两种权限修饰。2.局部内部类（1）局部内部类是定义在一个方法或者一个作用域里面的类，它和成员内部类的区别在于局部内部类的访问仅限于方法内或者该作用域内；（2）局部内部类就像是方法里面的一个局部变量一样，是不能有public、protected、private以及static修饰符的。3.匿名内部类（1）一般使用匿名内部类的方法来编写事件监听代码；（2）匿名内部类是不能有访问修饰符和static修饰符的；（3）匿名内部类是唯一一种没有构造器的类；（4）匿名内部类用于继承其他类或是实现接口，并不需要增加额外的方法，只是对继承方法的实现或是重写。4.内部静态类（1）静态内部类是不需要依赖于外部类的，这点和类的静态成员属性有点类似；（2）不能使用外部类的非static成员变量或者方法。 throw thorws1、throws出现在方法头，throw出现在方法体 2、throws表示出现异常的一种可能性，并不一定会发生异常；throw则是抛出了异常，执行throw则一定抛出了某种异常。 3、两者都是消极的异常处理方式，只是抛出或者可能抛出异常，是不会由函数处理，真正的处理异常由它的上层调用处理。 以下可以正确获取结果集的有正确答案: A D 你的答案: 空 (错误) 12345678910Statement sta=con.createStatement();ResultSet rst=sta.executeQuery(“select * from book”);Statement sta=con.createStatement(“select * from book”); ResultSet rst=sta.executeQuery();PreparedStatement pst=con.prepareStatement();ResultSet rst=pst.executeQuery(“select * from book”);PreparedStatement pst=con.prepareStatement(“select * from book”);ResultSet rst=pst.executeQuery(); 创建Statement是不传参的，PreparedStatement是需要传入sql语句1、PreparedStatement 继承 Statement，PreparedStatement 实例包含已编译的 SQL 语句， 所以其执行速度要快于 Statement 对象。2、作为 Statement 的子类，PreparedStatement 继承了 Statement 的所有功能。三种方法execute、 executeQuery 和 executeUpdate 已被更改以使之不再需要参数3、PreparedStatement尽最大可能提高性能. 最重要的一点是极大地提高了安全性. final、finally和finalize的区别中，下述说法正确的有？正确答案: A B 你的答案: A B C D (错误)final用于声明属性，方法和类，分别表示属性不可变，方法不可覆盖，类不可继承。finally是异常处理语句结构的一部分，表示总是执行。finalize是Object类的一个方法，在垃圾收集器执行的时候会调用被回收对象的此方法，可以覆盖此方法提供垃圾收集时的其他资源的回收，例如关闭文件等。引用变量被final修饰之后，不能再指向其他对象，它指向的对象的内容也是不可变的。 A，D考的一个知识点，final修饰变量，变量的引用（也就是指向的地址）不可变，但是引用的内容可以变（地址中的内容可变）。B，finally表示总是执行。但是其实finally也有不执行的时候，但是这个题不要扣字眼。 在try中调用System.exit(0)，强制退出了程序，finally块不执行。 在进入try块前，出现了异常，finally块不执行。C，finalize方法，这个选项错就错在，这个方法一个对象只能执行一次，只能在第一次进入被回收的队列，而且对象所属于的类重写了finalize方法才会被执行。第二次进入回收队列的时候，不会再执行其finalize方法，而是直接被二次标记，在下一次GC的时候被GC。 放一张图吧","link":"/java/%E5%9F%BA%E7%A1%80/nowcoder-examination-java.html"},{"title":"leetcode 105. Construct Binary Tree from Preorder and Inorder Traversal","text":"难度：Middleleetcode九章 题目描述Given preorder and inorder traversal of a tree, construct the binary tree. Note:You may assume that duplicates do not exist in the tree. For example, given preorder = [3,9,20,15,7] inorder = [9,3,15,20,7]Return the following binary tree: 3 / \\ 9 20 / \\ 15 7Tags: Array, Tree, Depth-first Search Difficulty: Medium 答案 1234567891011121314151617181920212223242526272829303132class Solution { public TreeNode buildTree(int[] preorder, int[] inorder) { if(preorder.length&lt;1) return null; return helper(preorder, inorder, 0, preorder.length-1, 0, inorder.length-1); } private TreeNode helper(int[] preorder, int[] inorder, int prestart, int preend, int instart, int inend){ TreeNode root = new TreeNode(preorder[prestart]); if(prestart==preend){ return root; } // root 在inorder的index int index = instart; for(; index&lt;=inend; index++){ if(inorder[index]==root.val){ break; } } if(index==instart){ // 没有左节点 root.left = null; root.right = helper(preorder, inorder, prestart+1, preend, instart+1, inend); }else if(index==inend){ root.right = null; root.left = helper(preorder, inorder, prestart+1, preend, instart, inend-1); }else{ root.left = helper(preorder, inorder, prestart+1, prestart+index-instart, instart, index-1); root.right = helper(preorder, inorder, prestart+index-instart+1, preend, index+1, inend); } return root; }}","link":"/leetcode/leetcode-1**/leetcode-105-Construct-Binary-Tree-from-Preorder-and-Inorder-Traversal.html"},{"title":"leetcode 106. Construct Binary Tree from Inorder and Postorder Traversal","text":"难度：Middleleetcode九章 题目描述Given inorder and postorder traversal of a tree, construct the binary tree. Note:You may assume that duplicates do not exist in the tree. For example, given inorder = [9,3,15,20,7] postorder = [9,15,7,20,3]Return the following binary tree: 3 / \\ 9 20 / \\ 15 7Tags: Array, Tree, Depth-first Search Difficulty: Medium 答案 1234567891011121314151617181920212223242526272829303132class Solution { public TreeNode buildTree(int[] inorder, int[] postorder) { if(postorder.length&lt;1) return null; return helper(inorder, postorder, 0, inorder.length-1, 0, postorder.length-1); } private TreeNode helper(int[] inorder, int[] postorder, int instart, int inend, int poststart, int postend){ TreeNode root = new TreeNode(postorder[postend]); if(instart==inend){ return root; } // root 在inorder的index int index = instart; for(; index&lt;=inend; index++){ if(inorder[index]==root.val){ break; } } if(index==instart){ // 没有左节点 root.left = null; root.right = helper(inorder, postorder, instart+1, inend, poststart, postend-1); }else if(index==inend){ root.right = null; root.left = helper(inorder, postorder, instart, inend-1, poststart, postend-1); }else{ root.left = helper(inorder, postorder, instart, index-1, poststart, poststart+index-instart-1); root.right = helper(inorder, postorder, index+1, inend, poststart+index-instart, postend-1); } return root; }}","link":"/leetcode/leetcode-1**/leetcode-106-Construct-Binary-Tree-from-Inorder-and-Postorder-Traversal.html"},{"title":"leetcode 107. Binary Tree Level Order Traversal II","text":"难度：Easyleetcode九章 题目描述Given a binary tree, return the bottom-up level order traversal of itsnodes’ values. (ie, from left to right, level by level from leaf to root). For example:Given binary tree [3,9,20,null,null,15,7], 3 / \\ 9 20 / \\ 15 7return its bottom-up level order traversal as: [ [15,7], [9,20], [3] ]Tags: Tree, Breadth-first Search Difficulty: Easy 答案 123456789101112131415161718192021class Solution { public List&lt;List&lt;Integer&gt;&gt; levelOrderBottom(TreeNode root) { List&lt;List&lt;Integer&gt;&gt; res = new ArrayList&lt;&gt;(); if(root==null) return res; Deque&lt;TreeNode&gt; deque = new ArrayDeque&lt;&gt;(); deque.add(root); while(!deque.isEmpty()){ List&lt;Integer&gt; l = new ArrayList&lt;&gt;(); int size = deque.size(); for(int i=0; i&lt;size; i++){ TreeNode cur = deque.removeFirst(); l.add(cur.val); if(cur.left!=null) deque.add(cur.left); if(cur.right!=null) deque.add(cur.right); } res.add(l); } Collections.reverse(res); return res; }}","link":"/leetcode/leetcode-1**/leetcode-107-Binary-Tree-Level-Order-Traversal-II.html"},{"title":"leetcode 108. Convert Sorted Array to Binary Search Tree","text":"难度：Easyleetcode九章 题目描述Given an array where elements are sorted in ascending order, convert it to aheight balanced BST. For this problem, a height-balanced binary tree is defined as a binary tree inwhich the depth of the two subtrees of every node never differ by more than1. Example: Given the sorted array: [-10,-3,0,5,9], One possible answer is: [0,-3,9,-10,null,5], which represents the following height balanced BST: 0 / \\ -3 9 / / -10 5Tags: Tree, Depth-first Search Difficulty: Easy 答案 1234567891011121314class Solution { public TreeNode sortedArrayToBST(int[] nums) { if(nums==null || nums.length&lt;1) return null; return helper(nums, 0, nums.length-1); } private TreeNode helper(int[] nums, int start, int end){ if(start&gt;end) return null; TreeNode root = new TreeNode(nums[start+(end-start)/2]); root.left = helper(nums, start, start+(end-start)/2-1); root.right = helper(nums, start+(end-start)/2+1, end); return root; }} 123456789101112class Solution: def sortedArrayToBST(self, nums: List[int]) -&gt; TreeNode: def dfs(start, end): if end&lt;start: return None mid = (start+end)//2 root = TreeNode(nums[mid]) root.left = dfs(start, mid-1) root.right = dfs(mid+1, end) return root return dfs(0, len(nums)-1)","link":"/leetcode/leetcode-1**/leetcode-108-Convert-Sorted-Array-to-Binary-Search-Tree.html"},{"title":"leetcode 110. Balanced Binary Tree","text":"难度：Easyleetcode九章 题目描述Given a binary tree, determine if it is height-balanced. For this problem, a height-balanced binary tree is defined as: a binary tree in which the left and right subtrees of every node differ inheight by no more than 1. Example 1: Given the following tree [3,9,20,null,null,15,7]: 3 / \\ 9 20 / \\ 15 7 Return true. Example 2: Given the following tree [1,2,2,3,3,null,null,4,4]: 1 / \\ 2 2 / \\ 3 3 / \\ 4 4 Return false. Tags: Tree, Depth-first Search Difficulty: Easy 答案 123456789101112class Solution { public boolean isBalanced(TreeNode root) { return maxDepth(root)!=-1; } private int maxDepth(TreeNode root){ if(root==null) return 0; int left = maxDepth(root.left); int right = maxDepth(root.right); if(Math.abs(left-right)&gt;1 || left==-1 || right==-1) return -1; return Math.max(left, right)+1; }}","link":"/leetcode/leetcode-1**/leetcode-110-Balanced-Binary-Tree.html"},{"title":"leetcode 111. Minimum Depth of Binary Tree","text":"难度：Easyleetcode九章 题目描述Given a binary tree, find its minimum depth. The minimum depth is the number of nodes along the shortest path from the rootnode down to the nearest leaf node. Note: A leaf is a node with no children. Example: Given binary tree [3,9,20,null,null,15,7], 3 / \\ 9 20 / \\ 15 7return its minimum depth = 2. Tags: Tree, Depth-first Search, Breadth-first Search Difficulty: Easy 答案 12345678910class Solution { public int minDepth(TreeNode root) { if(root==null) return 0; int left = minDepth(root.left); int right = minDepth(root.right); // left 或 right 为0 表示 有1边没有节点，只能选另一边，然后加一 // 就是 left+right+1 return (left==0 || right==0)?left+right+1:Math.min(left, right)+1; }}","link":"/leetcode/leetcode-1**/leetcode-111-Minimum-Depth-of-Binary-Tree.html"},{"title":"leetcode 112. Path Sum","text":"难度：Easyleetcode九章 题目描述Given a binary tree and a sum, determine if the tree has a root-to-leaf pathsuch that adding up all the values along the path equals the given sum. Note: A leaf is a node with no children. Example: Given the below binary tree and sum = 22, **5** **/** \\ **4** 8 **/** / \\ **11** 13 4 / **\\** \\ 7 **2** 1return true, as there exist a root-to-leaf path 5-&gt;4-&gt;11-&gt;2 which sum is 22. Tags: Tree, Depth-first Search Difficulty: Easy 答案 正确代码： 12345678class Solution { public boolean hasPathSum(TreeNode root, int sum) { if(root==null) return false; if(root.left==null &amp;&amp; root.right==null &amp;&amp; root.val==sum) return true; return hasPathSum(root.left, sum-root.val) || hasPathSum(root.right, sum-root.val); }} 烂代码： 1234567891011121314151617181920# Definition for a binary tree node.# class TreeNode:# def __init__(self, x):# self.val = x# self.left = None# self.right = Noneclass Solution: def hasPathSum(self, root: TreeNode, target: int) -&gt; bool: if not root: return False def helper(root, cursum): cursum += root.val if not root.left and not root.right: print(cursum) return cursum==target # if else 需要用括号括起来否则不生效 return (helper(root.left, cursum) if root.left else False) \\ or (helper(root.right, cursum) if root.right else False) return helper(root, 0)","link":"/leetcode/leetcode-1**/leetcode-112-Path-Sum.html"},{"title":"leetcode 113. Path Sum II","text":"难度：Middleleetcode九章 题目描述Given a binary tree and a sum, find all root-to-leaf paths where each path’ssum equals the given sum. Note: A leaf is a node with no children. Example: Given the below binary tree and sum = 22, **5** **/ \\** **4 8** **/** / **\\** **11** 13 **4** / **\\** **/** \\ 7 **2** **5** 1Return: [ [5,4,11,2], [5,8,4,5] ]Tags: Tree, Depth-first Search Difficulty: Medium 答案 12345678910111213141516171819class Solution { public List&lt;List&lt;Integer&gt;&gt; pathSum(TreeNode root, int sum) { List&lt;List&lt;Integer&gt;&gt; res = new ArrayList&lt;&gt;(); if(root==null) return res; helper(root, sum, res, null); return res; } private void helper(TreeNode root, int sum, List&lt;List&lt;Integer&gt;&gt; res, List&lt;Integer&gt; curr){ List&lt;Integer&gt; cur; if(curr==null) cur = new ArrayList&lt;Integer&gt;(); else cur = new ArrayList&lt;Integer&gt;(curr); cur.add(root.val); if(root.left==null &amp;&amp; root.right==null &amp;&amp; root.val==sum) res.add(cur); sum -= root.val; if(root.left!=null) helper(root.left, sum, res, cur); if(root.right!=null) helper(root.right, sum, res, cur); }} 12345678910111213141516171819202122# Definition for a binary tree node.# class TreeNode:# def __init__(self, x):# self.val = x# self.left = None# self.right = Noneclass Solution: def pathSum(self, root: TreeNode, target: int) -&gt; List[List[int]]: res, l = [], [] if not root: return [] def helper(root, cursum): cursum += root.val l.append(root.val) if not root.left and not root.right and cursum==target: res.append(l.copy()) if root.left: helper(root.left, cursum) if root.right: helper(root.right, cursum) l.pop() helper(root, 0) return res","link":"/leetcode/leetcode-1**/leetcode-113-Path-Sum-II.html"},{"title":"leetcode 114. Flatten Binary Tree to Linked List","text":"难度：Middleleetcode九章 题目描述Given a binary tree, flatten it to a linked list in-place. For example, given the following tree: 1 / \\ 2 5 / \\ \\ 3 4 6The flattened tree should look like: 1 \\ 2 \\ 3 \\ 4 \\ 5 \\ 6Tags: Tree, Depth-first Search Difficulty: Medium 答案 1234567891011121314151617181920212223242526class Solution { public void flatten(TreeNode root) { if(root==null || (root.left==null &amp;&amp; root.right==null)) return; if(root.left!=null) { flatten(root.left); if(root.right==null){ root.right = root.left; } else{ TreeNode temp = root.right; root.right = root.left; // 左边的叶子节点 TreeNode leftBottom = root.left; while(leftBottom.right!=null){ leftBottom = leftBottom.right; } leftBottom.right = temp; flatten(temp); } // 记得将左树清空 root.left = null; }else{ flatten(root.right); } }}","link":"/leetcode/leetcode-1**/leetcode-114-Flatten-Binary-Tree-to-Linked-List.html"},{"title":"leetcode 1143. Longest Common Subsequence","text":"难度：Middleleetcode九章 题目描述Given two strings text1 and text2, return the length of their longestcommon subsequence. A subsequence of a string is a new string generated from the original stringwith some characters(can be none) deleted without changing the relative orderof the remaining characters. (eg, “ace” is a subsequence of “abcde” while“aec” is not). A common subsequence of two strings is a subsequence that iscommon to both strings. If there is no common subsequence, return 0. Example 1: Input: text1 = “abcde”, text2 = “ace” Output: 3 Explanation: The longest common subsequence is “ace” and its length is 3. Example 2: Input: text1 = “abc”, text2 = “abc” Output: 3 Explanation: The longest common subsequence is “abc” and its length is 3. Example 3: Input: text1 = “abc”, text2 = “def” Output: 0 Explanation: There is no such common subsequence, so the result is 0. Constraints: 1 &lt;= text1.length &lt;= 1000 1 &lt;= text2.length &lt;= 1000 The input strings consist of lowercase English characters only. Tags: Dynamic Programming Difficulty: Medium 答案超详细，动态规划解法 1234567891011121314151617181920212223242526class Solution { public int longestCommonSubsequence(String s1, String s2) { if(s1==null || s1.length()==0) return 0; if(s2==null || s2.length()==0) return 0; int n = s1.length(); int m = s2.length(); // i=0 j=0 是为了防止越界 int[][] dp = new int[n+1][m+1]; // 处理边界 // i=j=1 dp[1][1] = s1.charAt(0)==s2.charAt(0)?1:0; for(int i=1; i&lt;=n; i++) { for(int j=1; j&lt;=m; j++) { //如果末端相同 if(s1.charAt(i-1)==s2.charAt(j-1)){ dp[i][j] = dp[i-1][j-1]+1; }else{ //如果末端不同 dp[i][j] = Math.max(dp[i-1][j], dp[i][j-1]); } } } return dp[n][m]; }} 1234567891011121314class Solution: def longestCommonSubsequence(self, text1: str, text2: str) -&gt; int: m, n = len(text1), len(text2) dp = [0]*(m+1) for i in range(1, n+1): pre = 0 # pre dp[j-1] for j in range(1, m+1): nextpre = dp[j] if text2[i-1]==text1[j-1]: dp[j] = pre + 1 else: dp[j] = max(dp[j], dp[j-1]) pre = nextpre return dp[-1]","link":"/leetcode/leetcode-1**/leetcode-1143-Longest-Common-Subsequence.html"},{"title":"leetcode 116. Populating Next Right Pointers in Each Node","text":"难度：Middleleetcode九章 题目描述You are given a perfect binary tree where all leaves are on the samelevel, and every parent has two children. The binary tree has the followingdefinition: struct Node { int val; Node *left; Node *right; Node *next; } Populate each next pointer to point to its next right node. If there is nonext right node, the next pointer should be set to NULL. Initially, all next pointers are set to NULL. Follow up: You may only use constant extra space. Recursive approach is fine, you may assume implicit stack space does not count as extra space for this problem. Example 1: Input: root = [1,2,3,4,5,6,7] Output: [1,#,2,3,#,4,5,6,7,#] Explanation: Given the above perfect binary tree (Figure A), your function should populate each next pointer to point to its next right node, just like in Figure B. The serialized output is in level order as connected by the next pointers, with ‘#’ signifying the end of each level. Constraints: The number of nodes in the given tree is less than 4096. -1000 &lt;= node.val &lt;= 1000 Tags: Tree, Depth-first Search Difficulty: Medium 答案 123456789101112class Solution { public Node connect(Node root) { if(root==null || root.left==null) return root; root.left.next = root.right; if(root.next!=null) { root.right.next = root.next.left; } connect(root.left); connect(root.right); return root; }}","link":"/leetcode/leetcode-1**/leetcode-116-Populating-Next-Right-Pointers-in-Each-Node-1.html"},{"title":"leetcode 128. Longest Consecutive Sequence","text":"难度：Hardleetcode九章 题目描述Given an unsorted array of integers, find the length of the longestconsecutive elements sequence. Your algorithm should run in O( n ) complexity. Example: Input: [100, 4, 200, 1, 3, 2] Output: 4 Explanation: The longest consecutive elements sequence is [1, 2, 3, 4]. Therefore its length is 4.Tags: Array, Union Find Difficulty: Hard 答案 12345678910111213141516171819202122class Solution { public int longestConsecutive(int[] nums) { Set&lt;Integer&gt; set = new HashSet&lt;&gt;(); for(int num: nums){ set.add(num); } int res = 0; for(int num: nums){ // 只考虑连续序列起始数字 if(set.contains(num-1)){ continue; } int count = 0; int cur = num; while(set.contains(cur++)) { count++; } res = Math.max(res, count); } return res; }}","link":"/leetcode/leetcode-1**/leetcode-128-Longest-Consecutive-Sequence.html"},{"title":"leetcode 131. Palindrome Partitioning","text":"难度：Middleleetcode九章 题目描述Given a string s , partition s such that every substring of the partitionis a palindrome. Return all possible palindrome partitioning of s. Example: Input: &quot;aab&quot; Output: [ [&quot;aa&quot;,&quot;b&quot;], [&quot;a&quot;,&quot;a&quot;,&quot;b&quot;] ]Tags: Backtracking Difficulty: Medium 答案 1234567891011121314151617181920212223242526class Solution { public List&lt;List&lt;String&gt;&gt; partition(String s) { List&lt;List&lt;String&gt;&gt; res = new ArrayList&lt;&gt;(); if(s==null || s.length()==0) return res; int n = s.length(); boolean[][] dp = new boolean[n][n]; for(int j=0; j&lt;n; j++) { for(int i=0; i&lt;=j; i++) { dp[i][j] = s.charAt(i)==s.charAt(j) &amp;&amp; (j-i&lt;=2 || dp[i+1][j-1]); } } System.out.println(Arrays.deepToString(dp)); dfs(res, dp, 0, n, s, new ArrayList&lt;String&gt;()); return res; } private void dfs(List&lt;List&lt;String&gt;&gt; res, boolean[][] dp, int i, int n, String s, ArrayList&lt;String&gt; tmp) { if(i==n) res.add(new ArrayList&lt;&gt;(tmp)); for(int j=i; j&lt;n; j++) { if(dp[i][j]){ tmp.add(s.substring(i, j+1)); dfs(res, dp, j+1, n, s, tmp); tmp.remove(tmp.size()-1); } } }}","link":"/leetcode/leetcode-1**/leetcode-131-Palindrome-Partitioning.html"},{"title":"leetcode 134. Gas Station","text":"难度：Middleleetcode九章 题目描述There are N gas stations along a circular route, where the amount of gas atstation i is gas[i]. You have a car with an unlimited gas tank and it costs cost[i] of gas totravel from station i to its next station ( i +1). You begin the journeywith an empty tank at one of the gas stations. Return the starting gas station’s index if you can travel around the circuitonce in the clockwise direction, otherwise return -1. Note: If there exists a solution, it is guaranteed to be unique. Both input arrays are non-empty and have the same length. Each element in the input arrays is a non-negative integer. Example 1: Input: gas = [1,2,3,4,5] cost = [3,4,5,1,2] Output: 3 Explanation: Start at station 3 (index 3) and fill up with 4 unit of gas. Your tank = 0 + 4 = 4 Travel to station 4. Your tank = 4 - 1 + 5 = 8 Travel to station 0. Your tank = 8 - 2 + 1 = 7 Travel to station 1. Your tank = 7 - 3 + 2 = 6 Travel to station 2. Your tank = 6 - 4 + 3 = 5 Travel to station 3. The cost is 5. Your gas is just enough to travel back to station 3. Therefore, return 3 as the starting index.Example 2: Input: gas = [2,3,4] cost = [3,4,3] Output: -1 Explanation: You can&apos;t start at station 0 or 1, as there is not enough gas to travel to the next station. Let&apos;s start at station 2 and fill up with 4 unit of gas. Your tank = 0 + 4 = 4 Travel to station 0. Your tank = 4 - 3 + 2 = 3 Travel to station 1. Your tank = 3 - 3 + 3 = 3 You cannot travel back to station 2, as it requires 4 unit of gas but you only have 3. Therefore, you can&apos;t travel around the circuit once no matter where you start.Tags: Greedy Difficulty: Medium 答案 123456789101112131415161718192021222324252627282930313233343536373839404142class Solution { public int canCompleteCircuit0(int[] gas, int[] cost) { // Runtime: 157 ms, faster than 5.13% // Memory Usage: 37.8 MB, less than 52.94% int n = gas.length; int sum = 0; for(int i = 0; i&lt;n; i++) { gas[i] -= cost[i]; sum += gas[i]; } if(sum&lt;0) return -1; for(int i = 0; i&lt;n; i++) { if(helper(gas, i, i, 0, n)) return i; } return -1; } private boolean helper(int[] gas, int start, int index, int remain, int len){ remain += gas[index]; if(remain&lt;0) return false; index = (index+1)%len; if(index==start) return true; return helper(gas, start, index, remain, len); } public int canCompleteCircuit(int[] gas, int[] cost) { // 一旦遇到第一个无法到达的点 i，直接更换起始点为 i+1。 // 中间的[1,i-1]一定不是起始点 // https://leetcode-cn.com/problems/gas-station/solution/java-1ms-xiang-xi-shuo-ming-qi-shi-dian-xuan-qu-gu/ int start = 0, sum = 0, sumFromStart = 0; for(int i=0;i&lt;gas.length; i++) { sum += gas[i]-cost[i]; sumFromStart += gas[i]-cost[i]; if(sumFromStart&lt;0) { start = i+1; sumFromStart = 0; } } return sum&gt;=0?start:-1; }}","link":"/leetcode/leetcode-1**/leetcode-134-Gas-Station.html"},{"title":"leetcode 141. Linked List Cycle","text":"难度：Easyleetcode九章 题目描述Given a linked list, determine if it has a cycle in it. To represent a cycle in the given linked list, we use an integer pos whichrepresents the position (0-indexed) in the linked list where tail connects to.If pos is -1, then there is no cycle in the linked list. Example 1: Input: head = [3,2,0,-4], pos = 1 Output: true Explanation: There is a cycle in the linked list, where tail connects to the second node. Example 2: Input: head = [1,2], pos = 0 Output: true Explanation: There is a cycle in the linked list, where tail connects to the first node. Example 3: Input: head = [1], pos = -1 Output: false Explanation: There is no cycle in the linked list. Follow up: Can you solve it using O(1) (i.e. constant) memory? Tags: Linked List, Two Pointers Difficulty: Easy 答案 123456789101112131415public class Solution { public boolean hasCycle(ListNode head) { if(head==null || head.next==null){ return false; } ListNode slow = head; ListNode fast = head.next; while(fast!=slow){ if(fast==null || fast.next==null) return false; fast = fast.next.next; slow = slow.next; } return true; }}","link":"/leetcode/leetcode-1**/leetcode-141-Linked-List-Cycle.html"},{"title":"leetcode 142. Linked List Cycle II","text":"难度：Middleleetcode九章 题目描述Given a linked list, return the node where the cycle begins. If there is nocycle, return null. To represent a cycle in the given linked list, we use an integer pos whichrepresents the position (0-indexed) in the linked list where tail connects to.If pos is -1, then there is no cycle in the linked list. Note: Do not modify the linked list. Example 1: Input: head = [3,2,0,-4], pos = 1 Output: tail connects to node index 1 Explanation: There is a cycle in the linked list, where tail connects to the second node. Example 2: Input: head = [1,2], pos = 0 Output: tail connects to node index 0 Explanation: There is a cycle in the linked list, where tail connects to the first node. Example 3: Input: head = [1], pos = -1 Output: no cycle Explanation: There is no cycle in the linked list. Follow-up :Can you solve it without using extra space? Tags: Linked List, Two Pointers Difficulty: Medium 答案 123456789101112131415161718public class Solution { public ListNode detectCycle(ListNode head) { if(head==null || head.next==null) return null; ListNode slow = head, fast = head; do{ if(fast==null || fast.next==null) return null; fast = fast.next.next; slow = slow.next; }while(slow!=fast); slow = head; while(slow!=fast){ fast = fast.next; slow = slow.next; } return slow; }}","link":"/leetcode/leetcode-1**/leetcode-142-Linked-List-Cycle-II.html"},{"title":"leetcode 150. Evaluate Reverse Polish Notation","text":"难度：Middleleetcode九章 题目描述Evaluate the value of an arithmetic expression in Reverse PolishNotation. Valid operators are +, -, *, /. Each operand may be an integer oranother expression. Note: Division between two integers should truncate toward zero. The given RPN expression is always valid. That means the expression would always evaluate to a result and there won’t be any divide by zero operation. Example 1: Input: [&quot;2&quot;, &quot;1&quot;, &quot;+&quot;, &quot;3&quot;, &quot;*&quot;] Output: 9 Explanation: ((2 + 1) * 3) = 9Example 2: Input: [&quot;4&quot;, &quot;13&quot;, &quot;5&quot;, &quot;/&quot;, &quot;+&quot;] Output: 6 Explanation: (4 + (13 / 5)) = 6Example 3: Input: [&quot;10&quot;, &quot;6&quot;, &quot;9&quot;, &quot;3&quot;, &quot;+&quot;, &quot;-11&quot;, &quot;*&quot;, &quot;/&quot;, &quot;*&quot;, &quot;17&quot;, &quot;+&quot;, &quot;5&quot;, &quot;+&quot;] Output: 22 Explanation: ((10 * (6 / ((9 + 3) * -11))) + 17) + 5 = ((10 * (6 / (12 * -11))) + 17) + 5 = ((10 * (6 / -132)) + 17) + 5 = ((10 * 0) + 17) + 5 = (0 + 17) + 5 = 17 + 5 = 22Tags: Stack Difficulty: Medium 答案 1234567891011121314151617181920212223242526272829class Solution { public int evalRPN(String[] tokens) { Stack&lt;Integer&gt; stack = new Stack&lt;&gt;(); for(String s: tokens) { if(!isOperator(s)){ stack.push(Integer.parseInt(s)); }else{ stack.push(operate(stack.pop(), stack.pop(), s)); } } return stack.pop(); } private boolean isOperator(String s){ return s.equals(\"+\") || s.equals(\"-\") || s.equals(\"*\") || s.equals(\"/\"); } private int operate(int b, int a, String operator) { int res = 0; if(operator.equals(\"+\")){ res = a+b; }else if(operator.equals(\"-\")) { res = a-b; }else if(operator.equals(\"*\")) { res = a*b; }else if(operator.equals(\"/\")) { res = a/b; } return res; }}","link":"/leetcode/leetcode-1**/leetcode-150-Evaluate-Reverse-Polish-Notation.html"},{"title":"leetcode 155. Min Stack","text":"leetcode九章 题目描述Design a stack that supports push, pop, top, and retrieving the minimumelement in constant time. push(x) – Push element x onto stack. pop() – Removes the element on top of the stack. top() – Get the top element. getMin() – Retrieve the minimum element in the stack. Example: MinStack minStack = new MinStack(); minStack.push(-2); minStack.push(0); minStack.push(-3); minStack.getMin(); --&gt; Returns -3. minStack.pop(); minStack.top(); --&gt; Returns 0. minStack.getMin(); --&gt; Returns -2.Tags: Stack, Design Difficulty: Easy 答案\u0004 123456789101112131415161718192021222324252627282930313233343536373839404142import sysclass MinStack: def __init__(self): \"\"\" initialize your data structure here. \"\"\" self.m = sys.maxsize self.minl = [] self.l = [] def push(self, x: int) -&gt; None: self.l.append(x) self.m = min(x, self.m) self.minl.append(self.m) def pop(self) -&gt; None: self.l.pop() self.minl.pop() if self.minl: self.m = self.minl[-1] else: self.m = sys.maxsize def top(self) -&gt; int: return self.l[-1] def getMin(self) -&gt; int: return self.minl[-1] # Your MinStack object will be instantiated and called as such:# obj = MinStack()# obj.push(x)# obj.pop()# param_3 = obj.top()# param_4 = obj.getMin()","link":"/leetcode/leetcode-1**/leetcode-155-Min-Stack.html"},{"title":"leetcode 162. Find Peak Element","text":"难度：Middleleetcode九章 题目描述A peak element is an element that is greater than its neighbors. Given an input array nums, where nums[i] ≠ nums[i+1], find a peak elementand return its index. The array may contain multiple peaks, in that case return the index to any oneof the peaks is fine. You may imagine that nums[-1] = nums[n] = -∞. Example 1: Input: **nums** = [1,2,3,1] Output: 2 Explanation: 3 is a peak element and your function should return the index number 2.Example 2: Input: **nums** = [1,2,1,3,5,6,4] Output: 1 or 5 Explanation: Your function can return either index number 1 where the peak element is 2, or index number 5 where the peak element is 6.Note: Your solution should be in logarithmic complexity. Tags: Array, Binary Search Difficulty: Medium 答案 1234567891011121314class Solution { public int findPeakElement(int[] nums) { int n = nums.length; if(n==1) return 0; // 找到第一个开始下降的数字 for(int i=0; i&lt;n-1; i++) { if(nums[i]&gt;nums[i+1]) { return i; } } // 没找到返回最后一个 return n-1; }}","link":"/leetcode/leetcode-1**/leetcode-162-Find-Peak-Element.html"},{"title":"leetcode 171. Excel Sheet Column Number","text":"难度：Easyleetcode九章 题目描述Given a column title as appear in an Excel sheet, return its correspondingcolumn number. For example: A -&gt; 1 B -&gt; 2 C -&gt; 3 ... Z -&gt; 26 AA -&gt; 27 AB -&gt; 28 ...Example 1: Input: &quot;A&quot; Output: 1Example 2: Input: &quot;AB&quot; Output: 28Example 3: Input: &quot;ZY&quot; Output: 701Tags: Math Difficulty: Easy 答案 1234567891011121314// 用时 5 min// char to int: int a = c;class Solution { public int titleToNumber(String s) { int res = 0; char[] cs = s.toCharArray(); int n = cs.length; for(int i=0; i&lt;n; i++) { int ascii = cs[i]; res += (ascii-64)*(int)Math.pow(26, n-i-1); } return res; }}","link":"/leetcode/leetcode-1**/leetcode-171-Excel-Sheet-Column-Number.html"},{"title":"leetcode 179. Largest Number","text":"难度：Middleleetcode九章 题目描述Given a list of non negative integers, arrange them such that they form thelargest number. Example 1: Input: [10,2] Output: &quot;210&quot;Example 2: Input: [3,30,34,5,9] Output: &quot;9534330&quot;Note: The result may be very large, so you need to return a string insteadof an integer. Tags: Sort Difficulty: Medium 答案 1234567891011121314151617181920212223242526272829303132333435363738394041424344class Solution { public String largestNumber_0(int[] nums) { String[] strs = new String[nums.length]; for(int i=0; i&lt;nums.length; i++){ strs[i] = Integer.toString(nums[i]); } PriorityQueue&lt;String&gt; priorityQueue = new PriorityQueue&lt;&gt;(new Comparator&lt;String&gt;(){ @Override public int compare(String s1, String s2){ return (s2+s1).compareTo(s1+s2); } }); for(int i=0; i&lt;nums.length; i++) { priorityQueue.add(strs[i]); } StringBuilder sb = new StringBuilder(); for(int i=0; i&lt;nums.length; i++) { sb.append(priorityQueue.remove()); } if(sb.toString().startsWith(\"0\")) return \"0\"; return sb.toString(); } public String largestNumber(int[] nums) { String[] strs = new String[nums.length]; for(int i=0; i&lt;nums.length; i++){ strs[i] = Integer.toString(nums[i]); } Arrays.sort(strs, new Comparator&lt;String&gt;(){ @Override public int compare(String s1, String s2){ return (s2+s1).compareTo(s1+s2); } }); StringBuilder sb = new StringBuilder(); for(int i=0; i&lt;nums.length; i++) { sb.append(strs[i]); } if(sb.toString().startsWith(\"0\")) return \"0\"; return sb.toString(); }}","link":"/leetcode/leetcode-1**/leetcode-179-Largest-Number.html"},{"title":"leetcode 189. Rotate Array","text":"难度：Easyleetcode九章 题目描述Given an array, rotate the array to the right by k steps, where k isnon-negative. Example 1: Input: [1,2,3,4,5,6,7] and _k_ = 3 Output: [5,6,7,1,2,3,4] Explanation: rotate 1 steps to the right: [7,1,2,3,4,5,6] rotate 2 steps to the right: [6,7,1,2,3,4,5] rotate 3 steps to the right: [5,6,7,1,2,3,4]Example 2: Input: [-1,-100,3,99] and _k_ = 2 Output: [3,99,-1,-100] Explanation: rotate 1 steps to the right: [99,-1,-100,3] rotate 2 steps to the right: [3,99,-1,-100]Note: Try to come up as many solutions as you can, there are at least 3 different ways to solve this problem. Could you do it in-place with O(1) extra space? Tags: Array Difficulty: Easy 答案 12345678910111213141516171819202122class Solution { public void rotate(int[] nums, int k) { // [1,2,3,4,5,6,7] k = 3 // 1. reverse整个数组 [7654321] // 2. reverse 123 , reverse 4567 // [5,6,7,1,2,3,4] int n = nums.length; k %= n; reverse(nums, 0, n-1); reverse(nums, 0, k-1); reverse(nums, k, n-1); } private void reverse(int[] nums, int start, int end) { while(start&lt;end){ int temp = nums[start]; nums[start] = nums[end]; nums[end] = temp; start++; end--; } }}","link":"/leetcode/leetcode-1**/leetcode-189-Rotate-Array.html"},{"title":"leetcode 200. Number of Islands","text":"leetcode九章 题目描述Given a 2d grid map of '1's (land) and '0's (water), count the number ofislands. An island is surrounded by water and is formed by connecting adjacentlands horizontally or vertically. You may assume all four edges of the gridare all surrounded by water. Example 1: Input: 11110 11010 11000 00000 Output: 1Example 2: Input: 11000 11000 00100 00011 Output: 3Tags: Depth-first Search, Breadth-first Search, Union Find Difficulty: Medium 答案\u0004 123456789101112131415161718192021class Solution: def removeIsland(self, grid, i, j, n, m): if i&lt;0 or j&lt;0 or i&gt;=n or j&gt;=m or grid[i][j]=='0': return grid[i][j] = '0' self.removeIsland(grid, i-1, j, n, m) self.removeIsland(grid, i+1, j, n, m) self.removeIsland(grid, i, j-1, n, m) self.removeIsland(grid, i, j+1, n, m) def numIslands(self, grid: List[List[str]]) -&gt; int: if not grid or not grid[0]: return 0 n, m = len(grid), len(grid[0]) res = 0 for i in range(n): for j in range(m): if grid[i][j]=='1': self.removeIsland(grid, i, j, n, m) res += 1 return res","link":"/leetcode/leetcode-2**/leetcode-200-Number-of-Islands.html"},{"title":"leetcode 202. Happy Number","text":"题目描述Write an algorithm to determine if a number is “happy”. A happy number is a number defined by the following process: Starting with anypositive integer, replace the number by the sum of the squares of its digits,and repeat the process until the number equals 1 (where it will stay), or itloops endlessly in a cycle which does not include 1. Those numbers for whichthis process ends in 1 are happy numbers. *Example: * Input: 19 Output: true Explanation: 12 + 92 = 82 82 + 22 = 68 62 + 82 = 100 12 + 02 + 02 = 1Tags: Hash Table, Math Difficulty: Easy 答案 123456789101112131415161718192021class Solution { public boolean isHappy(int n) { HashSet&lt;Integer&gt; set = new HashSet&lt;&gt;(); while(n!=1){ if(!set.add(n)){ return false; } n = trans(n); } return true; } private int trans(int n){ int res = 0; while(n!=0){ res += (int)Math.pow(n%10, 2); n = n/10; } return res; } }","link":"/leetcode/leetcode-2**/leetcode-202-Happy%20Number.html"},{"title":"leetcode 204. Count Primes","text":"题目描述Count the number of prime numbers less than a non-negative number, n. Example: Input: 10 Output: 4 Explanation: There are 4 prime numbers less than 10, they are 2, 3, 5, 7.Tags: Hash Table, Math Difficulty: Easy 答案 12345678910111213141516171819class Solution { public int countPrimes(int n) { if(n&lt;=2) return 0; // 加上 n+1 boolean[] b = new boolean[n]; int res = 0; for(int i=2; i&lt;n; i++){ // 是默认值false &lt;-&gt; 是质数 if(!b[i]) { res++; // 将质数的整数标记为非质数 for(int j=2; i*j&lt;n; j++){ b[i*j] = true; } } } return res; }}","link":"/leetcode/leetcode-2**/leetcode-204-Count%20Primes.html"},{"title":"leetcode 208. Implement Trie (Prefix Tree)","text":"难度：Middleleetcode九章 题目描述Implement a trie with insert, search, and startsWith methods. Example: Trie trie = new Trie(); trie.insert(&quot;apple&quot;); trie.search(&quot;apple&quot;); // returns true trie.search(&quot;app&quot;); // returns false trie.startsWith(&quot;app&quot;); // returns true trie.insert(&quot;app&quot;); trie.search(&quot;app&quot;); // returns trueNote: You may assume that all inputs are consist of lowercase letters a-z. All inputs are guaranteed to be non-empty strings. Tags: Design, Trie Difficulty: Medium 答案 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859class Trie { class Node { boolean hasWord = false; char c; Map&lt;Character, Node&gt; children = new HashMap&lt;&gt;(); public Node(){} public Node(char c){ this.c = c; } } Node root; public Trie() { root = new Node(); } public void insert(String word) { Node cur = root; Node temp; for(char c: word.toCharArray()) { if(!cur.children.containsKey(c)) { temp = new Node(c); cur.children.put(c, temp); } cur = cur.children.get(c); } cur.hasWord = true; } public boolean search(String word) { Node cur = root; for(char c: word.toCharArray()) { if(!cur.children.containsKey(c)) { return false; }else{ cur = cur.children.get(c); } } return cur.hasWord; } public boolean startsWith(String prefix) { Node cur = root; for(char c: prefix.toCharArray()) { if(!cur.children.containsKey(c)) { return false; }else{ cur = cur.children.get(c); } } return true; }}","link":"/leetcode/leetcode-2**/leetcode-208-Implement-Trie-Prefix-Tree.html"},{"title":"leetcode 215. Kth Largest Element in an Array","text":"题目描述Find the k th largest element in an unsorted array. Note that it is thekth largest element in the sorted order, not the kth distinct element. Example 1: Input: [3,2,1,5,6,4] and k = 2 Output: 5Example 2: Input: [3,2,3,1,2,4,5,5,6] and k = 4 Output: 4Note:You may assume k is always valid, 1 ≤ k ≤ array’s length. Tags: Divide and Conquer, Heap Difficulty: Medium 答案 123456789101112class Solution { public int findKthLargest(int[] nums, int k) { PriorityQueue&lt;Integer&gt; priorityQueue = new PriorityQueue&lt;&gt;(k, Collections.reverseOrder()); for(int num: nums){ priorityQueue.add(num); } for(int i=0; i&lt;k-1; i++){ priorityQueue.poll(); } return priorityQueue.poll(); }}","link":"/leetcode/leetcode-2**/leetcode-215-Kth%20Largest%20Element%20in%20an%20Array.html"},{"title":"leetcode 217. Contains Duplicate","text":"题目描述Given an array of integers, find if the array contains any duplicates. Your function should return true if any value appears at least twice in thearray, and it should return false if every element is distinct. Example 1: Input: [1,2,3,1] Output: trueExample 2: Input: [1,2,3,4] Output: falseExample 3: Input: [1,1,1,3,3,4,3,2,4,2] Output: trueTags: Array, Hash Table Difficulty: Easy 答案 1234567891011class Solution { public boolean containsDuplicate(int[] nums) { HashSet&lt;Integer&gt; set = new HashSet&lt;&gt;(); for(int num: nums){ if(!set.add(num)){ return true; } } return false; }}","link":"/leetcode/leetcode-2**/leetcode-217-Contains%20Duplicate.html"},{"title":"leetcode 229. Majority Element II","text":"难度：Middleleetcode九章 题目描述Given an integer array of size n , find all elements that appear more than⌊ n/3 ⌋ times. Note: The algorithm should run in linear time and in O(1) space. Example 1: Input: [3,2,3] Output: [3]Example 2: Input: [1,1,1,3,3,2,2,2] Output: [1,2]Tags: Array Difficulty: Medium 答案 123456789101112131415161718192021222324252627282930313233343536373839// https://leetcode-cn.com/problems/majority-element-ii/solution/duo-shu-tou-piao-de-sheng-ji-ban-hao-li-jie-java-b/class Solution { public List&lt;Integer&gt; majorityElement(int[] nums) { List&lt;Integer&gt; res = new ArrayList&lt;&gt;(); if(nums==null || nums.length==0){ return res; } int major1=nums[0], major2=nums[0], count1=0, count2=0; for(int n: nums) { if(major1==n){ count1++; }else if(major2==n){ count2++; }else if(count1==0){ major1 = n; count1++; }else if(count2==0){ major2 = n; count2++; }else{ count1--; count2--; } } count1 = 0; count2 = 0; for(int n: nums) { if(n==major1) count1++; else if(n==major2) count2++; } if(count1&gt;nums.length/3) { res.add(major1); } if(count2&gt;nums.length/3){ res.add(major2); } return res; }}","link":"/leetcode/leetcode-2**/leetcode-229-Majority-Element-II.html"},{"title":"leetcode 230. Kth Smallest Element in a BST","text":"难度：Middleleetcode九章 题目描述Given a binary search tree, write a function kthSmallest to find the kth smallest element in it. Note:You may assume k is always valid, 1 ≤ k ≤ BST’s total elements. Example 1: Input: root = [3,1,4,null,2], k = 1 3 / \\ 1 4 \\ 2 Output: 1Example 2: Input: root = [5,3,6,2,4,null,null,1], k = 3 5 / \\ 3 6 / \\ 2 4 / 1 Output: 3Follow up:What if the BST is modified (insert/delete operations) often and you need tofind the kth smallest frequently? How would you optimize the kthSmallestroutine? Tags: Binary Search, Tree Difficulty: Medium 答案 12345678910111213141516171819class Solution { public int kthSmallest(TreeNode root, int k) { // 中序遍历第k个元素 // 中序遍历：将左节点压栈，直到为空，弹栈，转向右节点 // 弹栈的顺序就是中序遍历 Stack&lt;TreeNode&gt; stack = new Stack&lt;&gt;(); while(root!=null || !stack.isEmpty()){ while(root!=null){ stack.push(root); root = root.left; } root = stack.pop(); k--; if(k==0) return root.val; root = root.right; } return 0; }}","link":"/leetcode/leetcode-2**/leetcode-230-Kth-Smallest-Element-in-a-BST.html"},{"title":"leetcode 236. Lowest Common Ancestor of a Binary Tree","text":"难度：Middleleetcode九章 题目描述Given a binary tree, find the lowest common ancestor (LCA) of two given nodesin the tree. According to the definition of LCA onWikipedia: “The lowestcommon ancestor is defined between two nodes p and q as the lowest node in Tthat has both p and q as descendants (where we allow a node to be adescendant of itself ).” Given the following binary tree: root = [3,5,1,6,2,0,8,null,null,7,4] Example 1: Input: root = [3,5,1,6,2,0,8,null,null,7,4], p = 5, q = 1 Output: 3 Explanation: The LCA of nodes 5 and 1 is 3.Example 2: Input: root = [3,5,1,6,2,0,8,null,null,7,4], p = 5, q = 4 Output: 5 Explanation: The LCA of nodes 5 and 4 is 5, since a node can be a descendant of itself according to the LCA definition.Note: All of the nodes’ values will be unique. p and q are different and both values will exist in the binary tree. Tags: Tree Difficulty: Medium 答案 1234567891011121314151617class Solution { public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) { //找 P 或 Q, 或者没找到 if(root==null || root==q || root==p) return root; //左边查询结果 TreeNode left = lowestCommonAncestor(root.left, p, q); //右边查询结果 TreeNode right = lowestCommonAncestor(root.right, p, q); //因为肯定有这两个节点，所以如果一边是空，另一边查到了 p 或 q 任意一个，那个就是目标节点 //如果两边都查到了，肯定是一个 q,一个p ,所以直接返回顶部的就行。 //两边都没查到的话 就不存在这种情况了 if(left==null) return right; else if(right==null) return left; return root; }}","link":"/leetcode/leetcode-2**/leetcode-236-Lowest-Common-Ancestor-of-a-Binary-Tree.html"},{"title":"leetcode 237. Delete Node in a Linked List","text":"难度：Easyleetcode九章 题目描述Write a function to delete a node (except the tail) in a singly linked list,given only access to that node. Given linked list – head = [4,5,1,9], which looks like following: Example 1: Input: head = [4,5,1,9], node = 5 Output: [4,1,9] Explanation: You are given the second node with value 5, the linked list should become 4 -&gt; 1 -&gt; 9 after calling your function.Example 2: Input: head = [4,5,1,9], node = 1 Output: [4,5,9] Explanation: You are given the third node with value 1, the linked list should become 4 -&gt; 5 -&gt; 9 after calling your function.Note: The linked list will have at least two elements. All of the nodes’ values will be unique. The given node will not be the tail and it will always be a valid node of the linked list. Do not return anything from your function. Tags: Linked List Difficulty: Easy 答案 1234567class Solution { public void deleteNode(ListNode node) { // 先把当前节点的值用下一个节点的值覆盖，然后删除下一个节点 node.val = node.next.val; node.next = node.next.next; }}","link":"/leetcode/leetcode-2**/leetcode-237-Delete-Node-in-a-Linked-List.html"},{"title":"leetcode 238. Product of Array Except Self","text":"leetcode九章 题目描述Given an array nums of n integers where n &gt; 1, return an array outputsuch that output[i] is equal to the product of all the elements of numsexcept nums[i]. Example: Input: [1,2,3,4] Output: [24,12,8,6]Note: Please solve it without division and in O( n ). Follow up:Could you solve it with constant space complexity? (The output array doesnot count as extra space for the purpose of space complexity analysis.) Tags: Array Difficulty: Medium 答案\u0004 除自身以外数组的乘积 - 除自身以外数组的乘积 - 力扣（LeetCode） 方法一：左右乘积列表我们不必将所有数字的乘积除以给定索引处的数字得到相应的答案，而是可以利用索引处左侧的所有数字乘积和右侧所有数字的乘积相乘得到答案。 对于给定索引 ii，我们将使用它左边所有数字的乘积乘以右边所有数字的乘积。 1234567891011class Solution: def productExceptSelf(self, nums: List[int]) -&gt; List[int]: n = len(nums) productBefore = [1 for i in nums] productAfter = [1 for i in nums] for i in range(1, n): productBefore[i] = productBefore[i-1]*nums[i-1] for i in range(n-2, -1, -1): productAfter[i] = productAfter[i+1]*nums[i+1] print(productBefore, productAfter) return list(i*j for i, j in zip(productBefore, productAfter)) 12345678910class Solution: def productExceptSelf(self, nums: List[int]) -&gt; List[int]: length = len(nums) L, R, answer = [0]*length, [0]*length, [0]*length L[0] = 1 for i in range(1, length): L[i] = nums[i - 1] * L[i - 1] R[length - 1] = 1 for i in reversed(range(length - 1)): R[i] = nums[i + 1] * R[i + 1] 方法二：空间复杂度 O(1) 的方法尽管上面的方法已经能够很好的解决这个问题，但是不是常数的空间复杂度。 由于输出数组不算在空间复杂度内，那么我们可以将 L 或 R 数组在用输出数组来计算，然后再动态构造另一个 1234567891011class Solution: def productExceptSelf(self, nums: List[int]) -&gt; List[int]: n = len(nums) res = [1]*n for i in range(1, n): res[i] = res[i-1]*nums[i-1] R = 1 for i in reversed(range(n-1)): R *= nums[i+1] res[i] *= R return res","link":"/leetcode/leetcode-2**/leetcode-238-Product-of-Array-Except-Self%20(copy).html"},{"title":"leetcode 238. Product of Array Except Self","text":"难度：Middleleetcode九章 题目描述Given an array nums of n integers where n &gt; 1, return an array outputsuch that output[i] is equal to the product of all the elements of numsexcept nums[i]. Example: Input: [1,2,3,4] Output: [24,12,8,6]Note: Please solve it without division and in O( n ). Follow up:Could you solve it with constant space complexity? (The output array doesnot count as extra space for the purpose of space complexity analysis.) Tags: Array Difficulty: Medium 答案 12345678910111213141516171819class Solution { public int[] productExceptSelf(int[] nums) { // 1 2 3 4 // 1 1 2 6 从左往右累乘前面的数 // 24 12 8 6 从右往左累乘后面的数 int n = nums.length; int[] res = new int[n]; res[0] = 1; for(int i=1; i&lt;n; i++){ res[i] = res[i-1]*nums[i-1]; } int right = nums[n-1]; for(int i=n-2; i&gt;=0; i--){ res[i] = res[i] * right; right *= nums[i]; } return res; }}","link":"/leetcode/leetcode-2**/leetcode-238-Product-of-Array-Except-Self.html"},{"title":"leetcode 239. Sliding Window Maximum","text":"难度：Hardleetcode九章 题目描述Given an array nums , there is a sliding window of size k which is movingfrom the very left of the array to the very right. You can only see the knumbers in the window. Each time the sliding window moves right by oneposition. Return the max sliding window. Example: Input: _nums_ = [1,3,-1,-3,5,3,6,7], and _k_ = 3 Output:[3,3,5,5,6,7] Explanation: Window position Max --------------- ----- [1 3 -1] -3 5 3 6 7 **3** 1 [3 -1 -3] 5 3 6 7 **3** 1 3 [-1 -3 5] 3 6 7 **5** 1 3 -1 [-3 5 3] 6 7 **5** 1 3 -1 -3 [5 3 6] 7 **6** 1 3 -1 -3 5 [3 6 7] **7**Note:You may assume k is always valid, 1 ≤ k ≤ input array’s size for non-emptyarray. Follow up:Could you solve it in linear time? Tags: Heap, Sliding Window Difficulty: Hard 答案 12345678910111213141516171819202122232425262728// /Volumes/My Passport/data/ut下载/03 算法/高频算法面试题精讲/3. 3栈和队列面试题精讲.mp4 例6// julyedu.comclass Solution { public int[] maxSlidingWindow(int[] nums, int k) { if(k&lt;=1) return nums; // 存放索引 Deque&lt;Integer&gt; deque = new ArrayDeque&lt;&gt;(); int n = nums.length; int[] res = new int[n-(k-1)]; // 添加前k-1个数 for(int i=0; i&lt;k-1; i++) { // 若即将插入的值比之前的数大，删除旧的数字，因为新数更晚被删除，旧数永远不会被选中 while(!deque.isEmpty()&amp;&amp;nums[deque.getLast()]&lt;=nums[i]) deque.pollLast(); deque.add(i); } for(int i=k-1; i&lt;n; i++) { while(!deque.isEmpty()&amp;&amp;nums[deque.getLast()]&lt;=nums[i]) deque.pollLast(); // 0 &lt;-&gt; k-1 // 第0个数在i=k-1时保留 // 删除窗口之前的数字 while(!deque.isEmpty()&amp;&amp;deque.getFirst()&lt;i-(k-1)) deque.pollFirst(); deque.add(i); res[i-(k-1)] = nums[deque.getFirst()]; } return res; }}","link":"/leetcode/leetcode-2**/leetcode-239-Sliding-Window-Maximum.html"},{"title":"leetcode 240. Search a 2D Matrix II","text":"难度：Middleleetcode九章 题目描述Write an efficient algorithm that searches for a value in an m x n matrix.This matrix has the following properties: Integers in each row are sorted in ascending from left to right. Integers in each column are sorted in ascending from top to bottom. Example: Consider the following matrix: [ [1, 4, 7, 11, 15], [2, 5, 8, 12, 19], [3, 6, 9, 16, 22], [10, 13, 14, 17, 24], [18, 21, 23, 26, 30] ]Given target = 5, return true. Given target = 20, return false. Tags: Binary Search, Divide and Conquer Difficulty: Medium 答案 123456789101112131415161718class Solution { public boolean searchMatrix(int[][] ma, int t) { if(ma==null || ma.length==0 || ma[0].length==0) return false; int n = ma.length; int m = ma[0].length; int i=n-1, j=0; while(i&gt;=0 &amp;&amp; j&lt;m) { if(ma[i][j]==t){ return true; }else if(ma[i][j]&gt;t){ i--; }else{ j++; } } return false; }}","link":"/leetcode/leetcode-2**/leetcode-240-Search-a-2D-Matrix-II.html"},{"title":"leetcode 242. Valid Anagram","text":"难度：Easyleetcode九章 题目描述Given two strings s and t _, write a function to determine if _t is ananagram of s. Example 1: Input: _s_ = &quot;anagram&quot;, _t_ = &quot;nagaram&quot; Output: trueExample 2: Input: _s_ = &quot;rat&quot;, _t_ = &quot;car&quot; Output: falseNote:You may assume the string contains only lowercase alphabets. Follow up:What if the inputs contain unicode characters? How would you adapt yoursolution to such case? Tags: Hash Table, Sort Difficulty: Easy 答案 12345678910111213141516171819202122232425262728293031323334353637383940414243class Solution { public boolean isAnagram_0(String s, String t) { HashMap&lt;Character, Integer&gt; map = new HashMap&lt;&gt;(); for(char c: s.toCharArray()){ if(!map.containsKey(c)){ map.put(c, 1); }else{ map.put(c, map.get(c)+1); } } for(char c: t.toCharArray()){ if(!map.containsKey(c)){ return false; }else{ if(map.get(c)==1){ map.remove(c); }else{ map.put(c, map.get(c)-1); } } } return map.isEmpty(); } public boolean isAnagram(String s, String t) { if(s.length()!=t.length()) return false; int[] is = new int[256]; int[] it = new int[256]; for(char c: s.toCharArray()){ is[c]++; } for(char c: t.toCharArray()){ it[c]++; } for(int i=0; i&lt;256; i++){ if(is[i]!=it[i]){ return false; } } return true; }}","link":"/leetcode/leetcode-2**/leetcode-242-Valid-Anagram.html"},{"title":"leetcode 278. First Bad Version","text":"难度：Easyleetcode九章 题目描述You are a product manager and currently leading a team to develop a newproduct. Unfortunately, the latest version of your product fails the qualitycheck. Since each version is developed based on the previous version, all theversions after a bad version are also bad. Suppose you have n versions [1, 2, ..., n] and you want to find out thefirst bad one, which causes all the following ones to be bad. You are given an API bool isBadVersion(version) which will return whetherversion is bad. Implement a function to find the first bad version. Youshould minimize the number of calls to the API. Example: Given n = 5, and version = 4 is the first bad version. call isBadVersion(3) -&gt; false call isBadVersion(5) -&gt; true call isBadVersion(4) -&gt; true Then 4 is the first bad version. Tags: Binary Search Difficulty: Easy 答案 12345678910111213141516/* The isBadVersion API is defined in the parent class VersionControl. boolean isBadVersion(int version); */// https://leetcode-cn.com/problems/first-bad-version/solution/di-yi-ge-cuo-wu-de-ban-ben-by-leetcode/public class Solution extends VersionControl { public int firstBadVersion(int n) { int start = 0, end = n; while(start&lt;end) { int mid = start+(end-start)/2; if(isBadVersion(mid)) end = mid; else start = mid+1; } return start; }}","link":"/leetcode/leetcode-2**/leetcode-278-First-Bad-Version.html"},{"title":"leetcode 279. Perfect Squares","text":"难度：Middleleetcode九章 题目描述Given a positive integer n , find the least number of perfect square numbers(for example, 1, 4, 9, 16, ...) which sum to n. Example 1: Input: _n_ = 12 Output: 3 Explanation:12 = 4 + 4 + 4.Example 2: Input: _n_ = 13 Output: 2 Explanation:13 = 4 + 9.Tags: Math, Dynamic Programming, Breadth-first Search Difficulty: Medium 答案 123456789101112131415161718192021class Solution { public int numSquares(int n) { // 四平方和定理 // 一个数如果含有因子4，那么我们可以把4都去掉，并不影响结果 // 一个数除以8余7，那么肯定是由4个完全平方数组成 while(n%4==0) n/=4; if(n%8==7) return 4; // dp[i] = min(dp[i], dp[i-j*j]+1) (j*j&lt;i) int[] dp = new int[n+1]; Arrays.fill(dp, Integer.MAX_VALUE); for(int i=0; i*i&lt;=n; i++){ dp[i*i] = 1; } for(int i=0; i&lt;=n; i++) { for(int j=0; i+j*j&lt;=n; j++){ dp[i+j*j] = Math.min(dp[i]+1, dp[i+j*j]); } } return dp[n]; }}","link":"/leetcode/leetcode-2**/leetcode-279-Perfect-Squares.html"},{"title":"leetcode 268. Missing Number","text":"难度：Easyleetcode九章 题目描述Given an array containing n distinct numbers taken from 0, 1, 2, ..., n,find the one that is missing from the array. Example 1: Input: [3,0,1] Output: 2Example 2: Input: [9,6,4,2,3,5,7,0,1] Output: 8Note :Your algorithm should run in linear runtime complexity. Could you implement itusing only constant extra space complexity? Tags: Array, Math, Bit Manipulation Difficulty: Easy 答案 123456789101112131415161718192021class Solution { public int missingNumber(int[] nums) { for(int i=0; i&lt;nums.length; i++){ while(i!=nums[i]){ if(nums[i]&gt;=nums.length || nums[i]&lt;0) break; swap(nums, i, nums[i]); } } for(int i=0; i&lt;nums.length; i++){ if(i!=nums[i]){ return i; } } return nums.length; } private void swap(int[] nums, int a, int b){ int temp = nums[a]; nums[a] = nums[b]; nums[b] = temp; }}","link":"/leetcode/leetcode-2**/leetcode-268-Missing-Number.html"},{"title":"leetcode 287. Find the Duplicate Number","text":"难度：Middleleetcode九章 题目描述Given an array nums containing n + 1 integers where each integer isbetween 1 and n (inclusive), prove that at least one duplicate number mustexist. Assume that there is only one duplicate number, find the duplicate one. Example 1: Input: [1,3,4,2,2] Output: 2Example 2: Input: [3,1,3,4,2] Output: 3Note: You must not modify the array (assume the array is read only). You must use only constant, O (1) extra space. Your runtime complexity should be less than O ( n 2). There is only one duplicate number in the array, but it could be repeated more than once. Tags: Array, Two Pointers, Binary Search Difficulty: Medium 答案 123456789101112131415161718class Solution { public int findDuplicate(int[] nums) { // 快慢指针，找环 // 首先找到相遇的位置 int slow = 0, fast = 0; do{ fast = nums[nums[fast]]; slow = nums[slow]; }while(slow!=fast); // 再将一个指针移到队首，直至相遇，即为环的起点 slow = 0; while(slow!=fast){ slow = nums[slow]; fast = nums[fast]; } return fast; }}","link":"/leetcode/leetcode-2**/leetcode-287-Find-the-Duplicate-Number.html"},{"title":"leetcode 289. Game of Life","text":"难度：Middleleetcode九章 题目描述According to the Wikipedia’sarticle: “The Gameof Life , also known simply as Life , is a cellular automaton devised bythe British mathematician John Horton Conway in 1970.” Given a board with m by n cells, each cell has an initial state live(1) or dead (0). Each cell interacts with its eightneighbors (horizontal,vertical, diagonal) using the following four rules (taken from the aboveWikipedia article): Any live cell with fewer than two live neighbors dies, as if caused by under-population. Any live cell with two or three live neighbors lives on to the next generation. Any live cell with more than three live neighbors dies, as if by over-population.. Any dead cell with exactly three live neighbors becomes a live cell, as if by reproduction. Write a function to compute the next state (after one update) of the boardgiven its current state. The next state is created by applying the above rulessimultaneously to every cell in the current state, where births and deathsoccur simultaneously. Example: Input: [ [0,1,0], [0,0,1], [1,1,1], [0,0,0] ] Output: [ [0,0,0], [1,0,1], [0,1,1], [0,1,0] ]Follow up : Could you solve it in-place? Remember that the board needs to be updated at the same time: You cannot update some cells first and then use their updated values to update other cells. In this question, we represent the board using a 2D array. In principle, the board is infinite, which would cause problems when the active area encroaches the border of the array. How would you address these problems? Tags: Array Difficulty: Medium 答案 123456789101112131415161718192021222324252627282930313233343536373839404142// 二位二进制数表示状态变化， 下一状态_当前状态// 00: 0 die to die// 01: 1 live to die// 10: 2 die to live// 11: 3 live to liveclass Solution { private int[][] directions = {{-1, -1}, {-1, 0}, {-1, 1}, {0, -1}, {0, 1}, {1, -1}, {1, 0}, {1, 1} }; public void gameOfLife(int[][] b) { if(b==null || b.length==0) return; int n = b.length, m = b[0].length; for(int i=0; i&lt;n; i++){ for(int j=0; j&lt;m; j++){ update(b, n, m, i, j); } } for(int i=0; i&lt;n; i++){ for(int j=0; j&lt;m; j++){ b[i][j] = b[i][j]&gt;&gt;1; } } } private void update(int[][] b, int n, int m, int i, int j){ int count = 0; for(int[] direction: directions){ int ii = i+direction[0], jj = j+direction[1]; if(ii&lt;0 || ii&gt;= n || jj&lt;0 || jj&gt;=m) continue; count += b[ii][jj]%2==1?1:0; } if(b[i][j]==1){ if(count&lt;2 || count&gt;3) b[i][j] = 1; else b[i][j] = 3; }else{ if(count==3){ b[i][j] = 2; } } }}","link":"/leetcode/leetcode-2**/leetcode-289-Game-of-Life.html"},{"title":"leetcode 29. Divide Two Integers","text":"难度：Middleleetcode九章 题目描述Given two integers dividend and divisor, divide two integers without usingmultiplication, division and mod operator. Return the quotient after dividing dividend by divisor. The integer division should truncate toward zero. Example 1: Input: dividend = 10, divisor = 3 Output: 3Example 2: Input: dividend = 7, divisor = -3 Output: -2Note: Both dividend and divisor will be 32-bit signed integers. The divisor will never be 0. Assume we are dealing with an environment which could only store integers within the 32-bit signed integer range: [−231, 231 − 1]. For the purpose of this problem, assume that your function returns 231 − 1 when the division result overflows. Tags: Math, Binary Search Difficulty: Medium 答案 12345678910111213141516171819202122232425262728293031class Solution { public int divide(int dividend, int divisor) { // a/b = c // c*b &lt;= a &lt;= (c+1)*b if(divisor==0) return dividend&gt;=0?Integer.MAX_VALUE:Integer.MIN_VALUE; if(dividend==0) return 0; // -2147483648 / -1 if(dividend==Integer.MIN_VALUE &amp;&amp; divisor==-1) return Integer.MAX_VALUE; if(dividend==Integer.MIN_VALUE &amp;&amp; divisor==1) return Integer.MIN_VALUE; boolean sign = (dividend&gt;0&amp;&amp;divisor&gt;0) || (dividend&lt;0&amp;&amp;divisor&lt;0); long a = Math.abs((long)dividend); long b = Math.abs((long)divisor); long result = 0; while(a&gt;=b){ int shift = 0; while(a&gt;(b&lt;&lt;shift)){ shift++; } if(shift&gt;1){ a -= b&lt;&lt;(shift-1); result += 1&lt;&lt;(shift-1); }else{ a -= b; result += 1; } } if(result&gt;Integer.MAX_VALUE) return Integer.MAX_VALUE; return sign?(int)result:(int)-result; }}","link":"/leetcode/leetcode-2**/leetcode-29-Divide-Two-Integers.html"},{"title":"leetcode 297. Serialize and Deserialize Binary Tree","text":"难度：Hardleetcode九章 题目描述Serialization is the process of converting a data structure or object into asequence of bits so that it can be stored in a file or memory buffer, ortransmitted across a network connection link to be reconstructed later in thesame or another computer environment. Design an algorithm to serialize and deserialize a binary tree. There is norestriction on how your serialization/deserialization algorithm should work.You just need to ensure that a binary tree can be serialized to a string andthis string can be deserialized to the original tree structure. *Example: * You may serialize the following tree: 1 / \\ 2 3 / \\ 4 5 as &quot;[1,2,3,null,null,4,5]&quot;Clarification: The above format is the same as how LeetCode serializes abinary tree. You do not necessarily need to follow thisformat, so please be creative and come up with different approaches yourself. *Note: *Do not use class member/global/static variables to store states.Your serialize and deserialize algorithms should be stateless. Tags: Tree, Design Difficulty: Hard 答案 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748public class Codec { // Encodes a tree to a single string. public String serialize(TreeNode root) { // 前序遍历 StringBuilder sb = new StringBuilder(); serializeHelper(root, sb); System.out.println(sb.toString()); return sb.substring(1, sb.length()).toString(); } private void serializeHelper(TreeNode root, StringBuilder sb){ if(root==null) { sb.append(\" #\"); return; } sb.append(\" \"); sb.append(String.valueOf(root.val)); serializeHelper(root.left, sb); serializeHelper(root.right, sb); } // Decodes your encoded data to tree. public TreeNode deserialize(String data) { if(data==null || data.length()==0) return null; String[] temp = data.split(\" \"); List&lt;String&gt; strs = new ArrayList&lt;&gt;(); for(String s: temp){ strs.add(s); } return deserializeHelper(strs); } private TreeNode deserializeHelper(List&lt;String&gt; strs){ if(strs==null || strs.size()==0) return null; String str = strs.get(0); strs.remove(str); if(str.equals(\"#\")) return null; TreeNode node = new TreeNode(Integer.parseInt(str)); node.left = deserializeHelper(strs); node.right = deserializeHelper(strs); return node; }}// Your Codec object will be instantiated and called as such:// Codec codec = new Codec();// codec.deserialize(codec.serialize(root));","link":"/leetcode/leetcode-2**/leetcode-297-Serialize-and-Deserialize-Binary-Tree.html"},{"title":"leetcode 300. Longest Increasing Subsequence","text":"难度：Middleleetcode九章 题目描述Given an unsorted array of integers, find the length of longest increasingsubsequence. Example: Input: [10,9,2,5,3,7,101,18] Output: 4 Explanation: The longest increasing subsequence is [2,3,7,101], therefore the length is 4. Note: There may be more than one LIS combination, it is only necessary for you to return the length. Your algorithm should run in O( n 2) complexity. Follow up: Could you improve it to O( n log n ) time complexity? Tags: Binary Search, Dynamic Programming Difficulty: Medium 答案 1234567891011121314151617181920// Dp[i] 表示以第i个数字为结尾的最长上升子序列的长度。// 对于每个数字，枚举前面所有小于自己的数字 j，Dp[i] = max{Dp[j]} + 1. 如果没有比自己小的，Dp[i] = 1;class Solution { public int lengthOfLIS(int[] nums) { if(nums==null || nums.length==0) return 0; int n = nums.length; int[] dp = new int[n]; Arrays.fill(dp, 1); int res = 1; for(int i=1; i&lt;n; i++) { for(int j=i-1; j&gt;=0; j--) { if(nums[i]&gt;nums[j]){ dp[i] = Math.max(dp[j]+1, dp[i]); } } res = Math.max(res, dp[i]); } return res; }}","link":"/leetcode/leetcode-3**/leetcode-300-Longest-Increasing-Subsequence.html"},{"title":"leetcode 24. Swap Nodes in Pairs","text":"难度：Middleleetcode九章 题目描述Given a linked list, swap every two adjacent nodes and return its head. You may not modify the values in the list’s nodes, only nodes itself maybe changed. Example: Given 1-&gt;2-&gt;3-&gt;4, you should return the list as 2-&gt;1-&gt;4-&gt;3.Tags: Linked List Difficulty: Medium 答案 12345678910111213141516171819202122class Solution { public ListNode swapPairs(ListNode head) { if(head==null || head.next==null) return head; ListNode dummy = new ListNode(0); ListNode fast = head.next, slow = head, pre = dummy; swap(fast, slow, pre); head = slow; while(slow.next!=null &amp;&amp; slow.next.next!=null){ pre = slow; fast = slow.next.next; slow = slow.next; swap(fast, slow, pre); } return dummy.next; } private void swap(ListNode fast, ListNode slow, ListNode pre){ ListNode next = fast.next; fast.next = slow; slow.next = next; pre.next = fast; }}","link":"/leetcode/leetcode-2**/leetcode-24-Swap-Nodes-in-Pairs.html"},{"title":"leetcode 3. Longest Substring Without Repeating Characters","text":"难度：Middleleetcode九章 题目描述Given a string, find the length of the longest substring without repeatingcharacters. Example 1: Input: &quot;abcabcbb&quot; Output: 3 Explanation: The answer is &quot;abc&quot;, with the length of 3. Example 2: Input: &quot;bbbbb&quot; Output: 1 Explanation: The answer is &quot;b&quot;, with the length of 1.Example 3: Input: &quot;pwwkew&quot; Output: 3 Explanation: The answer is &quot;wke&quot;, with the length of 3. Note that the answer must be a **substring** , &quot;pwke&quot; is a _subsequence_ and not a substring.Tags: Hash Table, Two Pointers, String, Sliding Window Difficulty: Medium 答案 12345678910111213141516// https://leetcode-cn.com/problems/longest-substring-without-repeating-characters/solution/wu-zhong-fu-zi-fu-de-zui-chang-zi-chuan-by-leetcod/class Solution { public int lengthOfLongestSubstring(String s) { int res=0; int[] map = new int[128]; // char: index+1 for(int i=0, j=0; j&lt;s.length(); j++) { char c = s.charAt(j); // 若c在map中, i是c的索引加一 // 不能用map[c]+1,因为会比i=0大 i = Math.max(map[c], i); map[c] = j+1; res = Math.max(res, j-i+1); } return res; }}","link":"/leetcode/leetcode-3**/leetcode-3-Longest-Substring-Without-Repeating-Characters.html"},{"title":"leetcode 328. Odd Even Linked List","text":"难度：Middleleetcode九章 题目描述Given a singly linked list, group all odd nodes together followed by the evennodes. Please note here we are talking about the node number and not the valuein the nodes. You should try to do it in place. The program should run in O(1) spacecomplexity and O(nodes) time complexity. Example 1: Input:1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;NULL Output:1-&gt;3-&gt;5-&gt;2-&gt;4-&gt;NULLExample 2: Input: 2-&gt;1-&gt;3-&gt;5-&gt;6-&gt;4-&gt;7-&gt;NULL Output:2-&gt;3-&gt;6-&gt;7-&gt;1-&gt;5-&gt;4-&gt;NULLNote: The relative order inside both the even and odd groups should remain as it was in the input. The first node is considered odd, the second node even and so on … Tags: Linked List Difficulty: Medium 答案 123456789101112131415161718class Solution { public ListNode oddEvenList(ListNode head) { if(head==null || head.next==null) return head; ListNode odd = head, even = head.next, evenHead = even; // odd even // 1 2 3 // while(even!=null &amp;&amp; even.next!=null){ odd.next = even.next; even.next = even.next.next; odd = odd.next; even = even.next; } odd.next = evenHead; return head; }}","link":"/leetcode/leetcode-3**/leetcode-328-Odd-Even-Linked-List.html"},{"title":"leetcode 34. Find First and Last Position of Element in Sorted Array","text":"难度：Middleleetcode九章 题目描述Given an array of integers nums sorted in ascending order, find the startingand ending position of a given target value. Your algorithm’s runtime complexity must be in the order of O (log n ). If the target is not found in the array, return [-1, -1]. Example 1: Input: nums = [5,7,7,8,8,10], target = 8 Output: [3,4]Example 2: Input: nums = [5,7,7,8,8,10], target = 6 Output: [-1,-1]Tags: Array, Binary Search Difficulty: Medium 答案 123456789101112131415class Solution: def searchRange(self, nums: List[int], target: int) -&gt; List[int]: def helper(n): l, r = 0, len(nums)-1 while l&lt;=r: mid = (l+r)//2 if nums[mid]&lt;=n: l = mid+1 else: r = mid-1 return l if not nums: return [-1, -1] # print(helper(target), helper(target-1)) start = helper(target-1) end = helper(target)-1 return [start, end] if start&lt;=end else [-1, -1] 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748class Solution { public int[] searchRange(int[] nums, int target) { int[] res = new int[]{-1, -1}; if(nums==null || nums.length==0) return res; // end 为nums.length 为了确保能进while, 如[0]的情况不会进入while int start = 0, end = nums.length, mid = start+(end-start)/2; // 第一次二分的过程，确定第二次二分的end int max = end; while(start &lt; end){ mid = start+(end-start)/2; if(nums[mid]==target) { if(mid==0 || nums[mid-1]!=target) { res[0] = mid; break; }else { end = mid; } }else if(nums[mid]&gt;target){ max = mid; end = mid; }else { // 没有target的情况下，直接返回 if(mid+1&gt;=nums.length || nums[mid+1]&gt;target){ return res; } start = mid; } } end = max; while(start &lt; end){ mid = start+(end-start)/2; if(nums[mid]==target) { if(mid==nums.length-1 || nums[mid+1]!=target) { res[1] = mid; break; }else { start = mid; } }else if(nums[mid]&gt;target){ end = mid; }else { start = mid; } } return res; }}","link":"/leetcode/leetcode-3**/leetcode-34-Find-First-and-Last-Position-of-Element-in-Sorted-Array.html"},{"title":"leetcode 334. Increasing Triplet Subsequence","text":"难度：Middleleetcode九章 题目描述Given an unsorted array return whether an increasing subsequence of length 3exists or not in the array. Formally the function should: Return true if there exists i, j, k such that arr[i] &lt; arr[j] &lt; arr[k] given 0 ≤ i &lt; j &lt; k ≤ n -1else return false. Note: Your algorithm should run in O( n ) time complexity and O( 1 )space complexity. Example 1: Input: [1,2,3,4,5] Output: trueExample 2: Input: [5,4,3,2,1] Output: falseTags: Difficulty: Medium 答案 123456789101112131415class Solution { public boolean increasingTriplet(int[] nums) { int one = Integer.MAX_VALUE, two = one; for(int n: nums){ if(n&lt;=one){ one = n; }else if(n&lt;=two) { two = n; }else{ return true; } } return false; }}","link":"/leetcode/leetcode-3**/leetcode-334-Increasing-Triplet-Subsequence.html"},{"title":"leetcode 341. Flatten Nested List Iterator","text":"难度：Middleleetcode九章 题目描述Given a nested list of integers, implement an iterator to flatten it. Each element is either an integer, or a list – whose elements may also beintegers or other lists. Example 1: Input: [[1,1],2,[1,1]] Output: [1,1,2,1,1] Explanation: By calling _next_ repeatedly until _hasNext_ returns false, the order of elements returned by _next_ should be: [1,1,2,1,1].Example 2: Input: [1,[4,[6]]] Output: [1,4,6] Explanation: By calling _next_ repeatedly until _hasNext_ returns false, the order of elements returned by _next_ should be: [1,4,6].Tags: Stack, Design Difficulty: Medium 答案 12345678910111213141516171819202122232425262728293031public class NestedIterator implements Iterator&lt;Integer&gt; { private Stack&lt;NestedInteger&gt; stack = new Stack&lt;&gt;(); public NestedIterator(List&lt;NestedInteger&gt; l) { for(int i=l.size()-1; i&gt;=0; i--){ stack.push(l.get(i)); // System.out.println(\"push\"); } } @Override public Integer next() { if (!hasNext()) { return null; } return stack.pop().getInteger(); } @Override public boolean hasNext() { while(!stack.isEmpty() &amp;&amp; !stack.peek().isInteger()){ List&lt;NestedInteger&gt; l = stack.pop().getList(); for(int i=l.size()-1; i&gt;=0; i--){ stack.push(l.get(i)); } } return !stack.isEmpty(); }}","link":"/leetcode/leetcode-3**/leetcode-341-Flatten-Nested-List-Iterator.html"},{"title":"leetcode 344. Reverse String","text":"难度：Easyleetcode九章 题目描述Write a function that reverses a string. The input string is given as an arrayof characters char[]. Do not allocate extra space for another array, you must do this by modifyingthe input array [in-place](https://en.wikipedia.org/wiki/In-place_algorithm) with O(1) extra memory. You may assume all the characters consist of printable asciicharacters. Example 1: Input: [&quot;h&quot;,&quot;e&quot;,&quot;l&quot;,&quot;l&quot;,&quot;o&quot;] Output: [&quot;o&quot;,&quot;l&quot;,&quot;l&quot;,&quot;e&quot;,&quot;h&quot;]Example 2: Input: [&quot;H&quot;,&quot;a&quot;,&quot;n&quot;,&quot;n&quot;,&quot;a&quot;,&quot;h&quot;] Output: [&quot;h&quot;,&quot;a&quot;,&quot;n&quot;,&quot;n&quot;,&quot;a&quot;,&quot;H&quot;]Tags: Two Pointers, String Difficulty: Easy 答案 12345678910111213class Solution { public void reverseString(char[] s) { if(s==null || s.length==0) return; int i = 0, j = s.length-1; while(i&lt;j){ char t = s[i]; s[i] = s[j]; s[j] = t; i++; j--; } }}","link":"/leetcode/leetcode-3**/leetcode-344-Reverse-String.html"},{"title":"leetcode 347. Top K Frequent Elements","text":"难度：Middleleetcode九章 题目描述Given a non-empty array of integers, return the k most frequentelements. Example 1: Input: nums = [1,1,1,2,2,3], k = 2 Output: [1,2]Example 2: Input: nums = [1], k = 1 Output: [1]Note: You may assume k is always valid, 1 ≤ k ≤ number of unique elements. Your algorithm’s time complexity must be better than O( n log n ), where n is the array’s size. Tags: Hash Table, Heap Difficulty: Medium 答案 12345678910111213141516171819202122232425262728class Solution { public List&lt;Integer&gt; topKFrequent(int[] nums, int k) { if(nums==null || nums.length==0) return null; List&lt;Integer&gt; res = new ArrayList&lt;&gt;(); HashMap&lt;Integer, Integer&gt; map = new HashMap&lt;&gt;(); for(int num: nums){ if(!map.containsKey(num)){ map.put(num, 1); }else{ map.put(num, 1+map.get(num)); } } PriorityQueue&lt;Map.Entry&lt;Integer, Integer&gt;&gt; priorityQueue = new PriorityQueue&lt;&gt;(k, (j, i)-&gt;(i.getValue() - j.getValue())); for(Map.Entry&lt;Integer, Integer&gt; entry: map.entrySet()){ priorityQueue.add(entry); } // 为什么取出了所有的值？ // while(!priorityQueue.isEmpty()){ // res.add(priorityQueue.poll().getKey()); // } for(int i=0; i&lt;k; i++){ res.add(priorityQueue.poll().getKey()); } return res; }}","link":"/leetcode/leetcode-3**/leetcode-347-Top-K-Frequent-Elements.html"},{"title":"leetcode 350. Intersection of Two Arrays II","text":"难度：Easyleetcode九章 题目描述Given two arrays, write a function to compute their intersection. Example 1: Input: nums1 = [1,2,2,1], nums2 = [2,2] Output: [2,2]Example 2: Input: nums1 = [4,9,5], nums2 = [9,4,9,8,4] Output: [4,9]Note: Each element in the result should appear as many times as it shows in both arrays. The result can be in any order. Follow up: What if the given array is already sorted? How would you optimize your algorithm? What if nums1 ‘s size is small compared to nums2 ‘s size? Which algorithm is better? What if elements of nums2 are stored on disk, and the memory is limited such that you cannot load all elements into the memory at once? Tags: Hash Table, Two Pointers, Binary Search, Sort Difficulty: Easy 答案 123456789class Solution: def intersect(self, nums1: List[int], nums2: List[int]) -&gt; List[int]: m = collections.Counter(nums1) res = [] for i in nums2: if m.get(i, 0)&gt;0: m[i] -= 1 res.append(i) return res 123456789101112131415161718192021222324252627282930313233class Solution { public int[] intersect(int[] nums1, int[] nums2) { Map&lt;Integer, Integer&gt; m = new HashMap&lt;&gt;(); List&lt;Integer&gt; res; for(int n: nums1){ if(!m.containsKey(n)){ m.put(n, 1); }else{ m.put(n, m.get(n)+1); } } res = new ArrayList&lt;&gt;(); for(int n: nums2){ if(m.containsKey(n)){ res.add(n); int num = m.get(n); if(num==1){ m.remove(n); }else{ m.put(n, num-1); } } if(m.isEmpty()) break; } int[] ress = new int[res.size()]; for(int i=0; i&lt;res.size(); i++){ ress[i] = res.get(i); } return ress; }}","link":"/leetcode/leetcode-3**/leetcode-350-Intersection-of-Two-Arrays-II-1.html"},{"title":"leetcode 118. Pascal's Triangle","text":"难度：Easyleetcode九章 题目描述Given two arrays, write a function to compute their intersection. Example 1: Input: nums1 = [1,2,2,1], nums2 = [2,2] Output: [2,2]Example 2: Input: nums1 = [4,9,5], nums2 = [9,4,9,8,4] Output: [4,9]Note: Each element in the result should appear as many times as it shows in both arrays. The result can be in any order. Follow up: What if the given array is already sorted? How would you optimize your algorithm? What if nums1 ‘s size is small compared to nums2 ‘s size? Which algorithm is better? What if elements of nums2 are stored on disk, and the memory is limited such that you cannot load all elements into the memory at once? Tags: Hash Table, Two Pointers, Binary Search, Sort Difficulty: Easy 答案 1234567891011121314151617181920212223242526272829class Solution { public List&lt;List&lt;Integer&gt;&gt; generate(int n) { List&lt;List&lt;Integer&gt;&gt; res = new ArrayList&lt;&gt;(); if(n==0) return res; List&lt;Integer&gt; l = new ArrayList&lt;&gt;(); l.add(1); res.add(new ArrayList&lt;&gt;(l)); if(n==1) { return res; } l.add(1); res.add(new ArrayList&lt;&gt;(l)); if(n==2) { return res; } for(int i=3; i&lt;=n; i++) { List&lt;Integer&gt; last = res.get(res.size()-1); l.clear(); l.add(1); // i=3-&gt;[1] for(int j=1; j&lt;=i-2; j++){ l.add(last.get(j-1)+last.get(j)); } l.add(1); res.add(new ArrayList&lt;&gt;(l)); } return res; }}","link":"/leetcode/leetcode-3**/leetcode-350-Intersection-of-Two-Arrays-II.html"},{"title":"leetcode 36. Valid Sudoku","text":"难度：Middleleetcode九章 题目描述Determine if a 9x9 Sudoku board is valid. Only the filled cells need to bevalidated according to the following rules : Each row must contain the digits 1-9 without repetition. Each column must contain the digits 1-9 without repetition. Each of the 9 3x3 sub-boxes of the grid must contain the digits 1-9 without repetition. ![](https://upload.wikimedia.org/wikipedia/commons/thumb/f/ff/Sudoku-by-L2G-20050714.svg/250px-Sudoku-by-L2G-20050714.svg.png)A partially filled sudoku which is valid. The Sudoku board could be partially filled, where empty cells are filled withthe character '.'. Example 1: Input: [ [&quot;5&quot;,&quot;3&quot;,&quot;.&quot;,&quot;.&quot;,&quot;7&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;], [&quot;6&quot;,&quot;.&quot;,&quot;.&quot;,&quot;1&quot;,&quot;9&quot;,&quot;5&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;], [&quot;.&quot;,&quot;9&quot;,&quot;8&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;6&quot;,&quot;.&quot;], [&quot;8&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;6&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;3&quot;], [&quot;4&quot;,&quot;.&quot;,&quot;.&quot;,&quot;8&quot;,&quot;.&quot;,&quot;3&quot;,&quot;.&quot;,&quot;.&quot;,&quot;1&quot;], [&quot;7&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;2&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;6&quot;], [&quot;.&quot;,&quot;6&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;2&quot;,&quot;8&quot;,&quot;.&quot;], [&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;4&quot;,&quot;1&quot;,&quot;9&quot;,&quot;.&quot;,&quot;.&quot;,&quot;5&quot;], [&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;8&quot;,&quot;.&quot;,&quot;.&quot;,&quot;7&quot;,&quot;9&quot;] ] Output: trueExample 2: Input: [ [&quot;8&quot;,&quot;3&quot;,&quot;.&quot;,&quot;.&quot;,&quot;7&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;], [&quot;6&quot;,&quot;.&quot;,&quot;.&quot;,&quot;1&quot;,&quot;9&quot;,&quot;5&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;], [&quot;.&quot;,&quot;9&quot;,&quot;8&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;6&quot;,&quot;.&quot;], [&quot;8&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;6&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;3&quot;], [&quot;4&quot;,&quot;.&quot;,&quot;.&quot;,&quot;8&quot;,&quot;.&quot;,&quot;3&quot;,&quot;.&quot;,&quot;.&quot;,&quot;1&quot;], [&quot;7&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;2&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;6&quot;], [&quot;.&quot;,&quot;6&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;2&quot;,&quot;8&quot;,&quot;.&quot;], [&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;4&quot;,&quot;1&quot;,&quot;9&quot;,&quot;.&quot;,&quot;.&quot;,&quot;5&quot;], [&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;8&quot;,&quot;.&quot;,&quot;.&quot;,&quot;7&quot;,&quot;9&quot;] ] Output: false Explanation: Same as Example 1, except with the **5** in the top left corner being modified to **8**. Since there are two 8&apos;s in the top left 3x3 sub-box, it is invalid.Note: A Sudoku board (partially filled) could be valid but is not necessarily solvable. Only the filled cells need to be validated according to the mentioned rules. The given board contain only digits 1-9 and the character '.'. The given board size is always 9x9. Tags: Hash Table Difficulty: Medium 答案 12345678910111213141516171819202122232425262728class Solution { public boolean isValidSudoku(char[][] cs) { HashSet&lt;Character&gt; row = new HashSet&lt;&gt;(); HashSet&lt;Character&gt; col = new HashSet&lt;&gt;(); HashSet&lt;Character&gt; cube = new HashSet&lt;&gt;(); for(int i=0; i&lt;9; i++){ row.clear(); col.clear(); cube.clear(); for(int j=0; j&lt;9; j++){ if(cs[i][j]!='.' &amp;&amp; !row.add(cs[i][j])) return false; if(cs[j][i]!='.' &amp;&amp; !col.add(cs[j][i])) return false; // i 确定 是哪个cube // 0 1 2 // 3 4 5 // 6 7 8 // rowIndex colIndex 起始为cube左上角坐标 int rowIndex = 3*(i/3); int colIndex = 3*(i%3); // j 确定是cube的哪个点 int rowi = rowIndex+j/3; int coli = colIndex+j%3; if(cs[rowi][coli]!='.' &amp;&amp; !cube.add(cs[rowi][coli])) return false; } } return true; }}","link":"/leetcode/leetcode-3**/leetcode-36-Valid-Sudoku.html"},{"title":"leetcode 378. Kth Smallest Element in a Sorted Matrix","text":"难度：Middleleetcode九章 题目描述Given a n x n matrix where each of the rows and columns are sorted inascending order, find the kth smallest element in the matrix. Note that it is the kth smallest element in the sorted order, not the kthdistinct element. Example: matrix = [ [ 1, 5, 9], [10, 11, 13], [12, 13, 15] ], k = 8, return 13.Note:You may assume k is always valid, 1 ≤ k ≤ n2. Tags: Binary Search, Heap Difficulty: Medium 答案 1234567891011121314151617class Solution { // priorityQueue // Runtime: 30 ms, faster than 22.86% of Java online submissions // Memory Usage: 43 MB, less than 83.78% of Java online submissions public int kthSmallest_0(int[][] ma, int k) { PriorityQueue&lt;Integer&gt; pq = new PriorityQueue&lt;&gt;(k); for(int i=0; i&lt;ma.length; i++){ for(int j=0; j&lt;ma[0].length; j++){ pq.add(ma[i][j]); } } for(int i=0; i&lt;k-1; i++) { pq.poll(); } return pq.poll(); }} 12345678910class Solution: def kthSmallest(self, matrix: List[List[int]], k: int) -&gt; int: n = len(matrix) pq = [(matrix[i][0], i, 0) for i in range(n)] heapq.heapify(pq) for i in range(k-1): _, x, y = heapq.heappop(pq) if y+1!=n: heapq.heappush(pq, (matrix[x][y+1], x, y+1)) return heapq.heappop(pq)[0]","link":"/leetcode/leetcode-3**/leetcode-378-Kth-Smallest-Element-in-a-Sorted-Matrix.html"},{"title":"leetcode 384. Shuffle an Array","text":"难度：Middleleetcode九章 题目描述Shuffle a set of numbers without duplicates. Example: // Init an array with set 1, 2, and 3. int[] nums = {1,2,3}; Solution solution = new Solution(nums); // Shuffle the array [1,2,3] and return its result. Any permutation of [1,2,3] must equally likely to be returned. solution.shuffle(); // Resets the array back to its original configuration [1,2,3]. solution.reset(); // Returns the random shuffling of array [1,2,3]. solution.shuffle();Tags: Difficulty: Medium 答案 1234567891011121314151617181920212223242526272829class Solution { private int[] origin; private int[] array; private Random rand = new Random(); public Solution(int[] nums) { array = nums; origin = array.clone(); } public int[] reset() { array = origin.clone(); return origin; } public int[] shuffle() { for(int i=0; i&lt;array.length; i++){ swap(array, i, rand.nextInt(array.length-i)+i); } return array; } private void swap(int[] nums, int a, int b){ int temp = nums[a]; nums[a] = nums[b]; nums[b] = temp; }}","link":"/leetcode/leetcode-3**/leetcode-384-Shuffle-an-Array.html"},{"title":"leetcode 380. Insert Delete GetRandom O(1)","text":"难度：Middleleetcode九章 题目描述Design a data structure that supports all following operations in averageO(1) time. insert(val): Inserts an item val to the set if not already present. remove(val): Removes an item val from the set if present. getRandom: Returns a random element from current set of elements. Each element must have the same probability of being returned. Example: // Init an empty set. RandomizedSet randomSet = new RandomizedSet(); // Inserts 1 to the set. Returns true as 1 was inserted successfully. randomSet.insert(1); // Returns false as 2 does not exist in the set. randomSet.remove(2); // Inserts 2 to the set, returns true. Set now contains [1,2]. randomSet.insert(2); // getRandom should return either 1 or 2 randomly. randomSet.getRandom(); // Removes 1 from the set, returns true. Set now contains [2]. randomSet.remove(1); // 2 was already in the set, so return false. randomSet.insert(2); // Since 2 is the only number in the set, getRandom always return 2. randomSet.getRandom();Tags: Array, Hash Table, Design Difficulty: Medium 答案 123456789101112131415161718192021222324252627282930313233343536373839404142434445class RandomizedSet { List&lt;Integer&gt; l; // val Map&lt;Integer, Integer&gt; map; // val to index Random r; public RandomizedSet() { l = new ArrayList&lt;&gt;(); map = new HashMap&lt;&gt;(); r = new Random(); } public boolean insert(int val) { if(map.containsKey(val)){ return false; }else{ l.add(val); map.put(val, l.size()-1); return true; } } public boolean remove(int val) { if(map.containsKey(val)){ int index = map.get(val); if(index!=l.size()-1){ int end = l.get(l.size()-1); l.set(index, end); map.put(end, index); } l.remove(l.size()-1); map.remove(val); return true; }else{ return false; } } public int getRandom() { return l.get(r.nextInt(l.size())); }}","link":"/leetcode/leetcode-3**/leetcode-380-Insert-Delete-GetRandom-O-1.html"},{"title":"leetcode 387. First Unique Character in a String","text":"难度：Easyleetcode九章 题目描述Given a string, find the first non-repeating character in it and return it’sindex. If it doesn’t exist, return -1. Examples: s = &quot;leetcode&quot; return 0. s = &quot;loveleetcode&quot;, return 2.Note: You may assume the string contain only lowercase letters. Tags: Hash Table, String Difficulty: Easy 答案 123456789101112131415161718192021222324class Solution { public int firstUniqChar(String s) { // map记录char出现次数 int[] map = new int[256]; // start记录char起始的index int[] start = new int[256]; Arrays.fill(start, -1); char[] cs = s.toCharArray(); for(int i=0; i&lt;cs.length; i++) { char c = cs[i]; map[c] += 1; if(start[c]==-1){ start[c] = i; } } int res = Integer.MAX_VALUE; for(int i=0; i&lt;256; i++){ if(map[i]==1){ res = Math.min(res, start[i]); } } return res==Integer.MAX_VALUE?-1:res; }}","link":"/leetcode/leetcode-3**/leetcode-387-First-Unique-Character-in-a-String.html"},{"title":"leetcode 39. Combination Sum","text":"难度：Middleleetcode九章 题目描述Given a set of candidate numbers (candidates) (without duplicates)and a target number (target), find all unique combinations in candidateswhere the candidate numbers sums to target. The same repeated number may be chosen from candidates unlimited numberof times. Note: All numbers (including target) will be positive integers. The solution set must not contain duplicate combinations. Example 1: Input: candidates = [2,3,6,7], target = 7, **A solution set is:** [ [7], [2,2,3] ]Example 2: Input: candidates = [2,3,5], target = 8, **A solution set is:** [ [2,2,2,2], [2,3,3], [3,5] ]Tags: Array, Backtracking Difficulty: Medium 答案 123456789101112131415161718192021class Solution { public List&lt;List&lt;Integer&gt;&gt; combinationSum(int[] nums, int target) { List&lt;List&lt;Integer&gt;&gt; res = new ArrayList&lt;&gt;(); if(nums==null || nums.length==0) return res; Arrays.sort(nums); helper(nums, target, res, new ArrayList&lt;Integer&gt;(), 0); return res; } private void helper(int[] nums, int target, List&lt;List&lt;Integer&gt;&gt; res, List&lt;Integer&gt; cur, int start){ if(target==0) { res.add(new ArrayList&lt;&gt;(cur)); }else if(target&gt;0) { // start 去重, 且一个数字可以使用多次，故不是i+1 for(int i=start; i&lt;nums.length; i++){ cur.add(nums[i]); helper(nums, target-nums[i], res, cur, i); cur.remove(cur.size()-1); } } }}","link":"/leetcode/leetcode-3**/leetcode-39-Combination-Sum.html"},{"title":"leetcode 409. Longest Palindrome","text":"难度：Easyleetcode九章 题目描述Given a string which consists of lowercase or uppercase letters, find thelength of the longest palindromes that can be built with those letters. This is case sensitive, for example &quot;Aa&quot; is not considered a palindromehere. Note:Assume the length of given string will not exceed 1,010. Example: Input: &quot;abccccdd&quot; Output: 7 Explanation: One longest palindrome that can be built is &quot;dccaccd&quot;, whose length is 7.Tags: Hash Table Difficulty: Easy 答案 123456789101112131415161718192021222324252627282930313233343536// map -&gt; int[256]// 6ms -&gt; 1ms// map iter// for(Map.Entry&lt;A, B&gt; entry: map.entrySet())// for(A key: map.keySet())// for(B value: map.values())class Solution { public int longestPalindrome(String s) { if(s==null || s.length()==0) return 0; // Map&lt;Character, Integer&gt; map = new HashMap&lt;&gt;(); int[] map = new int[256]; for(char c: s.toCharArray()) { // if(!map.containsKey(c)){ // map.put(c, 1); // }else{ // map.put(c, 1+map.get(c)); // } map[c]++; } int res = 0; // map的value中是否有奇数 boolean one = false; // for(Integer value: map.values()) { for(int value: map) { if(value%2==1){ one = true; res += value-1; }else{ res += value; } } return res+(one?1:0); }}","link":"/leetcode/leetcode-4**/leetcode-409-Longest-Palindrome.html"},{"title":"leetcode 412. Fizz Buzz","text":"难度：Easyleetcode九章 题目描述Write a program that outputs the string representation of numbers from 1 ton. But for multiples of three it should output “Fizz” instead of the number andfor the multiples of five output “Buzz”. For numbers which are multiples ofboth three and five output “FizzBuzz”. Example: n = 15, Return: [ &quot;1&quot;, &quot;2&quot;, &quot;Fizz&quot;, &quot;4&quot;, &quot;Buzz&quot;, &quot;Fizz&quot;, &quot;7&quot;, &quot;8&quot;, &quot;Fizz&quot;, &quot;Buzz&quot;, &quot;11&quot;, &quot;Fizz&quot;, &quot;13&quot;, &quot;14&quot;, &quot;FizzBuzz&quot; ]Tags: Difficulty: Easy 答案 123456789101112class Solution { public List&lt;String&gt; fizzBuzz(int n) { List&lt;String&gt; res = new ArrayList&lt;&gt;(); for(int i=0; i&lt;n; i++){ if((i+1)%15==0) res.add(\"FizzBuzz\"); else if((i+1)%5==0) res.add(\"Buzz\"); else if((i+1)%3==0) res.add(\"Fizz\"); else res.add(String.valueOf(i+1)); } return res; }}","link":"/leetcode/leetcode-4**/leetcode-412-Fizz-Buzz.html"},{"title":"leetcode 42. Trapping Rain Water","text":"难度：Hardleetcode九章 题目描述Given n non-negative integers representing an elevation map where the widthof each bar is 1, compute how much water it is able to trap after raining. The above elevation map is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. Inthis case, 6 units of rain water (blue section) are being trapped. ThanksMarcos for contributing this image! Example: Input: [0,1,0,2,1,0,1,3,2,1,2,1] Output: 6Tags: Array, Two Pointers, Stack Difficulty: Hard 答案 12345678910111213141516171819202122232425// https://leetcode-cn.com/problems/trapping-rain-water/solution/xiang-xi-tong-su-de-si-lu-fen-xi-duo-jie-fa-by-w-8/// 解法3class Solution { public int trap(int[] h) { int n = h.length; if(n&lt;2) return 0; int[] left = new int[n]; int[] right = new int[n]; left[0] = 0; right[n-1] = 0; for(int i=1; i&lt;n; i++){ left[i] = Math.max(left[i-1], h[i-1]); } for(int i=n-2; i&gt;=0; i--){ right[i] = Math.max(right[i+1], h[i+1]); } int res = 0; for(int i=1; i&lt;n; i++){ int min = Math.min(left[i], right[i]); if(h[i]&gt;=min) continue; res += min-h[i]; } return res; }}","link":"/leetcode/leetcode-4**/leetcode-42-Trapping-Rain-Water.html"},{"title":"leetcode 454. 4Sum II","text":"难度：Middleleetcode九章 题目描述Given four lists A, B, C, D of integer values, compute how many tuples (i, j, k, l) there are such that A[i] + B[j] + C[k] + D[l] is zero. To make problem a bit easier, all A, B, C, D have same length of N where 0 ≤ N≤ 500. All integers are in the range of -228 to 228 - 1 and the result isguaranteed to be at most 231 - 1. Example: Input: A = [ 1, 2] B = [-2,-1] C = [-1, 2] D = [ 0, 2] Output: 2 Explanation: The two tuples are: 1. (0, 0, 0, 1) -&gt; A[0] + B[0] + C[0] + D[1] = 1 + (-2) + (-1) + 2 = 0 2. (1, 1, 0, 0) -&gt; A[1] + B[1] + C[0] + D[0] = 2 + (-1) + (-1) + 0 = 0Tags: Hash Table, Binary Search Difficulty: Medium 答案 123456789101112131415161718192021222324class Solution { public int fourSumCount(int[] a, int[] b, int[] c, int[] d) { HashMap&lt;Integer, Integer&gt; map = new HashMap&lt;&gt;(); for(int i: a){ for(int j: b){ if(map.containsKey(i+j)){ map.put(i+j, map.get(i+j)+1); }else{ map.put(i+j, 1); } } } int res = 0; for(int i: c){ for(int j: d){ int target = 0 - i - j; if(map.containsKey(target)){ res += map.get(target); } } } return res; }}","link":"/leetcode/leetcode-4**/leetcode-454-4Sum-II.html"},{"title":"leetcode 46. Permutations","text":"难度：Middleleetcode九章 题目描述Given a collection of distinct integers, return all possible permutations. Example: Input: [1,2,3] Output: [ [1,2,3], [1,3,2], [2,1,3], [2,3,1], [3,1,2], [3,2,1] ]Tags: Backtracking Difficulty: Medium 答案 123456789101112131415161718192021222324252627class Solution { public List&lt;List&lt;Integer&gt;&gt; permute(int[] nums) { return helper(nums, nums.length); } // 前len个数的组合 private List&lt;List&lt;Integer&gt;&gt; helper(int[] nums, int len) { List&lt;List&lt;Integer&gt;&gt; res = new ArrayList&lt;&gt;(); if(nums==null || nums.length==0) return res; if(len==1) { res.add(new ArrayList&lt;&gt;(Arrays.asList(nums[0]))); return res; } // 1 2 2 1 // 插入3 // 3 1 2 1 3 2 1 2 3 // 3 2 1 2 3 1 2 1 3 for(List&lt;Integer&gt; l: helper(nums, len-1)){ for(int i=0; i&lt;=len-1; i++){ List&lt;Integer&gt; temp = new ArrayList&lt;&gt;(l); temp.add(i, nums[len-1]); res.add(temp); } } return res; }}","link":"/leetcode/leetcode-4**/leetcode-46-Permutations.html"},{"title":"leetcode 461. Hamming Distance","text":"难度：Easyleetcode九章 题目描述The Hamming distance betweentwo integers is the number of positions at which the corresponding bits aredifferent. Given two integers x and y, calculate the Hamming distance. Note:0 ≤ x, y &lt; 231. Example: Input: x = 1, y = 4 Output: 2 Explanation: 1 (0 0 0 1) 4 (0 1 0 0) ↑ ↑ The above arrows point to positions where the corresponding bits are different.Tags: Bit Manipulation Difficulty: Easy 答案 12345678910111213141516171819202122232425class Solution { public int hammingDistance(int x, int y) { int res = 0; while(!(x==y || (x==0 &amp;&amp; y==0))){ int a = x%2, b = y%2; if(a!=b) res++; x&gt;&gt;=1; y&gt;&gt;=1; } return res; }}class Solution { public int hammingDistance(int x, int y) { int res = 0; int n = x^y; while(n!=0){ res++; // 去除最后一个1 n = n &amp; (n-1); } return res; }}","link":"/leetcode/leetcode-4**/leetcode-461-Hamming-Distance.html"},{"title":"leetcode 48. Rotate Image","text":"难度：Middleleetcode九章 题目描述You are given an n x n 2D matrix representing an image. Rotate the image by 90 degrees (clockwise). Note: You have to rotate the image [in-place](https://en.wikipedia.org/wiki/In-place_algorithm), which means you have to modify the input 2D matrix directly.DO NOT allocate another 2D matrix and do the rotation. Example 1: Given **input matrix** = [ [1,2,3], [4,5,6], [7,8,9] ], rotate the input matrix **in-place** such that it becomes: [ [7,4,1], [8,5,2], [9,6,3] ]Example 2: Given **input matrix** = [ [ 5, 1, 9,11], [ 2, 4, 8,10], [13, 3, 6, 7], [15,14,12,16] ], rotate the input matrix **in-place** such that it becomes: [ [15,13, 2, 5], [14, 3, 4, 1], [12, 6, 8, 9], [16, 7,10,11] ]Tags: Array Difficulty: Medium 答案 12345678910111213141516171819202122232425class Solution { public void rotate(int[][] m) { // goal: (i, j) --&gt; (j, n-1-i) // step 1: (i, j) --&gt; (j, i) // step 2: (j, i) -- &gt; (j, n-1-i) int n = m.length; // 下三角与上三角互换 for(int i=0; i&lt;n; i++) { for(int j=0; j&lt;=i; j++) { int temp = m[i][j]; m[i][j] = m[j][i]; m[j][i] = temp; } } // 逆转每一行 for(int r=0; r&lt;n; r++) { for(int i=0, j=n-1; i&lt;j; i++, j--){ int temp = m[r][i]; m[r][i] = m[r][j]; m[r][j] = temp; } } }}","link":"/leetcode/leetcode-4**/leetcode-48-Rotate-Image.html"},{"title":"leetcode 49. Group Anagrams","text":"难度：Middleleetcode九章 题目描述Given an array of strings, group anagrams together. Example: Input: [&quot;eat&quot;, &quot;tea&quot;, &quot;tan&quot;, &quot;ate&quot;, &quot;nat&quot;, &quot;bat&quot;], Output: [ [&quot;ate&quot;,&quot;eat&quot;,&quot;tea&quot;], [&quot;nat&quot;,&quot;tan&quot;], [&quot;bat&quot;] ]Note: All inputs will be in lowercase. The order of your output does not matter. Tags: Hash Table, String Difficulty: Medium 答案 12345678910111213141516// map.putIfAbsent// map.get(key).add(s)// new ArrayList&lt;&gt;(map.values())class Solution { public List&lt;List&lt;String&gt;&gt; groupAnagrams(String[] strs) { HashMap&lt;String, List&lt;String&gt;&gt; map = new HashMap&lt;&gt;(); for(String s: strs){ char[] cs = s.toCharArray(); Arrays.sort(cs); String key = String.valueOf(cs); map.putIfAbsent(key, new ArrayList&lt;String&gt;()); map.get(key).add(s); } return new ArrayList&lt;&gt;(map.values()); }}","link":"/leetcode/leetcode-4**/leetcode-49-Group-Anagrams.html"},{"title":"leetcode 50. Pow(x, n)","text":"难度：Middleleetcode九章 题目描述Implement pow( x , n), which calculates xraised to the power n (xn). Example 1: Input: 2.00000, 10 Output: 1024.00000Example 2: Input: 2.10000, 3 Output: 9.26100Example 3: Input: 2.00000, -2 Output: 0.25000 Explanation: 2-2 = 1/22 = 1/4 = 0.25Note: -100.0 &lt; x &lt; 100.0 n is a 32-bit signed integer, within the range [−231, 231 − 1] Tags: Math, Binary Search Difficulty: Medium 答案 123456789class Solution { public double myPow(double x, int n) { if(n==0) return 1; if(n==1) return x; if(n==-1) return 1/x; double half = myPow(x, n/2); return half*half*myPow(x, n%2); }};","link":"/leetcode/leetcode-5**/leetcode-50-Pow-x-n.html"},{"title":"leetcode 525. Contiguous Array","text":"leetcode九章 题目描述Given a binary array, find the maximum length of a contiguous subarray withequal number of 0 and 1. Example 1: Input: [0,1] Output: 2 Explanation: [0, 1] is the longest contiguous subarray with equal number of 0 and 1.Example 2: Input: [0,1,0] Output: 2 Explanation: [0, 1] (or [1, 0]) is a longest contiguous subarray with equal number of 0 and 1.Note: The length of the given binary array will not exceed 50,000. Tags: Hash Table Difficulty: Medium 答案\u0004 123456789101112131415161718class Solution: def findMaxLength(self, nums: List[int]) -&gt; int: res = 0 count = 0 m = {0: -1} # 遇到 1 的时候， count 变量加 1 ，遇到 0 的时候 count 变量减 1 # 如果我们在遍历数组的过程汇中遇到了相同的 count 2 次，这意味着这两个位置之间 0 和 1 的数目一样多 # 因此我们只需要使用一个 HashMap来保存所有的 (index, count)对。对于一个 count ，我们只记录它第一次出现的位置，后面遇到相同的 count我们都用这个第一次记录的 index 来计算子数组的长度 for i, v in enumerate(nums): if not v: count -= 1 else: count += 1 if count in m: res = max(res, i-m[count]) else: m[count] = i return res","link":"/leetcode/leetcode-5**/leetcode-525-Contiguous-Array.html"},{"title":"leetcode 538. Convert BST to Greater Tree","text":"难度：Easyleetcode九章 题目描述Given a Binary Search Tree (BST), convert it to a Greater Tree such that everykey of the original BST is changed to the original key plus sum of all keysgreater than the original key in BST. Example: Input: The root of a Binary Search Tree like this: 5 / \\ 2 13 Output: The root of a Greater Tree like this: 18 / \\ 20 13Tags: Tree Difficulty: Easy 答案 12345678910111213// https://leetcode-cn.com/problems/convert-bst-to-greater-tree/solution/ba-er-cha-sou-suo-shu-zhuan-huan-wei-lei-jia-shu-3/class Solution { int sum = 0; public TreeNode convertBST(TreeNode root) { if(root==null) return root; convertBST(root.right); sum += root.val; root.val = sum; convertBST(root.left); return root; }}","link":"/leetcode/leetcode-5**/leetcode-538-Convert-BST-to-Greater-Tree.html"},{"title":"leetcode 55. Jump Game","text":"leetcode九章 题目描述Given an array of non-negative integers, you are initially positioned at thefirst index of the array. Each element in the array represents your maximum jump length at thatposition. Determine if you are able to reach the last index. Example 1: Input: [2,3,1,1,4] Output: true Explanation: Jump 1 step from index 0 to 1, then 3 steps to the last index.Example 2: Input: [3,2,1,0,4] Output: false Explanation: You will always arrive at index 3 no matter what. Its maximum jump length is 0, which makes it impossible to reach the last index.Tags: Array, Greedy Difficulty: Medium 答案\u0004 跳跃游戏 - 跳跃游戏 - 力扣（LeetCode） 1234567891011121314151617181920212223242526class Solution: def canJump1(self, nums: List[int]) -&gt; bool: # 12:29-12:34 5min n = len(nums) dp = [0]*n dp[0] = 1 for i in range(n-1): if dp[i]: # 0-&gt;3 1 2 3 dp[i+1:min(n, i+1+nums[i])] = [1] * nums[i] if dp[-1]: return True return bool(dp[-1]) def canJump(self, nums: List[int]) -&gt; bool: # 贪心 # 12:37-12:39.5 2.5min m = 0 n = len(nums) for i in range(n-1): if i&gt;m: return False m = max(m, i+nums[i]) if m&gt;=n-1: return True return m&gt;=n-1","link":"/leetcode/leetcode-5**/leetcode-55-Jump-Game.html"},{"title":"leetcode 559. Maximum Depth of N-ary Tree","text":"难度：Easyleetcode九章 题目描述Given a n-ary tree, find its maximum depth. The maximum depth is the number of nodes along the longest path from the rootnode down to the farthest leaf node. Nary-Tree input serialization is represented in their level order traversal,each group of children is separated by the null value (See examples). Example 1: Input: root = [1,null,3,2,4,null,5,6] Output: 3 Example 2: Input: root = [1,null,2,3,4,5,null,null,6,7,null,8,null,9,10,null,null,11,null,12,null,13,null,null,14] Output: 5 Constraints: The depth of the n-ary tree is less than or equal to 1000. The total number of nodes is between [0, 10^4]. Tags: Tree, Depth-first Search, Breadth-first Search Difficulty: Easy 答案 12345678910111213141516171819202122232425262728293031323334353637/*// Definition for a Node.class Node { public int val; public List&lt;Node&gt; children; public Node() {} public Node(int _val) { val = _val; } public Node(int _val, List&lt;Node&gt; _children) { val = _val; children = _children; }};*/class Solution { public int maxDepth(Node root) { Deque&lt;Node&gt; deque = new ArrayDeque&lt;&gt;(); if(root==null) return 0; int res = 0; deque.add(root); while(!deque.isEmpty()) { res++; int size = deque.size(); for(int i=0; i&lt;size; i++){ Node node = deque.removeFirst(); for(Node n: node.children) { deque.add(n); } } } return res; }}","link":"/leetcode/leetcode-5**/leetcode-559-Maximum-Depth-of-N-ary-Tree.html"},{"title":"leetcode 589. N-ary Tree Preorder Traversal","text":"难度：Easyleetcode九章 题目描述Given an n-ary tree, return the preorder traversal of its nodes’ values. Nary-Tree input serialization is represented in their level order traversal,each group of children is separated by the null value (See examples). Follow up: Recursive solution is trivial, could you do it iteratively? Example 1: Input: root = [1,null,3,2,4,null,5,6] Output: [1,3,5,6,2,4] Example 2: Input: root = [1,null,2,3,4,5,null,null,6,7,null,8,null,9,10,null,null,11,null,12,null,13,null,null,14] Output: [1,2,3,6,7,11,14,4,8,12,5,9,13,10] Constraints: The height of the n-ary tree is less than or equal to 1000 The total number of nodes is between [0, 10^4] Tags: Tree Difficulty: Easy 答案 123456789101112131415161718192021222324252627282930313233343536373839404142434445// class Node {// public int val;// public List&lt;Node&gt; children;// public Node() {}// public Node(int _val) {// val = _val;// }// public Node(int _val, List&lt;Node&gt; _children) {// val = _val;// children = _children;// }// };// Recursive solution is trivial, could you do it iteratively?// trival 微不足道的class Solution { List&lt;Integer&gt; res = new ArrayList&lt;&gt;(); public List&lt;Integer&gt; preorder0(Node root) { // 1 ms if(root==null) return res; res.add(root.val); for(Node child: root.children){ preorder(child); } return res; } public List&lt;Integer&gt; preorder(Node root) { // 3 ms? if(root==null) return res; // stack逆序存储children Stack&lt;Node&gt; stack = new Stack&lt;&gt;(); stack.push(root); while(!stack.isEmpty()) { Node node = stack.pop(); res.add(node.val); for(int i=node.children.size()-1; i&gt;=0; i--) { stack.push(node.children.get(i)); } } return res; }}","link":"/leetcode/leetcode-5**/leetcode-589-N-ary-Tree-Preorder-Traversal.html"},{"title":"leetcode 590. N-ary Tree Postorder Traversal","text":"难度：Easyleetcode九章 题目描述Given an n-ary tree, return the postorder traversal of its nodes’ values. Nary-Tree input serialization is represented in their level order traversal,each group of children is separated by the null value (See examples). Follow up: Recursive solution is trivial, could you do it iteratively? Example 1: Input: root = [1,null,3,2,4,null,5,6] Output: [5,6,3,2,4,1] Example 2: Input: root = [1,null,2,3,4,5,null,null,6,7,null,8,null,9,10,null,null,11,null,12,null,13,null,null,14] Output: [2,6,14,11,7,3,12,8,4,13,9,10,5,1] Constraints: The height of the n-ary tree is less than or equal to 1000 The total number of nodes is between [0, 10^4] Tags: Tree Difficulty: Easy 答案 1234567891011121314151617181920212223242526272829/*// Definition for a Node.class Node { public int val; public List&lt;Node&gt; children; public Node() {} public Node(int _val) { val = _val; } public Node(int _val, List&lt;Node&gt; _children) { val = _val; children = _children; }};*/class Solution { List&lt;Integer&gt; res = new ArrayList&lt;&gt;(); public List&lt;Integer&gt; postorder0(Node root) { if(root==null) return res; for(Node node: root.children) { postorder(node); } res.add(root.val); return res; }}","link":"/leetcode/leetcode-5**/leetcode-590-N-ary-Tree-Postorder-Traversal.html"},{"title":"leetcode 61. Rotate List","text":"难度：Middleleetcode九章 题目描述Given a linked list, rotate the list to the right by k places, where k isnon-negative. Example 1: Input: 1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;NULL, k = 2 Output: 4-&gt;5-&gt;1-&gt;2-&gt;3-&gt;NULL Explanation: rotate 1 steps to the right: 5-&gt;1-&gt;2-&gt;3-&gt;4-&gt;NULL rotate 2 steps to the right: 4-&gt;5-&gt;1-&gt;2-&gt;3-&gt;NULLExample 2: Input: 0-&gt;1-&gt;2-&gt;NULL, k = 4 Output: 2-&gt;0-&gt;1-&gt;NULL Explanation: rotate 1 steps to the right: 2-&gt;0-&gt;1-&gt;NULL rotate 2 steps to the right: 1-&gt;2-&gt;0-&gt;NULL rotate 3 steps to the right: 0-&gt;1-&gt;2-&gt;NULL rotate 4 steps to the right: 2-&gt;0-&gt;1-&gt;NULLTags: Linked List, Two Pointers Difficulty: Medium 答案 1234567891011121314151617181920212223242526class Solution { public ListNode rotateRight(ListNode head, int k) { if(head==null) return null; // 遍历一次，确定链表长度和链尾 int count = 1; ListNode cur = head, end; while(cur.next!=null) { count ++; cur = cur.next; } end = cur; cur = head; System.out.println(count); k = k%count; // 找到第 count-k 个节点（是新链表的链尾） int index = 1; while(index!=(count-k)){ cur = cur.next; index++; } end.next = head; head = cur.next; cur.next = null; return head; }}","link":"/leetcode/leetcode-6**/leetcode-61-Rotate-List.html"},{"title":"leetcode 621. Task Scheduler","text":"难度：Middleleetcode九章 题目描述Given a char array representing tasks CPU need to do. It contains capitalletters A to Z where different letters represent different tasks. Tasks couldbe done without original order. Each task could be done in one interval. Foreach interval, CPU could finish one task or just be idle. However, there is a non-negative cooling interval n that means between twosame tasks , there must be at least n intervals that CPU are doingdifferent tasks or just be idle. You need to return the least number of intervals the CPU will take tofinish all the given tasks. Example: Input: tasks = [&quot;A&quot;,&quot;A&quot;,&quot;A&quot;,&quot;B&quot;,&quot;B&quot;,&quot;B&quot;], n = 2 Output: 8 Explanation: A -&gt; B -&gt; idle -&gt; A -&gt; B -&gt; idle -&gt; A -&gt; B.Note: The number of tasks is in the range [1, 10000]. The integer n is in the range [0, 100]. Tags: Array, Greedy, Queue Difficulty: Medium 答案 12345678910111213141516// 代码：https://leetcode-cn.com/problems/task-scheduler/solution/ren-wu-diao-du-qi-by-leetcode/// 讲解：https://www.youtube.com/watch?v=YCD_iYxyXooclass Solution { public int leastInterval(char[] tasks, int n) { int[] map = new int[26]; for(char c: tasks) { map[c-'A']++; } Arrays.sort(map); int max_val = map[25]-1, idle_slots = max_val*n; for(int i=0; i&lt;25; i++) { idle_slots -= Math.min(max_val, map[i]); } return idle_slots&gt;0?tasks.length+idle_slots:tasks.length; }}","link":"/leetcode/leetcode-6**/leetcode-621-Task-Scheduler.html"},{"title":"leetcode 637. Average of Levels in Binary Tree","text":"难度：Easyleetcode九章 题目描述Given a non-empty binary tree, return the average value of the nodes on eachlevel in the form of an array. Example 1: Input: 3 / \\ 9 20 / \\ 15 7 Output: [3, 14.5, 11] Explanation: The average value of nodes on level 0 is 3, on level 1 is 14.5, and on level 2 is 11. Hence return [3, 14.5, 11].Note: The range of node’s value is in the range of 32-bit signed integer. Tags: Tree Difficulty: Easy 答案 12345678910111213141516171819202122232425// 为何注释部分失败class Solution { public List&lt;Double&gt; averageOfLevels(TreeNode root) { List&lt;Double&gt; res = new ArrayList&lt;&gt;(); if(root==null) return res; Deque&lt;TreeNode&gt; deque = new ArrayDeque&lt;&gt;(); deque.add(root); while(!deque.isEmpty()){ int size = deque.size(); double sum = 0; for(int i=0; i&lt;size; i++) { TreeNode node = deque.removeFirst(); sum += (double)node.val; // sum += (double)node.val/size; if(node.left!=null) deque.add(node.left); if(node.right!=null) deque.add(node.right); } res.add(sum/size); // res.add(sum); } return res; }}","link":"/leetcode/leetcode-6**/leetcode-637-Average-of-Levels-in-Binary-Tree.html"},{"title":"leetcode 543. Diameter of Binary Tree","text":"leetcode九章 题目描述Given a binary tree, you need to compute the length of the diameter of thetree. The diameter of a binary tree is the length of the longest pathbetween any two nodes in a tree. This path may or may not pass through theroot. Example:Given a binary tree 1 / \\ 2 3 / \\ 4 5 Return 3 , which is the length of the path [4,2,1,3] or [5,2,1,3]. Note: The length of path between two nodes is represented by the number ofedges between them. Tags: Tree Difficulty: Easy 答案思路： 任意一条路径均可以被看作由某个节点为起点，从其左儿子和右儿子向下遍历的路径拼接得到。 心得： 在递归函数的开头判断是否为 None，而不用分别判断 左 右和 root \u0004 1234567891011121314151617181920212223# Definition for a binary tree node.# class TreeNode:# def __init__(self, x):# self.val = x# self.left = None# self.right = Noneclass Solution: dia = 0 def depth(self, root): if not root: return 0 left = self.depth(root.left) right = self.depth(root.right) depth = max(left, right)+1 self.dia = max(self.dia, left+right) return depth def diameterOfBinaryTree(self, root: TreeNode) -&gt; int: self.depth(root) return self.dia","link":"/leetcode/leetcode-5**/leetcode-543-Diameter-of-Binary-Tree.html"},{"title":"leetcode 653. Two Sum IV - Input is a BST","text":"难度：Easyleetcode九章 题目描述Given a Binary Search Tree and a target number, return true if there exist twoelements in the BST such that their sum is equal to the given target. Example 1: Input: 5 / \\ 3 6 / \\ \\ 2 4 7 Target = 9 Output: TrueExample 2: Input: 5 / \\ 3 6 / \\ \\ 2 4 7 Target = 28 Output: FalseTags: Tree Difficulty: Easy 答案 1234567891011121314151617class Solution { public boolean findTarget(TreeNode root, int k) { HashSet&lt;Integer&gt; set = new HashSet&lt;&gt;(); return helper(root, k, set); } private boolean helper(TreeNode root, int k, HashSet&lt;Integer&gt; set){ if(root==null) return false; if(set.contains(k-root.val)) { return true; } else{ set.add(root.val); } return helper(root.left, k, set) || helper(root.right, k, set); }}","link":"/leetcode/leetcode-6**/leetcode-653-Two-Sum-IV-Input-is-a-BST.html"},{"title":"leetcode 64. Minimum Path Sum","text":"leetcode九章 题目描述Given a m x n grid filled with non-negative numbers, find a path from topleft to bottom right which minimizes the sum of all numbers along its path. Note: You can only move either down or right at any point in time. Example: Input: [ [1,3,1], [1,5,1], [4,2,1] ] Output: 7 Explanation: Because the path 1-&gt;3-&gt;1-&gt;1-&gt;1 minimizes the sum.Tags: Array, Dynamic Programming Difficulty: Medium 答案\u0004 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071class Solution: # 3. dp def minPathSum(self, grid: List[List[int]]) -&gt; int: n = len(grid) m = len(grid[0]) for i in range(n): for j in range(m): if i==0 and j==0: continue elif i==0: grid[i][j] += grid[i][j-1] elif j==0: grid[i][j] += grid[i-1][j] else: grid[i][j] += min(grid[i-1][j], grid[i][j-1]) return grid[-1][-1] # 1. 简单的递归 def minPathSum1(self, grid: List[List[int]]) -&gt; int: def helper(grid, n, m, i, j): res = grid[i][j] if i==n-1 and j==m-1: return res elif i==n-1: return res + helper(grid, n, m, i, j+1) elif j==m-1: return res + helper(grid, n, m, i+1, j) return res + min(helper(grid, n, m, i, j+1), helper(grid, n, m, i+1, j)) if not grid or not grid[0]: return 0 return helper(grid, len(grid), len(grid[0]), 0, 0) # 2. 递归 + 存储 递归过程值 def minPathSum2(self, grid: List[List[int]]) -&gt; int: n = len(grid) m = len(grid[0]) cache = [[0 for _ in range(m)]for _ in range(n)] def helper(grid, n, m, i, j): res = grid[i][j] if i==n-1 and j==m-1: return res elif i==n-1: if cache[i][j+1]: return res+cache[i][j+1] else: t = helper(grid, n, m, i, j+1) cache[i][j+1] = t return res + t elif j==m-1: if cache[i+1][j]: return res+cache[i+1][j] else: t = helper(grid, n, m, i+1, j) cache[i+1][j] = t return res + t if cache[i][j+1]: t1 = cache[i][j+1] else: t1 = helper(grid, n, m, i, j+1) cache[i][j+1] = t1 if cache[i+1][j]: t2 = cache[i+1][j] else: t2 = helper(grid, n, m, i+1, j) cache[i+1][j] = t2 return res + min(t1, t2) if not grid or not grid[0]: return 0 return helper(grid, n, m, 0, 0)","link":"/leetcode/leetcode-6**/leetcode-64-Minimum-Path-Sum.html"},{"title":"leetcode 66. Plus One","text":"难度：Easyleetcode九章 题目描述Given a non-empty array of digits representing a non-negative integer,plus one to the integer. The digits are stored such that the most significant digit is at the head ofthe list, and each element in the array contain a single digit. You may assume the integer does not contain any leading zero, except thenumber 0 itself. Example 1: Input: [1,2,3] Output: [1,2,4] Explanation: The array represents the integer 123.Example 2: Input: [4,3,2,1] Output: [4,3,2,2] Explanation: The array represents the integer 4321.Tags: Array Difficulty: Easy 答案 1234567891011121314151617181920class Solution { public int[] plusOne(int[] digits) { int carry = 0; int n = digits.length; for(int i=n-1; i&gt;=0; i--){ int sum = digits[i]+(i==n-1?1:0)+carry; digits[i] = sum%10; carry = sum/10; } if(carry==1){ int[] res = new int[n+1]; res[0] = 1; for(int i=1; i&lt;n+1; i++){ res[i] = digits[i-1]; } return res; } return digits; }}","link":"/leetcode/leetcode-6**/leetcode-66-Plus-One.html"},{"title":"leetcode 673. Number of Longest Increasing Subsequence","text":"难度：Middleleetcode九章 题目描述Given an unsorted array of integers, find the number of longest increasingsubsequence. Example 1: Input: [1,3,5,4,7] Output: 2 Explanation: The two longest increasing subsequence are [1, 3, 4, 7] and [1, 3, 5, 7].Example 2: Input: [2,2,2,2,2] Output: 5 Explanation: The length of longest continuous increasing subsequence is 1, and there are 5 subsequences&apos; length is 1, so output 5.Note: Length of the given array will be not exceed 2000 and the answer isguaranteed to be fit in 32-bit signed int. Tags: Dynamic Programming Difficulty: Medium 答案 1234567891011121314151617181920212223242526272829303132333435363738class Solution { public int findNumberOfLIS(int[] nums) { // keep 两个数组，一个记录当前的count，一个记录最长路径长度 // if lis[i] == lis[j] + 1, count[i] += count[j] // 因为除了原有的到达当前lis的路径数量，还有count[i]种方法可以到达。 // if lis[i] &lt; lis[j] + 1，直接换为count[j]， // 因为首次发现了自己的最长路径 // 最后keep一个max，然后loop找有几个是max，加起来count if(nums==null || nums.length==0) return 0; int n = nums.length; if(n==1) return 1; int[] len = new int[n]; Arrays.fill(len, 1); int[] count = new int[n]; Arrays.fill(count, 1); int max = 1; for(int i=1; i&lt;n; i++) { for(int j=0; j&lt;i; j++){ if(nums[j]&lt;nums[i]){ if(len[i]&lt;len[j]+1) { len[i] = len[j]+1; count[i] = count[j]; }else if(len[i]==len[j]+1) { count[i] += count[j]; } } } max = Math.max(max, len[i]); } int res = 0; for(int i=0; i&lt;n; i++) { if(len[i]==max){ res+=count[i]; } } return res; }}","link":"/leetcode/leetcode-6**/leetcode-673-Number-of-Longest-Increasing-Subsequence.html"},{"title":"leetcode 674. Longest Continuous Increasing Subsequence","text":"难度：Easyleetcode九章 题目描述Given an unsorted array of integers, find the length of longest continuousincreasing subsequence (subarray). Example 1: Input: [1,3,5,4,7] Output: 3 Explanation: The longest continuous increasing subsequence is [1,3,5], its length is 3. Even though [1,3,5,7] is also an increasing subsequence, it&apos;s not a continuous one where 5 and 7 are separated by 4. Example 2: Input: [2,2,2,2,2] Output: 1 Explanation: The longest continuous increasing subsequence is [2], its length is 1. Note: Length of the array will not exceed 10,000. Tags: Array Difficulty: Easy 答案 1234567891011121314151617class Solution { public int findLengthOfLCIS(int[] nums) { if(nums==null || nums.length==0) return 0; if(nums.length==1) return 1; int res = 1; int cur = 1; for(int i=1; i&lt;nums.length; i++) { if(nums[i]&gt;nums[i-1]) { cur++; }else{ res = Math.max(res, cur); cur = 1; } } return Math.max(res, cur); }}","link":"/leetcode/leetcode-6**/leetcode-674-Longest-Continuous-Increasing-Subsequence.html"},{"title":"leetcode 678. Valid Parenthesis String","text":"leetcode九章 题目描述Given a string containing only three types of characters: ‘(‘, ‘)’ and ‘*’,write a function to check whether this string is valid. We define the validityof a string by these rules: Any left parenthesis '(' must have a corresponding right parenthesis ')'. Any right parenthesis ')' must have a corresponding left parenthesis '('. Left parenthesis '(' must go before the corresponding right parenthesis ')'. '*' could be treated as a single right parenthesis ')' or a single left parenthesis '(' or an empty string. An empty string is also valid. Example 1: Input: &quot;()&quot; Output: TrueExample 2: Input: &quot;(*)&quot; Output: TrueExample 3: Input: &quot;(*))&quot; Output: TrueNote: The string size will be in the range [1, 100]. Tags: String Difficulty: Medium 答案\u0004 有效的括号字符串 - 有效的括号字符串 - 力扣（LeetCode） 1234567891011121314151617class Solution: def checkValidString(self, s: str) -&gt; bool: lo = hi = 0 for i in s: if i=='(': lo += 1 hi += 1 elif i==')': lo = max(0, lo-1) hi -= 1 elif i=='*': lo = max(0, lo-1) hi += 1 if hi&lt;0: return False print(lo, hi) return lo==0","link":"/leetcode/leetcode-6**/leetcode-678-Valid-Parenthesis-String.html"},{"title":"leetcode 69. Sqrt(x)","text":"难度：Easyleetcode九章 题目描述Implement int sqrt(int x). Compute and return the square root of x , where x is guaranteed to be anon-negative integer. Since the return type is an integer, the decimal digits are truncated and onlythe integer part of the result is returned. Example 1: Input: 4 Output: 2Example 2: Input: 8 Output: 2 Explanation: The square root of 8 is 2.82842..., and since the decimal part is truncated, 2 is returned.Tags: Math, Binary Search Difficulty: Easy 答案 1234567891011121314class Solution { public int mySqrt(int x) { // 二分 if(x&lt;2) return x; int start = 1, end = x, mid = end/2; while(start &lt; mid) { if(mid == x/mid) return mid; else if(mid &lt; x/mid) start = mid; else end = mid; mid = start+(end-start)/2; } return mid; }}","link":"/leetcode/leetcode-6**/leetcode-69-Sqrt-x.html"},{"title":"leetcode 700. Search in a Binary Search Tree","text":"难度：Easyleetcode九章 题目描述Given the root node of a binary search tree (BST) and a value. You need tofind the node in the BST that the node’s value equals the given value. Returnthe subtree rooted with that node. If such node doesn’t exist, you shouldreturn NULL. For example, Given the tree: 4 / \\ 2 7 / \\ 1 3 And the value to search: 2You should return this subtree: 2 / \\ 1 3In the example above, if we want to search the value 5, since there is nonode with value 5, we should return NULL. Note that an empty tree is represented by NULL, therefore you would see theexpected output (serialized tree format) as [], not null. Tags: Tree Difficulty: Easy 答案 12345678class Solution { public TreeNode searchBST(TreeNode root, int val) { if(root==null || root.val==val) return root; if(root.val&gt;val) return searchBST(root.left, val); return searchBST(root.right, val); }}","link":"/leetcode/leetcode-7**/leetcode-700-Search-in-a-Binary-Search-Tree.html"},{"title":"leetcode 701. Insert into a Binary Search Tree","text":"难度：Middleleetcode九章 题目描述Given the root node of a binary search tree (BST) and a value to be insertedinto the tree, insert the value into the BST. Return the root node of the BSTafter the insertion. It is guaranteed that the new value does not exist in theoriginal BST. Note that there may exist multiple valid ways for the insertion, as long asthe tree remains a BST after insertion. You can return any of them. For example, Given the tree: 4 / \\ 2 7 / \\ 1 3 And the value to insert: 5You can return this binary search tree: 4 / \\ 2 7 / \\ / 1 3 5This tree is also valid: 5 / \\ 2 7 / \\ 1 3 \\ 4Tags: Tree Difficulty: Medium 答案 123456789101112131415161718192021222324class Solution { public TreeNode insertIntoBST(TreeNode root, int val) { helper(root, val); return root; } private void helper(TreeNode root, int val){ if(val &lt; root.val){ if(root.left==null){ root.left = new TreeNode(val); return; }else{ insertIntoBST(root.left, val); } }else{ if(root.right==null){ root.right = new TreeNode(val); return; }else{ insertIntoBST(root.right, val); } } }}","link":"/leetcode/leetcode-7**/leetcode-701-Insert-into-a-Binary-Search-Tree.html"},{"title":"leetcode 72. Edit Distance","text":"leetcode九章 题目描述Given two words word1 and word2 , find the minimum number of operationsrequired to convert word1 to word2. You have the following 3 operations permitted on a word: Insert a character Delete a character Replace a character Example 1: Input: word1 = &quot;horse&quot;, word2 = &quot;ros&quot; Output: 3 Explanation: horse -&gt; rorse (replace &apos;h&apos; with &apos;r&apos;) rorse -&gt; rose (remove &apos;r&apos;) rose -&gt; ros (remove &apos;e&apos;)Example 2: Input: word1 = &quot;intention&quot;, word2 = &quot;execution&quot; Output: 5 Explanation: intention -&gt; inention (remove &apos;t&apos;) inention -&gt; enention (replace &apos;i&apos; with &apos;e&apos;) enention -&gt; exention (replace &apos;n&apos; with &apos;x&apos;) exention -&gt; exection (replace &apos;n&apos; with &apos;c&apos;) exection -&gt; execution (insert &apos;u&apos;)Tags: String, Dynamic Programming Difficulty: Hard 答案\u0004 (2) 【🐼熊猫刷题Python3】用视频讲DP, 一听就懂 - 编辑距离 - 力扣（LeetCode） 12345678910111213141516171819class Solution: def minDistance(self, w1: str, w2: str) -&gt; int: n, m = len(w1), len(w2) if min(n, m)==0: return max(n, m) dp = [[0 for _ in range(m+1)]for _ in range(n+1)] # 边界值 for i in range(n+1): dp[i][0] = i for j in range(m+1): dp[0][j] = j # 状态转移 for i in range(1, n+1): for j in range(1, m+1): if w1[i-1]==w2[j-1]: dp[i][j] = dp[i-1][j-1] else: dp[i][j] = min(dp[i-1][j-1], dp[i-1][j], dp[i][j-1])+1 return dp[-1][-1]","link":"/leetcode/leetcode-7**/leetcode-72-Edit-Distance.html"},{"title":"leetcode 73. Set Matrix Zeroes","text":"难度：Middleleetcode九章 题目描述Given a m x n matrix, if an element is 0, set its entire row and column to0. Do it in-place. Example 1: Input: [ [1,1,1], [1,0,1], [1,1,1] ] Output: [ [1,0,1], [0,0,0], [1,0,1] ]Example 2: Input: [ [0,1,2,0], [3,4,5,2], [1,3,1,5] ] Output: [ [0,0,0,0], [0,4,5,0], [0,3,1,0] ]Follow up: A straight forward solution using O( m n ) space is probably a bad idea. A simple improvement uses O( m + n ) space, but still not the best solution. Could you devise a constant space solution? Tags: Array Difficulty: Medium 答案 1234567891011121314151617181920212223242526class Solution { public void setZeroes(int[][] ma) { Set&lt;Integer&gt; row = new HashSet&lt;&gt;(); Set&lt;Integer&gt; col = new HashSet&lt;&gt;(); int n = ma.length; int m = ma[0].length; for(int i=0; i&lt;n; i++){ for(int j=0; j&lt;m; j++){ if(ma[i][j]==0){ row.add(i); col.add(j); } } } for(int i: row){ for(int j=0; j&lt;m; j++) { ma[i][j] = 0; } } for(int j: col){ for(int i=0; i&lt;n; i++) { ma[i][j] = 0; } } }}","link":"/leetcode/leetcode-7**/leetcode-73-Set-Matrix-Zeroes.html"},{"title":"leetcode 762. Prime Number of Set Bits in Binary Representation","text":"难度：Easyleetcode九章 题目描述Given two integers L and R, find the count of numbers in the range [L, R] (inclusive) having a prime number of set bits in their binaryrepresentation. (Recall that the number of set bits an integer has is the number of 1spresent when written in binary. For example, 21 written in binary is 10101which has 3 set bits. Also, 1 is not a prime.) Example 1: Input: L = 6, R = 10 Output: 4 Explanation: 6 -&gt; 110 (2 set bits, 2 is prime) 7 -&gt; 111 (3 set bits, 3 is prime) 9 -&gt; 1001 (2 set bits , 2 is prime) 10-&gt;1010 (2 set bits , 2 is prime)Example 2: Input: L = 10, R = 15 Output: 5 Explanation: 10 -&gt; 1010 (2 set bits, 2 is prime) 11 -&gt; 1011 (3 set bits, 3 is prime) 12 -&gt; 1100 (2 set bits, 2 is prime) 13 -&gt; 1101 (3 set bits, 3 is prime) 14 -&gt; 1110 (3 set bits, 3 is prime) 15 -&gt; 1111 (4 set bits, 4 is not prime)Note: L, R will be integers L &lt;= R in the range [1, 10^6]. R - L will be at most 10000. Tags: Bit Manipulation Difficulty: Easy 答案 123456789101112131415161718192021222324class Solution { public int countPrimeSetBits(int L, int R) { // 1. 获取最长bits：20 // int mul = 1; // for(int i=1; i&lt;64; i++) { // mul *= 2; // if(mul&gt;1000000) // return i; // } // return mul; // 2. Integer.bitCount(i) int res = 0; int[] isPrimeSetBits = {0, 0, 1, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0}; for(int i=L; i&lt;R+1; i++) { res += isPrimeSetBits[Integer.bitCount(i)]; } return res; }}","link":"/leetcode/leetcode-7**/leetcode-762-Prime-Number-of-Set-Bits-in-Binary-Representation.html"},{"title":"leetcode 78. Subsets","text":"难度：Middleleetcode九章 题目描述Given a set of distinct integers, nums , return all possible subsets(the power set). Note: The solution set must not contain duplicate subsets. Example: Input: nums = [1,2,3] Output: [ [3], [1], [2], [1,2,3], [1,3], [2,3], [1,2], [] ]Tags: Array, Backtracking, Bit Manipulation Difficulty: Medium 答案 12345678910111213141516171819202122232425262728// 开始时间-写完-调完错// 31-43-46class Solution { public List&lt;List&lt;Integer&gt;&gt; subsets(int[] nums) { return helper(nums, nums.length); } // 1 2 3 // [[]] len=0 // [[], [1]] len=1 // [[], [1], [2], [1, 2]] len=2 // [[], [1], [2], [1, 2], [3], [1, 3], [2, 3], [1, 2, 3]] len=3 private List&lt;List&lt;Integer&gt;&gt; helper(int[] nums, int len){ List&lt;List&lt;Integer&gt;&gt; res = new ArrayList&lt;&gt;(); if(nums==null || len==0) { res.add(new ArrayList&lt;&gt;()); return res; } int num = nums[len-1]; // 在len-1的res中的每一个list加上num for(List&lt;Integer&gt; l: helper(nums, len-1)){ res.add(l); List&lt;Integer&gt; temp = new ArrayList&lt;&gt;(l); temp.add(num); res.add(temp); } return res; }}","link":"/leetcode/leetcode-7**/leetcode-78-Subsets.html"},{"title":"leetcode 79. Word Search","text":"难度：Middleleetcode九章 题目描述Given a 2D board and a word, find if the word exists in the grid. The word can be constructed from letters of sequentially adjacent cell, where“adjacent” cells are those horizontally or vertically neighboring. The sameletter cell may not be used more than once. Example: board = [ [&apos;A&apos;,&apos;B&apos;,&apos;C&apos;,&apos;E&apos;], [&apos;S&apos;,&apos;F&apos;,&apos;C&apos;,&apos;S&apos;], [&apos;A&apos;,&apos;D&apos;,&apos;E&apos;,&apos;E&apos;] ] Given word = &quot; **ABCCED** &quot;, return **true**. Given word = &quot; **SEE** &quot;, return **true**. Given word = &quot; **ABCB** &quot;, return **false**.Tags: Array, Backtracking Difficulty: Medium 答案 123456789101112131415161718192021222324252627282930class Solution { // dfs + 标记 int[][] directions = {{1, 0}, {0, 1}, {-1, 0}, {0, -1}}; public boolean exist(char[][] board, String word) { if(board==null || board.length==0 || board[0].length==0) return false; int n = board.length, m = board[0].length; boolean[][] mark = new boolean[n][m]; for(int i=0; i&lt;n; i++) { for(int j=0; j&lt;m; j++) { if(helper(board, n, m, i, j, word, word.length(), 0, mark)) return true; } } return false; } private boolean helper(char[][] board, int n, int m, int i, int j, String word, int len, int start, boolean[][] mark) { if(i&lt;0 || i&gt;=n || j&lt;0 || j&gt;=m || mark[i][j]) return false; if(word.charAt(start)!=board[i][j]) return false; if(start==len-1) return true; mark[i][j] = true; for(int[] direction: directions) { if (helper(board, n, m, i+direction[0], j+direction[1], word, len, start+1, mark)) return true; } mark[i][j] = false; return false; }}","link":"/leetcode/leetcode-7**/leetcode-79-Word-Search.html"},{"title":"leetcode 82. Remove Duplicates from Sorted List II","text":"难度：Middleleetcode九章 题目描述Given a sorted linked list, delete all nodes that have duplicate numbers,leaving only distinct numbers from the original list. Example 1: Input: 1-&gt;2-&gt;3-&gt;3-&gt;4-&gt;4-&gt;5 Output: 1-&gt;2-&gt;5Example 2: Input: 1-&gt;1-&gt;1-&gt;2-&gt;3 Output: 2-&gt;3Tags: Linked List Difficulty: Medium 答案 123456789101112131415161718192021class Solution { public ListNode deleteDuplicates(ListNode head) { if(head==null) return null; ListNode dummy = new ListNode(0), cur=head; dummy.next = head; ListNode pre = dummy; while(cur!=null){ if(cur.next!=null &amp;&amp; cur.next.val==cur.val){ while(cur.next!=null &amp;&amp; cur.val==cur.next.val){ cur = cur.next; } pre.next = cur.next; cur = cur.next; }else{ pre = cur; cur = cur.next; } } return dummy.next; }}","link":"/leetcode/leetcode-8**/leetcode-82-Remove-Duplicates-from-Sorted-List-II.html"},{"title":"leetcode 844. Backspace String Compare","text":"leetcode九章 题目描述Given two strings S and T, return if they are equal when both are typedinto empty text editors. # means a backspace character. Example 1: Input: S = &quot;ab#c&quot;, T = &quot;ad#c&quot; Output: true **Explanation** : Both S and T become &quot;ac&quot;.Example 2: Input: S = &quot;ab答案\u0004 比较含退格的字符串 - 比较含退格的字符串 - 力扣（LeetCode） 虽然第二种看起来厉害点，space O(1), 但是time memory 都不如第一种，不知为何 123456789101112131415161718192021222324252627class Solution: def backspace(self, S): res = '' for i in S: if i!='#': res += i else: res = res[:-1] return res def backspaceCompare1(self, S: str, T: str) -&gt; bool: s = self.backspace(S) t = self.backspace(T) return s==t def backspaceCompare(self, S: str, T: str) -&gt; bool: def skip(S): skip = 0 for i in reversed(S): if i=='#': skip += 1 else: if skip: skip -= 1 else: yield i return all(x==y for x, y in itertools.zip_longest(skip(S), skip(T)))","link":"/leetcode/leetcode-8**/leetcode-844-Backspace-String-Compare.html"},{"title":"leetcode 872. Leaf-Similar Trees","text":"难度：Easyleetcode九章 题目描述Consider all the leaves of a binary tree. From left to right order, thevalues of those leaves form a leaf value sequence. For example, in the given tree above, the leaf value sequence is (6, 7, 4, 9, 8). Two binary trees are considered leaf-similar if their leaf value sequenceis the same. Return true if and only if the two given trees with head nodes root1 androot2 are leaf-similar. Note: Both of the given trees will have between 1 and 100 nodes. Tags: Tree, Depth-first Search Difficulty: Easy 答案 1234567891011121314151617181920// 前序遍历应该用stack// deque remove==removeFirst add==addLastclass Solution { public boolean leafSimilar(TreeNode root1, TreeNode root2) { List&lt;Integer&gt; l1 = new ArrayList&lt;&gt;(); List&lt;Integer&gt; l2 = new ArrayList&lt;&gt;(); preOrder(root1, l1); preOrder(root2, l2); return l1.equals(l2); } private void preOrder(TreeNode root, List&lt;Integer&gt; l){ if(root==null) return; if(root.left==null &amp;&amp; root.right==null){ l.add(root.val); } preOrder(root.left, l); preOrder(root.right, l); }}","link":"/leetcode/leetcode-8**/leetcode-872-Leaf-Similar-Trees.html"},{"title":"leetcode 897. Increasing Order Search Tree","text":"难度：Easyleetcode九章 题目描述Given a binary search tree, rearrange the tree in in-order so that theleftmost node in the tree is now the root of the tree, and every node has noleft child and only 1 right child. **Example 1:** Input: [5,3,6,2,4,null,8,1,null,null,null,7,9] 5 / \\ 3 6 / \\ \\ 2 4 8 / / \\ 1 7 9 Output: [1,null,2,null,3,null,4,null,5,null,6,null,7,null,8,null,9] 1 \\ 2 \\ 3 \\ 4 \\ 5 \\ 6 \\ 7 \\ 8 \\ 9 Note: The number of nodes in the given tree will be between 1 and 100. Each node will have a unique integer value from 0 to 1000. Tags: Tree, Depth-first Search Difficulty: Easy 答案 123456789101112131415161718192021222324252627282930313233343536373839404142434445class Solution { public TreeNode increasingBST0(TreeNode root) { // Runtime: 5 ms, faster than 11.04% // Memory Usage: 44.5 MB, less than 40.63% TreeNode res = new TreeNode(0); TreeNode cur = res; // inorder TreeNode temp = root; Stack&lt;TreeNode&gt; stack = new Stack&lt;&gt;(); while(!stack.isEmpty() || temp!=null){ while(temp!=null){ stack.push(temp); temp = temp.left; } if(!stack.isEmpty()){ TreeNode node = stack.pop(); node.left = null; cur.right = node; cur = node; temp = node.right; } } return res.right; } TreeNode cur; public TreeNode increasingBST(TreeNode root) { // https://leetcode-cn.com/problems/increasing-order-search-tree/solution/di-zeng-shun-xu-cha-zhao-shu-by-leetcode/ // 方法2 // Runtime: 2 ms, faster than 100.00% // Memory Usage: 38.2 MB, less than 100.00% TreeNode dummy = new TreeNode(0); cur = dummy; helper(root); return dummy.right; } private void helper(TreeNode node){ if(node==null) return; helper(node.left); node.left = null; cur.right = node; cur = node; helper(node.right); }}","link":"/leetcode/leetcode-8**/leetcode-897-Increasing-Order-Search-Tree.html"},{"title":"leetcode 92. Reverse Linked List II","text":"难度：Middleleetcode九章 题目描述Reverse a linked list from position m to n. Do it in one-pass. *Note: *1 ≤ m ≤ n ≤ length of list. Example: Input: 1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;NULL, _m_ = 2, _n_ = 4 Output: 1-&gt;4-&gt;3-&gt;2-&gt;5-&gt;NULLTags: Linked List Difficulty: Medium 答案 12345678910111213141516171819202122232425262728293031323334class Solution { public ListNode reverseBetween(ListNode head, int m, int n) { ListNode dummy = new ListNode(0), pre, cur, next; pre = dummy; dummy.next = head; cur = head; // 1 2 3 4 5 m=2, n=4 // node1 node2 // 开始翻转的前一个，以及头一个 ListNode node1=head, node2=head; if(head==null) return null; for(int i=1; i&lt;=n; i++){ if(i&lt;m) { pre = cur; cur = cur.next; }else{ if(i==m){ node1 = pre; node2 = cur; } next = cur.next; cur.next = pre; // next.next = cur; if(i==n){ node1.next = cur; node2.next = next; } pre = cur; cur = next; } } return dummy.next; }}","link":"/leetcode/leetcode-9**/leetcode-92-Reverse-Linked-List-II.html"},{"title":"leetcode 938. Range Sum of BST","text":"难度：Easyleetcode九章 题目描述Given the root node of a binary search tree, return the sum of values of allnodes with value between L and R (inclusive). The binary search tree is guaranteed to have unique values. Example 1: Input: root = [10,5,15,3,7,null,18], L = 7, R = 15 Output: 32Example 2: Input: root = [10,5,15,3,7,13,18,1,null,6], L = 6, R = 10 Output: 23Note: The number of nodes in the tree is at most 10000. The final answer is guaranteed to be less than 2^31. Tags: Tree, Recursion Difficulty: Easy 答案 123456789101112131415161718192021222324252627282930/** * Definition for a binary tree node. * public class TreeNode { * int val; * TreeNode left; * TreeNode right; * TreeNode(int x) { val = x; } * } */class Solution { int sum; public int rangeSumBST(TreeNode root, int L, int R) { sum = 0; helper(root, L, R); return sum; } private void helper(TreeNode root, int l, int r){ // 如果 node.val 小于等于 L，那么只需要继续搜索它的右子树；如果 node.val 大于等于 R，那么只需要继续搜索它的左子树；如果 node.val 在区间 (L, R) 中，则需要搜索它的所有子树 if(root==null) return; if(root.val&gt;=l &amp;&amp; root.val&lt;=r){ sum += root.val; helper(root.left, l, r); helper(root.right, l ,r); }else if(root.val&lt;l){ helper(root.right, l ,r); }else{ helper(root.left, l, r); } }}","link":"/leetcode/leetcode-9**/leetcode-938-Range-Sum-of-BST.html"},{"title":"leetcode 96. Unique Binary Search Trees","text":"难度：Middleleetcode九章 题目描述Given n , how many structurally unique BST ‘s (binary search trees) thatstore values 1 … n? Example: Input: 3 Output: 5 Explanation: Given _n_ = 3, there are a total of 5 unique BST&apos;s: 1 3 3 2 1 \\ / / / \\ \\ 3 2 1 1 3 2 / / \\ \\ 2 1 2 3Tags: Dynamic Programming, Tree Difficulty: Medium 答案 12345class Solution: @functools.lru_cache def numTrees(self, n: int) -&gt; int: # 以哪个点为根节点，左右子树数量相乘 return sum(self.numTrees(i-1)*self.numTrees(n-i) for i in range(1, n+1)) if n&gt;0 else 1 1234567891011121314class Solution { public int numTrees(int n) { // 1为root, 左子树有0个 。。。。 n为root，右子树有0个 // dp[n] = dp[0]*dp[n-1]+dp[1]*dp[n-2]+...+dp[n-1]*dp[0] int[] dp = new int[n+1]; dp[0] = 1; for(int i=1; i&lt;=n; i++){ for(int j=0; j&lt;i; j++){ dp[i] += dp[j]*dp[i-j-1]; } } return dp[n]; }}","link":"/leetcode/leetcode-9**/leetcode-96-Unique-Binary-Search-Trees.html"},{"title":"leetcode 965. Univalued Binary Tree","text":"难度：Easyleetcode九章 题目描述A binary tree is univalued if every node in the tree has the same value. Return true if and only if the given tree is univalued. Example 1: Input: [1,1,1,1,1,null,1] Output: trueExample 2: Input: [2,2,2,5,2] Output: falseNote: The number of nodes in the given tree will be in the range [1, 100]. Each node’s value will be an integer in the range [0, 99]. Tags: Tree Difficulty: Easy 答案 123456789class Solution { public boolean isUnivalTree(TreeNode root) { if(root==null) return true; if(root.left!=null &amp;&amp; root.left.val!=root.val) return false; if(root.right!=null &amp;&amp; root.right.val!=root.val) return false; return isUnivalTree(root.left) &amp;&amp; isUnivalTree(root.right); }}","link":"/leetcode/leetcode-9**/leetcode-965-Univalued-Binary-Tree.html"},{"title":"leetcode 98. Validate Binary Search Tree","text":"难度：Middleleetcode九章 题目描述Given a binary tree, determine if it is a valid binary search tree (BST). Assume a BST is defined as follows: The left subtree of a node contains only nodes with keys less than the node’s key. The right subtree of a node contains only nodes with keys greater than the node’s key. Both the left and right subtrees must also be binary search trees. Example 1: 2 / \\ 1 3 Input: [2,1,3] Output: trueExample 2: 5 / \\ 1 4 / \\ 3 6 Input: [5,1,4,null,null,3,6] Output: false Explanation: The root node&apos;s value is 5 but its right child&apos;s value is 4.Tags: Tree, Depth-first Search Difficulty: Medium 答案 12345678910111213141516171819202122232425262728293031/** * Definition for a binary tree node. * public class TreeNode { * int val; * TreeNode left; * TreeNode right; * TreeNode(int x) { val = x; } * } */class Solution { public boolean isValidBST(TreeNode root) { // 要求所有右子树的元素大于root // if(root==null) return true; // else if(root.left!=null &amp;&amp; root.left.val&gt;=root.val) // return false; // else if(root.right!=null &amp;&amp; root.right.val&lt;=root.val) // return false; // return isValidBST(root.left) &amp;&amp; isValidBST(root.right); return divConq(root, Long.MIN_VALUE, Long.MAX_VALUE); } private boolean divConq(TreeNode root, long min, long max){ // min~max 是root应该处于的范围 if(root==null) return true; else if(root.val&lt;=min || root.val&gt;=max) return false; else { // root.left &lt; root &amp;&amp; root.right &gt; root return divConq(root.left, min, Math.min(root.val, max)) &amp;&amp; divConq(root.right, Math.max(root.val, min), max) ; } }}","link":"/leetcode/leetcode-9**/leetcode-98-Validate-Binary-Search-Tree.html"},{"title":"leetcode 99. Recover Binary Search Tree","text":"难度：Hardleetcode九章 题目描述Two elements of a binary search tree (BST) are swapped by mistake. Recover the tree without changing its structure. Example 1: Input: [1,3,null,null,2] 1 / 3 \\ 2 Output: [3,1,null,null,2] 3 / 1 \\ 2Example 2: Input: [3,1,4,null,null,2] 3 / \\ 1 4 / 2 Output: [2,1,4,null,null,3] 2 / \\ 1 4 / 3Follow up: A solution using O( n ) space is pretty straight forward. Could you devise a constant space solution? Tags: Tree, Depth-first Search Difficulty: Hard 答案 123456789101112131415161718192021222324252627282930313233343536373839/** * Definition for a binary tree node. * public class TreeNode { * int val; * TreeNode left; * TreeNode right; * TreeNode(int x) { val = x; } * } */class Solution { TreeNode first, second, pre; // 1 2 3 4 5 // 2种情况：替换的值相邻（pre&gt;cur 发生一次） // 替换的值不相邻 (pre&gt;cur 发生2次) // 1 3 2 4 5 // 1 4 3 2 5 public void recoverTree(TreeNode root) { helper(root); int temp = first.val; first.val = second.val; second.val = temp; } private void helper(TreeNode root){ if(root==null) return; helper(root.left); if(pre!=null &amp;&amp; pre.val&gt;root.val){ if(first==null) { first = pre; second = root; } else { second = root; return; } } pre = root; helper(root.right); }}","link":"/leetcode/leetcode-9**/leetcode-99-Recover-Binary-Search-Tree.html"},{"title":"leetcode 993. Cousins in Binary Tree","text":"难度：Easyleetcode九章 题目描述In a binary tree, the root node is at depth 0, and children of each depthk node are at depth k+1. Two nodes of a binary tree are cousins if they have the same depth, but havedifferent parents. We are given the root of a binary tree with unique values, and the valuesx and y of two different nodes in the tree. Return true if and only if the nodes corresponding to the values x and yare cousins. Example 1: Input: root = [1,2,3,4], x = 4, y = 3 Output: falseExample 2: Input: root = [1,2,3,null,4,null,5], x = 5, y = 4 Output: trueExample 3: Input: root = [1,2,3,null,4], x = 2, y = 3 Output: falseNote: The number of nodes in the tree will be between 2 and 100. Each node has a unique integer value from 1 to 100. Tags: Tree, Breadth-first Search Difficulty: Easy 答案 12345678910111213141516171819202122232425class Solution { public boolean isCousins(TreeNode root, int x, int y) { if(root==null) return false; Map&lt;Integer, Integer&gt; level = new HashMap&lt;&gt;(); Map&lt;Integer, TreeNode&gt; parent = new HashMap&lt;&gt;(); helper(root, level, parent, 0); return level.containsKey(x) &amp;&amp; level.containsKey(y) &amp;&amp; level.get(x)==level.get(y) &amp;&amp; parent.get(x)!=parent.get(y); } private void helper(TreeNode root, Map&lt;Integer, Integer&gt; level, Map&lt;Integer, TreeNode&gt; parent, int curLevel){ curLevel++; if(root.left!=null){ level.put(root.left.val, curLevel); parent.put(root.left.val, root); helper(root.left, level, parent, curLevel); } if(root.right!=null){ level.put(root.right.val, curLevel); parent.put(root.right.val, root); helper(root.right, level, parent, curLevel); } }}","link":"/leetcode/leetcode-9**/leetcode-993-Cousins-in-Binary-Tree.html"},{"title":"第2讲：容器基本概念 实践","text":"你的第一个容器镜像，构建、分发、运行 [ K8s | from zero to hero ]木环 2019-11-07 106浏览量 简介： 再也不要当容器小白了！Build ship and run！ 什么是容器？因为虚拟机（vm）存在一定不足，容器技术的诞生后才如此受欢迎。以传统的Java应用架构而言，将一个应用程序生成一个war包，放到一个tomcat容器当中并在一台虚拟机（VM）中启动运行，然后配置nginx的负载均衡策略，将来自用户的请求转发到某个tomcat应用上，这种基于主机或虚拟机部署的应用会存在以下问题：可移植性差、可维护性差、可扩展性差、无法资源隔离。扩展阅读 而容器是什么呢？它就是一个视图隔离、资源可限制、独立文件系统的进程集合。所谓“视图隔离”就是能够看到部分进程以及具有独立的主机名等；控制资源使用率则是可以对于内存大小以及 CPU 使用个数等进行限制。容器就是一个进程集合，它将系统的其他资源隔离开来，具有自己独立的资源视图。 容器具有一个独立的文件系统，因为使用的是系统的资源，所以在独立的文件系统内不需要具备内核相关的代码或者工具，我们只需要提供容器所需的二进制文件、配置文件以及依赖即可。只要容器运行时所需的文件集合都能够具备，那么这个容器就能够运行起来。扩展阅读《详解 K8s 容器基本概念》 什么是容器镜像？从一个比较具体的角度去看，镜像就是一个多层存储的文件，相较于普通的ISO系统镜像来说，分层存储会带来两个优点： 一个是分层存储的镜像比较容易扩展，比如我们可以基于一个Ubuntu镜像去构建我们的Nginx镜像，这样我们只需要在Ubuntu镜像的基础上面做一些Nginx的安装配置工作。一个Nginx镜像工作就算制作完成了，我们不需要从头开始去制作各种镜像。 另一点是可以优化镜像存储空间，假如我们有两个镜像，Tag1.0镜像和 Tag2.0镜像，我们如果以传统方式去传这两个镜像，每个镜像大概130多兆，但如果我们以分层的方式去存储两个镜像，我们通过下面两个紫色的才能共享，可以节约大量的空间，两个镜像加起来只需要140多兆的空间就可以存下来。这样一是节省了存储空间，二是可以减少网络上的开销，比如我们已经把下面镜像下载了，我们要去下载上面镜像的时候，我们只需要去下10M的部分。 如果从抽象的角度去看，Docker镜像其实是Docker提供的一种标准化的交付手段，传统应用在交付的时候其实是交付一个可执行文j件。问题在于传统方式的这个可执行文件不包括它的运行环境，我们可能会因为32位系统或64位系统，或者开发测试使用1.0软件，结果交付时候发现用户的环境是2.0等各种各样的问题，导致我们要去花时间去排查；但是，如果我们以Docker镜像的标准化形式去交付，我们就会避免掉这些问题。 扩展阅读《Docker 镜像优化与最佳实践》 *好了，闲话少叙。下面开始实验时间。* 1. 实验概述本实验会使用 Dockerfile 将下面 golang 代码构建成镜像，并通过阿里云镜像服务将镜像分发到阿里云虚拟机，运行该镜像。 123456789101112131415package mainimport ( &quot;fmt&quot; &quot;net/http&quot;)func main() { http.HandleFunc(&quot;/&quot;, func(w http.ResponseWriter, r *http.Request) { fmt.Fprintf(w, &quot;Hello! World\\n&quot;) }) fmt.Println(&quot;start to serve...&quot;) http.ListenAndServe(&quot;:80&quot;, nil)} 2. 实验目标完成此实验后，可以掌握的能力有： Dockerfile 编写和使用 使用阿里云镜像服务来分发镜像。 NOTE: 学前建议: 了解 docker 的基本操作命令 以及 如何使用 ECS 实例。 3. 实验详情3.1 准备应用代码和 Dockerfile首先在本地生成一个文件夹 demo，并将 golang 代码拷贝到 demo 文件夹下的 main.go. 12345678910111213141516171819202122$ pwd/tmp/demo$ lsmain.go$ cat main.gopackage mainimport ( &quot;fmt&quot; &quot;net/http&quot;)func main() { http.HandleFunc(&quot;/&quot;, func(w http.ResponseWriter, r *http.Request) { fmt.Fprintf(w, &quot;Hello! World\\n&quot;) }) fmt.Println(&quot;start to serve...&quot;) http.ListenAndServe(&quot;:80&quot;, nil)} 在当前 demo 目录下编写 Dockerfile ，如下所示 1234567891011121314$ cat DockerfileFROM golang:1.12-alpine# change current working dirWORKDIR /go/src/app# copy main.go into /go/src/appCOPY . .# go build and install the appRUN go install -v ./...# run the app by defaultCMD [&quot;app&quot;] 3.2 构建镜像通常情况下，使用以下命令即可构建镜像 12345678910111213141516171819202122232425$ pwd/tmp/demo# demo:v1 表示镜像名字demo和标签v1$ docker build . -t demo:v1Sending build context to Docker daemon 3.072kBStep 1/5 : FROM golang:1.12-alpine ---&gt; 8ff3fd35cf82Step 2/5 : WORKDIR /go/src/appRemoving intermediate container ffd88a948413 ---&gt; 1056ea513b89Step 3/5 : COPY . . ---&gt; 9fc4655c973aStep 4/5 : RUN go install -v ./... ---&gt; Running in 928fc776a6e1appRemoving intermediate container 928fc776a6e1 ---&gt; a93f17a3a726Step 5/5 : CMD [&quot;app&quot;] ---&gt; Running in 9e3463aa81f6Removing intermediate container 9e3463aa81f6 ---&gt; 8697c7279c74Successfully built 8697c7279c74Successfully tagged demo:v1 NOTE: 在国内访问 Docker Hub 速度比较慢，可以在Docker引擎中设置镜像加速器加速对Docker Hub的访问。 更新 /etc/docker/daemon.json，添加如下参数，并重启Docker引擎。 123{ &quot;registry-mirrors&quot;: [&quot;https://registry.docker-cn.com&quot;]} 1构建完毕之后，可以在本地运行验证下是否符合预期 映射容器内 80 端到宿主机上的 8000 端口$ docker run -d -p 8000:80 demo:v1 curl 一下查看结果$ curl localhost:8000Hello! World 123456789101112131415如果看到 `Hello! World` 字样，我们就可以进入下一个环节了。#### 3.3 推送镜像至阿里云容器镜像服务在推送之前，需要注册阿里云账号和开通阿里云容器镜像服务&gt; 阿里云注册链接： [注册阿里云](https://account.aliyun.com/register/register.htm)&gt; &gt; 阿里云登录链接： [登录阿里云](https://account.aliyun.com/login/login.htm)&gt; &gt; 阿里云容器镜像服务页面： [访问阿里云容器镜像服务](https://cr.console.aliyun.com) &gt; &gt; 容器镜像服务（Container Registry）提供安全的应用镜像托管能力，精确的镜像安全扫描功能，稳定的国内外镜像构建服务，便捷的镜像授权功能，方便用户进行镜像全生命周期管理。当我们拥有阿里云容器镜像服务账号之后呢，可以使用 docker 客户端来登陆服务。 $ docker login -username=**** registry.cn-hangzhou.aliyuncs.comPassword:Login Succeeded 1在推送到镜像之前，需要将本地镜像修改为对应的镜像仓库地址： mydemo 可以替换成自己的命名空间$ docker tag demo:v1 registry.cn-hangzhou.aliyuncs.com/mydemo/demo:v1 $ docker push registry.cn-hangzhou.aliyuncs.com/mydemo/demo:v1 123#### 3.4 登陆阿里云 ECS 机器来下载 demo:v1 镜像登陆 ECS 实例，通过 docker pull 来下载镜像 mydemo 请替换成 3.3 步骤中指定的命令空间$ docker pull registry.cn-hangzhou.aliyuncs.com/mydemo/demo:v1 1下载完毕之后，我们就可以直接运行该镜像 $ docker run -d -p 8000:80 registry.cn-hangzhou.aliyuncs.com/mydemo/demo:v1 1并查看 ECS 机器的 `8000` 端口 $ curl localhost:8000 另外，可以移步 《课后实践：应用容器构建与部署》直接在阿里云大学沙箱实验环境中尝试哦！！ 本文由阿里云容器云平台团队撰写，如有问题或希望转载还请与我们沟通，谢谢！","link":"/%E5%A4%A9%E4%B9%A6/CNCF-%C3%97-Alibaba%E4%BA%91%E5%8E%9F%E7%94%9F%E6%8A%80%E6%9C%AF%E5%85%AC%E5%BC%80%E8%AF%BE/%E7%AC%AC2%E8%AE%B2%EF%BC%9A%E5%AE%B9%E5%99%A8%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5-%E5%AE%9E%E8%B7%B5.html"},{"title":"CNCF × Alibaba云原生技术公开课","text":"CNCF x Alibaba 云原生技术公开课 - 云原生教程 - 阿里云大学 第1讲: “云原生”课知识点自测（一）：1.Kubernetes 并不支持为应用固定 IP，于是我自己通过编写网络插件把应用 IP 管理在了 etcd 里，然后上线。请问这破坏了云原生的理念了吗？* A. 否 5.我编写的容器化应用，会将日志文件写在某路径写死的目录里。请问这破坏了云原生理念了吗？* B. 是 6.以下哪些能力不是标准 Kubernetes 项目提供的？ A. 容器编排与调度 B. PaaS C. 资源管理 D. 服务注册与发现 PaaS是（Platform as a Service）的缩写，是指平台即服务。 把服务器平台作为一种服务提供的商业模式，通过网络进行程序提供的服务称之为SaaS(Software as a Service)， 单选 7.容器启动后，我会时常 SSH 进入到容器里然后写很多文件。请问这破坏了云原生理念了吗？ A. 否 B. 是 单选 9.以下哪些项目跟 Kubernetes 项目功能重合度最高？ A. Mesos B. Docker Swarm C. Docker Swarm 模式（SwarmKit） D. Cloud Foundry 正确答案： C 多选 10.以下哪些标准，可以用来考察一个应用的架构是不是云原生的？ A. 应用实例能否快速水平扩展 B. 应用是否使用镜像机制打包来保证环境一致性 C. 应用数据是否都写在容器数据卷中 D. 应用是否有状态 第2讲：容器基本概念 1234567891011121314151617181920212223242526272829303132333435363738394041Usage: docker run [OPTIONS] IMAGE [COMMAND] [ARG...] 02. 03. -d, --detach=false 指定容器运行于前台还是后台，默认为false 04. -i, --interactive=false 打开STDIN，用于控制台交互 05. -t, --tty=false 分配tty设备，该可以支持终端登录，默认为false 06. -u, --user=\"\" 指定容器的用户 07. -a, --attach=[] 登录容器（必须是以docker run -d启动的容器） 08. -w, --workdir=\"\" 指定容器的工作目录 09. -c, --cpu-shares=0 设置容器CPU权重，在CPU共享场景使用 10. -e, --env=[] 指定环境变量，容器中可以使用该环境变量 11. -m, --memory=\"\" 指定容器的内存上限 12. -P, --publish-all=false 指定容器暴露的端口 13. -p, --publish=[] 指定容器暴露的端口 14. -h, --hostname=\"\" 指定容器的主机名 15. -v, --volume=[] 给容器挂载存储卷，挂载到容器的某个目录 16. --volumes-from=[] 给容器挂载其他容器上的卷，挂载到容器的某个目录 17. --cap-add=[] 添加权限，权限清单详见：http://linux.die.net/man/7/capabilities 18. --cap-drop=[] 删除权限，权限清单详见：http://linux.die.net/man/7/capabilities 19. --cidfile=\"\" 运行容器后，在指定文件中写入容器PID值，一种典型的监控系统用法 20. --cpuset=\"\" 设置容器可以使用哪些CPU，此参数可以用来容器独占CPU 21. --device=[] 添加主机设备给容器，相当于设备直通 22. --dns=[] 指定容器的dns服务器 23. --dns-search=[] 指定容器的dns搜索域名，写入到容器的/etc/resolv.conf文件 24. --entrypoint=\"\" 覆盖image的入口点 25. --env-file=[] 指定环境变量文件，文件格式为每行一个环境变量 26. --expose=[] 指定容器暴露的端口，即修改镜像的暴露端口 27. --link=[] 指定容器间的关联，使用其他容器的IP、env等信息 28. --lxc-conf=[] 指定容器的配置文件，只有在指定--exec-driver=lxc时使用 29. --name=\"\" 指定容器名字，后续可以通过名字进行容器管理，links特性需要使用名字 30. --net=\"bridge\" 容器网络设置: 31. bridge 使用docker daemon指定的网桥 32. host //容器使用主机的网络 33. container:NAME_or_ID &gt;//使用其他容器的网路，共享IP和PORT等网络资源 34. none 容器使用自己的网络（类似--net=bridge），但是不进行配置 35. --privileged=false 指定容器是否为特权容器，特权容器拥有所有的capabilities 36. --restart=\"no\" 指定容器停止后的重启策略: 37. no：容器退出时不重启 38. on-failure：容器故障退出（返回值非零）时重启 39. always：容器退出时总是重启 40. --rm=false 指定容器停止后自动删除容器(不支持以docker run -d启动的容器) 41. --sig-proxy=true 设置由代理接受并处理信号，但是SIGCHLD、SIGSTOP和SIGKILL不能被代理 知识点自测（二）：容器基本概念单选 2.已运行 docker run -d -t —name demo ubuntu top 命令, 在 demo 这个容器内看到 top 命令的 PID 是什么？ A. 随机数字 B. 1 单选 3.已运行 docker run -d -t —name demo ubuntu top 命令，以下哪个 docker 命令创建出的容器能看见 demo 容器进程？ A. docker run –name demo-x –net container:demo ubuntu ps B. docker run –name demo-x –pid container:demo ubuntu ps C. docker run –name demo-x –ipc container:demo ubuntu ps 4.已运行 docker run -d -t —name demo ubuntu top 和 docker run –name demo-x –pid container:demo ubuntu ps 命令，是否可以在 demo-x 容器内部停止容器？ A. 是 5.已运行 docker run -d -t —name demo ubuntu top 命令, 是否可以在 demo 这个容器内部停止容器？ A. 是 B. 否 ？？ 6.已运行 docker run -d —name demo busybox:1.25 top 命令，如何使用 docker 命令来获取容器 demo 的 Init 进程 PID？ 123# 两种方法docker container top &lt;container&gt;docker inspect -f '{{.State.Pid}}' &lt;container&gt; # 题目给的选项 单选 7.以下哪个 docker 命令可以用来创建一个使用宿主机主机名的容器？ A. docker run –uts=host ubuntu hostname B. docker run ubuntu hostname C. docker run –ipc host ubuntu ps 12--uts ??--ipc ?? 单选 8.已运行 docker run -d -t —name demo ubuntu top 和 docker run –name demo-x –pid container:demo ubuntu ps 命令，如果 demo 容器退出了，正在运行的 demo-x 容器是否会退出？ A. 是 9.以下哪个 docker 命令创建出来的容器可以自动重启？ A. docker run -d busybox top B. docker run –restart always busybox top C. docker run -d –restart always busybox top 课后实践：应用容器构建与部署","link":"/%E5%A4%A9%E4%B9%A6/CNCF-%C3%97-Alibaba%E4%BA%91%E5%8E%9F%E7%94%9F%E6%8A%80%E6%9C%AF%E5%85%AC%E5%BC%80%E8%AF%BE/%E7%AC%AC%201%202%E8%AE%B2.html"},{"title":"第3讲：Kubernetes 核心概念 实践","text":"初识 K8s，创建一个guestbook留言簿应用 【K8s | from zero to hero】木环 2019-11-07 876浏览量 简介： 本文介绍一个简单的K8s上手应用，希望通过这个简单的实践让大家对K8s的核心概念有更深入的理解。这个案例要在 Kubernetes 集群上部署一个名叫 guestbook 的 CURD 应用。guestbook 是 Kubernetes 社区的一个经典的应用示例，它有一个 Web 界面来让用户进行 CURD 操作，然后向一个 Redis 主节点写入数据，从多个 Redics 从节点读去数据。 课后实践：Kubernetes 核心概念1. 目标概述本文介绍一个简单的K8s上手应用，希望通过这个简单的实践让大家对K8s的核心概念有更深入的理解。 巩固 Kubernetes 的基本概念 学会使用 Kubernetes 部署一个标准的“多层（multi-tier）”应用 了解 Kubernetes 里如何通过 Pod，Deployment，Service 等 API 原语描述“应用” 2. 实验概览完成此实验后，可以掌握的能力有： 本实验主要在 Kubernetes 集群上部署一个名叫 guestbook 留言簿的 CURD (增查改删)应用。guestbook 是 Kubernetes 社区的一个经典的应用示例，它有一个 Web 界面来让用户进行 CURD 操作，然后向一个 Redis 主节点写入数据，从多个 Redics 从节点读去数据。 实验分以下几个步骤： 创建 Redis 主节点 创建 Redis 从节点集群 创建 guestbook 应用 将 guestbook 应用通过 Service 暴露出来并进行访问 水平扩展 guestbook 应用 3. 所需资源：一个完备的 Kubernetes 集群。您可以选择阿里云容器服务Kubernetes（ACK）进行上手操作。 可以用 Minikube 快速启动一个单节点集群（国内建议使用Minikube 中国版），也可以用云上的 Kubernetes 集群。本次实验演示将使用阿里云容器服务提供的 Kubernetes 集群，版本为 1.12。 你可以使用使用 kubectl version 查看你的集群版本同实验版本一致。 4. 实验详情4.1 创建 Redis 主节点在这里，我们使用一个叫做 Deployment 的 API 对象，来描述单实例的Redis 主节点。 1234567891011121314151617181920212223242526272829apiVersion: apps/v1kind: Deploymentmetadata: name: redis-master labels: app: redisspec: selector: matchLabels: app: redis role: master tier: backend replicas: 1 template: metadata: labels: app: redis role: master tier: backend spec: containers: - name: master image: registry.cn-hangzhou.aliyuncs.com/kubeapps/redis resources: requests: cpu: 100m memory: 100Mi ports: - containerPort: 6379 我们需要把这个上述内容保存为本地 YAML文件，名叫：redis-master-deployment.yaml。这个文件主要定义了两个东西：第一，Pod 里的容器的镜像是 redis；第二，这个 Deployment 的实例数（replicas）是 1，即指启动一个 Pod。 然后，我们使用 Kubernetes 的客户端，执行如下操作： 12$ kubectl apply -f redis-master-deployment.yamldeployment.apps/redis-master created 这一步完成后，Kubernetes 就会按照这个 YAML 文件里的描述为你创建对应的 Pod。这种使用方式就是声明式 API 的典型特征。 接下来，我们可以查看到这个 Pod： 123$ kubectl get podsNAME READY STATUS RESTARTS AGEredis-master-68979f4ddd-pg9cv 1/1 Running 0 49s 可以看到，Pod 已经进入了 Running 状态，表示一切正常。这时，我们就可以查看这个 Pod 里的 Redis 的日志： 12345678$ kubectl logs -f redis-master-68979f4ddd-pg9cv1:C 26 Apr 2019 18:49:29.303 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo1:C 26 Apr 2019 18:49:29.303 # Redis version=5.0.4, bits=64, commit=00000000, modified=0, pid=1, just started1:C 26 Apr 2019 18:49:29.303 # Warning: no config file specified, using the default config. In order to specify a config file use redis-server /path/to/redis.conf1:M 26 Apr 2019 18:49:29.304 * Running mode=standalone, port=6379.1:M 26 Apr 2019 18:49:29.304 # WARNING: The TCP backlog setting of 511 cannot be enforced because /proc/sys/net/core/somaxconn is set to the lower value of 128.1:M 26 Apr 2019 18:49:29.304 # Server initialized1:M 26 Apr 2019 18:49:29.304 * Ready to accept connections 4.2 为 Redis 主节点创建 ServiceKubernetes 里要访问 Pod 最好通过 Service 的方式，这样客户端就不需要记录 Pod 的 IP 地址了。我们的 guestbook 网站需要访问 Redis 主节点的 Pod，所以也要通过 Service 来做。这个 Service API 对象的定义如下所示： 12345678910111213141516apiVersion: v1kind: Servicemetadata: name: redis-master labels: app: redis role: master tier: backendspec: ports: - port: 6379 targetPort: 6379 selector: app: redis role: master tier: backend 这个 Service 名叫 redis-master，它声明用自己的 6379 端口代理 Pod 的 6379端口。 我们还是把上述内容保存成文件然后让 Kubernetes 为我们创建它： 12$ kubectl apply -f redis-master-service.yamlservice/redis-master created 然后我们可以查看一下这个 Service： 1234$ kubectl get serviceNAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGEkubernetes ClusterIP 10.96.0.1 &lt;none&gt; 443/TCP 181dredis-master ClusterIP 10.107.220.208 &lt;none&gt; 6379/TCP 9s 这时候，你就可以通过 10.107.220.208:6379 访问到这个 Redis 主节点。 4.3 创建 Redis 从节点集群我们这个示例中，有多个 Redis 从节点来共同响应读请求。同样的，我们还是通过 Deployment 来描述”一个服务由多个相同的 Pod 实例副本组成”这种语义。 1234567891011121314151617181920212223242526272829303132apiVersion: apps/v1kind: Deploymentmetadata: name: redis-slave labels: app: redisspec: selector: matchLabels: app: redis role: slave tier: backend replicas: 2 template: metadata: labels: app: redis role: slave tier: backend spec: containers: - name: slave image: registry.cn-hangzhou.aliyuncs.com/kubeapps/gb-redisslave:v1 resources: requests: cpu: 100m memory: 100Mi env: - name: GET_HOSTS_FROM value: env ports: - containerPort: 6379 在这个 Deployment 中，我们指定了 replicas: 2，即这个 Deployment 会启动两个相同 Pod（Redis 从节点）。 此外，gb-redisslave:v1 这个镜像，会自动读取 REDIS_MASTER_SERVICE_HOST 这个环境变量的值，也就是 Redis 主节点的 Service 地址，然后用它来组建集群。这个环境变量是Kubernetes 自动根据 redis-master 这个 Service 名字，自动注入到集群的每一个 Pod 当中的。 然后，我们创建 Redis 从节点： 12$ kubectl apply -f redis-slave-deployment.yamldeployment.apps/redis-slave created 这时候，我们就可以查看这些从节点的状态： 12345$ kubectl get podsNAME READY STATUS RESTARTS AGEredis-master-68979f4ddd-pg9cv 1/1 Running 0 17mredis-slave-78b464f5cd-2kn7w 0/1 ContainerCreating 0 37sredis-slave-78b464f5cd-582bk 0/1 ContainerCreating 0 37s 4.4 为 Redis 从节点创建 Service类似的，为了让 guestbook 应用访问上述 Redis 从节点，我们还需要为它们创建一个 Service。在Kubernetes 里，Service 可以通过 selector 选择代理多个 Pod，并且负责负载均衡。这个Service 内容如下所示： 123456789101112131415apiVersion: v1kind: Servicemetadata: name: redis-slave labels: app: redis role: slave tier: backendspec: ports: - port: 6379 selector: app: redis role: slave tier: backend 创建和查看 Service（ 注意：这里 6379 端口使用了简化写法，就不需要写明 targetPort了）： 12345678$ kubectl apply -f redis-slave-svc.yamlservice/redis-slave created$ kubectl get servicesNAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGEkubernetes ClusterIP 10.96.0.1 &lt;none&gt; 443/TCP 181dredis-master ClusterIP 10.107.220.208 &lt;none&gt; 6379/TCP 16mredis-slave ClusterIP 10.101.244.239 &lt;none&gt; 6379/TCP 57s 这样，你就可以通过 10.10.101.244:6379 访问到任何一个 Redis 从节点了。 4.5 创建 guestbook 应用guestbook 应用本身，依然通过一个 Deployment 来描述，如下所示： 123456789101112131415161718192021222324252627282930apiVersion: apps/v1kind: Deploymentmetadata: name: frontend labels: app: guestbookspec: selector: matchLabels: app: guestbook tier: frontend replicas: 3 template: metadata: labels: app: guestbook tier: frontend spec: containers: - name: php-redis image: registry.cn-hangzhou.aliyuncs.com/kubeapps/gb-frontend:v4 resources: requests: cpu: 100m memory: 100Mi env: - name: GET_HOSTS_FROM value: env ports: - containerPort: 80 这个 YAML 定义了一个 3 副本的 Deployment，即 guestbook 应用会启动 3 个 Pod。 我们还是通过同样的步骤创建这个 Deployment： 12$ kubectl apply -f frontend.yamldeployment.apps/frontend created 查看 Pod 的状态： 12345$ kubectl get pods -l app=guestbook -l tier=frontendNAME READY STATUS RESTARTS AGEfrontend-78d6c59f4-2x24x 1/1 Running 0 3m4sfrontend-78d6c59f4-7mz87 1/1 Running 0 3m4sfrontend-78d6c59f4-sw7f2 1/1 Running 0 3m4s 4.6 为 guestbook 应用创建 Service为了能够让用户访问到 guestbook，我们也需要为 guestbook 来创建一个 Service，从而把这个应用以服务的形式暴露出来给用户使用。 而为了能够让 Kubernetes 集群以外的用户，这个 Service 就必须是一个外部可访问的 Service。这个在 Kubernetes 里有几种做法。在云上最常见的，是 LoadBalancer 模式。 12345678910111213141516apiVersion: v1kind: Servicemetadata: name: frontend labels: app: guestbook tier: frontendspec: # 自建集群只能使用 NodePort 模式 # type: NodePort type: LoadBalancer ports: - port: 80 selector: app: guestbook tier: frontend 由于我的集群由阿里云容器服务提供，所以像上面这样直接用 LoadBalancer 模式即可。 1234$ kubectl apply -f frontend-service.yaml$ kubectl get service frontendNAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGEfrontend ClusterIP 172.19.10.209 101.37.192.20 80:32372/TCP 1m 现在，你只要用浏览器打开 EXTERNAL-IP 对应的地址： http://101.37.192.20:31323 ，就可以访问到这个部署好的 guestbook 应用了。 而如果你是自建集群，那就只能用 NodePort 模式来实验（上面 YAML 的注释已经给出了使用方法）。需要注意的是 NodePort 由于安全性问题，不建议在生产环境中使用。 4.7 水平扩展 guestbook 应用要通过 Kubernetes 来水平扩展你的应用以响应更多的请求非常简单，只需要如下一条命令： 12$ kubectl scale deployment frontend --replicas=5deployment.extensions/frontend scaled 你就会立刻看到你的 guestbook 应用的实例从 3 个变成了 5 个： 1234567$ kubectl get pods -l app=guestbook -l tier=frontendNAME READY STATUS RESTARTS AGEfrontend-78d6c59f4-2x24x 1/1 Running 0 14mfrontend-78d6c59f4-7mz87 1/1 Running 0 14mfrontend-78d6c59f4-chxwd 1/1 Running 0 19sfrontend-78d6c59f4-jrvfx 1/1 Running 0 19sfrontend-78d6c59f4-sw7f2 1/1 Running 0 14m","link":"/%E5%A4%A9%E4%B9%A6/CNCF-%C3%97-Alibaba%E4%BA%91%E5%8E%9F%E7%94%9F%E6%8A%80%E6%9C%AF%E5%85%AC%E5%BC%80%E8%AF%BE/%E7%AC%AC3%E8%AE%B2%EF%BC%9AKubernetes-%E6%A0%B8%E5%BF%83%E6%A6%82%E5%BF%B5-%E5%AE%9E%E8%B7%B5.html"},{"title":"django","text":"[TOC] 1. hello world12345678910pip install djangodjango-admin.py startproject helloDjangocd helloDjangopython manage.py startapp article# python manage.py runserverpython manage.py runserver 0.0.0.0:80 &amp;# 最后面的”&amp;”，这符号表示在后台运行该进程。这里的IP地址如果用公网IP# 会运行不了，而用0.0.0.0则外网和127.0.0.1都能够访问。# python manage.py migrate helloDjango/settings.py 12345678DEBUG = True# Application definitionINSTALLED_APPS = [ 'django.contrib.admin', ... 'article', #这里填写的是app的名称] 12345678settings.py## 其它配置代码...# 把英文改为中文LANGUAGE_CODE = 'zh-hans'# 把国际时区改为中国时区（东八区）TIME_ZONE = 'Asia/Shanghai' helloDjango/urls.py 1234567from article.views import *urlpatterns = [ path('admin/', admin.site.urls), path('hello/', hello), path('hello/&lt;int:num&gt;', hello_num),] article/views.py 12345678910111213141516from django.http import HttpResponse, Http404from django.shortcuts import render# Create your views here.def hello(request): return HttpResponse(\"hello world\")def hello_num(request, num): try: num = int(num) return HttpResponse(f\"hello world {num}\") except: return Http404() 2.1 模板helloDjango/settings.py 123import osTEMPLATE_DIRS = [os.path.join(os.path.dirname(__file__), 'templates')] helloDjango/urls.py 1path('template', template), Article/views.py 12345def template(request): context = {'name': 'tim', 'itemList': ['item1', 'item2', 'item3'] } return render(request, '1.html', context=context) Article/templates/1.html 1234567891011121314151617181920212223242526272829&lt;html&gt;&lt;head&gt;&lt;title&gt; hello django &lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt; hello django &lt;/h1&gt;&lt;p&gt;Hello {{ name }}&lt;/p&gt;&lt;ul&gt; {% for item in itemList %} &lt;li&gt;{{ item }}&lt;/li&gt; {% endfor %}&lt;/ul&gt;{% if status %} &lt;p&gt;I like Python!&lt;/p&gt;{% else %} &lt;p&gt;I like Django!&lt;/p&gt;{% endif %}{% ifequal a b %}{% endifequal %}{# 过滤器 #}{{ name | lower }}&lt;/body&gt;&lt;/html&gt; 2.2 模板继承2.html 12345678910111213141516&lt;!DOCTYPE html&gt;&lt;html lang=\"en\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;2&lt;/title&gt;&lt;/head&gt;&lt;body&gt;{% block blockName %} 无用的文字{% endblock %}&lt;p&gt; 2.html out of block &lt;/p&gt;&lt;/body&gt;&lt;/html&gt; 3.html 123456{% extends '2.html' %}{% block blockName %} &lt;p&gt; 3.html in block &lt;/p&gt;{% endblock %}并不会显示 省略 views.py 中的函数和 urls.py 中的 URL 映射说明代码 3.html 的显示结果 123.html in block2.html out of block 因此，2.html 中 block 内的内容不会显示，还有 3.html 中 block 外的内容也不会显示 2.3 模板使用中的注意事项Django 模板进阶 - Django 教程 - 自强学堂 ==, !=, &gt;=, &lt;=, &gt;, &lt; 这些比较都可以在模板中使用，比较符号前后必须有至少一个空格！ and, or, not, in, not in 也可以在模板中使用 123456789101112131415{% if isLastPage %} &lt;button class=\"turn_page disable\" type=\"button\"&gt;{% else %} &lt;button class=\"turn_page\" type=\"button\"&gt;{% endif %}# 一般来说不用加引号，它会自动转成字符串，但是在字符串中有空格的情况下，需要加上引号&lt;a href=\"{{hit.book_url}}\"# 怎么不自动加引号？{{hit.book_name|safe}} 我们还可以通过{%autoescape off%}的方式关闭整段代码的自动转义，比如下面这样：{% autoescape off %}Hello {{ name }}{% endautoescape %} 获取当前用户： 1{{ request.user }} 获取当前网址： 1{{ request.path }} 获取当前 GET 参数： 1{{ request.GET.urlencode }} Django——模板层 - King’home - 博客园 Chrome 自带 截图无法截取全部，更多见博客 3.django admin 管理后台python manage.py createsuperuser 输入 user password 即可创建超级用户 4.modelsDjango Model 每一个Django Model都继承自django.db.models.Model 在Model当中每一个属性attribute都代表一个database field 通过Django Model API可以执行数据库的增删改查, 而不需要写一些数据库的查询语句 设置数据库Django项目建成后, 默认设置了使用SQLite数据库, 在my_blog/my_blog/setting.py中可以查看和修改数据库设置: 123456DATABASES = { 'default': { 'ENGINE': 'django.db.backends.sqlite3', 'NAME': os.path.join(BASE_DIR, 'db.sqlite3'), }} 还可以设置其他数据库, 如MySQL, PostgreSQL, 现在为了简单, 使用默认数据库设置 创建models在my_blog/article/models.py下编写如下程序: 1234567891011121314from django.db import models# Create your models here.class Article(models.Model) : title = models.CharField(max_length = 100) #博客题目 category = models.CharField(max_length = 50, blank = True) #博客标签 date_time = models.DateTimeField(auto_now_add = True) #博客日期 content = models.TextField(blank = True, null = True) #博客文章正文 def __unicode__(self) : return self.title class Meta: #按时间下降排序 ordering = ['-date_time'] 其中__unicode__(self) 函数Article对象要怎么表示自己, 一般系统默认使用`` 来表示对象, 通过这个函数可以告诉系统使用title字段来表示这个对象 CharField 用于存储字符串, max_length设置最大长度 TextField 用于存储大量文本 DateTimeField 用于存储时间, auto_now_add设置True表示自动设置对象增加时间 同步数据库1python manage.py migrate #命令行运行该命令 因为我们已经执行过该命令会出现如下提示 123456Operations to perform: Apply all migrations: admin, contenttypes, sessions, authRunning migrations: No migrations to apply. Your models have changes that are not yet reflected in a migration, and so won't be applied. Run 'manage.py makemigrations' to make new migrations, and then re-run 'manage.py migrate' to apply them. 那么现在需要执行下面的命令 12345$ python manage.py makemigrations#得到如下提示Migrations for 'article': 0001_initial.py: - Create model Article 现在重新运行以下命令 123456$ python manage.py migrate#出现如下提示表示操作成功Operations to perform: Apply all migrations: auth, sessions, admin, article, contenttypesRunning migrations: Applying article.0001_initial... OK migrate命令按照app顺序建立或者更新数据库, 将models.py与数据库同步 现在我们进入Django中的交互式shell来进行数据库的增删改查等操作 123456$ python manage.py shellPython 3.4.2 (v3.4.2:ab2c023a9432, Oct 5 2014, 20:42:22)[GCC 4.2.1 (Apple Inc. build 5666) (dot 3)] on darwinType \"help\", \"copyright\", \"credits\" or \"license\" for more information.(InteractiveConsole)&gt;&gt;&gt; 这里进入Django的shell和python内置的shell是非常类似的 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051&gt;&gt;&gt; from article.models import Article&gt;&gt;&gt; #create数据库增加操作&gt;&gt;&gt; Article.objects.create(title = 'Hello World', category = 'Python', content = '我们来做一个简单的数据库增加操作')&gt;&gt;&gt; Article.objects.create(title = 'Django Blog学习', category = 'Python', content = 'Django简单博客教程')&gt;&gt;&gt; #all和get的数据库查看操作&gt;&gt;&gt; Article.objects.all() #查看全部对象, 返回一个列表, 无对象返回空list[, ]&gt;&gt;&gt; Article.objects.get(id = 1) #返回符合条件的对象&gt;&gt;&gt; #update数据库修改操作&gt;&gt;&gt; first = Article.objects.get(id = 1) #获取id = 1的对象&gt;&gt;&gt; first.title'Hello World'&gt;&gt;&gt; first.date_timedatetime.datetime(2014, 12, 26, 13, 56, 48, 727425, tzinfo=)&gt;&gt;&gt; first.content'我们来做一个简单的数据库增加操作'&gt;&gt;&gt; first.category'Python'&gt;&gt;&gt; first.content = 'Hello World, How are you'&gt;&gt;&gt; first.content #再次查看是否修改成功, 修改操作就是点语法'Hello World, How are you'&gt;&gt;&gt; #delete数据库删除操作&gt;&gt;&gt; first.delete()&gt;&gt;&gt; Article.objects.all() #此时可以看到只有一个对象了, 另一个对象已经被成功删除[]Blog.objects.all() # 选择全部对象Blog.objects.filter(caption='blogname') # 使用 filter() 按博客题目过滤Blog.objects.filter(caption='blogname', id=\"1\") # 也可以多个条件#上面是精确匹配 也可以包含性查询Blog.objects.filter(caption__contains='blogname')Blog.objects.get(caption='blogname') # 获取单个对象 如果查询没有返回结果也会抛出异常#数据排序Blog.objects.order_by(\"caption\")Blog.objects.order_by(\"-caption\") # 倒序#如果需要以多个字段为标准进行排序（第二个字段会在第一个字段的值相同的情况下被使用到），使用多个参数就可以了Blog.objects.order_by(\"caption\", \"id\")#连锁查询Blog.objects.filter(caption__contains='blogname').order_by(\"-id\")#限制返回的数据Blog.objects.filter(caption__contains='blogname')[0]Blog.objects.filter(caption__contains='blogname')[0:3] # 可以进行类似于列表的操作 5.测试article/tests.py 123456789from django.test import TestCase# Create your tests here.# 类名无所谓class ATestClass(TestCase): # 测试方法以 test 开头 def test_aTestMethod(self): self.assertEquals([1, 2, 3], [1, 2, 3]) 1python manage.py test article 6.Django 部署整个部署的链路是 Nginx -&gt; uWSGI -&gt; Python Web程序，通常还会提到supervisord工具。 supervisor 是一个进程管理工具。任何人都不能保证程序不异常退出，不别被人误杀，所以一个典型的工程做法就是使用supervisor看守着你的进程，一旦异常退出它会立马进程重新启动起来。 阿里云 centos 部署 Django12345678910111213141516171819yum install nginx# 安装 python3.8 见 _posts/阿里云/centos.mdpip3 install django# 升级 sqlite3# wget http://www.sqlite.org/2019/sqlite-autoconf-3280000.tar.gzrsync -azvhP sqlite-autoconf-3280000.tar.gz root@47.93.53.47:/root/tar -zxvf sqlite-autoconf-3280000.tar.gz;cd sqlite-autoconf-3280000;./configure;make &amp;&amp; sudo make install# 替换默认 sqlitesudo mv -v /usr/bin/sqlite3 /usr/bin/sqlite3.7.17sudo cp -v sqlite3 /usr/binecho 'export LD_LIBRARY_PATH=\"/usr/local/lib\"'&gt;&gt;~/.zshrcsqlite3 --versionsource ~/.zshrcgit clone git@github.com:zronghui/helloDjango.gitpython3 manage.py migratepython3 manage.py runserver 0.0.0.0:8000 7.staticstatic test · zronghui/helloDjango@fc19af7 article/templates/staticTest.html 12{% load static %}&lt;img src=\"{% static \"template.jpg\" %}\" alt=\"My image\"&gt; helloDjango/settings.py 1STATICFILES_DIRS = [os.path.join(BASE_DIR, \"static\")] 8.去除模板中的硬编码 URL编写你的第一个 Django 应用，第 3 部分 | Django 文档 | Django 9.自定义Error页面debug=False引发的问题debug=False 后，Django 不再接管静态文件, 运行时添加 –insecure 参数（临时解决方案） 为什么DEBUG =假的设置让我的Django的静态文件访问失败？Why does DEBUG=False setting make my django Static Files Access fail? - Stack Overflow 1python3 manage.py runserver --insecure django系列六：自定义Error页面 - 知乎 No-Github/404-I-remember: 收集各种网站的404页面 500 Error Page HTML Templates39 HTML 404 Page Templates25 HTML Funny 404 Pages 404采用404 - 先知社区页面源代码 代码： 404 · zronghui/helloDjango@cb21c95 article/templates/error_404.html 1234567891011121314151617&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=utf-8 /&gt;&lt;title&gt;页面找不到了(´･ω･`)&lt;/title&gt; &lt;link rel=\"stylesheet\" href=\"https://xz.aliyun.com/static/css/IE.css\"&gt;&lt;/head&gt;&lt;body&gt; &lt;div class=\"demo\"&gt; &lt;p&gt;&lt;span&gt;4&lt;/span&gt;&lt;span&gt;0&lt;/span&gt;&lt;span&gt;4&lt;/span&gt;&lt;/p&gt; &lt;p&gt;页面找不到了(´･ω･`)&lt;/p&gt; &lt;div style=\"text-align: center\"&gt; 您可以 &lt;a href=\"javascript:history.go(-1);\"&gt;返回上一页&lt;/a&gt; 或者 &lt;a href=\"/\"&gt;网站首页&lt;/a&gt;&lt;/div&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; article/views.py 12def error_404(request, exception): return render(request, 'error_404.html') helloDjango/settings.py 1DEBUG = False helloDjango/urls.py 1handler404 = error_404 500article/templates/error_404.html 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset=utf-8/&gt; &lt;title&gt;500&lt;/title&gt; &lt;style type=\"text/css\"&gt; html { box-sizing: border-box; } *, *::before, *::after { box-sizing: inherit; } body * { margin: 0; padding: 0; } body { font: normal 100%/1.15 \"Merriweather\", serif; background-color: #7ed0f2; color: #fff; } .wrapper { position: relative; max-width: 1298px; height: auto; margin: 2em auto 0 auto; } /* https://www.flaticon.com/authors/vectors-market */ /* https://www.flaticon.com/authors/icomoon */ .box { max-width: 70%; min-height: auto; margin: 0 auto; padding: 1em 1em; text-align: center; background: url(\"https://www.dropbox.com/s/xq0841cp3icnuqd/flame.png?raw=1\") no-repeat top 10em center/128px 128px, transparent url(\"https://www.dropbox.com/s/w7qqrcvhlx3pwnf/desktop-pc.png?raw=1\") no-repeat top 13em center/128px 128px; } h1, p:not(:last-of-type) { text-shadow: 0 0 6px #216f79; } h1 { margin: 0 0 1rem 0; font-size: 8em; } p { margin-bottom: 0.5em; font-size: 3em; } p:first-of-type { margin-top: 4em; } p &gt; a { border-bottom: 1px dashed #216f79; font-style: italic; text-decoration: none; color: #216f79; } p &gt; a:hover { text-shadow: 0 0 6px #216f79; } p img { vertical-align: bottom; } &lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;div class=\"wrapper\"&gt; &lt;div class=\"box\"&gt; &lt;h1&gt;500&lt;/h1&gt; &lt;p&gt;Sorry, it's me, not you.&lt;/p&gt; &lt;p&gt;&amp;#58;&amp;#40;&lt;/p&gt; &lt;p&gt;&lt;a href=\"/\"&gt;Let me try again!&lt;/a&gt;&lt;/p&gt; &lt;/div&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt; article/views.py 12def error_500(request): return render(request, 'error_500.html') helloDjango/settings.py 1DEBUG = False helloDjango/urls.py 1handler500 = error_500 10. 登录django实现用户登陆访问限制@login_required-苦咖啡’s运维之路-51CTO博客 创建users1234python manage.py shell from django.contrib.auth.models import Useruser = User.objects.create_user('tempUser', 'user@email.com', 'password') 以失败告终 11.分页RSS和分页 - Django 搭建简易博客教程 - 极客学院Wiki 主要参考： 分页 | Django 文档 | Django 代码详见： pagination · zronghui/helloDjango@a9eac83 article/templates/list.html 1234567891011121314151617181920212223242526272829303132333435&lt;!DOCTYPE html&gt;&lt;html lang=\"en\"&gt;&lt;head&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;title&gt;paginator test&lt;/title&gt;&lt;/head&gt;&lt;body&gt;{% for contact in page_obj %} {# Each \"contact\" is a Contact model object. #} {{ contact }} ...{% endfor %}&lt;div class=\"pagination\"&gt; &lt;span class=\"step-links\"&gt; {% if page_obj.has_previous %} &lt;a href=\"?page=1\"&gt;&amp;laquo; first&lt;/a&gt; &lt;a href=\"?page={{ page_obj.previous_page_number }}\"&gt;previous&lt;/a&gt; {% endif %} &lt;span class=\"current\"&gt; Page {{ page_obj.number }} of {{ page_obj.paginator.num_pages }}. &lt;/span&gt; {% if page_obj.has_next %} &lt;a href=\"?page={{ page_obj.next_page_number }}\"&gt;next&lt;/a&gt; &lt;a href=\"?page={{ page_obj.paginator.num_pages }}\"&gt;last &amp;raquo;&lt;/a&gt; {% endif %} &lt;/span&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt; article/views.py 12345678from django.core.paginator import Paginatordef listing(request): contact_list = list(range(100)) paginator = Paginator(contact_list, 2) # Show 25 contacts per page. page_number = request.GET.get('page') page_obj = paginator.get_page(page_number) return render(request, 'list.html', context={'page_obj': page_obj}) helloDjango/urls.py 1path('list', listing) 12.日志参考：Django的日志配置 | 卡瓦邦噶！ 理解Logger首先要理解logging的工作，这里面主要有四个东西：格式器formatter，过滤器filter，处理器handler，日志实例logger。 123 formatterlogger ----&gt; handler ----------------&gt; files, emails filter 配置方式Python中可以使用多种格式配置logging，比如.conf， .ini等。 在Django中，我们是把有关logging的配置写到settings里面。相应的配置及解释如下（仅供参考）。 注意： 发送邮件没有生效 真正生效的 logging 级别配置是最后的 loggers settings.py 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778# 管理员邮箱ADMINS = ( ('zronghui', '*****@qq.com'),)# 非空链接，却发生404错误，发送通知MANAGERSSEND_BROKEN_LINK_EMAILS = TrueMANAGERS = ADMINS# Email设置EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'EMAIL_HOST = 'smtp.163.com' # QQ邮箱SMTP服务器(邮箱需要开通SMTP服务)EMAIL_PORT = 25 # QQ邮箱SMTP服务端口EMAIL_HOST_USER = '*****@qq.com' # 我的邮箱帐号EMAIL_HOST_PASSWORD = '*****' # 授权码EMAIL_SUBJECT_PREFIX = 'website' # 为邮件标题的前缀,默认是'[django]'EMAIL_USE_TLS = True # 开启安全链接DEFAULT_FROM_EMAIL = SERVER_EMAIL = EMAIL_HOST_USER # 设置发件人# logging日志配置LOGGING = { 'version': 1, 'disable_existing_loggers': True, 'formatters': { # 日志格式 'standard': { 'format': '%(asctime)s [%(threadName)s:%(thread)d] [%(name)s:%(lineno)d] [%(module)s:%(funcName)s] [%(levelname)s]- %(message)s'} }, 'filters': { # 过滤器 'require_debug_false': { '()': 'django.utils.log.RequireDebugFalse', } }, 'handlers': { # 处理器 'null': { 'level': 'DEBUG', 'class': 'logging.NullHandler', }, 'mail_admins': { # 发送邮件通知管理员 'level': 'ERROR', 'class': 'django.utils.log.AdminEmailHandler', # 'filters': ['require_debug_false'], # 仅当 DEBUG = False 时才发送邮件 'include_html': True, }, 'debug': { # 记录到日志文件(需要创建对应的目录，否则会出错) 'level': 'INFO', 'class': 'logging.handlers.RotatingFileHandler', 'filename': os.path.join(BASE_DIR, \"log\", 'debug.log'), # 日志输出文件 'maxBytes': 1024 * 1024 * 5, # 文件大小 'backupCount': 5, # 备份份数 'formatter': 'standard', # 使用哪种formatters日志格式 }, 'console': { # 输出到控制台 'level': 'INFO', 'class': 'logging.StreamHandler', 'formatter': 'standard', }, }, # 真正生效的 logging 级别配置 'loggers': { # logging管理器 'django': { 'handlers': ['debug', 'console'], 'level': 'INFO', # 'level': 'DEBUG', 'propagate': False }, 'django.request': { 'handlers': ['mail_admins'], 'level': 'ERROR', 'propagate': True, }, # 对于不在 ALLOWED_HOSTS 中的请求不发送报错邮件 'django.security.DisallowedHost': { 'handlers': ['null'], 'propagate': False, }, }} Manage.py 1234567logDir = os.path.join(os.path.dirname(__file__), 'log')logFile = os.path.join(logDir, 'debug.log')print(logFile)if not os.path.exists(logDir): os.mkdir(logDir) if not os.path.exists(logFile): os.system(f'touch {logFile}') 13. swagger12pip install djangorestframeworkpip install django-rest-swagger django-rest-swagger 根据 djangorestframework 自动生成 swagger 文档 官方教程翻译：主页 - Django REST framework中文站点 手把手教程：m-haziq/django-rest-swagger-docs: Beginners approach to Django Rest Swagger 根据 swagger 配置文件生成 Django 项目（或模块？）：praekelt/swagger-django-generator: Convert Swagger specifications into Django or aiohttp code 根据 swagger 配置文件生成相应 swagger URL aiohttp-swagger3 — aiohttp-swagger3 0.4.2 documentationhh-h/aiohttp-swagger3: Library for swagger documentation browsing and validating aiohttp requests using swagger specification 3.0 1pip install elasticsearch-dsl==5.4.0 tricksxadmin 是对 Django admin 的美化，但是只能用于 Django 1.* ，django-admin-bootstrapSupport Django 1.11 and 2.1 收集静态文件 python manage.py collectstatic 这一句话就会把以前放在app下static中的静态文件全部拷贝到 settings.py 中设置的 STATIC_ROOT 文件夹中 path(‘polls/‘, include(‘polls.urls’)) 函数 include() 允许引用其它 URLconfs。每当 Django 遇到 include() 时，它会截断与此项匹配的 URL 的部分，并将剩余的字符串发送到 URLconf 以供进一步处理。因为投票应用有它自己的 URLconf( polls/urls.py )，他们能够被放在 “/polls/“ ， “/fun_polls/“ ，”/content/polls/“，或者其他任何路径下，这个应用都能够正常工作。 python manage.py shell 命令再次打开 Python 交互式命令行 重定向类、模板类： 1234567891011121314151617181920# project/urls.pyfrom django.urls import pathfrom django.views.generic.base import RedirectViewfrom application.views import NewViewclass SubclassedRedirectView(RedirectView): pattern_name = 'new-view'urlpatterns = [ path(\"old-path/\", SubclassedRedirectView.as_view()), path(\"old-path/\", RedirectView.as_view(pattern_name='new-view')), path(\"new-path/\", NewView.as_view(), name='new-view'),]# application/views.pyfrom django.views.generic.base import TemplateViewclass HomeView(TemplateView): template_name = 'home.html' 装饰器 12345678910111213141516171819202122231. require_POST# 有些视图可以处理多个方法，比如:def multi_method_view(request): if request.method == 'GET': return HttpResponse('Method was a GET.') elif request.method == 'POST': return HttpResponse('Method was a POST.')# 假设您只想响应一个 POSTdef guard_clause_view(request): if request.method != 'POST': raise Http404() return HttpResponse('Method was a POST.')# 我们可以使用 require post decorator，并让 Django 为我们检查该方法。from django.view.decorators.http import require_POST@require_POSTdef the_view(request): return HttpResponse('Method was a POST.') @login_required # 需要登录@user_passes_test(lambda user: user.is_staff) # 登录的是员工 mixin 12345678910111213# application/views.pyfrom django.contrib.auth.mixins import LoginRequiredMixin, UserPassesTestMixinfrom django.views.generic.base import TemplateViewclass HomeView(LoginRequiredMixin, TemplateView): template_name = 'home.html'class StaffProtectedView(UserPassesTestMixin, TemplateView): template_name = 'staff_eyes_only.html' def test_func(self): return self.request.user.is_staff# 可以看到，LoginRequiredMixin UserPassesTestMixin 功能与@login_required @user_passes_test差不多，只是使用方式的区别 Django 升级到 3views.py 中 render_to_response 改为 render 12345-from django.shortcuts import render, render_to_response+from django.shortcuts import render-return render_to_response('diary.html', {'request_get_from': 1, 'date': date})+return render(request, 'diary.html', {'request_get_from': 1, 'date': date}) settings.py 中 1234567891011-MIDDLEWARE_CLASSES = (...)+MIDDLEWARE = (...) TEMPLATES = [ { 'BACKEND': 'django.template.backends.django.DjangoTemplates',- 'DIRS': ['D:/gtdweb/diary/templates/'],+ 'DIRS': [os.path.join(BASE_DIR, 'diary/templates')], ...-STATICFILES_DIRS = ('D:/gtdweb/static/',)+STATICFILES_DIRS = [os.path.join(BASE_DIR, \"static\")] urls.py 中 1234567-from django.conf.urls import include, url+from django.conf.urls import url+from django.urls import pathurlpatterns = [- url(r'^admin/', include(admin.site.urls)),+ path('admin/', admin.site.urls), useful packageawesomewsvincent/awesome-django: A curated list of awesome things related to Djangohaiiiiiyun/awesome-django-cn: Django 优秀资源大全。 Django 调用流程图meshy/django-schema-graph: An interactive graph of your Django model structure Django 快速生成项目代码pydanny/cookiecutter-django: Cookiecutter Django is a framework for jumpstarting production-ready Django projects quickly. 12345678910111213cookiecutter https://github.com/pydanny/cookiecutter-django自动克隆仓库，并让用户回答问题use_whitenoise [n]: nuse_celery [n]: yuse_mailhog [n]: nuse_sentry [n]: yuse_pycharm [n]: ywindows [n]: nuse_docker [n]: nuse_heroku [n]: yuse_compressor [n]: ySelect postgresql_version:…… django 模块化搜索solr es 等多个搜索引擎接口统一 django-haystack/django-haystack: Modular search for DjangoGetting Started with Haystack — Haystack 2.5.0 documentation Getting Started with Haystack — Haystack 2.5.0 documentation 中文文档教程[django-haystack全文检索详细教程_Python_越努力越幸运—liupu-CSDN博客Haystack入门教程 - 简书Django：haystack全文检索详细教程 - 秋寻草 - 博客园卧槽，简单的Django ElasticSearch Haystack我竟然调了那么久。。。 - 知乎Django Haystack 全文检索与关键词高亮_Django博客教程_追梦人物的博客 django-extensionsdjango-extensions/django-extensions: This is a repository for collecting global custom management extensions for the Django Framework. 12pip install django-extensions werkzeug# 在 INSTALLED_APPS 里添加 django_extensions 用途1： 方便查看报错信息，界面美化，网页还带个 terminal，方便查错 python manage.py runserver_plus 9000 用途 2： 查看所有 urls python manage.py show_urls shell_plus ./manage.py shell_plus –ipython 运行Django shell的同时自动加载所有app的models,并选择使用Python shell的版本 Django PackagesDjango Packages : Welcomeubernostrum/django-registration: An extensible user-registration app for Django.pydanny/dj-pagination: Django + Pagination Made Easy Django-Chart.js可用来学习 (1) Django + Chart.js // Learn to intergrate Chart.js with Django - YouTube 项目代码： codingforentrepreneurs/Django-Chart.js: Learn how to integrate Chart.js with Django integrate: Chart.js (http://www.chartjs.org/) with Django (http://django.project.com/) and the Django Rest Framework (http://www.django-rest-framework.org/) 更简单的做法： peopledoc/django-chartjs: Django Class Based Views to generate Ajax charts js parameters. 更全面： IridiumIO/pyChart.js: Objective Chart.js implementation for Python and Django Chart Element in HTML and JS 1234567&lt;canvas id=\"myChart\"&gt;&lt;/canvas&gt;&lt;script&gt; var data = {{ chartJSON | safe }} var ctx = document.getElementById(\"myChart\").getContext('2d'); var myChart = new Chart(ctx, data);&lt;/script&gt; Python Code 12345678910Create Chartfrom pychartjs import BaseChart, ChartType, Color class MyBarGraph(BaseChart): type = ChartType.Bar class data: label = \"Numbers\" data = [12, 19, 3, 17, 10] backgroundColor = Color.Green Update data label and use it in a Django View 123456789def homepage(request): NewChart = MyBarGraph() NewChart.data.label = \"My Favourite Numbers\" # can change data after creation ChartJSON = NewChart.get() return render(request=request, template_name='main/home.html', context={\"chartJSON\": ChartJSON}) 参考链接Django 官方中文文档 Django搭建简易博客教程_Django开发中文手册[PDF]下载-极客学院Wiki Django路由控制URL详解 - 知乎 Django基础(19): Django Admin管理后台详解(上) - 知乎 Django Admin 管理工具 | 菜鸟教程 Introduction · Django 中文文档 1.8 如何在阿里云上部署 Django 应用程序 - 阿里云新手学堂阿里云centos部署Django+nginx+uwsgi服务，安装mezzanine为例-云栖社区-阿里云 Django2.2以上针对Sqlite3版本不匹配 | 沐雨露の山头 | 懒若新生 Django运行访问项目出现的问题:DisallowedHost at / Invalid HTTP_HOST header_Python_will5451的博客-CSDN博客 Django 部署基础 - Django 教程 - 自强学堂Django 部署(Nginx) - Django 教程 - 自强学堂 django系列四：静态文件 - 知乎 Python Elasticsearch DSL 使用笔记(一) | Finger’s Blog","link":"/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%AE%AD/django.html"},{"title":"elastic search","text":"[TOC] 安装mac 12345678910brew install elasticsearch# 修改 PATHexport PATH=/usr/local/Cellar/elasticsearch/6.8.6/bin:$PATH# 安装中文分词插件elasticsearch-plugin install https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v6.8.6/elasticsearch-analysis-ik-6.8.6.zip# 启动elasticsearchpip3 install 'elasticsearch&gt;=6.0.0,&lt;7.0.0' 用RPM安装Elasticsearch到Linux系统服务 - 简书 Install Elasticsearch with RPM | Elasticsearch Reference [6.8] | Elastic 先安装 Java8 linux 见博客文章 阿里云/centosUbuntu 打开 localhost:9200 学习基本概念Relational DB: -&gt;Databases-&gt;Tables-&gt;Rows-&gt;Columns ElasticSearch: -&gt;Indices-&gt;Types-&gt;Documents-&gt;Fields 使用Field datatypes | Elasticsearch Reference [7.6] | Elastic 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051from elasticsearch import Elasticsearches = Elasticsearch()# 创建 Indexresult = es.indices.create(index='news', ignore=400)print(result)# {'acknowledged': True, 'shards_acknowledged': True, 'index': 'news'}# 删除 Indexresult = es.indices.delete(index='news', ignore=[400, 404])print(result)# {'acknowledged': True}# 插入数据data = {'title': '美国留给伊拉克的是个烂摊子吗', 'url': 'http://view.news.qq.com/zt2011/usa_iraq/index.htm'}result = es.create(index='news', doc_type='politics', id=1, body=data)print(result)# {'_index': 'news', '_type': 'politics', '_id': '1', '_version': 1, 'result': 'created', '_shards': {'total': 2, 'successful': 1, 'failed': 0}, '_seq_no': 0, '_primary_term': 1}# index 方法也可以插入数据，而且可以不指定 ID，会自动生成， index 也可以更新已经存在的数据# es.index(index='news', doc_type='politics', body=data)# 更新数据data = { 'title': '美国留给伊拉克的是个烂摊子吗', 'url': 'http://view.news.qq.com/zt2011/usa_iraq/index.htm', 'date': '2011-12-16'}result = es.update(index='news', doc_type='politics', body=data, id=1)print(result)# 删除数据result = es.delete(index='news', doc_type='politics', id=1)print(result)# {'_index': 'news', '_type': 'politics', '_id': '1', '_version': 3, 'result': 'deleted', '_shards': {'total': 2, 'successful': 1, 'failed': 0}, '_seq_no': 2, '_primary_term': 1}# 查询数据dsl = { 'query': { 'match': { 'title': '中国 领事馆' } }}es = Elasticsearch()result = es.search(index='news', doc_type='politics', body=dsl)print(json.dumps(result, indent=2, ensure_ascii=False))# 以上任何执行若报错，返回：# {'error': {...}, 'status': ...}, 如：# {'error': {'root_cause': [{'type': 'resource_already_exists_exception', 'reason': 'index [news/QM6yz2W8QE-bflKhc5oThw] already exists', 'index_uuid': 'QM6yz2W8QE-bflKhc5oThw', 'index': 'news'}], 'type': 'resource_already_exists_exception', 'reason': 'index [news/QM6yz2W8QE-bflKhc5oThw] already exists', 'index_uuid': 'QM6yz2W8QE-bflKhc5oThw', 'index': 'news'}, 'status': 400} 查询返回结果 1234567891011121314151617181920212223242526272829303132333435363738{ \"took\": 1, \"timed_out\": false, \"_shards\": { \"total\": 5, \"successful\": 5, \"skipped\": 0, \"failed\": 0 }, \"hits\": { \"total\": 2, \"max_score\": 2.546152, \"hits\": [ { \"_index\": \"news\", \"_type\": \"politics\", \"_id\": \"dk5G9mQBD9BuE5fdHOUm\", \"_score\": 2.546152, \"_source\": { \"title\": \"中国驻洛杉矶领事馆遭亚裔男子枪击，嫌犯已自首\", \"url\": \"http://news.ifeng.com/world/detail_2011_12/16/11372558_0.shtml\", \"date\": \"2011-12-18\" } }, { \"_index\": \"news\", \"_type\": \"politics\", \"_id\": \"dU5G9mQBD9BuE5fdHOUj\", \"_score\": 0.2876821, \"_source\": { \"title\": \"中韩渔警冲突调查：韩警平均每天扣1艘中国渔船\", \"url\": \"https://news.qq.com/a/20111216/001044.htm\", \"date\": \"2011-12-17\" } } ] }} Hello world123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168#!/usr/bin/env python# -*- coding: utf-8 -*-import jsonimport pretty_errorsfrom elasticsearch import Elasticsearches = Elasticsearch()mapping = { 'properties': { 'title': { 'type': 'text', 'analyzer': 'ik_max_word', 'search_analyzer': 'ik_max_word' } }}es.indices.delete(index='news', ignore=[400, 404])es.indices.create(index='news', ignore=400)result = es.indices.put_mapping(index='news', doc_type='politics', body=mapping)print(result)# {'acknowledged': True}datas = [ { 'title': '美国留给伊拉克的是个烂摊子吗', 'url': 'http://view.news.qq.com/zt2011/usa_iraq/index.htm', 'date': '2011-12-16' }, { 'title': '公安部：各地校车将享最高路权', 'url': 'http://www.chinanews.com/gn/2011/12-16/3536077.shtml', 'date': '2011-12-16' }, { 'title': '中韩渔警冲突调查：韩警平均每天扣1艘中国渔船', 'url': 'https://news.qq.com/a/20111216/001044.htm', 'date': '2011-12-17' }, { 'title': '中国驻洛杉矶领事馆遭亚裔男子枪击 嫌犯已自首', 'url': 'http://news.ifeng.com/world/detail_2011_12/16/11372558_0.shtml', 'date': '2011-12-18' }]for data in datas: debug = es.index(index='news', doc_type='politics', body=data)es.indices.refresh(index=\"news\")result = es.search(index='news', doc_type='politics')print(json.dumps(result, indent=2, ensure_ascii=False))dsl = { 'query': { 'match': { 'title': '中国' } }}es = Elasticsearch()# result = es.search(index='news', doc_type='politics', q='中国 领事馆')result = es.search(index='news', doc_type='politics', body=dsl)print(json.dumps(result, indent=2, ensure_ascii=False))# {'acknowledged': True}# {# \"took\": 3,# \"timed_out\": false,# \"_shards\": {# \"total\": 5,# \"successful\": 5,# \"skipped\": 0,# \"failed\": 0# },# \"hits\": {# \"total\": 4,# \"max_score\": 1.0,# \"hits\": [# {# \"_index\": \"news\",# \"_type\": \"politics\",# \"_id\": \"q4xHqnABU_ZbTbliQ7pZ\",# \"_score\": 1.0,# \"_source\": {# \"title\": \"中国驻洛杉矶领事馆遭亚裔男子枪击 嫌犯已自首\",# \"url\": \"http://news.ifeng.com/world/detail_2011_12/16/11372558_0.shtml\",# \"date\": \"2011-12-18\"# }# },# {# \"_index\": \"news\",# \"_type\": \"politics\",# \"_id\": \"qoxHqnABU_ZbTbliQ7pQ\",# \"_score\": 1.0,# \"_source\": {# \"title\": \"中韩渔警冲突调查：韩警平均每天扣1艘中国渔船\",# \"url\": \"https://news.qq.com/a/20111216/001044.htm\",# \"date\": \"2011-12-17\"# }# },# {# \"_index\": \"news\",# \"_type\": \"politics\",# \"_id\": \"qIxHqnABU_ZbTbliQ7oy\",# \"_score\": 1.0,# \"_source\": {# \"title\": \"美国留给伊拉克的是个烂摊子吗\",# \"url\": \"http://view.news.qq.com/zt2011/usa_iraq/index.htm\",# \"date\": \"2011-12-16\"# }# },# {# \"_index\": \"news\",# \"_type\": \"politics\",# \"_id\": \"qYxHqnABU_ZbTbliQ7pJ\",# \"_score\": 1.0,# \"_source\": {# \"title\": \"公安部：各地校车将享最高路权\",# \"url\": \"http://www.chinanews.com/gn/2011/12-16/3536077.shtml\",# \"date\": \"2011-12-16\"# }# }# ]# }# }# {# \"took\": 7,# \"timed_out\": false,# \"_shards\": {# \"total\": 5,# \"successful\": 5,# \"skipped\": 0,# \"failed\": 0# },# \"hits\": {# \"total\": 2,# \"max_score\": 0.2876821,# \"hits\": [# {# \"_index\": \"news\",# \"_type\": \"politics\",# \"_id\": \"q4xHqnABU_ZbTbliQ7pZ\",# \"_score\": 0.2876821,# \"_source\": {# \"title\": \"中国驻洛杉矶领事馆遭亚裔男子枪击 嫌犯已自首\",# \"url\": \"http://news.ifeng.com/world/detail_2011_12/16/11372558_0.shtml\",# \"date\": \"2011-12-18\"# }# },# {# \"_index\": \"news\",# \"_type\": \"politics\",# \"_id\": \"qoxHqnABU_ZbTbliQ7pQ\",# \"_score\": 0.2876821,# \"_source\": {# \"title\": \"中韩渔警冲突调查：韩警平均每天扣1艘中国渔船\",# \"url\": \"https://news.qq.com/a/20111216/001044.htm\",# \"date\": \"2011-12-17\"# }# }# ]# }# }# 建立索引 插入数据 查询数据ElasticSearch+python完成类似mysql的不分词查询 - 知乎 建立索引123456789101112131415161718192021222324252627PUT /index_test // index_test 对应mysql database_name{ \"mappings\":{ \"doc_type\":{ // doc_type对应 对应mysql table_name \"properties\": { \"field1\": {\"type\": \"keyword\"}, \"field2\": {\"type\": \"keyword\"}, \"field3\": {\"type\": \"keyword\"} } } }}例如：PUT /fb2m{ \"mappings\":{ \"kb_fact\":{ \"properties\": { \"subject\": {\"type\": \"keyword\"}, \"predicate\": {\"type\": \"keyword\"}, \"object\": {\"type\": \"keyword\"} } } }} 批量插入数据12345678910111213141516171819202122232425262728293031323334353637383940414243import copyimport elasticsearchfrom elasticsearch import helpersimport json# 你的Elasticsearch所对应的IP地址和端口，注意，不是Kibanake可视化界面的地址es = elasticsearch.Elasticsearch([{'host':'xx.xx.x.xxx','port':xxxx}])print(\"============== index ================\")count = 0i = 0j = 0num=0actions = []max_count = 2000with open('dataset/index_data','r',encoding='utf-8') as f: for line in f: j += 1 triple = line.strip().split(\" ||| \") try: triple_dict = {'field1':triple[0],'field2':triple[1],'field3':triple[2]} # 如果数据量小可以用index的方法一条条插入 # 这里index，doc_type就等于上一步建立索引所用的名称 #es.index(index='index_test',doc_type='doc_type',body=triple_dict) action={ \"_index\":\"index_test\", \"_type\":\"doc_type\", \"_id\":i, \"_source\":triple_dict } i += 1 count += 1 actions.append(action) except: print(\" !!! \"+ str(j) +\" th row insert faied: \"+line) continue if count&gt;=max_count: helpers.bulk(es, actions) actions=[] count=0 num+=1 print(\"Insert \"+str(num*max_count)+\" records.\")helpers.bulk(es,actions)print('finish~~~') 查询数据ES 21 - Elasticsearch的高级检索语法 (包括term、prefix、wildcard、fuzzy、boost等) - 瘦风 - 博客园 详见博客，↑ 1 term query - 索引词检索1.1 term query - 不分词检索1.2 terms query - in检索2 prefix query - 前缀检索3 wildcard query - 通配符检索4 regexp query - 正则检索5 fuzzy query - 纠错检索6 boost评分权重 - 控制文档的优先级别7 dis_max的用法 - best fields策略7.1 dis_max的提出7.2 使用示例8 exist query - 存在检索, 已过期9 复杂检索的使用范例9.1 多条件过滤 - 包含9.2 多条件拼接 - 包含+范围+排序9.3 定制检索结果的排序规则 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778791.不分词查询所有：select * from doc_typeGET /index_test/doc_type/_search{ \"query\": { \"match_all\": { } }}2.不分词匹配一个字段：select * from doc_type where filed1=value1GET /index_test/doc_type/_search{ \"query\": { \"term\": { \"filed1\" :\"value1 } }}3.不分词同时匹配两个字段：mysql：select * from doc_type where filed1=value1 and filed2=value2ES可以用bool过滤器实现组合检索,一个bool过滤器由三部分组成：{ \"bool\" : { \"must\" : [], //与 AND 等价 \"should\" : [], //与 OR 等价 \"must_not\" : [], //与 NOT 等价 }}所有对应代码如下：GET /index_test/doc_type/_search{ \"query\": { \"bool\": { \"must\": [ { \"term\": { \"filed1\" :\"value1 }}, { \"term\": { \"filed2\" :\"value2\" }} ] } }}多字段（Multi-filed）查询{ \"query\": { \"multi_match\" : { \"query\" : \"elasticsearch guide\", \"fields\": [\"title\", \"summary\"] } }}需要提高某一个字段的分值。在下面的例子中，我们把 summary 字段的分数提高三倍{ \"query\": { \"multi_match\" : { \"query\" : \"elasticsearch guide\", \"fields\": [\"title\", \"summary^3\"] } }, \"_source\": [\"title\", \"summary\", \"publish_date\"]}模糊（Fuzzy）查询{ \"query\": { \"multi_match\" : { \"query\" : \"comprihensiv guide\", \"fields\": [\"title\", \"summary\"], \"fuzziness\": \"AUTO\" } }, \"_source\": [\"title\", \"summary\", \"publish_date\"], \"size\": 1} 1234567891011121314151617Python代码检索：# 上面DSL代码query部分复制下来dsl = { \"query\": { \"bool\": { \"must\": [ { \"term\": { \"filed1\" :\"value1\"}}, { \"term\": { \"filed2\" :\"value2\"}} ] } }}es_result = es.search(index='index_test', doc_type='doc_type', body=dsl)# es返回的是一个dictresult = es_result['hits']['hits']print(result) 更多查询详见：19 个很有用的 ElasticSearch 查询语句 正则（Regexp）查询 短语匹配(Match Phrase)查询 短语前缀（Match Phrase Prefix）查询 查询字符串（Query String） 简单查询字符串（Simple Query String） 词条（Term）/多词条（Terms）查询 词条（Term）查询 - 排序（Sorted） 范围查询 过滤(Filtered)查询 多重过滤（Multiple Filters） 作用分值: 域值（Field Value）因子 作用分值: 衰变（Decay）函数 函数分值: 脚本评分 Query with highlightHighlighting - elasticsearch中文文档 12345678910{ &quot;query&quot; : { &quot;match&quot; : { &quot;content&quot; : &quot;中国&quot; }}, &quot;highlight&quot; : { &quot;pre_tags&quot; : [&quot;&lt;tag1&gt;&quot;, &quot;&lt;tag2&gt;&quot;], &quot;post_tags&quot; : [&quot;&lt;/tag1&gt;&quot;, &quot;&lt;/tag2&gt;&quot;], &quot;fields&quot; : { &quot;content&quot; : {} } }} 12345678910111213141516171819202122232425262728293031323334353637383940414243{ \"took\": 14, \"timed_out\": false, \"_shards\": { \"total\": 5, \"successful\": 5, \"failed\": 0 }, \"hits\": { \"total\": 2, \"max_score\": 2, \"hits\": [ { \"_index\": \"index\", \"_type\": \"fulltext\", \"_id\": \"4\", \"_score\": 2, \"_source\": { \"content\": \"中国驻洛杉矶领事馆遭亚裔男子枪击 嫌犯已自首\" }, \"highlight\": { \"content\": [ \"&lt;tag1&gt;中国&lt;/tag1&gt;驻洛杉矶领事馆遭亚裔男子枪击 嫌犯已自首 \" ] } }, { \"_index\": \"index\", \"_type\": \"fulltext\", \"_id\": \"3\", \"_score\": 2, \"_source\": { \"content\": \"中韩渔警冲突调查：韩警平均每天扣1艘中国渔船\" }, \"highlight\": { \"content\": [ \"均每天扣1艘&lt;tag1&gt;中国&lt;/tag1&gt;渔船 \" ] } } ] }} Elastic 6.x 版只允许每个Index 包含一个Type，7.x 版将会彻底 …干！ ‘黎明前的黑暗’ 分词报错干！ 6.7.2，”黎明前的黑暗“ 分词报错 startOffset must be non-negative, and endOffset must be &gt;= startOffset · Issue #680 · medcl/elasticsearch-analysis-ik elasticsearch-dumptaskrabbit/elasticsearch-dump: Import and export tools for elasticsearch use a supported version of node. v8 or higher: 要求 npm 版本 &gt;= 8 导出为 json，或把一个节点的数据复制到另外一个节点 123456789elasticdump \\ --input=http://47.93.53.47:9200/movies \\ --output=http://101.200.240.225:9200/movies \\ --type=mapping elasticdump \\ --input=http://47.93.53.47:9200/books \\ --output=http://101.200.240.225:9200/books \\ --type=mapping elasticsearch-jieba-plugin需要 es 的版本与之对应，更改 es 版本太麻烦了，下次重新安装的时候再注意吧 Elasticsearch 中文分词 - 结巴分词 - Elasticsearch 基础教程 - 简单教程，简单编程sing1ee/elasticsearch-jieba-plugin: jieba analysis plugin for elasticsearch 7.0.0, 6.4.0, 6.0.0, 5.4.0，5.3.0, 5.2.2, 5.2.1, 5.2, 5.1.2, 5.1.1 问题1.网页端搜索引擎请求失败，elasticsearch Failed to establish a new connectioncurl 127.0.0.1:9200 无法连接 systemctl restart elasticsearch.service 后 systemctl status elasticsearch.service -l 可以看到服务启动失败 解决艰辛过程： systemctl 命令使用 1234567891011121314151.启动、关闭、重启 nfs服务systemctl start/stop/restart nfs-server.service2.设置开机自启动systemctl enable nfs-server.service3.停止开机自启动systemctl disable nfs-server.service4.查看服务当前状态systemctl status nfs-server.servicesystemctl status nfs-server.service -l # 查看全部5.查看所有已启动的服务systemctl list-units --type=service systemctl status elasticsearch.service -l 可以看到 There is insufficient memory for the Java Runtime Environment to continue Solution vim /etc/elasticsearch/jvm.options 1234# -Xms1g# -Xmx1g-Xms500m-Xmx500m 设小了可以启动，但是一搜索就又崩了，最后又改成默认的 1g 去 阿里云控制台 查看 mem 使用情况，一直挺高的，但是在服务器内部，使用 ps -aux | sort -k4nr | head 查看内存占用，并没有内存占用特别高的进程 最后，没辙了，重启服务器，问题解决，去 阿里云控制台 查看 mem 使用情况，内存占用正常 2.外网访问首先, 阿里云安全组里开启 9200 端口 主要解决办法： 阿里云安装elastcsearch后外网访问配置 - 半山无极 - 博客园 外网访问vim /etc/elasticsearch/elasticsearch.yml 找到 network.host，改为 network.host: 0.0.0.0 3.elasticsearch[3787]: could not find java; set JAVA_HOME12345678910java -version # 正常echo $JAVA_HOME # 正常vim /etc/sysconfig/elasticsearch# 设置JAVA_HOME环境变量# 再次尝试启动sudo systemctl start elasticsearch.service# 检查状态systemctl status elasticsearch.service -lcurl -XGET 'localhost:9200' 4.elasticsearch.service: Failed at step USER spawning /usr/share/elas…. 123456vim /usr/lib/systemd/system/elasticsearch.service# 然后注释掉 user 和 groupsystemctl daemon-reloadsystemctl restart elasticsearch.servicesystemctl status elasticsearch.service -l 相关社区、教程Python Elasticsearch Client — Elasticsearch 7.5.1 documentation Introduction | Elasticsearch权威指南（中文版）全文搜索引擎 Elasticsearch 入门教程 - 阮一峰的网络日志Elastic 中文社区 参考链接Elasticsearch 基本介绍及其与 Python 的对接实现 | 静觅 19 个很有用的 ElasticSearch 查询语句 elasticsearch-analysis-ik/README.md at master · medcl/elasticsearch-analysis-ik Elasticsearch - Mapping - Tutorialspoint Python Elasticsearch DSL 查询、过滤、聚合操作实例 - 掘金Python3 操作 elasticsearch - 简书 干货 | Elasticsearch、Kibana数据导出实战 - 掘金 Field datatypes | Elasticsearch Reference [7.6] | Elastic elasticsearch.yml 配置详解（转） - 简书配置Elasticsearch - Elastic 中文问答社区","link":"/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%AE%AD/elastic-search.html"},{"title":"scrapy","text":"[TOC] Scrapy入门教程 — Scrapy 0.24.6 文档 helloScrapy1234pip install scrapyscrapy startproject helloScrapyscrapy genspider volmoe volmoe.comscrapy genspider douban douban.com settings.py300 是权重，决定多个 pipeline 执行的顺序 12345# ROBOTSTXT_OBEY = TrueITEM_PIPELINES = { 'helloScrapy.pipelines.HelloscrapyPipeline': 300,} pipelines.py123456789101112131415161718192021222324252627282930313233# -*- coding: utf-8 -*-# Define your item pipelines here## Don't forget to add your pipeline to the ITEM_PIPELINES setting# See: https://docs.scrapy.org/en/latest/topics/item-pipeline.htmlimport jsonclass HelloscrapyPipeline(object): \"\"\" 处理爬虫所爬取到的数据 \"\"\" def __init__(self): \"\"\" 初始化操作，在爬虫运行过程中只执行一次 \"\"\" self.file = open('books.json', 'w', encoding='utf-8') def process_item(self, item, spider): # 现将item数据转为字典类型，再将其保存为json文件 text = json.dumps(dict(item), ensure_ascii=False) + '\\n' # 写入本地 self.file.write(text) # 会将item打印到屏幕上，方便观察 return item def close_spider(self, spider): \"\"\" 爬虫关闭时所执行的操作，在爬虫运行过程中只执行一次 \"\"\" self.file.close() items.py123456789import scrapyclass BookItem(scrapy.Item): # define the fields for your item here like: # name = scrapy.Field() book_name = scrapy.Field() book_url = scrapy.Field() book_desc = scrapy.Field() Spider/volmoe.py1234567891011121314151617181920212223242526272829303132# -*- coding: utf-8 -*-import scrapyfrom zhconv import convertfrom helloScrapy.items import BookItemclass VolmoeSpider(scrapy.Spider): name = 'volmoe' allowed_domains = ['volmoe.com'] # start_urls = [f'https://volmoe.com/l/all,all,all,sortpoint,all,all/{i}.htm' for i in range(1, 2)] start_urls = [f'https://volmoe.com/l/all,all,all,sortpoint,all,all/{i}.htm' for i in range(1, 473)] # 自动调用 parse ，解析 item URL def parse(self, response): itemUrlList = list(set(response.xpath('/html/body/div[7]/table') \\ .xpath('//a/@href') \\ .re(r'https://volmoe.com/c/\\d+.htm'))) for itemUrl in itemUrlList: yield scrapy.Request(url=itemUrl, callback=self.parse_item) # 手动调用 parse_item ，解析 item def parse_item(self, response): try: item = BookItem() item['book_url'] = response.url item['book_name'] = convert(response.xpath('//div/b/text()').extract()[0], 'zh-cn') item['book_desc'] = convert(response.xpath('//*[@id=\"desc_text\"]/text()').extract()[0].strip(), 'zh-cn') yield item except Exception as e: print(e) return 注意 爬取 列表页+详情页 用 rules 更方便，但是我用了，没有生效，所以手动指定函数处理 直接在网页上的 xpath 可能会与爬虫请求到的结构不同，所以可以用 scrapy shell “url”， view(response), 在网页上使用 xpath finder , xpath helper 查看指定元素的 xpath scrapy genspider mydomain mydomain.com，最后的 mydomain.com 不用加 http 和 com 后面的/, 如 http://mydomain.com/ 借助 https://github.com/further-reading/scrapy-gui 测试 CSS xpath 获得的 URL 没有域名时：url = response.urljoin(next) ? 可以在一个爬虫中用 custom_settings scrapy对request的URL去重 通过 yield scrapy.Request(url, self.parse, dont_filter=False) 里的 dont_filter（默认False） 实现 如果命令行里不想看到那么多输出的话，可以加个 -L WARNING 参数运行爬虫，如：scrapy crawl spider1 -L WARNING scrapy shell 设置 UA 1scrapy shell 'http://www.gqzzw.com/type/bjsh' -s USER_AGENT='Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Safari/537.36' &lt;img src=&quot;https://i.loli.net/2020/03/12/H84sqghj3rNXpWv.jpg&quot; alt=&quot;H84sqghj3rNXpWv&quot; style=&quot;zoom:50%;&quot; /&gt;学习启动所有爬虫 代码启动Scrapy教程10- 动态配置爬虫 — scrapy-cookbook 0.2.2 文档 1234567891011121314151617#!/usr/bin/env python# -*- coding: utf-8 -*-import pretty_errorsimport scrapyfrom scrapy.crawler import CrawlerProcessfrom scrapy.utils.project import get_project_settingsfrom helloScrapy.spiders.gqzzw import GqzzwSpiderpretty_errors.activate()lastPage = input('lastPage: ')zzname = input('zzname: ')process = CrawlerProcess(get_project_settings())# 传入参数process.crawl(GqzzwSpider, lastPage=lastPage, zzname=zzname)process.start() # the script will block here until the crawling is finished 启动一个爬虫scrapy crawl volmoe 事例 spider12345678910111213141516171819import scrapyfrom tutorial.items import DmozItemclass DmozSpider(scrapy.Spider): name = \"dmoz\" allowed_domains = [\"dmoz.org\"] start_urls = [ \"http://www.dmoz.org/Computers/Programming/Languages/Python/Books/\", \"http://www.dmoz.org/Computers/Programming/Languages/Python/Resources/\" ] def parse(self, response): for sel in response.xpath('//ul/li'): item = DmozItem() item['title'] = sel.xpath('a/text()').extract() item['link'] = sel.xpath('a/@href').extract() item['desc'] = sel.xpath('text()').extract() yield item 保存爬取到的数据最简单存储爬取的数据的方式是使用 Feed exports: 1scrapy crawl dmoz -o items.json 该命令将采用 JSON 格式对爬取的数据进行序列化，生成 items.json 文件。 在类似本篇教程里这样小规模的项目中，这种存储方式已经足够。 如果需要对爬取到的item做更多更为复杂的操作，您可以编写 Item Pipeline 。 在Shell中尝试Selector选择器为了介绍Selector的使用方法，接下来我们将要使用内置的 Scrapy shell 。Scrapy Shell需要您预装好IPython(一个扩展的Python终端)。 您需要进入项目的根目录，执行下列命令来启动shell: 1scrapy shell &quot;http://www.dmoz.org/Computers/Programming/Languages/Python/Books/&quot; 注解 当您在终端运行Scrapy时，请一定记得给url地址加上引号，否则包含参数的url(例如 &amp; 字符)会导致Scrapy运行失败。 shell的输出类似: 12345678910111213141516[ ... Scrapy log here ... ]2014-01-23 17:11:42-0400 [default] DEBUG: Crawled (200) &lt;GET http://www.dmoz.org/Computers/Programming/Languages/Python/Books/&gt; (referer: None)[s] Available Scrapy objects:[s] crawler &lt;scrapy.crawler.Crawler object at 0x3636b50&gt;[s] item {}[s] request &lt;GET http://www.dmoz.org/Computers/Programming/Languages/Python/Books/&gt;[s] response &lt;200 http://www.dmoz.org/Computers/Programming/Languages/Python/Books/&gt;[s] settings &lt;scrapy.settings.Settings object at 0x3fadc50&gt;[s] spider &lt;Spider 'default' at 0x3cebf50&gt;[s] Useful shortcuts:[s] shelp() Shell help (print this help)[s] fetch(req_or_url) Fetch request (or URL) and update local objects[s] view(response) View response in a browserIn [1]: 当shell载入后，您将得到一个包含response数据的本地 response 变量。输入 response.body 将输出response的包体， 输出 response.headers 可以看到response的包头。 更为重要的是，当输入 response.selector 时， 您将获取到一个可以用于查询返回数据的selector(选择器)， 以及映射到 response.selector.xpath() 、 response.selector.css() 的 快捷方法(shortcut): response.xpath() 和 response.css() 。 同时，shell根据response提前初始化了变量 sel 。该selector根据response的类型自动选择最合适的分析规则(XML vs HTML)。 让我们来试试: 1234567891011121314In [1]: response.xpath('//title')Out[1]: [&lt;Selector xpath='//title' data=u'&lt;title&gt;Open Directory - Computers: Progr'&gt;]In [2]: response.xpath('//title').extract()Out[2]: [u'&lt;title&gt;Open Directory - Computers: Programming: Languages: Python: Books&lt;/title&gt;']In [3]: response.xpath('//title/text()')Out[3]: [&lt;Selector xpath='//title/text()' data=u'Open Directory - Computers: Programming:'&gt;]In [4]: response.xpath('//title/text()').extract()Out[4]: [u'Open Directory - Computers: Programming: Languages: Python: Books']In [5]: response.xpath('//title/text()').re('(\\w+):')Out[5]: [u'Computers', u'Programming', u'Languages', u'Python'] 命令行工具详见：命令行工具(Command line tools) — Scrapy 0.24.6 文档 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748scrapy startproject myproject# 可以指定模板（怎么自定义模板？）scrapy genspider [-t template] &lt;name&gt; &lt;domain&gt;# 查看 basic 模板scrapy genspider -d basicscrapy crawl myspider# 运行contract检查, 运行没问题就好scrapy check [-l] &lt;spider&gt;scrapy list# 使用 EDITOR 中设定的编辑器编辑给定的spiderscrapy edit spider1# 使用Scrapy下载器(downloader)下载给定的URL，并将获取到的内容送到标准输出（命令行？）scrapy fetch &lt;url&gt;# ** 在浏览器中打开给定的URL，并以Scrapy spider获取到的形式展现。 有些时候spider获取到的页面和普通用户看到的并不相同。 因此该命令可以用来检查spider所获取到的页面，并确认这是您所期望的。scrapy view &lt;url&gt;scrapy shell [url]# 获取给定的URL并使用相应的spider分析处理。如果您提供 --callback 选项，则使用spider的该方法处理，否则使用 parse 。scrapy parse &lt;url&gt; [options]# 获取Scrapy的设定scrapy settings [options]$ scrapy settings --get BOT_NAMEscrapybot$ scrapy settings --get DOWNLOAD_DELAY0# 在未创建项目的情况下，运行一个编写在Python文件中的spider。scrapy runspider &lt;spider_file.py&gt;$ scrapy runspider myspider.py[ ... spider starts crawling ... ]# 输出Scrapy版本。配合 -v 运行时，该命令同时输出Python, Twisted以及平台的信息，方便bug提交。scrapy version [-v]# 将项目部署到Scrapyd服务？scrapy deploy [ &lt;target:project&gt; | -l &lt;target&gt; | -L ]# 运行benchmark测试scrapy bench items123456789101112131415161718192021222324252627282930313233343536373839404142# 定义一个 itemclass Product(scrapy.Item): name = scrapy.Field() price = scrapy.Field() stock = scrapy.Field() last_updated = scrapy.Field(serializer=str) # item API和 dict API 非常相似# 一、与Item配合# 创建itemProduct(name='PC', price=100)# 获取字段的值p.get('name')p.get('name', 'default')p['name']'name' in product # True name 字段是否有填充'last_updated' in product.fields # False last_updated 是否是声明的字段# 设置字段的值p['last_updated'] = 'today'# 获取所有获取到的值p.keys() # ['price', 'name']p.items() # [('price', 1000), ('name', 'Desktop PC')]# 其他任务# 复制item:&gt;&gt;&gt; product2 = Product(product)&gt;&gt;&gt; product3 = product2.copy()# 根据item创建字典(dict):&gt;&gt;&gt; dict(product) # create a dict from all populated values{'price': 1000, 'name': 'Desktop PC'}# 根据字典(dict)创建item:&gt;&gt;&gt; Product({'name': 'Laptop PC', 'price': 1500})# 扩展Item# 可以通过继承原始的Item来扩展item(添加更多的字段或者修改某些字段的元数据)class DiscountedProduct(Product): discount_percent = scrapy.Field(serializer=str) discount_expiration_date = scrapy.Field()# Item对象# 字段(Field)对象 选择器 css xpath123456789101112131415161718192021222324252627282930313233343536373839404142# 二者等价response.xpath('//div/a/text()').extract()response.css('div a::text').extract()response.xpath('//@class').extract() # 选取所有名为 class 的属性response.xpath('//article/div[1]').extract()response.xpath('//article/div[last()]').extract()response.xpath('//article/div[last()-1]').extract()response.xpath('//article/div[@lang]').extract() # 包含 lang 属性response.xpath(\"//article/div[@lang='eng']\").extract() # lang 属性为 engresponse.xpath('/div/*').extract() # 所有子节点response.xpath('//*').extract() # 所有元素response.xpath('//title[@*]').extract() # 所有带属性的 title 元素response.xpath('//div/a | //div/p').extract()# 所有 div 的 a 和 p# 二者等价response.xpath('//a/@href').extract_first()response.xpath('a::attr(href)').extract_first()# 复杂点的用法 href 属性包含 'image'response.xpath('//a[contains(@href, \"iamge\")]/@href').extract()response.css('a[href*=image]::attr(href)').extract()# xpath css 可以嵌套response.xpath('...').css('...')# reresponse.xpath('//a[contains(@href, \"image\")]/text()').re(r'Name:\\s*(.*)')# re re_first# 相对XPathsdivs = response.xpath('//div')&gt;&gt;&gt; for p in divs.xpath('//p'): # this is wrong - gets all &lt;p&gt; from the whole document# 下面是比较合适的处理方法(注意 .//p XPath的点前缀):&gt;&gt;&gt; for p in divs.xpath('.//p'): # extracts all &lt;p&gt; inside... print p.extract()# 另一种常见的情况将是提取所有直系 &lt;p&gt; 的结果:&gt;&gt;&gt; for p in divs.xpath('p'): 获取HTML 注释123456789101112131415161718192021from lxml import etree html_str = \"\"\"&lt;div id=\"box1\"&gt;this from blog.csdn.net/lncxydjq , DO NOT COPY! &lt;div id=\"box2\"&gt;***** &lt;!--can u get me, bitch?--&gt; &lt;/div&gt;&lt;/div&gt;\"\"\" html = etree.HTML(html_str) print html.xpath('//div[@id=\"box1\"]/div/node()')[1]print type(html.xpath('//div[@id=\"box1\"]/div/node()')[1])print html.xpath('//div[@id=\"box1\"]/div/node()')[1].text \"\"\"output:&lt;!--can u get me, bitch?--&gt;&lt;type 'lxml.etree._Comment'&gt;can u get me, bitch?\"\"\" spiders传递参数1234567891011scrapy crawl myspider -a category=electronicsimport scrapyclass MySpider(Spider): name = 'myspider' def __init__(self, category=None, *args, **kwargs): super(MySpider, self).__init__(*args, **kwargs) self.start_urls = ['http://www.example.com/categories/%s' % category] # ... Spider 类name 唯一标识 spider allowed_domains 包含 spider 允许爬取的域名列表 start_urls start_requests() ? 必须返回可迭代对象 逻辑： 未指定 start_urls: start_requests 生效 指定 start_urls: make_requests_from_url 生效 可以使用 start_requests 在启动时以 post 登录某个网站： 123456789def start_requests(self): return [scrapy.FormRequest(\"http://www.example.com/login\", formdata={'user': 'john', 'pass': 'secret'}, callback=self.logged_in)]def logged_in(self, response): # here you would extract links to follow and return Requests for # each of them, with another callback pass make_requests_from_url(url) ? 该方法接受一个URL并返回用于爬取的 Request 对象。 该方法在初始化request时被 start_requests() 调用，也被用于转化url为request。 log(message[, level, component]) log中自动带上该spider的 name 属性。 1234567891011class MySpider(scrapy.Spider): name = 'example.com' allowed_domains = ['example.com'] start_urls = [ 'http://www.example.com/1.html', 'http://www.example.com/2.html', 'http://www.example.com/3.html', ] def parse(self, response): self.log('A response from %s just arrived!' % response.url) parse 中返回多个 request 和 item 12345678910111213141516171819import scrapyfrom myproject.items import MyItemclass MySpider(scrapy.Spider): name = 'example.com' allowed_domains = ['example.com'] start_urls = [ 'http://www.example.com/1.html', 'http://www.example.com/2.html', 'http://www.example.com/3.html', ] def parse(self, response): sel = scrapy.Selector(response) for h3 in response.xpath('//h3').extract(): yield MyItem(title=h3) for url in response.xpath('//a/@href').extract(): yield scrapy.Request(url, callback=self.parse) CrawlSpider继承自 Spider，有一个新属性 rules 和一个可复写的方法 parse_start_url Rule(link_extractor, callback=None, cb_kwargs=None, follow=None, process_links=None, process_request=None) 当编写爬虫规则时，请避免使用 parse 作为回调函数。 由于 CrawlSpider 使用 parse 方法来实现其逻辑，如果 您覆盖了 parse 方法，crawl spider 将会运行失败。 Follow 默认为 False 12345678910111213141516171819202122232425import scrapyfrom scrapy.contrib.spiders import CrawlSpider, Rulefrom scrapy.contrib.linkextractors import LinkExtractorclass MySpider(CrawlSpider): name = 'example.com' allowed_domains = ['example.com'] start_urls = ['http://www.example.com'] rules = ( # 提取匹配 'category.php' (但不匹配 'subsection.php') 的链接并跟进链接(没有callback意味着follow默认为True) Rule(LinkExtractor(allow=('category\\.php', ), deny=('subsection\\.php', ))), # 提取匹配 'item.php' 的链接并使用spider的parse_item方法进行分析 Rule(LinkExtractor(allow=('item\\.php', )), callback='parse_item'), ) def parse_item(self, response): self.log('Hi, this is an item page! %s' % response.url) item = scrapy.Item() item['id'] = response.xpath('//td[@id=\"item_id\"]/text()').re(r'ID: (\\d+)') item['name'] = response.xpath('//td[@id=\"item_name\"]/text()').extract() item['description'] = response.xpath('//td[@id=\"item_description\"]/text()').extract() return item XMLFeedSpider、CSVFeedSpider、SitemapSpider12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758XMLFeedSpider例子该spider十分易用。下边是其中一个例子:from scrapy import logfrom scrapy.contrib.spiders import XMLFeedSpiderfrom myproject.items import TestItemclass MySpider(XMLFeedSpider): name = 'example.com' allowed_domains = ['example.com'] start_urls = ['http://www.example.com/feed.xml'] iterator = 'iternodes' # This is actually unnecessary, since it's the default value itertag = 'item' def parse_node(self, response, node): log.msg('Hi, this is a &lt;%s&gt; node!: %s' % (self.itertag, ''.join(node.extract()))) item = TestItem() item['id'] = node.xpath('@id').extract() item['name'] = node.xpath('name').extract() item['description'] = node.xpath('description').extract() return item CSVFeedSpider例子下面的例子和之前的例子很像，但使用了 CSVFeedSpider:from scrapy import logfrom scrapy.contrib.spiders import CSVFeedSpiderfrom myproject.items import TestItemclass MySpider(CSVFeedSpider): name = 'example.com' allowed_domains = ['example.com'] start_urls = ['http://www.example.com/feed.csv'] delimiter = ';' headers = ['id', 'name', 'description'] def parse_row(self, response, row): log.msg('Hi, this is a row!: %r' % row) item = TestItem() item['id'] = row['id'] item['name'] = row['name'] item['description'] = row['description'] return item SitemapSpider样例简单的例子: 使用 parse 处理通过sitemap发现的所有url:from scrapy.contrib.spiders import SitemapSpiderclass MySpider(SitemapSpider): sitemap_urls = ['http://www.example.com/sitemap.xml'] def parse(self, response): pass # ... scrape item here ... Item Pipeline当Item在Spider中被收集之后，它将会被传递到Item Pipeline，一些组件会按照一定的顺序执行对Item的处理。以下是item pipeline的一些典型应用： 清理HTML数据 验证爬取的数据(检查item包含某些字段) 查重(并丢弃) 将爬取结果保存到数据库中 编写自己的 item pipelineprocess_item 返回 item 或 抛出 DropItem 异常 open_spider 当spider被开启时，这个方法被调用。 close_spider当spider被关闭时，这个方法被调用 Item pipeline 样例123456789101112131415161718192021222324252627282930313233343536373839404142# 验证价格，同时丢弃没有价格的itemfrom scrapy.exceptions import DropItemclass PricePipeline(object): vat_factor = 1.15 def process_item(self, item, spider): if item['price']: if item['price_excludes_vat']: item['price'] = item['price'] * self.vat_factor return item else: raise DropItem(\"Missing price in %s\" % item) # 将item写入JSON文件import jsonclass JsonWriterPipeline(object): def __init__(self): self.file = open('items.jl', 'wb') def process_item(self, item, spider): line = json.dumps(dict(item)) + \"\\n\" self.file.write(line) return # 去重from scrapy.exceptions import DropItemclass DuplicatesPipeline(object): def __init__(self): self.ids_seen = set() def process_item(self, item, spider): if item['id'] in self.ids_seen: raise DropItem(\"Duplicate item found: %s\" % item) else: self.ids_seen.add(item['id']) return item 代理ip1234567class ProxyMiddleware(object): logger = logging.getLogger(__name__) def process_exception(self, request, exception, spider): self.logger.debug('Get Exception') request.meta['proxy'] = get_random_proxy() # 形如 https://127.0.0.1:9743 return request settings.py 启动 item pipeline 插件 从小到大的顺序执行 1234ITEM_PIPELINES = { 'myproject.pipelines.PricePipeline': 300, 'myproject.pipelines.JsonWriterPipeline': 800,} Jobs: 暂停，恢复爬虫12# 启用或恢复一个爬虫，都是scrapy crawl douban -s JOBDIR=jobs/douban-1 爬虫优化123456789101112# 增加并发CONCURRENT_REQUESTS = 100# 降低log级别# LOG_LEVEL = 'INFO'# 禁止cookiesCOOKIES_ENABLED = False# 禁止重试RETRY_ENABLED = False# 减小下载超时,有些网站就是慢# DOWNLOAD_TIMEOUT = 15# 禁止重定向REDIRECT_ENABLED = False 课上教的1 延迟获取1.1 DOWNLOAD_DELAYsettings.py 设置DOWNLOAD_DELAY 数值越大，延迟越大。 1.3 滚动加载像那种页面滚动到下方，才新加载数据的网页，可以通过selenium执行脚本来实现。 1234567891011# 首先导入包from selenium.common.exceptions import TimeoutException# 然后输入代码try: spider.browser.get(request.url) spider.browser.execute_script('window.scrollTo(0, document.body.scrollHeight)')except TimeoutException as e: print('超时') spider.browser.execute_script('window.stop()')time.sleep(2)return HtmlResponse(url=spider.browser.current_url, body=spider.browser.page_source, encoding=\"utf-8\", request=request) 滚动到页面底部的操作可以通过javascript代码’window.scrollTo(0, document.body.scrollHeight)’，来实现，所以要执行该脚本，方法是execute_script 2 settings.py参考网址：scrapy的配置文件settings - 龙云飞谷 - 博客园 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169#==&gt;第一部分：基本配置&lt;===#1、项目名称，默认的USER_AGENT由它来构成，也作为日志记录的日志名BOT_NAME = 'Amazon'#2、爬虫应用路径SPIDER_MODULES = ['Amazon.spiders']NEWSPIDER_MODULE = 'Amazon.spiders'#3、客户端User-Agent请求头#USER_AGENT = 'Amazon (+http://www.yourdomain.com)'#4、是否遵循爬虫协议# Obey robots.txt rulesROBOTSTXT_OBEY = False#5、是否支持cookie，cookiejar进行操作cookie，默认开启#COOKIES_ENABLED = False#6、Telnet用于查看当前爬虫的信息，操作爬虫等...使用telnet ip port ，然后通过命令操作#TELNETCONSOLE_ENABLED = False#TELNETCONSOLE_HOST = '127.0.0.1'#TELNETCONSOLE_PORT = [6023,]#7、Scrapy发送HTTP请求默认使用的请求头#DEFAULT_REQUEST_HEADERS = {# 'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',# 'Accept-Language': 'en',#}#===&gt;第二部分：并发与延迟&lt;===#1、下载器总共最大处理的并发请求数,默认值16#CONCURRENT_REQUESTS = 32#2、每个域名能够被执行的最大并发请求数目，默认值8#CONCURRENT_REQUESTS_PER_DOMAIN = 16#3、能够被单个IP处理的并发请求数，默认值0，代表无限制，需要注意两点#I、如果不为零，那CONCURRENT_REQUESTS_PER_DOMAIN将被忽略，即并发数的限制是按照每个IP来计算，而不是每个域名#II、该设置也影响DOWNLOAD_DELAY，如果该值不为零，那么DOWNLOAD_DELAY下载延迟是限制每个IP而不是每个域#CONCURRENT_REQUESTS_PER_IP = 16#4、如果没有开启智能限速，这个值就代表一个规定死的值，代表对同一网址延迟请求的秒数#DOWNLOAD_DELAY = 3#===&gt;第三部分：智能限速/自动节流：AutoThrottle extension&lt;===#一：介绍from scrapy.contrib.throttle import AutoThrottle #http://scrapy.readthedocs.io/en/latest/topics/autothrottle.html#topics-autothrottle设置目标：1、比使用默认的下载延迟对站点更好2、自动调整scrapy到最佳的爬取速度，所以用户无需自己调整下载延迟到最佳状态。用户只需要定义允许最大并发的请求，剩下的事情由该扩展组件自动完成#二：如何实现？在Scrapy中，下载延迟是通过计算建立TCP连接到接收到HTTP包头(header)之间的时间来测量的。注意，由于Scrapy可能在忙着处理spider的回调函数或者无法下载，因此在合作的多任务环境下准确测量这些延迟是十分苦难的。 不过，这些延迟仍然是对Scrapy(甚至是服务器)繁忙程度的合理测量，而这扩展就是以此为前提进行编写的。#三：限速算法自动限速算法基于以下规则调整下载延迟#1、spiders开始时的下载延迟是基于AUTOTHROTTLE_START_DELAY的值#2、当收到一个response，对目标站点的下载延迟=收到响应的延迟时间/AUTOTHROTTLE_TARGET_CONCURRENCY#3、下一次请求的下载延迟就被设置成：对目标站点下载延迟时间和过去的下载延迟时间的平均值#4、没有达到200个response则不允许降低延迟#5、下载延迟不能变的比DOWNLOAD_DELAY更低或者比AUTOTHROTTLE_MAX_DELAY更高#四：配置使用#开启True，默认FalseAUTOTHROTTLE_ENABLED = True#起始的延迟AUTOTHROTTLE_START_DELAY = 5#最小延迟DOWNLOAD_DELAY = 3#最大延迟AUTOTHROTTLE_MAX_DELAY = 10#每秒并发请求数的平均值，不能高于 CONCURRENT_REQUESTS_PER_DOMAIN或CONCURRENT_REQUESTS_PER_IP，调高了则吞吐量增大强奸目标站点，调低了则对目标站点更加”礼貌“#每个特定的时间点，scrapy并发请求的数目都可能高于或低于该值，这是爬虫视图达到的建议值而不是硬限制AUTOTHROTTLE_TARGET_CONCURRENCY = 16.0#调试AUTOTHROTTLE_DEBUG = TrueCONCURRENT_REQUESTS_PER_DOMAIN = 16CONCURRENT_REQUESTS_PER_IP = 16#===&gt;第四部分：爬取深度与爬取方式&lt;===#1、爬虫允许的最大深度，可以通过meta查看当前深度；0表示无深度# DEPTH_LIMIT = 3#2、爬取时，0表示深度优先Lifo(默认)；1表示广度优先FiFo# 后进先出，深度优先# DEPTH_PRIORITY = 0# SCHEDULER_DISK_QUEUE = 'scrapy.squeue.PickleLifoDiskQueue'# SCHEDULER_MEMORY_QUEUE = 'scrapy.squeue.LifoMemoryQueue'# 先进先出，广度优先# DEPTH_PRIORITY = 1# SCHEDULER_DISK_QUEUE = 'scrapy.squeue.PickleFifoDiskQueue'# SCHEDULER_MEMORY_QUEUE = 'scrapy.squeue.FifoMemoryQueue'#3、调度器队列# SCHEDULER = 'scrapy.core.scheduler.Scheduler'# from scrapy.core.scheduler import Scheduler#4、访问URL去重# DUPEFILTER_CLASS = 'step8_king.duplication.RepeatUrl'#===&gt;第五部分：中间件、Pipelines、扩展&lt;===#1、Enable or disable spider middlewares# See http://scrapy.readthedocs.org/en/latest/topics/spider-middleware.html#SPIDER_MIDDLEWARES = {# 'Amazon.middlewares.AmazonSpiderMiddleware': 543,#}#2、Enable or disable downloader middlewares# See http://scrapy.readthedocs.org/en/latest/topics/downloader-middleware.htmlDOWNLOADER_MIDDLEWARES = { # 'Amazon.middlewares.DownMiddleware1': 543,}#3、Enable or disable extensions# See http://scrapy.readthedocs.org/en/latest/topics/extensions.html#EXTENSIONS = {# 'scrapy.extensions.telnet.TelnetConsole': None,#}#4、Configure item pipelines# See http://scrapy.readthedocs.org/en/latest/topics/item-pipeline.htmlITEM_PIPELINES = { # 'Amazon.pipelines.CustomPipeline': 200,}#===&gt;第六部分：缓存&lt;===\"\"\"1. 启用缓存 目的用于将已经发送的请求或相应缓存下来，以便以后使用 from scrapy.downloadermiddlewares.httpcache import HttpCacheMiddleware from scrapy.extensions.httpcache import DummyPolicy from scrapy.extensions.httpcache import FilesystemCacheStorage\"\"\"# 是否启用缓存策略# HTTPCACHE_ENABLED = True# 缓存策略：所有请求均缓存，下次在请求直接访问原来的缓存即可# HTTPCACHE_POLICY = \"scrapy.extensions.httpcache.DummyPolicy\"# 缓存策略：根据Http响应头：Cache-Control、Last-Modified 等进行缓存的策略# HTTPCACHE_POLICY = \"scrapy.extensions.httpcache.RFC2616Policy\"# 缓存超时时间# HTTPCACHE_EXPIRATION_SECS = 0# 缓存保存路径# HTTPCACHE_DIR = 'httpcache'# 缓存忽略的Http状态码# HTTPCACHE_IGNORE_HTTP_CODES = []# 缓存存储的插件# HTTPCACHE_STORAGE = 'scrapy.extensions.httpcache.FilesystemCacheStorage' 参考资料Scrapy框架的使用之Selector的用法 - 掘金 介绍了 css xpath re 的用法 工具 – Useful packagesfurther-reading/scrapy-gui: A simple, Qt-Webengine powered web browser with built in functionality for basic scrapy webscraping support. 今天在豆瓣失败了，大多还是很好用的 123ipythonimport scrapy_guiscrapy_gui.open_browser() gerapy主要用来管理本地或远程主机的 scrapy 项目，替代 scrapyd 的命令行 1234567pip3 install gerapygerapy initgerapy init &lt;workspace&gt; # 留空 为 gerapycd gerapygerapy migrategerapy createsuperusergerapy runserver Gerapy/Gerapy: Distributed Crawler Management Framework Based on Scrapy, Scrapyd, Django and Vue.js跟繁琐的命令行说拜拜！Gerapy分布式爬虫管理框架来袭！ - 天善智能：专注于商业智能BI和数据分析、大数据领域的垂直社区平台python爬虫之Gerapy安装部署_Python_baidu_32542573的博客-CSDN博客 防止封IP策略yidao620c/core-scrapy: python-scrapy demo 如果抓取太频繁了，就被被封IP 策略1：设置download_delay下载延迟，数字设置为5秒，越大越安全策略2：禁止Cookie，某些网站会通过Cookie识别用户身份，禁用后使得服务器无法识别爬虫轨迹策略3：使用user agent池。也就是每次发送的时候随机从池中选择不一样的浏览器头信息，防止暴露爬虫身份策略4：使用IP池，这个需要大量的IP资源，貌似还达不到这个要求策略5：分布式爬取，这个是针对大型爬虫系统的，对目前而言我们还用不到。 scrapy crawl shudan -s JOBDIR=jobs/shudan-1 scrapy-cookbookContents: Scrapy教程01- 入门篇 安装scrapy 简单示例 Scrapy特性一览 Scrapy教程02- 完整示例 创建Scrapy工程 定义我们的Item 第一个Spider 运行爬虫 处理链接 导出抓取数据 保存数据到数据库 下一步 Scrapy教程03- Spider详解 CrawlSpider XMLFeedSpider CSVFeedSpider SitemapSpider Scrapy教程04- Selector详解 关于选择器 使用选择器 嵌套选择器 使用正则表达式 XPath相对路径 XPath建议 Scrapy教程05- Item详解 定义Item Item Fields Item使用示例 Item Loader 输入/输出处理器 自定义Item Loader 在Field定义中声明输入/输出处理器 Item Loader上下文 内置的处理器 Scrapy教程06- Item Pipeline 编写自己的Pipeline Item Pipeline示例 激活一个Item Pipeline组件 Feed exports 请求和响应 Scrapy教程07- 内置服务 发送email 同一个进程运行多个Spider 分布式爬虫 防止被封的策略 Scrapy教程08- 文件与图片 使用Files Pipeline 使用Images Pipeline 使用例子 自定义媒体管道 Scrapy教程09- 部署 部署到Scrapyd 部署到Scrapy Cloud Scrapy教程10- 动态配置爬虫 脚本运行Scrapy 同一进程运行多个spider 定义规则表 定义文章Item 定义ArticleSpider 编写pipeline存储到数据库中 修改run.py启动脚本 Scrapy教程11- 模拟登录 重写start_requests方法 使用FormRequest 重写_requests_to_follow 页面处理方法 完整源码 Scrapy教程12- 抓取动态网站 scrapy-splash简介 安装docker 安装Splash 安装scrapy-splash 配置scrapy-splash 使用scrapy-splash 使用实例","link":"/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%AE%AD/scrapy.html"},{"title":"书籍地址","text":"[TOC] 电子书下载网站全览 owllook - 网络小说搜索引擎 - 最简洁清新的搜索阅读体验 书单网 - pdf - epub - mobi - azw3 让搜书变得简单 集合多个书籍网站 精品电子书下载 - 读好书，好读书！ 直接提供下载链接 Vol.moe [Kindle漫画|Kobo漫画|epub漫画] [volmoe.com] 有哪些可以找免费电子书的网站? - 知乎有哪些免费好用的电子书下载网站？ - 知乎","link":"/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%AE%AD/%E4%B9%A6%E7%B1%8D%E5%9C%B0%E5%9D%80.html"},{"title":"研究生课程/信息系统实训/信息系统实训-TODO","text":"[TOC] movies: 623150 books: 305070 TODO删除表示放弃 用用户搜索的关键词去豆瓣搜索，再解析回来 多少 ms 查询到多少条数据 and or 一键更换搜索引擎 百度 谷歌 豆瓣 其他书籍搜索引擎 诛 仙 搜索结果太少的话，添加空格；或者第一个字符中间加空格 来源网站 多选搜索 网站悬浮提示信息 电影搜索引擎 爬虫 crontab 每天自动更新 音乐搜索引擎 爬虫 显示最近更新功能及修改的 bug mac 应用爬虫 显示 网站名，如miao101.com–&gt; 旋风视频 对网站来源排序 按分数降序-长度升序排序 博客爬虫 文章搜索 文章列表 IP 访问限制？ 网站自适应问题 cookie 保存历史搜索记录 添加豆瓣书籍解析 音乐搜索引擎 迁移到 docker 点击 Google 等搜索引擎，自动从输入框中获取搜索词，并跳转页面，在 index 页面加上搜索引擎 输入提示 nginx 配置 Nginx 转发静态文件请求 nginx 缓存静态文件 缓存 RedisCaching in Django | TestDriven.io NGINX 缓存静态文件 参考 Dynamically Cache Static Files using Django and Nginx Conditional View Processing | Django documentation | DjangoDjango’s cache framework | Django documentation | Django Django 静态文件处理 - 陈少文的博客 Django 调试工具 django-debug-toolbar - 陈少文的博客 Django 中对静态文件版本的控制 - 陈少文的博客 Django Nginx+uwsgi 安装配置 | 菜鸟教程 使用uWSGI和nginx来设置Django和你的web服务器 — uWSGI 2.0 文档 输入提示 参考 免费VIP视频https://s.video.qq.com/smartbox?callback=fn&amp;plat=2&amp;ver=0&amp;num=5&amp;otype=json&amp;query=lie 影视爬虫 海外剧 - 吾爱看影视-在线免费高清电视电影天堂 免费VIP视频 看片狂人 日本动漫推荐,好看的动漫排行 - 哆咪动漫网-有生之年都在补番中 国产动漫推荐,最新最好看的动漫推荐 - 哆咪动漫网-有生之年都在补番中 免费的在线影视网站汇总 - 不死鸟 - 分享为王 SBKKO导航 | 轻松浏览，便捷上网，效率生活从这里开始！ 2020最近好看的国产剧|国产剧推荐排行榜_第1页 -影视看看 麦葱音乐搜索器_多站合一音乐搜索,音乐在线试听 M站_哔咪哔咪,这里是兴趣使然的无名小站_bimibimi 动漫影音- 派导航 影视搜索-无心法师-电影狗 新奇遇电影网-在线电影-最新电影-免费电影-在线观看 高清 书籍爬虫 资源帝电子书导航_在这里发现更多好书… FreeMbook 免费下载电子书 epub azw3 mobi 计算机免费书籍,电子书,pdf电子书,电子书籍,网络书籍,电脑书籍下载,编程书籍,编程电子书下载 - 脚本之家 码农电子书！ – 开源电子书下载平台 搜索引擎 熊猫搜书 东京不够热 | TNH Subtitle search_word - 百度云网盘资源合集 - 大力盘搜索 elastic search - Goobe 搜索 | A4k字幕网 音乐可以实现搜索引擎跳转 | 自己部署到服务器上 | 复现他的逻辑 全网免费音乐搜索汇总 - 不死鸟 - 分享为王 铜钟 - 在一处聆听所有音乐Tongzhong Minienzeberg/tongzhong-music: 将QQ音乐、网易云音乐和虾米音乐上的歌添加到一个列表来播放！ 参考网页：Lookao 可能有用的网页superRaytin/paginationjs: A jQuery plugin to provide simple yet fully customisable pagination. 萌搜 为小众而搜 免费txt小说下载 - 不死鸟 - 分享为王 区块链_区块链技术_区块链应用-InfoQ极客搜索 shudan 网爬取的站点书单网 - pdf - epub - mobi - azw3 让搜书变得简单每日书单- 精品电子书下载 - azw3 - epub - mobi - kindle电子书 一个搜索引擎 没有 favicon 不添加了 【新上线】书籍搜索引擎 - TheFuture阅读 - The Future - The Future!TheFuture书籍搜索-免费电子书搜索引擎TheFuture书籍搜索TheFuture书籍搜索","link":"/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%AE%AD/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%AE%AD-TODO.html"},{"title":"信息系统实训","text":"[TOC] 课程任务面向图书信息搜索引擎面向曲目信息搜索引擎 第一次课实训任务只用一种正则表达式把以下日期提取出来•”xxx出生于1995年6月1日” • ”xxx出生于1995/6/1” • ”xxx出生于1995-6-1” • ”xxx出生于1995-06-01” • ”xxx出生于1995-06”代码提交：www.eec-cn.com（u+平台）注册，做好组队，建立好成员组。 regex 资源练习题https://blog.csdn.net/qian_youyou/article/details/79121916菜鸟教程正则表达式 教程https://www.runoob.com/regexp/regexp-tutorial.html在线工具http://tools.jb51.net/regex/javascriptPython常用正则函数https://www.runoob.com/python3/python3-reg-expressions.html","link":"/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%AE%AD/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%AE%AD.html"},{"title":"pygame","text":"[TOC] hbokmann/Pacman: Pacman in Python with PyGamebrunofalmeida/Pacman-Pygame: A remake of the classic Pac-Man arcade game using Python and Pygame.pygame cheat sheet - pygame_cheat_sheet.pdf PyGame: A Primer on Game Programming in Python – Real Python realpython/materials: Bonus materials, exercises, and example projects for our Python tutorials OpenGameArt.org: sounds, sound effects, sprites, and other artwork Kenney.nl: sounds, sound effects, sprites, and other artwork Gamer Art 2D: sprites and other artwork CC Mixter: sounds and sound effects Freesound: sounds and sound effects Search Art | OpenGameArt.orgFreesound - sound search mac pygame 无画面的问题12345brew install sdl smpeg sdl_image sdl_mixer sdl_ttf portmidi hg sdl_mixer portmidi sdl2 sdl2_image sdl2_mixer sdl2_ttfpython3 -m pip install pygame==2.0.0.dev6 --user# 检验python -m pygame.examples.aliens","link":"/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/pygame.html"},{"title":"计算机操作系统 CS-Notes","text":"[toc]","link":"/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F-CS-Notes.html"},{"title":"HTTP CS-Notes","text":"[toc]","link":"/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/HTTP-CS-Notes.html"},{"title":"socket CS-Notes","text":"[toc]","link":"/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/socket-CS-Notes.html"},{"title":"计算机网络 CS-Notes","text":"[toc] [概述](https://cyc2018.github.io/CS-Notes/#/notes/计算机网络 - 概述)ISP互联网服务提供商（Internet Service Provider），ISP 可以从互联网管理机构获得许多 IP 地址，同时拥有通信线路以及路由器等互联设备，个人或机构向 ISP 缴纳一定的费用就可以接入互联网。 主机之间的通信方式C-S 客户端-服务器 模式 P2P 电路交换与分组交换电路交换电路交换用于电话通信系统，两个用户要通信之前需要建立一条专用的物理链路，并且在整个通信过程中始终占用该链路，因此电路交换对线路的利用率很低，往往不到 10%。 分组交换每个分组都有首部和尾部，包含了源地址和目的地址等控制信息，在同一个传输线路上同时传输多个分组互相不会影响，因此在同一条传输线路上允许同时传输多个分组，也就是说分组交换不需要占用传输线路。 在一个邮局通信系统中，邮局收到一封邮件之后，先存储下来，然后把相同目的地的邮件一起转发到下一个目的地，这个过程就是存储转发过程，分组交换也使用了存储转发过程。 时延总时延=排队时延+处理时延+传输时延+传播时延 排队时延分组在路由器的输入队列和输出队列中排队等待的时间，取决于网络当前的通信量。 处理时延主机或路由器收到分组时进行处理所需要的时间，例如分析首部、从分组中提取数据、进行差错检验或查找适当的路由等。 传输时延主机或路由器传输数据帧所需要的时间。 其中 l 表示数据帧的长度，v 表示传输速率。 传播时延电磁波在信道中传输所需要的花费的时间，电磁波传播的速度接近光速。 delay = l / v 其中 l 表示信道长度(m)，v 表示电磁波速度(m/s) 计算机网络体系结构 五层协议应用层：为特定应用程序提供数据传输服务，例如 HTTP、DNS 等协议。数据单位为报文 传输层：为进程提供数据传输服务。由于应用层协议很多，定义通用的传输层协议就可以支持不断增多的应用层协议。运输层包括两层协议：TCP UDP。TCP: 传输控制协议，提供面向连接、可靠的数据传输服务，数据单位为报文段。UDP: 用户数据报协议，提供无连接、尽最大努力的数据传输服务，数据单位为用户数据报。TCP 主要提供完整性服务，UDP 主要提供即时性服务。 网络层：为主机提供数据传输服务。网络层把数据层传递下来的报文段或用户数据报封装成分组。 数据链路层：网络层针对的是主机之间的数据传输服务，而主机之间可以有许多链路，链路层协议就是为同一链路的主机提供数据传输服务。数据链路层把网络层传下来的分组封装成帧。 物理层：考虑怎么在传输媒体上传输比特流，而不是指具体的传输媒体。物理层的作用是尽可能屏蔽传输媒体和通信手段的差异，使数据链路层感觉不到这些差异。 OSI表示层和会话层，五层协议中没有这 2 层，而是将这些功能留给应用程序开发者处理。 TCP/IP只有四层，相当于五层协议中数据链路层和物理层合并为网络接口层。 数据在各层之间的传递过程在向下的过程中，需要添加下层协议所需要的首部或者尾部，而在向上的过程中不断拆开首部和尾部。 路由器只有下面三层协议，因为路由器位于网络核心中，不需要为进程或者应用程序提供服务，因此也就不需要传输层和应用层。 [物理层](https://cyc2018.github.io/CS-Notes/#/notes/计算机网络 - 物理层)通信方式根据信息在传输线上的传送方向，分为以下三种通信方式： 单工通信：单向传输 半双工通信：双向交替传输 全双工通信：双向同时传输 带通调制模拟信号是连续的信号，数字信号是离散的信号。而带通调制把数字信号转换为模拟信号。 [链路层](https://cyc2018.github.io/CS-Notes/#/notes/计算机网络 - 链路层)基本问题1. 封装成帧2. 透明传输帧使用首部和尾部进行定界，透明传输就是将与首部尾部相同的内容转义。接收端处理后还原出原始数据，用户察觉不到转移字符的存在，这个过程是透明传输。 3. 差错检测数据链路层使用循环冗余校验(CRC)来检查比特差错。 信道分类1. 广播信道一对多通信 有 2 种方法避免所有节点发送的数据，一个是信道复用技术，一是使用 CSMA/CD 协议。 2. 点对点信道使用 PPP 协议 信道复用技术1. 频分复用2. 时分复用由于计算机数据的突发性之，通信过程没必要一直占用信道资源而不让出给其他用户使用，因此这两种方式对信道的利用率都不高。 3. 统计时分复用4. 波分复用5. 码分复用CSMA/CD 协议Carrier Sense Multiple Access with Collision Detection 载波监听多点接入/碰撞检测 载波监听：主机不停地监听信道，在发送前，如果监听到信道正在使用，就必须等待。 多点接入：说明这是总线型网络，许多主机以多点的方式连接到总线上。？ 碰撞检测：发送中，若监听到信道已有其他主机正在发送数据，就表示发生了碰撞。 记端到端的传播时延为 τ，最先发送的站点最多经过 2τ 就可以知道是否发生了碰撞，2τ 为争用期。只有经过争用期之后还没有检测到碰撞，才能肯定这次发送不会发生碰撞。 当发生碰撞时，站点要停止发送，等待一段时间再发送。这个时间采用 截断二进制指数退避算法 来确定。从离散的整数集合 {0, 1, .., (2k-1)} 中随机取出一个数，记作 r，然后取 r 倍的争用期作为重传等待时间。 PPP 协议互联网用户通常需要连接到某个 ISP 之后才能接入到互联网，PPP 协议是用户计算机和 ISP 进行通信时所使用的数据链路层协议。 MAC 地址Mac 地址是链路层地址，长度是 6 字节（48 位），用于唯一标识网络适配器（网卡）。 一台主机拥有多少个网络适配器就有多少个 MAC 地址。例如笔记本电脑普遍存在无线网络适配器和有线网络适配器，因此就有两个 MAC 地址。 局域网以太网目前以太网使用交换机替代了集线器，交换机是一种链路层设备，它不会发生碰撞，能根据 MAC 地址进行存储转发。 交换机交换机具有自学习能力，学习的是交换表的内容，交换表中存储着 MAC 地址到接口的映射。 正是由于这种自学习能力，因此交换机是一种即插即用设备，不需要网络管理员手动配置交换表内容。 虚拟局域网[网络层](https://cyc2018.github.io/CS-Notes/#/notes/计算机网络 - 网络层)概述IP协议 地址解析协议 ARP（Address Resolution Protocol） 网络控制报文协议 ICMP（Internet Control Message Protocol） 网络组管理协议 IGMP（Internet Group Management Protocol） IP 数据报格式 版本 : 有 4（IPv4）和 6（IPv6）两个值； 首部长度 : 占 4 位，因此最大值为 15。值为 1 表示的是 1 个 32 位字的长度，也就是 4 字节。因为固定部分长度为 20 字节，因此该值最小为 5。如果可选字段的长度不是 4 字节的整数倍，就用尾部的填充部分来填充。 区分服务 : 用来获得更好的服务，一般情况下不使用。 总长度 : 包括首部长度和数据部分长度。 生存时间 ：TTL，它的存在是为了防止无法交付的数据报在互联网中不断兜圈子。以路由器跳数为单位，当 TTL 为 0 时就丢弃数据报。 协议 ：指出携带的数据应该上交给哪个协议进行处理，例如 ICMP、TCP、UDP 等。 首部检验和 ：因为数据报每经过一个路由器，都要重新计算检验和，因此检验和不包含数据部分可以减少计算的工作量。 标识 : 在数据报长度过长从而发生分片的情况下，相同数据报的不同分片具有相同的标识符。 片偏移 : 和标识符一起，用于发生分片的情况。片偏移的单位为 8 字节。 IP 地址编址方式IP 地址的编址方式经历了三个历史阶段： 1. 分类由两部分组成，网络号和主机号，其中不同分类具有不同的网络号长度，并且是固定的。 IP 地址 ::= {&lt; 网络号 &gt;, &lt; 主机号 &gt;} 2. 子网划分通过在主机号字段中拿一部分作为子网号，把两级 IP 地址划分为三级 IP 地址。 IP 地址 ::= {&lt; 网络号 &gt;, &lt; 子网号 &gt;, &lt; 主机号 &gt;} 要使用子网，必须配置子网掩码。一个 B 类地址的默认子网掩码为 255.255.0.0，如果 B 类地址的子网占两个比特，那么子网掩码为 11111111 11111111 11000000 00000000，也就是 255.255.192.0。 注意，外部网络看不到子网的存在。 3. 无分类无分类编址 CIDR 消除了传统 A 类、B 类和 C 类地址以及划分子网的概念，使用网络前缀和主机号来对 IP 地址进行编码，网络前缀的长度可以根据需要变化。 IP 地址 ::= {&lt; 网络前缀号 &gt;, &lt; 主机号 &gt;} CIDR 的记法上采用在 IP 地址后面加上网络前缀长度的方法，例如 128.14.35.7/20 表示前 20 位为网络前缀。 CIDR 的地址掩码可以继续称为子网掩码，子网掩码首 1 长度为网络前缀的长度。 一个 CIDR 地址块中有很多地址，一个 CIDR 表示的网络就可以表示原来的很多个网络，并且在路由表中只需要一个路由就可以代替原来的多个路由，减少了路由表项的数量。把这种通过使用网络前缀来减少路由表项的方式称为路由聚合，也称为 构成超网 。 在路由表中的项目由“网络前缀”和“下一跳地址”组成，在查找时可能会得到不止一个匹配结果，应当采用最长前缀匹配来确定应该匹配哪一个。 地址解析协议 ARP由 IP 地址得到 MAC 地址 网际控制报文协议 ICMPICMP 是为了更有效地转发 IP 数据报和提高交付成功的机会。 1. PingPing 是 ICMP 的一个重要应用，主要用来测试两台主机之间的连通性。 2. TracerouteTraceroute 是 ICMP 的另一个应用，用来跟踪一个分组从源点到终点的路径。 虚拟专用网 VPN网络地址转换 NAT专用网内部的主机使用本地 IP 地址又想和互联网上的主机通信时，可以使用 NAT 来将本地 IP 转换为全球 IP。 为了更有效地利用全球 IP 地址，现在常用的 NAT 转换表把传输层的端口号也用上了，使得多个专用网内部的主机共用一个全球 IP 地址。使用端口号的 NAT 也叫做网络地址与端口转换 NAPT。 路由器的结构路由器从功能上可以划分为：路由选择和分组转发 路由器分组转发流程 从数据报的首部提取目的主机的 IP 地址 D，得到目的网络地址 N。 若 N 就是与此路由器直接相连的某个网络地址，则进行直接交付； 若路由表中有目的地址为 D 的特定主机路由，则把数据报传送给表中所指明的下一跳路由器； 若路由表中有到达网络 N 的路由，则把数据报传送给路由表中所指明的下一跳路由器； 若路由表中有一个默认路由，则把数据报传送给路由表中所指明的默认路由器； 报告转发分组出错。 路由选择协议1. 内部网关协议 RIPRIP 是一种基于距离向量的路由选择协议。距离是指跳数，直接相连的路由器跳数为 1。跳数最多为 15，超过 15 表示不可达。 RIP 按固定的时间间隔仅和相邻路由器交换自己的路由表，经过若干次交换之后，所有路由器最终会知道到达本自治系统中任何一个网络的最短距离和下一跳路由器地址。 RIP 协议实现简单，开销小。但是 RIP 能使用的最大距离为 15，限制了网络的规模。并且当网络出现故障时，要经过比较长的时间才能将此消息传送到所有路由器。 2. 内部网关协议 OSPF开放最短路径优先 OSPF，是为了克服 RIP 的缺点而开发出来的。 开放表示 OSPF 不受某一家厂商控制，而是公开发表的；最短路径优先表示使用了 Dijkstra 提出的最短路径算法 SPF。 OSPF 具有以下特点： 向本自治系统中的所有路由器发送信息，这种方法是洪泛法。 发送的信息就是与相邻路由器的链路状态，链路状态包括与哪些路由器相连以及链路的度量，度量用费用、距离、时延、带宽等来表示。 只有当链路状态发生变化时，路由器才会发送信息。 所有路由器都具有全网的拓扑结构图，并且是一致的。相比于 RIP，OSPF 的更新过程收敛的很快。 3. 外部网关协议 BGPBGP（Border Gateway Protocol，边界网关协议） AS 之间的路由选择很困难，主要是由于： 互联网规模很大； 各个 AS 内部使用不同的路由选择协议，无法准确定义路径的度量； AS 之间的路由选择必须考虑有关的策略，比如有些 AS 不愿意让其它 AS 经过。 BGP 只能寻找一条比较好的路由，而不是最佳路由。 每个 AS 都必须配置 BGP 发言人，通过在两个相邻 BGP 发言人之间建立 TCP 连接来交换路由信息。 [传输层](https://cyc2018.github.io/CS-Notes/#/notes/计算机网络 - 传输层)网络层只把分组发送到目的主机，但是真正通信的并不是主机而是主机中的进程。传输层提供了进程间的逻辑通信，传输层向高层用户屏蔽了下面网络层的核心细节，使应用程序看起来像是在两个传输层实体之间有一条端到端的逻辑通信信道。 UDP 和 TCP 的特点 用户数据报协议 UDP（User Datagram Protocol）是无连接的，尽最大可能交付，没有拥塞控制，面向报文（对于应用程序传下来的报文不合并也不拆分，只是添加 UDP 首部），支持一对一、一对多、多对一和多对多的交互通信。 传输控制协议 TCP（Transmission Control Protocol）是面向连接的，提供可靠交付，有流量控制，拥塞控制，提供全双工通信，面向字节流（把应用层传下来的报文看成字节流，把字节流组织成大小不等的数据块），每一条 TCP 连接只能是点对点的（一对一）。 UDP 首部格式 首部字段只有 8 个字节，包括源端口、目的端口、长度、检验和。12 字节的伪首部是为了计算检验和临时添加的。 TCP 首部格式 序号 ：用于对字节流进行编号，例如序号为 301，表示第一个字节的编号为 301，如果携带的数据长度为 100 字节，那么下一个报文段的序号应为 401。 确认号 ：期望收到的下一个报文段的序号。例如 B 正确收到 A 发送来的一个报文段，序号为 501，携带的数据长度为 200 字节，因此 B 期望下一个报文段的序号为 701，B 发送给 A 的确认报文段中确认号就为 701。 数据偏移 ：指的是数据部分距离报文段起始处的偏移量，实际上指的是首部的长度。 确认 ACK ：当 ACK=1 时确认号字段有效，否则无效。TCP 规定，在连接建立后所有传送的报文段都必须把 ACK 置 1。 同步 SYN ：在连接建立时用来同步序号。当 SYN=1，ACK=0 时表示这是一个连接请求报文段。若对方同意建立连接，则响应报文中 SYN=1，ACK=1。 终止 FIN ：用来释放一个连接，当 FIN=1 时，表示此报文段的发送方的数据已发送完毕，并要求释放连接。 窗口 ：窗口值作为接收方让发送方设置其发送窗口的依据。之所以要有这个限制，是因为接收方的数据缓存空间是有限的。 TCP 的三次握手 假设 A 为客户端，B 为服务器端。 首先 B 处于 LISTEN（监听）状态，等待客户的连接请求。 A 向 B 发送连接请求报文，SYN=1，ACK=0，选择一个初始的序号 x。 B 收到连接请求报文，如果同意建立连接，则向 A 发送连接确认报文，SYN=1，ACK=1，确认号为 x+1，同时也选择一个初始的序号 y。 A 收到 B 的连接确认报文后，还要向 B 发出确认，确认号为 y+1，序号为 x+1。 B 收到 A 的确认后，连接建立。 三次握手的原因 第三次握手是为了防止失效的连接请求到达服务器，让服务器错误打开连接。 客户端发送的连接请求如果在网络中滞留，那么就会隔很长一段时间才能收到服务器端发回的连接确认。客户端等待一个超时重传时间之后，就会重新请求连接。但是这个滞留的连接请求最后还是会到达服务器，如果不进行三次握手，那么服务器就会打开两个连接。如果有第三次握手，客户端会忽略服务器之后发送的对滞留连接请求的连接确认，不进行第三次握手，因此就不会再次打开连接。 TCP 的四次挥手 以下描述不讨论序号和确认号，因为序号和确认号的规则比较简单。并且不讨论 ACK，因为 ACK 在连接建立之后都为 1。 A 发送连接释放报文，FIN=1。 B 收到之后发出确认，此时 TCP 属于半关闭状态，B 能向 A 发送数据但是 A 不能向 B 发送数据。 当 B 不再需要连接时，发送连接释放报文，FIN=1。 A 收到后发出确认，进入 TIME-WAIT 状态，等待 2 MSL（最大报文存活时间）后释放连接。 B 收到 A 的确认后释放连接。 四次挥手的原因 客户端发送了 FIN 连接释放报文之后，服务器收到了这个报文，就进入了 CLOSE-WAIT 状态。这个状态是为了让服务器端发送还未传送完毕的数据，传送完毕之后，服务器会发送 FIN 连接释放报文。 TIME_WAIT 客户端接收到服务器端的 FIN 报文后进入此状态，此时并不是直接进入 CLOSED 状态，还需要等待一个时间计时器设置的时间 2MSL。这么做有两个理由： 确保最后一个确认报文能够到达。如果 B 没收到 A 发送来的确认报文，那么就会重新发送连接释放请求报文，A 等待一段时间就是为了处理这种情况的发生。 等待一段时间是为了让本连接持续时间内所产生的所有报文都从网络中消失，使得下一个新的连接不会出现旧的连接请求报文。 TCP 可靠传输TCP 使用超时重传来实现可靠传输：如果一个已经发送的报文段在超时时间内没有收到确认，那么就重传这个报文段。 TCP 滑动窗口窗口是缓存的一部分，用来暂时存放字节流。发送方和接收方各有一个窗口，接收方通过 TCP 报文段中的窗口字段告诉发送方自己的窗口大小，发送方根据这个值和其它信息设置自己的窗口大小。 发送窗口内的字节都允许被发送，接收窗口内的字节都允许被接收。如果发送窗口左部的字节已经发送并且收到了确认，那么就将发送窗口向右滑动一定距离，直到左部第一个字节不是已发送并且已确认的状态；接收窗口的滑动类似，接收窗口左部字节已经发送确认并交付主机，就向右滑动接收窗口。 接收窗口只会对窗口内最后一个按序到达的字节进行确认，例如接收窗口已经收到的字节为 {31, 34, 35}，其中 {31} 按序到达，而 {34, 35} 就不是，因此只对字节 31 进行确认。发送方得到一个字节的确认之后，就知道这个字节之前的所有字节都已经被接收。 TCP 流量控制流量控制是为了控制发送方发送速率，保证接收方来得及接收。 接收方发送的确认报文中的窗口字段可以用来控制发送方窗口大小，从而影响发送方的发送速率。将窗口字段设置为 0，则发送方不能发送数据。 TCP 拥塞控制如果网络出现拥塞，分组将会丢失，此时发送方会继续重传，从而导致网络拥塞程度更高。因此当出现拥塞时，应当控制发送方的速率。这一点和流量控制很像，但是出发点不同。流量控制是为了让接收方能来得及接收，而拥塞控制是为了降低整个网络的拥塞程度。 TCP 主要通过四个算法来进行拥塞控制：慢开始、拥塞避免、快重传、快恢复。 发送方需要维护一个叫做拥塞窗口（cwnd）的状态变量，注意拥塞窗口与发送方窗口的区别：拥塞窗口只是一个状态变量，实际决定发送方能发送多少数据的是发送方窗口。 为了便于讨论，做如下假设： 接收方有足够大的接收缓存，因此不会发生流量控制； 虽然 TCP 的窗口基于字节，但是这里设窗口的大小单位为报文段。 1. 慢开始 与拥塞避免发送的最初执行慢开始，令 cwnd = 1，发送方只能发送 1 个报文段；当收到确认后，将 cwnd 加倍，因此之后发送方能够发送的报文段数量为：2、4、8 … 注意到慢开始每个轮次都将 cwnd 加倍，这样会让 cwnd 增长速度非常快，从而使得发送方发送的速度增长速度过快，网络拥塞的可能性也就更高。设置一个慢开始门限 ssthresh，当 cwnd &gt;= ssthresh 时，进入拥塞避免，每个轮次只将 cwnd 加 1。 如果出现了超时，则令 ssthresh = cwnd / 2，然后重新执行慢开始。 2. 快重传 与快恢复在接收方，要求每次接收到报文段都应该对最后一个已收到的有序报文段进行确认。例如已经接收到 M1 和 M2，此时收到 M4，应当发送对 M2 的确认。 在发送方，如果收到三个重复确认，那么可以知道下一个报文段丢失，此时执行快重传，立即重传下一个报文段。例如收到三个 M2，则 M3 丢失，立即重传 M3。 在这种情况下，只是丢失个别报文段，而不是网络拥塞。因此执行快恢复，令 ssthresh = cwnd / 2 ，cwnd = ssthresh，注意到此时直接进入拥塞避免。 慢开始和快恢复的快慢指的是 cwnd 的设定值，而不是 cwnd 的增长速率。慢开始 cwnd 设定为 1，而快恢复 cwnd 设定为 ssthresh。 [应用层](https://cyc2018.github.io/CS-Notes/#/notes/计算机网络 - 应用层)域名系统DNS 提供主机名和 IP 地址之间相互转换的服务。域名具有层次结构，从上到下依次为：根域名、顶级域名、二级域名 文件传送协议FTP 使用 TCP 进行连接，它需要 2 个连接来传送一个文件： 控制连接：服务器打开端口号 21 等待客户端的连接，客户端主动建立连接后，使用这个连接将客户端的命令传送给服务器，并传送服务器的应答。 数据连接：用来传送一个文件数据。 根据数据连接是否是服务器端主动建立，FTP 有主动和被动两种模式： 主动模式：服务器端主动建立数据连接，其中服务器端的端口号为 20，客户端的端口号随机，但是必须大于 1024，因为 0~1023 是熟知端口号。 被动模式：客户端主动建立数据连接，其中客户端的端口号由客户端自己指定，服务器端的端口号随机。 主动模式要求客户端开放端口号给服务器端，需要去配置客户端的防火墙。被动模式只需要服务器端开放端口号即可，无需客户端配置防火墙。但是被动模式会导致服务器端的安全性减弱，因为开放了过多的端口号。 动态主机配置协议DHCP (Dynamic Host Configuration Protocol) 提供了即插即用的连网方式，用户不再需要手动配置 IP 地址等信息。 DHCP 配置的内容不仅是 IP 地址，还包括子网掩码、网关 IP 地址。 DHCP 工作过程如下： 客户端发送 Discover 报文，该报文的目的地址为 255.255.255.255:67，源地址为 0.0.0.0:68，被放入 UDP 中，该报文被广播到同一个子网的所有主机上。如果客户端和 DHCP 服务器不在同一个子网，就需要使用中继代理。 DHCP 服务器收到 Discover 报文之后，发送 Offer 报文给客户端，该报文包含了客户端所需要的信息。因为客户端可能收到多个 DHCP 服务器提供的信息，因此客户端需要进行选择。 如果客户端选择了某个 DHCP 服务器提供的信息，那么就发送 Request 报文给该 DHCP 服务器。 DHCP 服务器发送 Ack 报文，表示客户端此时可以使用提供给它的信息。 远程登录协议TELNET 用于登录到远程主机上，并且远程主机上的输出也会返回。 TELNET 可以适应许多计算机和操作系统的差异，例如不同操作系统系统的换行符定义。 电子邮件协议一个电子邮件系统由三部分组成：用户代理、邮件服务器以及邮件协议。 邮件协议包含发送协议和读取协议，发送协议常用 SMTP，读取协议常用 POP3 和 IMAP。 [1. SMTP](https://cyc2018.github.io/CS-Notes/#/notes/计算机网络 - 应用层?id=_1-smtp)SMTP 只能发送 ASCII 码，而互联网邮件扩充 MIME 可以发送二进制文件。MIME 并没有改动或者取代 SMTP，而是增加邮件主体的结构，定义了非 ASCII 码的编码规则。 [2. POP3](https://cyc2018.github.io/CS-Notes/#/notes/计算机网络 - 应用层?id=_2-pop3)POP3 的特点是只要用户从服务器上读取了邮件，就把该邮件删除。但最新版本的 POP3 可以不删除邮件。 [3. IMAP](https://cyc2018.github.io/CS-Notes/#/notes/计算机网络 - 应用层?id=_3-imap)IMAP 协议中客户端和服务器上的邮件保持同步，如果不手动删除邮件，那么服务器上的邮件也不会被删除。IMAP 这种做法可以让用户随时随地去访问服务器上的邮件。 常用端口 应用 应用层协议 端口号 传输层协议 备注 域名解析 DNS 53 UDP/TCP 长度超过 512 字节时使用 TCP 动态主机配置协议 DHCP 67/68 UDP 简单网络管理协议 SNMP 161/162 UDP 文件传送协议 FTP 20/21 TCP 控制连接 21，数据连接 20 远程终端协议 TELNET 23 TCP 超文本传送协议 HTTP 80 TCP 简单邮件传送协议 SMTP 25 TCP 邮件读取协议 POP3 110 TCP 网际报文存取协议 IMAP 143 TCP Web 页面请求过程1. DHCP 配置主机信息假设主机最开始没有 IP 地址以及其它信息，那么就需要先使用 DHCP 来获取。 主机生成一个 DHCP 请求报文，并将这个报文放入具有目的端口 67 和源端口 68 的 UDP 报文段中。 该报文段则被放入在一个具有广播 IP 目的地址(255.255.255.255) 和源 IP 地址（0.0.0.0）的 IP 数据报中。 该数据报则被放置在 MAC 帧中，该帧具有目的地址 FF:FF:FF:FF:FF:FF，将广播到与交换机连接的所有设备。 连接在交换机的 DHCP 服务器收到广播帧之后，不断地向上分解得到 IP 数据报、UDP 报文段、DHCP 请求报文，之后生成 DHCP ACK 报文，该报文包含以下信息：IP 地址、DNS 服务器的 IP 地址、默认网关路由器的 IP 地址和子网掩码。该报文被放入 UDP 报文段中，UDP 报文段有被放入 IP 数据报中，最后放入 MAC 帧中。 该帧的目的地址是请求主机的 MAC 地址，因为交换机具有自学习能力，之前主机发送了广播帧之后就记录了 MAC 地址到其转发接口的交换表项，因此现在交换机就可以直接知道应该向哪个接口发送该帧。 主机收到该帧后，不断分解得到 DHCP 报文。之后就配置它的 IP 地址、子网掩码和 DNS 服务器的 IP 地址，并在其 IP 转发表中安装默认网关。 2. ARP 解析 MAC 地址 主机通过浏览器生成一个 TCP 套接字，套接字向 HTTP 服务器发送 HTTP 请求。为了生成该套接字，主机需要知道网站的域名对应的 IP 地址。 主机生成一个 DNS 查询报文，该报文具有 53 号端口，因为 DNS 服务器的端口号是 53。 该 DNS 查询报文被放入目的地址为 DNS 服务器 IP 地址的 IP 数据报中。 该 IP 数据报被放入一个以太网帧中，该帧将发送到网关路由器。 DHCP 过程只知道网关路由器的 IP 地址，为了获取网关路由器的 MAC 地址，需要使用 ARP 协议。 主机生成一个包含目的地址为网关路由器 IP 地址的 ARP 查询报文，将该 ARP 查询报文放入一个具有广播目的地址（FF:FF:FF:FF:FF:FF）的以太网帧中，并向交换机发送该以太网帧，交换机将该帧转发给所有的连接设备，包括网关路由器。 网关路由器接收到该帧后，不断向上分解得到 ARP 报文，发现其中的 IP 地址与其接口的 IP 地址匹配，因此就发送一个 ARP 回答报文，包含了它的 MAC 地址，发回给主机。 3. DNS 解析域名 知道了网关路由器的 MAC 地址之后，就可以继续 DNS 的解析过程了。 网关路由器接收到包含 DNS 查询报文的以太网帧后，抽取出 IP 数据报，并根据转发表决定该 IP 数据报应该转发的路由器。 因为路由器具有内部网关协议（RIP、OSPF）和外部网关协议（BGP）这两种路由选择协议，因此路由表中已经配置了网关路由器到达 DNS 服务器的路由表项。 到达 DNS 服务器之后，DNS 服务器抽取出 DNS 查询报文，并在 DNS 数据库中查找待解析的域名。 找到 DNS 记录之后，发送 DNS 回答报文，将该回答报文放入 UDP 报文段中，然后放入 IP 数据报中，通过路由器反向转发回网关路由器，并经过以太网交换机到达主机。 4. HTTP 请求页面 有了 HTTP 服务器的 IP 地址之后，主机就能够生成 TCP 套接字，该套接字将用于向 Web 服务器发送 HTTP GET 报文。 在生成 TCP 套接字之前，必须先与 HTTP 服务器进行三次握手来建立连接。生成一个具有目的端口 80 的 TCP SYN 报文段，并向 HTTP 服务器发送该报文段。 HTTP 服务器收到该报文段之后，生成 TCP SYN ACK 报文段，发回给主机。 连接建立之后，浏览器生成 HTTP GET 报文，并交付给 HTTP 服务器。 HTTP 服务器从 TCP 套接字读取 HTTP GET 报文，生成一个 HTTP 响应报文，将 Web 页面内容放入报文主体中，发回给主机。 浏览器收到 HTTP 响应报文后，抽取出 Web 页面内容，之后进行渲染，显示 Web 页面。","link":"/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-CS-Notes.html"},{"title":"信息系统实训-中期PPT","text":"[TOC] theme: gaia_class: leadpaginate: truebackgroundColor: #fffbackgroundImage: url(‘https://marp.app/assets/hero-background.jpg')marp: true 书籍搜索引擎by 张荣辉-2019140740 爬虫 网站 类型 爬取条数（共 18w 条） 知轩藏书 网络小说 9976 Java知识分享网 计算机书籍 9441 书单网 各种书籍 159335 读书皮 畅销流行书籍 899 Vol.moe 漫画 8482 搜索页 详情页 TODO 来源网站过滤","link":"/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%AE%AD/%E6%8F%90%E4%BA%A4%E4%BD%9C%E4%B8%9A/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%AE%AD-%E4%B8%AD%E6%9C%9FPPT.html"},{"title":"信息系统实训 第1次作业","text":"[TOC] 代码12345678#!/usr/bin/env python# -*- coding: utf-8 -*-import reregex = r'1995年6月1日|1995/6/1|1995\\-6\\-1|1995\\-06\\-01|1995\\-06's = '•”xxx出生于1995年6月1日” • ”xxx出生于1995/6/1” • ”xxx出生于1995-6-1” • ”xxx出生于1995-06-01” • ”xxx出生于1995-06”'print(re.findall(regex, s)) 运行截图","link":"/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%AE%AD/%E6%8F%90%E4%BA%A4%E4%BD%9C%E4%B8%9A/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%AE%AD-%E7%AC%AC1%E6%AC%A1%E4%BD%9C%E4%B8%9A.html"},{"title":"信息系统实训 第二次作业","text":"[TOC] 书籍搜索引擎 任务一选择其中一个要爬取的网站Vol.moe [Kindle漫画|Kobo漫画|epub漫画] 选择想爬取数据项（尽量全）书籍名 书籍链接 书籍详情 确定数据项所在网页之间的跳转关系，绘制它们的url树说明：共 471 个分页，一个分页有 18 个详情页 写出url树的深度优先遍历、广度优先遍历顺序深度优先遍历: A B E F C G H D 广度优先遍历: A B C D E F G H 任务二选择要爬取的数据项所在的其中一个网页灭鬼之刃: 吾峠呼世晴[Kindle漫画|epub漫画] [volmoe.com] 对想爬取的数据项绘制出它们的dom树Xpath: 书籍名：//div/b/text() 书籍详情：//*[@id=”desc_text”]/text() 爬取结果：","link":"/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%AE%AD/%E6%8F%90%E4%BA%A4%E4%BD%9C%E4%B8%9A/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%AE%AD-%E7%AC%AC2%E6%AC%A1%E4%BD%9C%E4%B8%9A.html"},{"title":"信息系统实训-0415作业","text":"[TOC] 插入数据代码 查询代码 搜索输出结果123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103python es.py {'_shards': {'failed': 0, 'skipped': 0, 'successful': 5, 'total': 5}, 'hits': {'hits': [{'_id': 'dzytX3EBBdNqBssliOYU', '_index': 'books', '_score': 2.0, '_source': {'book_name': '乔舒亚·克拉克《无器械健身》（女性版）epub+mobi+azw3', 'book_url': 'https://www.shudan.vip/140592.html'}, '_type': 'books', '_version': 1, 'highlight': {'book_name': ['乔舒亚·克拉克《无器械&lt;span ' 'class=\"highlight\"&gt;健身&lt;/span&gt;》（女性版）epub+&lt;span ' 'class=\"highlight\"&gt;mobi&lt;/span&gt;+azw3']}}, {'_id': 'jDytX3EBBdNqBssleDAQ', '_index': 'books', '_score': 2.0, '_source': {'book_name': '《无器械健身》 mobi格式下载', 'book_url': 'https://pan.shudan.vip/5751.html'}, '_type': 'books', '_version': 1, 'highlight': {'book_name': ['《无器械&lt;span ' 'class=\"highlight\"&gt;健身&lt;/span&gt;》 ' '&lt;span ' 'class=\"highlight\"&gt;mobi&lt;/span&gt;格式下载']}}, {'_id': 'JDytX3EBBdNqBsslhtSD', '_index': 'books', '_score': 2.0, '_source': {'book_name': '《硬派健身·减肥篇》知乎盐系列/知乎斌卡自选集/epub+mobi+azw3', 'book_url': 'https://www.shudan.vip/135932.html'}, '_type': 'books', '_version': 1, 'highlight': {'book_name': ['《硬派&lt;span ' 'class=\"highlight\"&gt;健身&lt;/span&gt;·减肥篇》知乎盐系列/知乎斌卡自选集/epub+&lt;span ' 'class=\"highlight\"&gt;mobi&lt;/span&gt;+azw3']}}, {'_id': '2DytX3EBBdNqBsslhtjt', '_index': 'books', '_score': 2.0, '_source': {'book_name': '《再见，健身房》高宇/徒手与器械体能训练天然强壮/epub+mobi+azw3', 'book_url': 'https://www.shudan.vip/137126.html'}, '_type': 'books', '_version': 1, 'highlight': {'book_name': ['《再见，&lt;span ' 'class=\"highlight\"&gt;健身&lt;/span&gt;房》高宇/徒手与器械体能训练天然强壮/epub+&lt;span ' 'class=\"highlight\"&gt;mobi&lt;/span&gt;+azw3']}}, {'_id': 'tTytX3EBBdNqBsslh956', '_index': 'books', '_score': 2.0, '_source': {'book_name': '《健康脑》丹尼尔·亚蒙/常减肥健身失败原因/epub+mobi+azw3', 'book_url': 'https://www.shudan.vip/138629.html'}, '_type': 'books', '_version': 1, 'highlight': {'book_name': ['《健康脑》丹尼尔·亚蒙/常减肥&lt;span ' 'class=\"highlight\"&gt;健身&lt;/span&gt;失败原因/epub+&lt;span ' 'class=\"highlight\"&gt;mobi&lt;/span&gt;+azw3']}}, {'_id': 'yzytX3EBBdNqBssliOcU', '_index': 'books', '_score': 2.0, '_source': {'book_name': '蒂莫西·费里斯《每周健身4小时》实验成果epub+mobi+azw3', 'book_url': 'https://www.shudan.vip/140928.html'}, '_type': 'books', '_version': 1, 'highlight': {'book_name': ['蒂莫西·费里斯《每周&lt;span ' 'class=\"highlight\"&gt;健身&lt;/span&gt;4小时》实验成果epub+&lt;span ' 'class=\"highlight\"&gt;mobi&lt;/span&gt;+azw3']}}, {'_id': 'hz2tX3EBBdNqBssljjjp', '_index': 'books', '_score': 1.0, '_source': {'book_name': '《整个巴黎属于我》布鲁姆/细看野生天才的黄金时代/epub+mobi+azw3', 'book_url': 'https://www.shudan.vip/161569.html'}, '_type': 'books', '_version': 1, 'highlight': {'book_name': ['《整个巴黎属于我》布鲁姆/细看野生天才的黄金时代/epub+&lt;span ' 'class=\"highlight\"&gt;mobi&lt;/span&gt;+azw3']}}, {'_id': 'jD2tX3EBBdNqBssljjjp', '_index': 'books', '_score': 1.0, '_source': {'book_name': '《自指引擎》圆城塔/每个故事的缝隙都隐藏着无数故事/epub+mobi+azw3', 'book_url': 'https://www.shudan.vip/161574.html'}, '_type': 'books', '_version': 1, 'highlight': {'book_name': ['《自指引擎》圆城塔/每个故事的缝隙都隐藏着无数故事/epub+&lt;span ' 'class=\"highlight\"&gt;mobi&lt;/span&gt;+azw3']}}, {'_id': 'kj2tX3EBBdNqBssljjjp', '_index': 'books', '_score': 1.0, '_source': {'book_name': '《黑暗物质：精灵守护神》菲利普·普尔曼/奇幻经典/epub+mobi+azw3', 'book_url': 'https://www.shudan.vip/161580.html'}, '_type': 'books', '_version': 1, 'highlight': {'book_name': ['《黑暗物质：精灵守护神》菲利普·普尔曼/奇幻经典/epub+&lt;span ' 'class=\"highlight\"&gt;mobi&lt;/span&gt;+azw3']}}, {'_id': 'lD2tX3EBBdNqBssljjjp', '_index': 'books', '_score': 1.0, '_source': {'book_name': '《营销革命3.0》[轻携版]菲利普·科特勒/深度的关联/epub+mobi+azw3', 'book_url': 'https://www.shudan.vip/161582.html'}, '_type': 'books', '_version': 1, 'highlight': {'book_name': ['《营销革命3.0》[轻携版]菲利普·科特勒/深度的关联/epub+&lt;span ' 'class=\"highlight\"&gt;mobi&lt;/span&gt;+azw3']}}], 'max_score': 2.0, 'total': 18902}, 'timed_out': False, 'took': 127}","link":"/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%AE%AD/%E6%8F%90%E4%BA%A4%E4%BD%9C%E4%B8%9A/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%AE%AD-0415%E4%BD%9C%E4%B8%9A.html"},{"title":"信息系统实训-第3次作业","text":"[TOC] 建立index，插入数据code123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960#!/usr/bin/env python# -*- coding: utf-8 -*-import jsonfrom itertools import chainimport pretty_errorsfrom elasticsearch import Elasticsearch, helperspretty_errors.activate()es = Elasticsearch()# 建立indexmapping = { 'properties': { 'book_name': { 'type': 'text', 'analyzer': 'ik_max_word', 'search_analyzer': 'ik_max_word' } }}es.indices.delete(index='books', ignore=[400, 404])es.indices.create(index='books', ignore=400)result = es.indices.put_mapping(index='books', doc_type='books', body=mapping)print(result)# 批量插入数据print(\"============== index ================\")count = 0i = 0j = 0num = 0actions = []max_count = 2000with open('shudan1.json', 'r', encoding='utf-8') as f1, open('volmoe1.json', 'r', encoding='utf-8') as f2: for line in chain(f1, f2): j += 1 try: triple_dict = json.loads(line) action = { \"_index\": \"books\", \"_type\": \"books\", # \"_id\": i, \"_source\": triple_dict } i += 1 count += 1 actions.append(action) except: print(f\"!!! {j} th row insert faied: {line}\") continue if count &gt;= max_count: helpers.bulk(es, actions) actions = [] count = 0 num += 1 print(\"Insert \" + str(num * max_count) + \" records.\")helpers.bulk(es, actions)print('finish~~~') 运行截图","link":"/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%AE%AD/%E6%8F%90%E4%BA%A4%E4%BD%9C%E4%B8%9A/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%AE%AD-%E7%AC%AC3%E6%AC%A1%E4%BD%9C%E4%B8%9A.html"},{"title":"2020-04-27","text":"嗨，请准确无误地输入密码查看哟！ d4ddde657b62ae9d724a3e00dfabc05a45fdaf36a8bc4373ea59463028fb879dec0bab702e62ec40be4bd40d33dd8011ba51f8d43c98b9d5bc1629306176c05577d8355c1beaf3cd461fc88eb2faf0341dcf59de272fed2aba653dff2fe249ba70a664e958658d9c25bad99b53b312a4784912b3d4d824b393d3a9bf39c7fdbd9a91353baa205adaf325e03ecaed45d28078a69f9cf2ccacd2f2aa11e354b3559c4ac979673b198b7b92de870cc798d808bc2baaf32ef42c4f4b04b743fa6613d524a3eb63642c92dc881d7484bf501849da260d78b35a97bd4f01df208b423e66b6cc5c20122a10e7d2f50b4a85217932c5af0ed34d2756766311258d19f0b0af3245a5f26b60bca23e36f84f048ddb7ee5c038551bad76c9363a50468dff08154e61383bde85a6a10cd57a2ab38a1902e48eb0135ead3e20a583bb430549950305163b4c2504373d99192233403b6bb073f51ca5c990a8ff2ffdf74a7f24e5aa84c9918a6c2a4f5e95c389b5d9d3161afd00bb46e9d9740cece104e6b70b9bcc579ee425531663e49a70abeda8721547ac32c970af9a68cf6dfcac07d35e1ab15a64ee9be3ae6a9f8b4a0bab5f10f258e89ef9eb87c688d05df77c49cd06ab261399fbc18c0adfad35f97db46185ba6e6fa0fa2190f0283217de46878485f6dbda4b9487fee05b2bec9387f2719b1ba74401c9cafc2ed31b9c4fdafaa938d5a5434e6b36d05b92bba1c3d6e36eaafa3e9e883937e3f4af86120241c186c7586628e690621a970dd698a1d213f962d843455c040c68c72a5fa93710175223219ee6a39c703d883448d3018e69294cfcf21edd49e69ff39d6e07431a574ca9266b561ef1b834b386d5b71adfc553b159f460067bcf073df722201dabe1ee2ff08f45a41c25d7dfc0f36260556801e9971173d7c160e061359c9c0985cff84917cfe615cff07c3d23b83f77b8c49f40147855ad1489f8146bd84a9795fce9a488bd38546ed59462bb1b5efc368896867378515ccafe787482fe1ef5565568adc4e05eb927fd2c5b6a9b6db2b8ca65c7d4f634b06c148cd3b34e01822637b5c0b86d869f95bf94f5a5eaeff1d117daaaaf034f088279300230744d22f02c7bfe0dd4fb3d941d5e88ec5cf2a6121a7fa1d8a9c74197025f3f2d3f1afbd444a403223a104785289d8c8dc6c1945a417ff27789a254437c909ffb336fe86a1f5cf547e7eea9bbd62abd5177c674775963f50f597fb9242161b501a459632e4c615f84201917a7d72f38f950852aad1f8a4f2a74fa79f454f0c889845cd53e00213de935b5adc966fe965de5e2575f17c744728004a8d665c9159f13c94c17ce5cd59715ff93cf7fb35c9f2df625c75eccdae3343b904ea2d33947a84ea7075001a5d9ab07d84d34288257d1e670ffb535a92923465c053482d268cbac7ec06edd1fa566ad1206b92033297de3df26a9d428c11d6ee991d75ade94d09507c496970bba5be6d2425b6b9b4f559f930fe86b8fc896901bbe75183fddb55144466009edb4d181dc8ced8ed2a5d5af078caa1e0013cee8054ebdc07260d876a4bc77cf34d6677d632df8474757da606b6ec30f3bc2c2bcfed8a7b16add9b5c4ad4aaa1bd653a3b84115927e71e533a3a4cde77bf867da0a120c99b9e25816b1215d3859c0a567bb7b87567de9f84e6d389c2ec46ef7aa370590d5802f60a62b029e7a0062a18de66bd7ccc15eb47835af70b5b20da7d9bf9d91c5a860cd4b40484112878938b91a44f6e5d9e2782308c7d83a96dab37e2bb08f3b56c6eef80792ab4dd7757c52618250b65029f3f69d0ed96d5329708f835948d541f6476a07ec0a554c765cc6e1e1acdf9530b917067bc2dd71d6c7022475bd38c3b4e6a7ba6286683a6280ccbd2fcb4de83670c9db8771ea6c7f21d648149b6a8c3cd433bf0c2d2ce46596c03e36a1f036a9ec5c6899f26f0da41bc5be67dba65ca1ccd959de0442d7e493dd65610659f3bfe9e46c0c596834d824d7ee68562c70c726455e8634b6472b78823407d07ac47134b7f94c655749ca62bf163ba1dedbac7046442ce4596e21123eef6ed8e77d2b165f7b0c7e2648e2dbd250c6b6f96d3fb1fb997ea9b8a6468052e3df55a2fa0bc62b8a63db7fa9f69afe15da029380b6eba3bb854f7274394ee3f77dcd35a46945d09e2dacc320dad3b1091d7f6f1e9b408009a56cf556668975b249aace4d5d0dcdbc1d401af4d0934772e044bb13daaf299d3e2d786005191fef35da0140657887ddc1527746ca872dc98caddd7bf383bf1898b94b27246c1d64a363f5e7f80a5871e6736fbb3aee06be51174332e7e6b5821aecb69c652d6eea8f3459953ac217808fdb0f175ce011bb1454c62252f03da9fb3d8437c667749b6fa67160066f58e13f6369285b5095e6d35ed5fd1f7997b010a0f5b5b72cfa787f5d5276153c5fe7fa492f7603960682990d851dacaf54f4ecd0af02d4baa9af3a137336092e3896a20049397dc49399bed6f2ffdfbe20ab7a2af575341d44cb4720e03468f9646393b289b54c65d52dfd38b183702486e5f909dbfb3924d04f364dfc6731477549fef9b36d032af8ab1e7a68f64a4572479197b16e6f3f3ffc0e32429ca3a786f1bde746f6cb527cc2a4c14e9ac4283325f45738857333303d5656524aae0673c0e5482198af85ab657253f19ba414b4905488bdbf71e2ac70465ca24cbcbce8c54a382d362a5f675e68004d80ded476d0602225c7bd85e0ab7bc9457aa5c228bc47a88cc07c8775265e62bc053bdbecc45a11ac7bcb8f7cbb898dc7270974eec1aaa5b17903cd81e691967b9126e8564e042bbe9af4fd98c81f7baaa3849c25363381ea3f643c1609ce563d625c4293b67f46f32a029fe7a3ebf865282712c6a64a8d55f43a35fec3f75510bd29ee0a886d9a724578f7bb3ab089561662ccf8e4cf008b631377f8b890674532132a3253b99611f11a89968ddba4f53bf5d8d7f6d8c8ba58ae87c0b8c8a2b9e32af9eeaa5732bc163bf472c105474510f5ec7ef22258afe582137aa94da5e0f8087cee3b69a2dae2fbf0da1095a2ccd2f0d5d638756bf7cbcc8623da73f66df852b5bdb129d255b85c0e631087e31b5eb319352b79f61b8eceae757db5e85745546cdd22ddab7df7b119ff0cb678678ca771a081314f07d671ef04913f13e08bc401eff2f0349bd28e91dc15ea28186a6a7113076c98724274d7b231410624d6628f8277d347fdca34f66fd07168915efca4987bf2511f4a5c07901cac1a2904a185bff2fccc18642a4af4c13f2d6be1560f574913f92dd1feb10f0200c50d15475323a609290918bfa27565e582ef3fbe0fd3a0fc9e3a97083e90767b7961e2455b51caaab5633e5c51de202e5f773b8e2bc849501e5c449380aa8304504dbd3c1f1c267c710b37bebe69941a91c942739a5fee024c431856c69028c373ccea5da165eac2946caa32c221bb54da3863de47cb156dbb6e15de1ad1e2f0df9c3bf1eb5cc070b87d232df8dc11b35b8dfc0e972d90f2073b2c52e223cebcecaa11a0caf297195061b49378f96c5156431b41d7d0db52333a9109c4f68a93b6519a8b47f08448e62f9449b2c88a04a45d4841cf6881e18e41d121d232c2d9ece6b44bc270dba5b084ff996b844dec1f06c900cb86afc773f4e5238ae3697c01321a3b202da2fa79f54a71645f09f6ea86bc9bac033498f8b0d18f5dde08e98dbc4feb298fdb79092e8528712eaeb675541b6beb333e9353653aa226771b6431767ce60962a854788be7bf3f945915353aaee856cd19dad4709f66d79de2b418d122691cf22b45ccc9e20bfb2c6ebf13cc43e73a3b3a33732baafde9e007c6fb74a76b64e1487bda23b828969a272e265152aafdd5c95b5fe6c16dab0e72190be786e59b88db60a2a19826332e353db28e38a00de83e15db93a9299d4f1dc64debb5a4d9f477b3e0e9afc91eb6458461ddfce076a21f1c462869145536a7fbf9056c27a86a71bc179e6531b8dac43d82d03be5a95d0c2a616f7a4227d43b244acada748ed40e1c1e1beb9522302888fbde345cf16e4fb0558ab306b8f95789a71a51597a0f985c90301b2e66c2a04e37afb0c97951e97155dbd170ded75121a83659ebc9451c63b39b92e418d4f7a7bdf43a0217d901f1a6dfea4bf4300e78402cc7073c9fadc0acb722f896c06fff03248199e448d5d6926c8af54979e4eee2adc286d4f474232fb4b47796a1fffcf18ed745cda9041460f3e0919a6d5db3835b7849d02abc0b4a64826fd0dc9e206aaf9ca87f810991e8c0654af56668cb0678ad6cb210cc7b40444180dc135ed7a270ed095b1eef1215a2d68b4704d9771d9b0ea7859e00eb9adde9d4e5917f788349bbd078b6307e0511ca87e83df87202fe3a2c7bbc34f6791b8de1bf31d06741816fc282c59658a4b6d56750162e5e45264d8719a8e2ce52acda392f8f1094aa9c0b39c79212b8e067dcdf5b195cea067d7c9e1e9bf2dda5b0b7880a4930adc9942f076fda7f9f3d78edb63d86cda70caa3b14aae015b062e37455abf04326b696a2424e5c2d9a7d679135c8e2342d4949a300d26b90308bd27fa388864b98bc781ef5a49f9aee60f3d44d7894f2f6ca21cbfe719fef0b0f2de32469e4ae241c0850ac4dcf2a922eb49772deabd8d3ab85c1b253f024ea38fe821c0da094de0c31fdcb3f87949a7b73197bacab6f8038218d28f5545ff5a626dec7f1d86c421d14eb404155e6fa153b55d2d438258faf541d657721511cec9de3d61e595014ce309f8cb4a234a1788d012821c54cd1309736212b8aebb5e16bb655d7797390869487036872f1425beccbfc5ccaf705bdffc60ec8296c72bdf473e0d44b1bd46aa00344ded1ad9c6786d60a98e7d63ed07bb4c4f8ecb56fd37e6031c5a4542678f283c67543cca4d00c0c2253b1679732a0f17cfe8586f49e6aba50435f8c89dc56ab7e7e871a92dd7ed970fe08f0b59c92caff27bd5d85031328d63","link":"/private/2020/04/2020-04-27.html"},{"title":"2020-04-26","text":"嗨，请准确无误地输入密码查看哟！ d4ddde657b62ae9d724a3e00dfabc05a45fdaf36a8bc4373ea59463028fb879df3385b5aa616ef27884fe3774c4023a9f1eed75171bfa1c728f8656a50179f9d93ca024c3031f1e68166aae0629e18bebf76bfe8f8cf24e39f6770abe1ba7cff87c2130409ac0aa6b021b630b1f4b827cc3a90f58a0f306bc9e20ca5ada39766c3dce3bbe2f3e52a7ffec5723b8b63c99dbe54ecf5157085d5b906ffe0ea17f75f933aa7a944ecb8e5c1864ea6f662cc5120cf1f72c93942e0bd10fc692bc1bd20687ddaee40d171464f121c4da1af20c1f83fb05a86f36f3c6aee69dc27f4d2037df904568f8e2202b6e7ff88cf9978b84cec5394b3f1c584cc0e0783a99a597f1db06b3f4633e59eb4939cab264cd90d12982f3be71287d2f473715bbc789ef7c5eebf4fa1d55be0ef3da4408164cc8e5d407dd035f171af6716be6c899fd4f9f4758e6a8236894a2d73ad407135c6d67e49492731440dc940ef622a8bcd2b83730f8ed6265ce29b773399ff0d8c122e25316647b55add608e267499fb40336bdf1fa3e5456bc26273bf477f565fc0591d7228d41693aa5fec8618031dea1ca893f52e3ecdd683c64bccc98a27e4c048bb6a139afd0dd20cce4fa76248aa6bb431d8bb9f26353b9212d8ebb5b61f933a0779c177b288d6f41d5c32b0c1fd35dec1718bc73114f99e1de766c93c1ab145820639369a729013d77196f7ad0e1203d003faf4e2ac23088eeee9d827c307a8edd1031184f132c9b3e8685a3f46fc2343545ec8cd6d4f2204b35340cb83bd708ff37aed312712f4d22f358a7a63b5a204c2bcc449dec12468718002c8f38d314d78c1766e7c8bf5c8641edc268b402684a908891e0e97470d9aa5a5dc9a7f4f0a03cb329a87fc8569628f62f5313b6176d81a0ead2eda70aff13b9f980f0035852a0e2fe473551c617f5eb4f2a77aa82b8ecb4cc4bce38bf036858743f62f57d34ebb16b6af39fdcdf262c245a07475af1a2ea763ad7fd5d6db94767cc84feaef8f39eb92d74206c804ed44a9c8af","link":"/private/2020/04/2020-04-26.html"},{"title":"weekly-contest-185","text":"[TOC] 11234567891011121314151617181920class Solution: def reformat(self, s: str) -&gt; str: ss = [] nn = [] for i in s: if '0'&lt;=i&lt;='9': nn.append(i) else: ss.append(i) if abs(len(ss)-len(nn))&gt;1: return '' s = [] if len(ss) &lt; len(nn): ss, nn = nn, ss while nn: s.append(ss.pop()) s.append(nn.pop()) if ss: s.append(ss[0]) return ''.join(s) 212345678910111213141516171819202122232425262728class Solution: def displayTable(self, orders: List[List[str]]) -&gt; List[List[str]]: # 所有的菜，最后用来排序 foodl = [] # {table:{food: n, ...}} d = {} for _, table, food in orders: if food not in foodl: foodl.append(food) if table not in d: d[table] = {food: 1} else: d[table][food] = d[table].get(food, 0) + 1 res = [] foodl.sort() head = [\"Table\"] head.extend(foodl) res.append(head) t = [] for table in sorted(d.keys(), key=lambda i: int(i)): t.append(str(table)) for food in foodl: t.append(str(d[table].get(food, 0))) res.append(t) t = [] return res 3我的解法： 123456789101112131415161718192021222324252627282930313233343536class Solution: def minNumberOfFrogs(self, croakOfFrogs: str) -&gt; int: d1 = { 'r': 'c', 'o': 'cr', 'a': 'cro' } d2 = { 'c': 0, 'cr': 0, 'cro': 0, 'croa': 0 } # 最多的青蛙 m = 0 # 当前的青蛙数 n = 0 for i in croakOfFrogs: key = d1.get(i, '') if i=='c': d2[i] += 1 n += 1 elif i=='k': if d2['croa']==0: return -1 else: d2['croa'] -= 1 n -=1 else: if d2[key]==0: return -1 d2[key] -= 1 d2[key+i] += 1 m = max(m, n) #print(m, n) return m if n==0 else -1 其他人的解法： 记录当前青蛙个数的最大值 - 数青蛙 - 力扣（LeetCode） c,r,o,a,k分别表示遍历到当前位置时这几个字母出现的次数。每次遍历过程中当且仅当c&gt;=r&gt;=o&gt;=a&gt;=k时才符合要求。now表示当前存在的青蛙个数，即遇到c时加一，叫完以后(遇到k)减一。遍历完后now应为0表示每次叫声都有头有尾，记录now的最大值即为答案。 12345678910111213141516171819202122class Solution: def minNumberOfFrogs(self, croakOfFrogs: str) -&gt; int: c=r=o=a=k=0 now=0 res=0 for i in croakOfFrogs: if i=='c': c+=1 now+=1 res=max(res,now) elif i=='r': r+=1 elif i=='o': o+=1 elif i=='a': a+=1 elif i=='k': k+=1 now-=1 if not c&gt;=r&gt;=o&gt;=a&gt;=k: return -1 return res if now==0 else -1 可以改进↓： 12345678910111213141516171819202122class Solution: def minNumberOfFrogs(self, croakOfFrogs: str) -&gt; int: c=r=o=a=k=0 d = { 'c': 0, 'r': 0, 'o': 0, 'a': 0, 'k': 0 } now=0 res=0 for i in croakOfFrogs: d[i] += 1 if i=='c': now+=1 res=max(res,now) elif i=='k': now-=1 if not d['c']&gt;=d['r']&gt;=d['o']&gt;=d['a']&gt;=d['k']: return -1 return res if now==0 else -1 4超简单的（？）三维动态规划 - 生成数组 - 力扣（LeetCode） 学不来学不来 12","link":"/Leetcode%20weekly%20contest/weekly-contest-185.html"},{"title":"weekly-contest-186","text":"[TOC] 分割字符串的最大得分3 可获得的最大点数4 对角线遍历 II5 带限制的子序列和6 1123456789101112131415161718class Solution: def maxScore(self, s: str) -&gt; int: # 1 的总个数 n1 = 0 for i in s: if i=='1': n1 += 1 # 最大值 m = 0 # 当前 0 的个数 n0 = 0 for i in range(len(s)-1): if s[i]=='0': n0 += 1 else: n1 -= 1 m = max(n0+n1, m) return m 21234567891011121314class Solution: def maxScore(self, nums: List[int], k: int) -&gt; int: # 问题简化：nums 两边共 k 个数总共最大和是多少 m = sum(nums[:k]) n = len(nums) lastsum = m for i in reversed(range(k)): j = k-i # print('j', j, nums[n-j]) # print('i', i, nums[i]) lastsum = lastsum-nums[i]+nums[n-j] m = max(m, lastsum) print(m) return m 3每个数组元素的位置决定了它在最后结果的位置 - 对角线遍历 II - 力扣（LeetCode） 优先从机器角度考虑 1234567891011121314151617181920212223242526272829303132333435363738class Solution: # 便于机器内存切换 def findDiagonalOrder(self, nums: List[List[int]]) -&gt; List[int]: res = [] # 总共对角线数量 m = 0 n = len(nums) for i in range(n): m = max(m, i+len(nums[i])) res = [[] for _ in range(m)] for i in range(n): for j in range(len(nums[i])): res[i+j].append(nums[i][j]) result = [] for i in res: result.extend(i[::-1]) return result # 超时：便于人类思考 def findDiagonalOrder1(self, nums: List[List[int]]) -&gt; List[int]: res = [] # 总共对角线数量 m = 0 n = len(nums) length_map = {} for i in range(n): length_map[i] = len(nums[i]) m = max(m, i+length_map[i]) # 第 j 条对角线 for j in range(m): # 第 i 个数字 for i in range(j+1): _j = j-i if _j&gt;=n or i&gt;=length_map[_j]: continue res.append(nums[_j][i]) # print(res) return res 4DP+单调栈优化 详解 - 带限制的子序列和 - 力扣（LeetCode） 12345678910111213141516171819202122class Solution: def constrainedSubsetSum(self, nums: List[int], k: int) -&gt; int: # 1. 定义状态dp[i]为以i结尾的的最大子序和，那么当考虑第i+1个的时候，由于向量两个小标差距不大于k且非空，所以有以下状态转移方程 # for j in range(k): # dp[i+1] = max(dp[i+1], nums[i+1]+dp[i+1-j], nums[i+1]) # 2. 优化：维护前 k 个 dp 的最大值 # https://leetcode-cn.com/problems/sliding-window-maximum/ # dp[i+1] = max( max(dp[i+1-j] for j in range(k)), 0 )+nums[i+1] n = len(nums) dp = [0 for _ in range(n)] dp[0] = nums[0] res = dp[0] s = [(dp[0], 0)] for i in range(1, n): dp[i] = max(nums[i], nums[i]+s[0][0]) while s and s[-1][0]&lt;=dp[i]: s.pop() s.append((dp[i], i)) if s[0][1]&lt;=i-k: s.pop(0) res = max(res, dp[i]) return res","link":"/Leetcode%20weekly%20contest/weekly-contest-186.html"},{"title":"tricks-2020-04","text":"嗨，请准确无误地输入密码查看哟 ","link":"/tricks/tricks-2020-04.html"},{"title":"2020-04-28","text":"嗨，请准确无误地输入密码查看哟！ d4ddde657b62ae9d724a3e00dfabc05a45fdaf36a8bc4373ea59463028fb879dec0bab702e62ec40be4bd40d33dd8011ba51f8d43c98b9d5bc1629306176c05577d8355c1beaf3cd461fc88eb2faf0341dcf59de272fed2aba653dff2fe249ba70a664e958658d9c25bad99b53b312a4784912b3d4d824b393d3a9bf39c7fdbd9a91353baa205adaf325e03ecaed45d28078a69f9cf2ccacd2f2aa11e354b3559c4ac979673b198b7b92de870cc798d808bc2baaf32ef42c4f4b04b743fa6613d524a3eb63642c92dc881d7484bf501849da260d78b35a97bd4f01df208b423e66b6cc5c20122a10e7d2f50b4a8521792c77f9e5daf58bf40859309482a95c772f70caf3a4d7098f22e8c4189ee4f861e2d2c5078cd4e37b9f8590da2fc0c3839315554091cdffeec1fa19d9869bbc950d3eb086250d304d7d4ef19f9360125743bfe07f71de1e4587911f9c65e0cd503b4cfe671d3536ce1986a83e6e35b4a7ace7bbc313c42d939a17eea672a64bb692c74a87886fe8cafa60711b626da7c8b743c3917f966b391ef66df4e77bc4e4a53f9b76c8f86ba92c239607a69f7ee075a308fb7097f68be1114b8397ebd154c7e80949457ef1697a14869cb1c27dd98ae65f609c753f9852b56784270784382dad13d28cedf0ce78500de829fa5ca97df505924994c9e98ab448f9483f0507b42a3d9124bdd75c476dd6d73abb4e0b0ed8eb9484c015ddb4b12d619882b8d80ba40254d3f0dc4f5bfb4c91ef34c54bcc06373223aa16f549e1fdbaf5e86220b8d75bebc9b3132647c7d733f11c31b6b43304850b3e7c25df4127a8d426129aec3b902d553cac9f1d481339a882b76b75e051135267aef183e359d9b0590251170cc5692b00d274e043f0504864472bfdb260ef646530a4da019a78af00d45b732ee79e991ff56c78baa06c1d2be4edaf900c54c648516716aebb202b80a1b931d9e449fa134aafdf882d4c70e24c50a0d90ae00ce950ead1d57b3ee330fe4465d1f9996d6a66341649c481f9e861ab767f4b8b3e53140ce137d419a64641a0bc38c6f959163457fdfa715bf00265210cac86a3ea3cbc82f7d2347eefde0974704a78e4a2523976b0eada09727c6ab56ec7a246378b8c5fc672841ea11e500892162af396111436d91246f4475683967597fa9e9aab596b0d6e080fbfda64564c33b637879cbe71daa55cbe6a411a702fa487ed4e975f34228a742762dc6e4929cf63dbb45cf429bb8c9e1cac5e3967d4125da9804458c624374407292875acbfe3cded2012f4f734950ec58eb5e9102eb4d0eb64d8517156351af7dce2c0a2040b161df326fdc5745c70912f363021c7166df95bcc53f9e3be237a457915b99e7ad1e3dcbf389dbdd804ae53d90edab5d8a8111c66bdb5dacc4cdb66c9f09cc7012697b6abbbf9bd55647ff54798fb181fdae81b76b81870eed0e49d19000258cb5c9880ea6bcc526c079e72514cc2cd63c17e2d0ba0eea675d6ae0956930ab5a720662d9d3260abfdfb79daf32aad9a39e98669d32962e5a5fe90f9fce003e497993e7523560e95af352eafc6ce023d7156c239e15f25866388f6f0908c0b854805c7fea276029513bd1a4b985bd76a14145c47c1df48fdb4dfc04c44225d0c97be695d53199d23fa057b5c5f08f2f91f3d6875a118972d4b887d214afff3bafc0f7c820e6873025b495696adf0a808505ec670ea2b9d0d6fad8858bb08fb4c76e5b9e3e9f57e10f6d07a1aa541981528947fc28a565384ea30c3e9b591bf34a5bb9771d3c033ee9442ba7412c85dba1582f382acf08a850d8e85ff8b578e84dc5d12cf6ec6f4c02911ec295d247af97ec8293b13f6c823556d0221fbf59e37eda8d18a3b83ba57cb34408c116152698e4d803f34f6f86ab8f8104e1cefc8a4c2b3981851e74593bc1197c13e223e63715b80146740e4872ea8b765ce319a527e2768e765000952f2b51a4b038520e2b35e9ea311c375959433a41c7037be4a4fb56174cd984682e74bbfc6cc7ff92f554ff61a88677ae84add037f4e3ecf66a7b1a9acd3e89c162c2d2386b41fd68008e4f665587d3011313d237f7575e02a16f7098e63f06944b446963787f7c89b3b1368ca4150671bd9ce6c95b87500b12a6e83ae0af7547289287dc48a7f0ed4cf430689c28a8fa063e020a0501a8f0969613c67914473830fdd5c46a07ab36bb2564869b0a99b7fbdc42788a58742b2906e6932e85f3e92d10995849d124763462a2af1f6a0204474d1dcf637ab0ff7ddafbd00820bf405d101ec997af0d5d878f03823af1712c39f4f00d23c2c8b527f0dbced8bce7ab480a2d579e500ca3cdc5bdb2157e94a06d39037ab4a6c00","link":"/private/2020/04/2020-04-28.html"},{"title":"blockchain-03","text":"[TOC] 北京大学肖臻老师《区块链技术与应用》公开课_哔哩哔哩 (゜-゜)つロ 干杯~-bilibili P2. 02-BTC-密码学原理比特币被称为加密货币crypto-currency区块链上内容都是公开的，包括区块的地址，转账的金额。 比特币主要用到了密码学中的两个功能:1.哈希2.签名 哈希的性质1.密码学中用到的哈希函数被称为cryptographic hash function: 它有两个重要的性质:①collision(这里指哈希碰撞) resistance :例如x≠y H(x)=H(y) 两个不同的输入，输出却是相等的，这就称哈希碰撞。它是不可避免的，因为输入空间总大于输出空间。给出x，很难找到y，除非蛮力求解(brute-force)。该性质的作用:对一个message求digest比如message取m m的哈希值是H(m)=digest 如果有人想篡改m值而H(m)不变，则无法做到。哈希碰撞无法人为制造，无法验证，是根据实践经验得来的。②hiding 哈希函数的计算过程是单向的，不可逆的。(从H(x)无法推导出x) hiding性质前提是输入空间足够大，分布比较均匀。如果不是足够大，一般在x后面拼接一个随机数，如H(x||nonce)。该性质的作用:和collision resistance 结合在一起，用来实现digital commitment(又称为digital equivalent of a sealed envelope)把预测结果作为输入x，算出一个哈希值，讲哈希值公布，hiding让人们知道哈希值而不知道预测值，最后再将x公布，因为有collision resistance的性质，预测结果是不可篡改的。 除了密码学中要求的这两个性质外，比特币中用到的哈希函数还有第三个性质:③puzzle friendly 指哈希值的预算事先是不可预测的。假如哈希值是00…0XX…X，一样事先无法知道哪个值更容易算出这个结果，还是要一个一个带入。 比特币挖矿的过程中实际就是找一个nonce，nonce跟区块的块头里的其他信息合一起作为输入，得出的哈希值要小于等于某个指定的目标预值。H(block header)≤target。block header 指块头，块头里有很多域，其中一个域是我们可以设置的随机数nonce，挖矿的过程是不停的试随机数，使得block header取哈希后落在指定的范围之内。 puzzle friendly是指挖矿过程中没有捷径，为了使输出值落在指定范围，只能一个一个去试。所以这个过程还可以作为工作量证明(proof of work)。挖矿很难，验证很容易。(difficult to solve ,but easy to verify) 比特币中用的哈希函数叫作SHA-256(secure hash algorithm )以上三个性质它都是满足的。 非对称加密2.在比特币系统中开账户:在本地创立一个公私钥匙对(public key ,private key)，这就是一个账户。公私钥匙对是来自于非对称的加密技术(asymmetric encryption algorithm)。 两人之间信息的交流可以利用密钥(encryption key)，A将信息加密后发给B，B收到后用密钥解密，因为加密和解密用的是同一个密钥，所以叫对称加密。前提是有渠道可以安全地把密钥分发给通讯的双方。因此对称加密的缺点就是密钥的分发不方便，因为在网络上很容易被窃听。非对称密钥是用一对密钥而不是一个，加密用公钥，解密用私钥，加密和解密用的都是接收方的公钥和私钥。公钥是不用保密的，私钥要保密但是私钥只要保存在本地就行，不用传给对方。公钥相当于银行账号，别人转账只要知道公钥就行，私钥相当于账户密码，知道私钥可以把账户上钱转走。公钥和私钥是用来签名。 假如A想向B转10个比特币，A把交易放在区块链上，别人怎么知道这笔交易是A发起的呢?这就需要A要用自己的私钥给交易签名，其他人收到这笔交易后，要用A的公钥去验证签名。签名用私钥，验证用公钥，用的仍然是同一个人的。创建账户产生相同公私钥的可能性微乎其微，所以大量创建账户来窃取其他人账户是不可行的。 我们假设产生公私钥时有一个好的随机源(a good source of randomness)，产生公私钥是随机的，如果随机源不好，就有可能产生相同的公私钥。比特币中用的签名算法，不仅是生成公私钥的时候要有好的随机源，之后每一次签名时也要有好的随机源。只要有一次签名用的随机源不好的话，就有可能泄露私钥。 P3. 03-BTC-数据结构区块链普通指针存储的是某个结构体在内存中的地址。假如P是指向一结构体的指针，那么P里面存放的就是该结构体在内存中的起始位置。而哈希指针除了要存地址之外，还要保存该结构体的哈希值H()。好处是:从哈希值这个哈希指针，不仅可以找到该结构体的位置，同时还能够检测出该结构体的内容有没有被篡改，因为我们保存了它的哈希值。 比特币中最基本的结构就是区块链，区块链就是一个一个区块组成的链表。区块链和普通的链表相比有什么区别:①用哈希指针代替了普通指针(B block chain is a linked list using hash pointers) 区块链第一个区块叫作创世纪块(genesis block) 最后一个区块 是最近产生的区块(most recent block) 每一个区块都包含指向前一个区块的哈希指针一个区块的哈希指针怎么算:是把前面整个区块的内容，包括里面的hash pointer ，合在一起取哈希值。通过这种结构，可以实现tamper-evident log。如果有人改变了一个区块的内容，后面一个区块的哈希指针就对不上，因为后一个区块哈希指针是根据前一个区块的内容算出来的，所以后一个哈希指针也得改，以此类推，我们保留的是最后一个哈希值也会变化。 ②普通链表可以改变任意一个元素，对链表中其他元素是没有影响的。而区块链是牵一发而动全身，因为只需要保存最后一个哈希值，就可以判断区块链有没有改变，在哪里改变了。因此比特币没有必要保存所有区块的内容，可以只保留最近的几千个区块。如果要用到以前的区块，可以向系统中其他节点要这个区块。有些节点是有恶意的，怎么判断?这里要用到哈希值一个性质，如下:其他节点给你一个区块，如何判断它是正确的?算出它的哈希值，与保留的区块的哈希值对比，即可。 Merkle tree 比特币中的另外一个结构是:Merkle tree。(其中最下面一层是数据块(data blocks)，上面三层内部节点都是哈希指针(hash pointers)，第一层是根节点，根节点的区块也可以取个哈希，叫根哈希(root hash))另外一个概念:binary tree。 这种结构的好处:只要记住根哈希值，就能检测出对树中任何部位的修改。它们的区别:①用哈希指针代替了普通指针。 比特币当中各区块之间用哈希指针连接在一起，每个区块所包含的交易组织成一个merkle tree的形式，最下面一行data blocks每个区块实际上是一个交易，每个区块分为两部分，分别是块头和块身(block header ,block body)。块头里面有根哈希值，每个区块所包含的所有交易组成的merkle tree的根哈希值存在于区块的块头里面，但是，块头里没有交易的具体内容，只有一个根哈希值，块身里面是有交易的列表的。 merkle tree 的作用: ①提供merkle proof比特币中的节点分为两类:全节点(保存整个区块的内容，即块头块身都有，有交易的具体信息)和轻节点(例如手机上的比特币钱包)(只有块头) 这时存在一个问题:如何向一个轻节点证明某个交易是写入区块链的?这时需要用到merkle proof :找到交易所在的位置(最底行的其中一个区块)，这时该区块一直往上到根节点的路径就叫merkle proof。 最上面一行是小型的区块链，该图展现的是一个区块的merkle tree，最下面一行是包含的交易。假设某个轻节点想知道图中黄色的交易，是否包含在了merkle tree里面。该轻节点没有包含交易列表，没有这颗merkle tree的具体内容，只有一个根哈希值。这时轻节点向一个全节点发出请求，请求证明黄色的交易被包含在这颗merkle tree里面的merkle proof。全节点收到这个请求之后，只需要将图中标为红色的这三个哈希值发给轻节点即可。有了这些哈希值之后，轻节点可以在本地计算出图中标为绿色三个哈希值。首先算出黄色交易的哈希值，即它正上方的那个绿的哈希值，然后跟旁边红色的哈希值拼接起来，可以算出上层节点绿色的哈希值。然后再拼接，再算出上层绿色哈希值，再拼接，就可以算出整棵树的根哈希值。轻节点把这个根哈希值和block header里的根哈希值比较一下，就能知道黄色的交易是否在这颗merkle tree里。 全节点在merkle proof里提供的这几个哈希值，就是从黄色的交易所在的节点的位置到树根的路径上用到的这些哈希值。轻节点收到这样一个merkle proof之后，只要从下往上验证，沿途的哈希值都是正确的即可。(验证时只能验证该路径的哈希值，其他路径是验证不了的，即该图中红色的哈希值是验证不了的) 这样是否不安全呢?假如黄色交易被篡改，它的哈希值发生了变化，那能不能调整旁边红色的哈希值，使得它们拼接起来的哈希值是不变的呢?不行，根据collision resistance，这是不可行的。 merkle proof可以证明merkle tree里面包含了某个交易，所以这种证明又叫proof of membership或 proof of inclusion。对于一个轻节点来说，验证一个merkle proof 复杂度是多少?假设最底层有n个交易，则merkle proof 复杂程度是θ(log(n)) 如何证明merkle tree里面没有包含某个交易?即proof of non-membership。可以把整棵树传给轻节点，轻节点收到后验证树的构造都是对的，每一层用到的哈希值都是正确的，说明树里只有这些叶节点，要找的交易不在里面，就证明了proof of non-membership。问题在于，它的复杂度是线性的θ(n)，是比较笨的方法。 如果对叶节点的排列顺序做一些要求，比如按照交易的哈希值排序。每一个叶节点都是一次交易，对交易的内容取一次哈希，按照哈希值从小到大排列。要查的交易先算出一个哈希值，看看如果它在里面该是哪个位置。比如说在第三个第四个之间，这时提供的proof是第三个第四个叶节点都要往上到根节点。如果其中哈希值都是正确的，最后根节点算出的哈希值也是没有被改过的，说明第三、四个节点在原来的merkle tree里面，确实是相邻的点。要找的交易如果存在的话，应该在这两个节点中间。但是它没有出现，所以就不存在。其复杂度也是log形式，代价是要排序。排好序的叫作sorted merkle tree。比特币中没有用到这种排好序的merkle tree，因为比特币中不需要做不存在证明。 这节讲了比特币中两种最基本的结构:区块链和merkle tree，都是用哈希指针来构造的。除了这两种之外，哈希指针还能用另一个方面。 只要一个数据结构是无环的(非循环链表)，都能用哈希指针代替普通指针。有环的话存在一个问题，他们的哈希值没法计算","link":"/blockchain/blockchain-03.html"},{"title":"tricks-2020-05","text":"嗨，请准确无误地输入密码查看哟 ","link":"/tricks/tricks-2020-05.html"},{"title":"blockchain-04","text":"[TOC] P4. 04-BTC-协议数字货币和纸质货币区别是可以复制，叫作双花攻击 即double spending attack。 去中心化货币要解决两个问题①数字货币的发行②怎么验证交易的有效性，防止double spending attack。 答案:①比特币的发行是由挖矿决定的②依靠区块链的数据结构比特币的发行者A拥有铸币权(createcoin) 假如发行10个比特币 A(10)分别给B和C各五个 → B(5)C(5) 该交易需要有A的签名，证明经A同意。(designed by A)同时还要说明花掉的10个比特币从哪来的。下图中， 第二个方框中的钱是从第一个框内铸币交易中来的。 比特币系统中每个交易都包含输入和输出两部分输入部分要说明币的来源，输出部分要给出收款人公钥的哈希。有的交易部分比较复杂，如C的货币来源是第二第三个方框，要标识清楚。 图中构成了一个小型的区块链，这里有两种哈希指针，一种哈希指针是连接在各个区块之间的，把它们串起来构成一个链表，前面学的就是这种哈希指针。而在该图中还有第二种哈希指针，是指向前面某个交易的指针，用来指明币的来源。为什么要说明币的来源:证明币不是凭空捏造的是有记录的，同时也是防范double spending。 现在来看第二个方框里A向B的转账，该交易需要A的签名和B的地址。比特币系统里收款的地址是通过公钥推算出来的。比如B的地址就是B的公钥取哈希然后经过一些转换得到的。 A如何知道B的地址、B需要知道A的什么信息、如何才能知道A的公钥比特币系统中没有查询对方地址的功能，必须通过其他渠道。比如某个电商网站，接受比特币支付，就可以公开它的地址或公钥。 A需要知道B的地址，B需要知道A的什么信息吗?B其实也要知道A的公钥，这代表A的身份。不仅是B，所有节点都需要知道A的公钥。而签名是用私钥签名公钥验证(注意不要跟前面知识弄混了，加密是用接收人的公钥加密私钥解密)，所以区块链上每个节点都要独立验证。 那如何才能知道A的公钥?实际上交易里就包含了。输入时不仅要输入币的来源，还要输入公钥。那就存在了安全漏洞，假如B的同伙伪造了这次交易呢?其实第一个方框里铸币交易的输出就有A的公钥的哈希，所以第二个方框交易里A的公钥要跟前面哈希对的上。 在比特币系统当中，前面这些验证过程，是通过执行脚本来实现的。每个交易的输入提一段脚本，包括给出公钥的过程，公钥也是在输入的脚本里指定的。每个交易的输出也是一段脚本，验证其的合法性，就需要把当前交易的输入脚本跟前面交易(提供币来源的交易)的输出脚本拼在一起，然后看看能不能顺利执行，如果能执行说明是合法的。比特币脚本(BitCoin Script)。 实际上每个区块(对应图中的每个方框)可以有很多交易，这些交易就组成merkle tree。每个区块分为块头和块身。 块头包含的是区块的宏观信息，比如:用的是比特币哪个版本(version)的协议，区块链当中指向前一个区块的指针(hash of previous block header)，整颗merkle tree 的根哈希值(merkle root hash)，还有两个域是跟挖矿相关的，一个是挖矿的难度目标预值(target)，另一个是随机数nonce。 这里的target，就是前面讲到的，整个块头的哈希要小于这个预值，即H(block header)≤target。block header里存的就是这个目标预值的编码(nBits)。这里需要注意，前一个区块的哈希只算的是前一个区块的块头，所以前面画的，一个区块引出一个箭头指向另一个区块中间，是不正确的，所以有的书箭头是指向一个区块的上面。取哈希时是把块头的所有部分都取哈希。 块身里面有交易列表(transaction list)。 前面还有一个内容讲的时候简化了:每个节点都需要验证所有的交易，实际上系统中的节点分全节点(full node)和轻节点(light node)，全节点是保存区块链所有的信息的，验证每一个交易，所以全节点又叫fully validating node。轻节点只保存block header的信息，一般来说轻节点没法独立验证交易的合法性。 比如一个交易是不是double spending，轻节点没有存以前的交易信息所以它没法验证。系统中大多数节点是轻节点，这节课内容主要针对全节点，因为轻节点没有参与区块链的构造和维护，只是利用了区块链的一些信息做一些查询。 区块链里的内容是如何写到区块链里面的呢每个节点，每个账户都可以发布交易，交易是广播给所有节点的。有些交易是合法的，有些是非法的。谁来决定哪些交易应该被写入下一个区块中呢?按照什么顺序写呢?如果每个节点自己决定可以吗?如果每个人在本地维护一个区块链，那区块链的统一性得不到保证，而账本的内容是要取得分布式的共识(distributed consensus)。 下面的笔记跟比特币的应用关系不大，可以作为了解:分布式的共识一个简单的例子就是分布式的哈希表(distributed hash table)，比如系统里有很多台机器，共同维护一个全局的哈希表。 这里需要取得共识的内容是什么？哈希表中包含了哪些键值对key valve pair。假如有人在自己电脑上插入一个键值对，’xiao’这个pair对应的是12345，即’xiao’→12345。那么别人在另一台读的时候也要能把这个读出来，这就叫一个全局的哈希表。 关于分布式系统有很多不可能结论(impossibility result)，其中最著名的是FLP。这三个字母是三个专家的名字缩写，他们的结论是:在一个异步的(asynchronous)系统里，(网络传输迟延没有上限就叫异步系统)，即使只有一个成员是有问题的(faulty)，也不可能取得共识。 还有一个著名结论:CAP Theorem。(CAP是指分布式系统的三个我们想要的性质，Consistency【系统状态的一致性】 Availability【别人都可以用】 Partition tolerance)。该理论内容是:任何一个分布式系统，比如分布式哈希表，这三个性质中，最多只能满足两个，假如想要前两个性质，那么就不会得到第三个性质。 分布式共识一个著名的协议是Paxos，该协议能够保证一致性，即第一个性质。如果该协议达成了共识，那么这个共识一定是一致的，即每个成员所认为的共识都是相同的。但是，某些情况下，该协议可能永远无法达成共识，这种可能性比较小但是客观存在的。 比特币中的共识协议(consensus in BitCoin)比特币中共识要解决的一个问题是，有些节点可能是有恶意的。我们假设系统中大多数节点是好的，那么该如何取得共识协议? 第一种方案是投票，首先应该确定哪些区块有投票权，有些membership是有严格要求的，这种情况下基于投票的方案是可行的。但比特币系统创建账户是很容易的，甚至一个人产生了公私钥对别人都无法得知，只有转账时别人才知道。所以有些人可以不停的创建账户，当超过账户总数的一半时就有了控制权，这种称为女巫攻击(sybil attack)。因此投票方法不可取。 比特币账户巧妙的解决了这个问题，不是按照账户数目投票，而是按照计算力来投票。每个节点都可以在本地组装出一个候选区块，把它认为合法的交易放在里面，然后开始尝试各种nonce值(占4 byte)，看哪一个能满足不等式H(block header)≤target的要求。如果某个节点找到了符合要求的nonce，它就获得了记账权。 所谓的记账权，就是往比特币账本里写入下一个区块的权利。只有找到这个nonce，获得记账权的节点才有权利发布下一个区块。其他节点收到这个区块之后，要验证这个区块的合法性。 比如括号里block header的内容填的对不对；block header里面有一个域，叫nBits域，实际上它是目标预值的一个编码检查一下nBits域设置的是不是符合比特币协议中规定的难度要求；该不等式是否成立。假设都符合要求，然后检查block body 里面的交易列表，验证一下每个交易都是合法的:①要有合法的签名②以前没有被花过。如果有一项不符合要求，这个区块就是不能被接受的。如果所有条件都符合，也不一定接受。 假如生成了一个新区块，怎么知道新区块插在了哪里根据生成区块的指针。有可能就存在一个问题，如图5(第四个视频第65分钟) ，这两个交易指A转账给B，以及A转账给自己。这种情况不是double spending，判断一个交易是不是double spending ，是看这个区块所在的分支上币又没有被花掉。如图，一直到第三个区块，币都没有花过，所以这个交易是合法的。虽然该交易是合法的，但是它不在最长合法链(longest valid chain)上。这种称为分叉攻击(forking attack)。所以接收的区块应该是扩展最长合法链。 区块链在正常情况下也可能出现分叉:两个节点同时获得记账权。每个节点在本地自己组装一个它认为合适的区块，然后去试各种nonce，如果两个节点在差不多同一个时间找到了符合要求的nonce，就都可以把区块发布，这时会出现两个等长的分叉。这两条都是最长合法链，那该接受那条呢?比特币协议当中，在缺省(默认的意思)情况下，每个节点是接受它最早收到的那个。所以不同节点根据在网络上的位置不同，有的节点先听到新生成的其中一个区块，那就接受这个区块；有些节点先听到另一个区块，那就接受另一个区块。 如何判断接收了一个区块?比特币协议中用到了implicit consign，如果沿着这个区块往下继续扩展，就算认可了这个发布的区块。比如在新生成的其中一个区块后面又拓展一个区块，表明就认可了这个新区块。 等长的临时性的分叉会维持一段时间，直到一个分叉胜出。也就是哪一个链抢先一步生成了新的区块，哪一条就是最长合法链。另一个作废的就叫orphan block。这两个新区块有可能会各自拉拢，两个区块链看谁的算力强，有时候也是看谁的运气好，就会胜出。 竞争记账权的好处:首先获得记账权的节点本身有一定的权力，可以决定哪些交易写到下一个区块里。但这些不应该被设定为竞争记账权的动力，所以巧妙地建立了一个机制:区块奖励(block reward)。 比特币协议中规定获得记账权的节点在发布的区块里可以有一个特殊的交易:铸币交易。在这个交易里可以发布一定数量的比特币。 这里要回到前面的问题①，谁来决定货币的发行?coinbase transaction币基交易是比特币系统中发行新的比特币的唯一方法，后面的交易都是比特币的转移。这个交易不用指出币的来源。 那么能造多少币呢?开始时比特币刚上线的时候，每一个发布的区块可以产生50BTC(BTC就是比特币的符号)。协议中规定，21万个区块以后，初块奖励就要减半，就变成了25BTC。再过21万个区块，又要减半。 因此当一个区块胜出后，另一个作废的区块得到的比特币是没有作用的，其他诚实的区块是不会承认的。 小结比特币系统中要取得什么共识?去中心化的账本要取得共识。 谁又能决定账本的内容呢?只有获得记账权的节点才能写东西。 怎么获得记账权呢?就是解pow(挖矿)。按照算力记票，算力可以用每秒能试多少nonce数值表示。 那怎样防范女巫攻击呢?按算力记票，即使创建再多的账户，也无法使算力增强。 比特币争夺记账权的过程叫作挖矿(mining)，比特币被称为数字黄金(digital gold)，争夺记账权的节点被称为矿工(miner)。 P5. 05-BTC-实现比特币系统的实现 区块链是去中心化的账本，比特币使用的是基于交易的这种账本模式(transaction【交易】-based ledger【账本】)。系统当中并不会显示每个账户有多少钱。 比特币系统的全节点要维护一个叫UTXO(unspent transaction output)(还没有被花出去的交易的输出)的数据结构。区块链上有很多交易，有些交易的输出可能已经被花掉，有些还没有被花掉。所有没有被花掉的输出的集合就叫做UTXO。 一个交易可能有多个输出。假如A给B5个比特币，B花掉了。A也给了C3个比特币，C没有花掉。这时5个比特币就不算UTXO，而3个比特币算。UTXO集合当中的每个元素要给出产生输出的交易的哈希值，以及它在这个交易里是第几个输出。这两个信息就可以定位到UTXO中的输出。 要UTXO集合有什么作用?为了检测double spending。即检测新发布的交易是否合法。因此全节点要在内存中维护UTXO这样一个数据结构，以便快速检测double spending。 每个交易要消耗掉一部分输出，也会产生新的输出。还看上面的例子，B花掉的5个比特币虽然不在UTXO里面，但如果他转账给D，而D没有花掉，那么这5个比特币又要保存在UTXO里面。如果D始终不花，那么这个信息要永久保存在UTXO里面。有可能是不想花，也有可能是把密钥丢了。 每个交易可以有多个输入，也可以有多个输出，所有输入金额之和要等于输出金额之和。即total inputs=total outputs。因此一个交易可能来自多个地址，可能有多个签名。 有些交易total inputs略微大于total outputs。假如输入1比特币，输出0.99比特币，另外0.01比特币作为交易费给获得记账权发布区块的节点。 区块奖励也不能完全作为挖矿的奖励，发布区块的节点为什么一定要把你的交易打包在区块呢?他们还要验证你的交易的合法性，如果交易较多占用的带宽会比较大，网络传播速度也会更慢。所以只有区块奖励是不够的。 因此比特币系统设计了第二个激励机制:交易费(transaction fee)。也就是你把我的交易打包在区块里，我给你一些小费。交易费一般很小，也有一些简单的交易没有交易费。 21万个区块大概要挖多长时间呢?大约是4年。比特币系统设计的平均出块时间是10分钟，就是整个系统平均10分钟会产生一个新的区块。 除了比特币这种基于交易的模式，与之对应的还有基于账户的模式(account-based ledger)，比如以太坊系统。在这种模式中，系统是要显示的记录每个账户上有多少币。 比特币基于交易的模式，隐私保护性较好。缺点是比特币当中的转账交易要说明币的来源，而基于账户的模式就不用。 不重要内容如图⑥(第五节视频 16分钟处)一个区块的例子第一行表明:该区块包含了686个交易第二行:总输出XXX个比特币第四行:总交易费(686个交易的交易费之和)最下面一行:区块奖励(矿工挖矿的主要动力)第五行:区块的序号第六行:区块的时间戳第九行:挖矿的难度(每隔2016个区块要调整挖矿的难度，保持出块时间在10分钟左右)倒数第二行:挖矿时尝试的随机数 右边:第一行:该区块块头的哈希值第二行:前一个区块块头的哈希值(注意:计算哈希值只算块头)两个哈希值的共同点:前面都有一串0。是因为，设置的目标预值，表示成16进制，就是前面一长串的0。所以凡是符合难度要求的区块，块头的哈希值算出来都是要有一长串的0。第四行:merkle root 是该区块中包含的那些交易构成的merkle tree的根哈希值。 如图⑥(见第五节视频 第20分钟)块头的数据结构最后一行:是32位的无符号整数。nonce只有2的32次方个可能的取值。按照比特币现在的挖矿情况来说，很可能把2的32次方个取值都验了一遍也找不到合适的。那怎么办呢?block header 的数据结构里还有哪些域是可以调整的呢? 如图⑦ 块头里各个域的描述(见第五个视频 第21分钟)第一行:比特币协议的版本号(无法更改的)第二行:前一个区块的块头的哈希值(无法更改)第三行:merkle tree的根哈希值(可以更改)第四行:区块产生的时间(可以调整)比特币系统不要求特别精确的时间，可以在一定范围内调整。第五行:目标预值(编码后的版本)(只能按协议中的要求定期调整)第六行:随机数 挖矿时只改随机数不够，还可以更改根哈希值。 如图⑧(见第五节视频 第23分钟)铸币交易没有输入，它有一个coinbase，可以写入任何的内容。也可以把digital commitment里的commit的哈希值写入里面。也可以把第一节讲到的预测股市的内容写入里面，coinbase的内容是没有人会检查的，甚至可以写你的心情。 那这个域对我们有什么用呢? 如图⑨(见第五节视频 第24分钟)对应的是最后一个block header里的根哈希值对应的merkle tree，左下角的交易是coinbase，把它的域改了之后，其上的哈希值就发生了变化，然后沿着merkle tree的结构往上传递。最后导致block header里的根哈希值发生变化(merkle root是block header的一部分)。块头里4个字节的nonce不够用，还有其他字节可以用，比如coinbase域的前八个字节当做extra nonce来用，这样子搜索空间就增大到了2的96次方。 所以真正挖矿的时候只有两层循环，外层循环调整coinbase域的extra nonce。算出block header里的根哈希值之后，内层循环再调整header里的nonce。 如图⑩ 普通的转账交易的例子(见第五节视频 第26分钟)该交易有两个输入和两个输出。左上角:这里的output其实是输入，指的是之前交易的output。右上角:这里的output都是unspent，都没有被花掉，会保存在UTXO里面。右边表格第一行:输入的总金额。依次往下:输出总金额、两者之间的差值。两表格下面:可以看出输入和输出都是用脚本的形式来指定的。 比特币系统中验证交易的合法性，就是把input scripts和output script配对后执行来完成的。注意:不是把图中的input scripts和output scripts配对，因为这两个脚本是一个交易中的脚本。不是把同一个交易里的输入脚本和输出脚本配对，而是把这里的输入脚本和前面提供币来源的交易的输出脚本配对。如果输入输出脚本拼接在一起，能顺利执行不出现错误，那么该交易就是合法的。 如图十一，是在求解puzzle的过程。注意:求哈希时只用到了block header的内容，而交易的具体信息在block header里面是没有的。block header里面只有merkle tree 的根哈希值，这个就已经能保证交易是没有被篡改的。 挖矿过程每次尝试一个nonce可以看作是一个Bernoulli trial(伯努利实验)。每一个随机的伯努利实验就构成了一个伯努利过程。它的一个性质是:无记忆性。 每尝试一个nonce成功的概率是很小的，要进行大量的实验。这时可以用泊松过程来代替伯努利过程。我们真正关心的是系统出块时间，出块时间是服从指数分布。可以画出一个坐标轴，纵轴表示概率密度，横轴表示出块时间(整个系统的出块时间，并不是每个矿工的出块时间)。具体到每一个矿工，他能挖到下一个区块的时间取决于矿工的算力占系统算力的百分比。 假如一个人的算力占系统总算力的1%，那么系统出100个区块，就有一个区块是这个人挖的。 指数分布也是无记忆性的。因为概率分布曲线的特点是:随便从一个地方截断，剩下一部分曲线跟原来是一样的。比如:已经等十分钟了，还没有人找到合法的区块，那么还需要等多久呢?仍然参考概率密度函数分布 ，平均仍然要等十分钟。将来还要挖多长时间，跟过去已经挖了多长时间是没有关系的。这个过程也叫:progress free。 如果没有progress free ，会出现什么现象:算力强的矿工会有不成比例的优势。因为算力强的矿工过去做的工作是更多的，过去尝试了那么多不成功的nonce之后，后面nonce成功的概率就会增大。以此progress free 是挖矿公平性的保证。 出块奖励是系统中产生新的比特币的唯一途径。产生的比特币构成的一个几何序列。21万＊50+21万＊25+21万＊12.5+……=21万＊50＊(1+1/2+1/4+……)=2100万 比特币求解的puzzle，除了比拼算力之外，没有其他实际意义。比特币的稀缺性是人为造成的。 虽然挖矿求解puzzle本身没有实际意义，但是挖矿的过程对于维护比特币系统的安全性是至关重要的。挖矿提供一种凭借算力投票的有效手段，只要大部分算力是掌握在诚实的节点手里，系统的安全性就能够得到保证。 虽然挖矿奖励越来越小，难度越来越大，但这几年挖矿的竞争是越来越激烈的，因为比特币的价格是飙升的。最终区块奖励为0了，是不是就没有动力挖矿了呢?不是的，因为还有交易费激励机制。 假设大部分算力是掌握在诚实的矿工手里，我们能得到什么样的安全保证?能不能保证写入区块链的交易都是合法的。挖矿给出的只是概率上的保证，只能说有比较大的概率下一个区块是由诚实的矿工发布的，但是不能保证记账权不会落到有恶意的节点手里。 比如好的矿工占90%的算力，坏的矿工占10%的算力。那么10%的概率下记账权会落在有恶意的矿工手里，这时候会出现什么情况? 先考虑第一个问题:他能不能偷币?能不能把别人账上的钱转给自己?不能，因为他没有办法伪造别人的签名。 假设M是有恶意的，他想把A账上的钱转走，所以他发布一个A转给M的交易，但这个交易需要有A的签名，M虽然获得记账权，但他不知道A的私钥，所以伪造不了签名。 如果M把交易硬写在区块链上，诚实的节点不会接受这个区块，因为它包含有非法的交易。所以诚实的节点会继续沿前一个区块挖，生成新的区块代替非法的区块，其他诚实的区块会沿着这个合法的区块继续挖。比特币要求是扩展正常合法链，M生成的不是合法区块，所以该区块作废。这对他造成的代价是很大的，因为没有了区块奖励，又没有偷到钱。 第二个问题:他能不能把已经花了的币再花一遍(即double spending)?假如他把M→A的交易写在了一个区块里面，现在他获得了记账权，他又发布另一个交易，把这个钱转回给自己，即M→M’。同样，这很明显是double spending，只要是诚实的节点都不会接受这个区块。 他如果想发布这个区块，只能连在写了M→A交易区块的前一个区块。注意:区块插在哪个位置，在刚挖矿时就是要决定的，因为设置的block header里要填上前一个block header的哈希。所以他想插到那个区块的话，一开始就要认定，而不是等获得记账权以后再认定。 这样生成的两条区块链，都是合法的。参考图十二(第五节视频 第56分钟处)。要看其他节点沿着哪一个链往下扩展，最后一个胜出一个作废。 这种攻击的目的是什么?如果M→A的交易，产生了某种不可逆的外部效果，然后M→M’再把M→A的交易回滚了，那么M就可以从中不当获利。 比如:网上购物时，M购买一些商品，然后该网站接受比特币支付，M发起一个交易把账转给网站。网站监听到交易写入了区块链里，以为支付成功了，所以就把商品给了M。M拿到商品之后，又发起一个交易，把支出的钱转给自己，然后把下面的链拓展成最长合法链。这样的结果是:既得到了商品，又收回了花掉的钱，就达到了double spending的目的。 如何防范这种攻击呢?如果M→A的交易所在的区块不是最后一个区块，那么这种攻击的难度就会大大增加。要是想回滚M→A的交易，还是要插在它之前的一个区块，然后想办法成为最长合法链。这个难度是很大的。因为诚实的节点，不会沿着它生成的区块往下扩展，因为它不是最长合法链。因此防范这种攻击的方法就是多等几个区块，或者叫多等几个确认confirmation。 M→A交易刚刚写入区块里时，我们把它叫作one confirmation。这时后面加的区块，依次叫two confirmation、three confirmation…比特币协议当中，缺省(系统默认)的是要等六个confirmation。有了六个confirmation，才认定M→A的交易是不可篡改的。这需要等多长时间呢?平均出块时间是10分钟，因此要等一个小时。 区块链是不可篡改的账本，那是不是意味着凡是写入区块链中的内容就永远改不了呢?经上述分析可以看出，这种分析只是一种概率上的保证。刚刚写入区块链的内容，还是比较容易被改动的。经过一段等待时间之后，或者后面几个区块被确认之后，被篡改的概率就大幅度下降(指数级别的下降)。 其实还有一种，叫零确认(其具体位置可见第五节视频 第62分第26秒)。意思是说，这个转账交易发布出去了，但还没又被写入区块链里。即M→A的交易已经发布，但下面包含M→M’的区块还没有被挖出来。 这个概念相当于电商购物的例子中，在支付时你发布一个转账交易，告诉电商自己已经转过钱了。 电商运行一个全节点或委托一个全节点监听区块链上的交易，他收到转账交易之后要验证该交易的合法性(有合法的签名，以前没有被花过)，甚至不用等到该交易写入区块链里。这种操作听起来风险很大，交易刚发布出去，都没往区块链里写呢。其实，零确认在实际当中，用的还是比较普遍的。为什么呢? 这其中有两个原因:①比特币协议缺省的设置是节点接收最先听到的那个交易。所以在零确认的位置，M→A的节点收到后，再发M→M’的交易，有比较大的概率诚实的节点是不会接受的。②很多购物网站，从支付成功，到发货，是有一定的时间间隔的，即有一定的处理时间。 回到前面的问题:假设某个有恶意的节点获得记账权，它还能做什么坏事?能不能故意不把某些合法的交易写入区块链里?即发布的区块故意不包含某些交易。这是可以的。 比特币协议并没有规定获得记账权的节点一定要把那些交易发布到区块里。但出现这种情况问题也不大，因为这些合法的交易一定会被写入下一个区块里，总有诚实的节点愿意发布这些交易。 其实，区块链在正常工作下，也会出现合法的交易没有被包含进去的情况，可能就是这段时间交易的数目太多了。比特币协议中规定，每个区块的大小是有限制的，最多不能超过一兆字节。所以如果交易的数目太多了，那么有些交易可能就只能等到下一个区块再发布。 会不会出现这种情况?M→M’的交易所在的区块所在的链条虽然短，但是先偷偷的生成比上面更多的区块，然后等上面的链条公布后再公布，就能够胜过上面的几个区块了?这种方法叫作selfish mining。 正常情况下挖到一个区块马上就发布，原因是你不发布别人可能就发布了，那样就拿不到区块奖励了。而selfish mining是先藏着不急着发布，这是分叉工具的一种手段。 但这样成功的概率并不大，因为有恶意的节点本来算力占比就不高，还要生成更多的区块，就非常困难。 以上是selfish mining的其中一个目的，它还有另一个目的。假如A挖了两个区块都没有发布，而在B挖到一个区块公布后立马公布，这样B挖的区块就作废了。这样的好处就是减少竞争，因为A在挖第二个区块时，别人还在挖第一个区块(前提是A算力足够强)。 但这样也有不好的地方，假如A挖出一个区块，A以为他能赶在别人面前再挖一个区块，结果这时有人挖出了第一个区块，那这样的话A就要在别人发布之后立马发布，去争取区块奖励。 P6. 06-BTC-网络比特币工作在应用层(application layer:Bitcoin block chain)，它的底层是一个网络层(network layer:P2P overlay network)。 比特币的P2P网络是非常简单的，所有节点都是对等的。不像有的P2P网络有所谓的超级节点、纸节点。 要加入P2P网络首先得知道至少有一个种子节点，然后你要跟种子节点联系，它会告诉你它所知道的网络中的其他节点，节点之间是通过TCP通信的，这样有利于穿透防火墙。当你要离开时不需要做任何操作，不用通知其他节点，退出应用程序就行了。别的节点没有听到你的信息，过一段时间之后就会把你删掉。 比特币网络的设计原则是:简单、鲁棒，而不是高效。每个节点维护一个零度节点的集合，消息传播在网络中采取flooding的方式。节点第一次听到某个消息的时候，把它传播给去他所有的零度节点，同时记录一下这个消息我已经收到过了。下次再收到这个消息的时候，就不用转发给零度节点了。 零度节点的选取是随机的，没有考虑底层的拓扑结构。比如一个在加利福尼亚的节点，它选的零度节点可能是在阿根廷的。这样设计的好处是增强鲁棒性，它没有考虑底层的拓扑结构，但是牺牲的是效率，你向身边的人转账和向美国的人转账速度是差不多的。 比特币系统中，每个节点要维护一个等待上链的交易的集合。假如一个集合的交易都是等待写入区块链里的，那么第一次听到某个交易的时候，把这个交易加入这个集合，并且转发这个交易给节点，以后再收到这个交易就不用转发了，这样避免交易会在网络上无线的传播下去。转发的前提是该交易是合法的 这里有冲突的情况，有可能你会有两个有冲突的交易，差不多同时被广播到网络上。比如说A→B和A→C，这两个如果同时广播在网络上，那么每个节点根据在网络中的位置的不同，收到两个交易的先后顺序不同。 比如一个人先收到第一个交易，就写入到集合里，再收到第二个交易的时候就不会写入集合，因为跟上一个交易有冲突，就认定是非法的。假设这两个交易花的是同一个币，那么写入集合的交易就会被删掉。 比如说节点听到一个新发布的区块，里面包含了A→B的交易，那么这个交易就可以删掉了，因为已经写入到了区块链里。如果节点又听到了A→C的交易，该怎么办?这时候也要把A→B删掉。因为A→C如果已经被写入到了区块里，那么A→B就变成了非法交易，就变成了double spending，这就是冲突的情况。可能某个先收到A→C的节点，抢先挖到了矿，发布了区块。 新发布的区块在网络上的传播有很多方式，跟新发布的交易是类似的。每个节点除了要检查区块的内容合法性之外，还要查它是不是在最长合法链里。越是大的区块，在网络上传播速度越慢。 比特币协议对区块的大小有1M字节的限制。比特币系统采用的传播方式是非常耗费带宽的，带宽是瓶颈。按1M的区块大小限制来算的话，一个新发布的区块有可能需要几十秒，才能传输到网络大部分境地，这已经是挺长时间了，所以这个限制值不算小。 还需要注意的一点:我们讲的比特币网络的传播属于best effort 。一个交易发布到比特币网络上，不一定所以的节点都能收到，而且不同的节点收到这个交易的顺序也不一定是一样的。网络传播存在延迟，而且这个延迟有的时候可能会很长，有的节点也不一定按照比特币协议的要求进行转发。 可能有的该转发的不转发，导致某些合法的交易收不到，也有的节点可能转发一些不该转发发的消息，比如说有些不合法的交易也被转发了。这就是我们面临的一个实际问题。 P7. 07-BTC-挖矿难度比特币的挖矿难度调整 目标预值越小，挖矿的难度越大。调整挖矿的难度就是调整目标空间在整个输出空间中所占的比例。 比特币用的哈希算法是SHA-256，这个产生的哈希值是256位。所以整个输出空间是2的256次方。调整这个比例，即目标空间占输出空间的比例，通俗的说，就是哈希值前面要有多少个0。比如说256位的哈希值，要是合法的区块，要求算出来的哈希，前面至少有70个0。当然这只是通俗的说法，因为这个目标预值，并不是说前面都是0，从某一个位置开始，后面都变成了1。 挖矿的难度跟目标预值是成反比的，公式是:difficulty=difficulty 1 target / target。上面是指挖矿难度等于1的时候所对应的目标预值，挖矿难度最小就是1，这个时候对应的目标预值是个非常大的数。 即target越大，挖矿是越容易的。所以公式里很大的一个数，除以当前的目标预值，得到的就是当前的挖矿难度。所以difficulty和target大小是成反比的。 为什么要调整挖矿难度如果不调会有什么问题呢?系统里的总算力越来越强，挖矿难度保持不变的话，出块时间是越来越短的。 出块时间越来越短，会有什么问题吗?比如说不到一秒就出一个区块，区块在网络上传播的时间可能需要几十秒，底层的比特币网络可能需要几十秒才能让其他节点都收到。别的节点没有收到这个区块之前还是继续沿着已有的区块链往下扩展。如果有两个节点同时都发布一个区块，这个时候就会出现分叉。 出块时间如果越来越短的话，这种分叉会成为常态，而且不仅会出现二分叉，可能会出现很多的分叉。比如10个区块同时被挖出来，系统可能会出现10分叉。 分叉如果过多，对于系统达成共识是没有好处的，而且危害了系统的安全性。比特币协议是假设大部分算力掌握在诚实的矿工手里。系统当中的总算力越强，安全性就越好，因为有恶意的节点想掌控51%的算力就越难。如果掌握了51%的算力，它就可以干很多坏事，比如分叉攻击。 如果后面分叉多的话，前面某个区块里的某个交易，很可能就遭受分叉攻击，恶意节点会试图回滚。因为后面分叉多，算力就会分散，恶意节点得逞的概率更大。这个时候恶意节点就不需要51%的算力了，可能10%的算力就够了，因此出块时间不是越短越好。 那10分钟的出块时间是不是最优的呢?不一定。改成其他值也可以，有间隔只是说应该有个常数范围。以太坊系统出块时间就降低到了15s，所以以太坊的出块速度是比特币的40倍。 出块时间大幅度下降之后，以太坊就要设计新的协议，叫ghost。在该协议中，这些分叉，产生的orphan block(即产生最长合法链后另一个要被丢弃的区块)就不能丢弃掉了，而是也要给它们一些奖励，这叫uncle reward。以太坊也要调整挖矿难度，使出块时间保持在15s。 怎么调整挖矿难度-没看讲完了为什么要调整挖矿难度，现在讲一下怎么调整挖矿难度。比特币协议中规定，每2016个区块后就要调整目标预值，这大概是每两个星期调整一次。 具体的调整公式:target =target×(actual time/expected time)。actual time指产生2016个区块实际花费的时间，expected time指产生2016个区块应用的时间，即2016×10min。 如果实际花费时间超过了两周，即平均出块时间超过了10min。那么这时候挖矿难度要调的低一点，应该让出块更容易。因此该公式算出来的target会变大，则难度会下降。 实际上，上调和下调都有四倍的限制。假如实际时间超过了8个星期，那么我们计算公式时也只能按4倍算，目标预值增大最多只能增大4倍。 那怎么才能让所有的矿工同时调整目标预值呢?计算target的方法写在比特币系统的代码里，每挖到2016个区块会自动进行调整。如果有有恶意的节点故意不调，会怎么样? 如果一个节点不调，将区块发布出去，诚实的节点是不会认的。nBits是target一个编码的版本，在block header里没有直接存储target的域，因为target的域是256位，直接存target的话要32个字节。nBits在header里只有四个字节，所以可以认为是它的一个压缩编码。 如果遇到有恶意的矿工，该调的时候不调，这时检查区块的合法性就通不过。因为每个节点要独立的验证发布的区块的合法性。检查的内容就包括:nBits，目标预值设的对不对。如果投机取巧设计一个过大的目标预值，使得你自己挖矿容易了，但这个区块是不会被接受的。 如图(第七节视频 第26分钟)显示的是比特币系统中总算力的变化情况。在比特币没有流行前，有很长一段时间，算力没有太明显的增长，前面这些年的hash rate几乎是0。其实这些年算力也是增长的，只是后面这些年算力增长的太快了，所以前面部分看上去像是一条直线。去年是涨得非常猛的一年，这也体现在了hash rate 的增长上，算力呈现出指数级的增长。即使在这段黄金时期，算力也不是单调递增的，中间也是有很多波动。 如图(第七节视频 第27分钟)是挖矿难度的变化情况，跟算力的增长基本上是同步的，这也符合难度调整的设计目标。通过调整挖矿难度，使得出块时间保持稳定。注意这个图显示的是挖矿难度，不是目标预值。 如图(第七节视频 第27分第27秒)是最近半年的难度调整曲线，可以看出很明显是一段一段的。每隔两个星期，难度上一个台阶，说明挖矿的人越来越多，用的设备越来越先进，反应出大家对比特币的热情越来越高。如果出现相反的情况，比如某个加密货币的挖矿难度越调越小，说明挖矿变得越来越容易了。但这不是好事，说明大家对币的热情是逐渐减小的。持续出现这种情况说明这个币将被淘汰。 如图(第七节视频 第28分第13秒)显示的是每天的出块时间。可以看出，总的来说出块时间稳定在10分钟上下振动。 如图(第七节视频 第28分第36秒)显示最近半年的出块时间，也是维持在10分钟左右。 挖矿难度的公式:下一个难度=前一个难度＊两周/挖前2016个区块用的时间(注意:前面的公式是目标预值的公式，不要混淆了) P8. 08-BTC-挖矿挖矿的设备挖矿设备演化趋势是越来越趋于专业化，最早的时候用的是普通的CPU挖矿，像家里计算机、笔记本电脑。但如果买一台计算机专门用来挖矿是非常不划算的，计算机当中的大部分内存都是闲置的，挖矿只用到其中很小一部分内存，CPU当中的大部分部件也是闲置的，因为挖矿当中计算哈希值的操作只用到了通用CPU当中的很少一部分指令。硬盘和其他很多资源也都是闲置的，所以随着比特币挖矿难度的提高，用CPU挖矿，用通用计算机挖矿显得性价比太低。 所以挖矿转入第二代设备:GPU。GPU效率相比CPU提高了很多，主要用于大规模的并行计算。但GPU用来挖矿还是有点浪费了，GPU是用于通用并行计算而设计的，用来挖矿的话有很多部件仍然是出于闲置状态，比如说用于浮点数计算的部件。这些部件对于深度学习来说是很重要的，但比特币的操作只用到了整数挖矿。所以GPU虽然效率提高了很多但仍然有不小的浪费。这些年GPU价格涨得很快，有些人归因于深度学习的火热，其实有很多GPU是用来挖矿的。不过有一个好消息，随着比特币挖矿难度的提升，用GPU挖矿已经划不来了，已经超过了GPU的算力范围，所以GPU现在可以更多的用于深度学习、游戏应用的服务。 有一些新开发的加密货币有的还在用GPU挖矿，而现在更多用ASIC芯片挖矿，这是专门为了挖矿而设计的芯片，上面没有多余的电动逻辑，整个芯片就是为了比特币挖矿、计算哈希值的操作而设计的。它的性价比是最高的，这个芯片除了挖矿什么事都干不了，而且为某一种加密货币设计的ASIC芯片，只能挖这一种加密货币。除非这两个加密货币用同一个mining puzzle。 有些加密货币刚发行的时候，为了解决能启动问题，会故意用一个已有的加密货币的mining puzzle，比如说跟比特币一样的mining puzzle，这样可以吸引更多的人来挖矿，这种情况叫merge mining。除了这种情况，其他都是一个芯片只能为一个加密货币挖矿。ASIC芯片生产周期需要一年，但跟其他通用芯片相比，ASIC芯片研发速度已经是非常快的了。 在这么长的生产周期里面，如果比特币价格出现剧烈变化的话，前期投入的研发费用可能就打水漂了。从历史上看，比特币的价格变化是比较剧烈的。曾经发生好几次，比特币的价格在几个月之内，下跌了80%，然后又慢慢恢复。 如果比特币价格大幅度下降的话，挖矿可能是赔本的，可能还抵不上电费。即使在比特币发展的黄金时期，价格不断上涨，这时挖矿是有利可图的。但是竞争也是越来越激烈的，定制的ASIC芯片可能用不了几个月就过时了。一款ASIC矿机刚上市的时候大部分的利润是在它上市的前两个月获得的，因为这个时候它的算力在同类产品中是最强的。再往后随着更强的矿机出现，它就可能被淘汰掉。所以购买ASIC矿机的时机很重要，现在都是要提前预定的。有些不良厂商，ASIC矿机生产出来之后，不是立即提供给消费者，而是自己先用来挖矿一段时间，赚取比特币，等到最赚钱的黄金时间即这前两个月过去之后，再把矿机发给用户。当比特币系统中算力突然有一个很大的提升，就说明某个大公司生产出了新一款的ASIC矿机。所以在挖矿热潮中真正赚钱的不一定是挖矿的用户，而可能是卖矿机的大厂商。 挖矿机的变化趋势，是从通用变得越来越专用，CPU是通用计算，GPU是通用并行计算，ASIC是专用计算。ASIC一旦过时就作废了，不像CPU和GPU还能做其他工作。很多人觉得这是不好的，是跟去中心化的理念是不相符的，也违背了比特币设计的初衷。最民主的情况是，大家都用家里的CPU计算机挖矿。后来改为GPU噪音是很大的。而有些新的加密货币设计的是Alternative mining puzzle。而设计它的出发点是asic resistance(抗asic芯片化)，目的是让通用的计算机也能参与挖矿的过程。 大型矿池挖矿的另一个趋势是大型矿池的出现，单个矿工即使用了ASIC芯片，挖矿从平均收益上看是有利可图的，但是收入是非常不稳定的。比特币系统中平均每10分钟出一个区块，这是说比特币系统中所有的矿工做一个整体来看平均10min会产生一个区块。但如果具体到某一个矿工来说，他可能要挖很长时间，如果他用一个矿机可能要挖一两年。这样子就好像是买彩票，挖到了就是中了一个大奖。单矿工还有其他问题，他除了挖矿之外还要承担全节点的其他责任(就是这节课最开始介绍的那些)。 所以要引入矿池，所谓的矿池，就是把这些矿工组织起来，作为一个整体，矿池的架构一般是一个全节点会驱动很多矿机，一个矿池有一个矿主，叫pool manager。下面连了很多矿工，这些矿工只负责计算哈希值，全节点的其他职责都由矿主来承担。他负责监听网上的交易，把这些交易组织打包成区块，同时要看一看有没有其他的节点抢先发布区块，如果有的话看怎样进行调整….. ASIC芯片只能负责计算哈希值，它不能干全节点的其他功能。矿池的出现还为了解决另一个问题:收入不稳定。单个矿工的收入是不稳定的，所以大家一起干，有了收益再进行分配。 那么收益该如何分配?矿池一般有两种组织形式，一种是像大型数据中心那样，有的互联网公司，有成千上万个服务器，大的矿池里面也有成千上万的矿机，这些矿机如果是属于同一个机构的话，那么收入怎么分配就不重要了。 但也有矿机是来自不同机构的，即第二种组织方式:分布式的。矿工和矿主不在同一个地方，可能分散在世界各地，那么矿工要加入一个矿池，就是按照矿池规定的通讯协议跟矿主进行联系。矿主把计算哈希值的任务分配给他，矿工计算完之后，把结果反馈给矿主，将来获得出块奖励时一起分配。 如果矿工是来自五湖四海的，不是属于同一个机构的，那么利益该怎么分配?平均分配行不行?比如每个矿工挖到一个区块，得到了出块奖励，然后平分给其他矿工，这样行吗?不行，因为会有矿工偷懒。因此要按矿工的贡献大小进行分配，也就是这里同样需要工作量证明。那该怎么证明每个矿工做了多少工作呢？ 为什么矿工的收入不稳定，因为挖矿太难了，如果把挖矿的难度降低之后，挖矿就会变得稳定了。怎么降低难度呢?以前的要求是，矿工要找到一个nonce，用nonce计算block header 的哈希值，前面至少有70个0才是合法的区块。降低挖矿难度之后，比如说前面只要有60个0就行了，这样挖到的叫作一个share，这个share叫做almost valid block。矿工挖到share或almost valid block之后，把它提交给矿主。矿主拿到这个区块有什么用呢？用来证明矿工所做的工作量，而没有其他用途。矿主无法得到区块奖励以及任何好处。所以矿主就统计每个矿工提交了多少这样的share，将来等到某个矿工真正挖到了合法的区块之后，再将出块奖励按照每个矿工所做的工作量，提交的share数目进行分配。 这样做为什么是可行的?每个矿工挖到矿的概率取决于他尝试的nonce数目，尝试的nonce越多，能找到的share就越多。 有没有可能一个矿工挖到一个合法的区块之后，不把它提交给矿主，而是自己偷偷摸摸发布出去，得到出块奖励?即平时挖到的share提交，但挖到了合法区块就不提交?不可能，因为每个矿工的任务是由矿主分配的，矿主负责组装好一个区块，然后交给矿工去尝试各种nonce，而且挖矿仅仅调nonce是不够的，还需要调整coinbase parameter。所以矿主会把不同的coinbase parameter所对应的nonce值的范围交给不同的矿工去尝试。那么这个区块里包含什么?coinbase transaction里面有收款人的地址，这个地址填的是矿主的地址，即pool manager的地址，所以矿工挖到区块之后，如果他不提交给矿主自己发不出去是没有用的。里面的收款地址是矿主的，他取不出钱来。所以只要是当初按矿主给分配的任务进行挖矿的，就不可能偷区块奖励。 如果他一开始就不管矿主的任务，自己组装一个区块，偷偷把收款地址改成自己地址，会怎样?那样他提交share给矿主的话，矿主是不认的，因为里面交易列表被改过了，coinbase transaction里面的内容发生了变化，算出的merkle tree 的根哈希值也是不一样的。这种情况下矿主是不会给他工作量证明的。那就相当于矿工一开始就单干，跟矿池是没关系的。 虽然不可能偷区块奖励，但会不会有人捣乱，比如平时挖到一个share，提交给矿主，作为工作量证明。等他挖到一个真正合法的区块之后，把它扔掉。这是有可能的，虽然没有经济好处，但有可能是别的矿池派来的卧底，不想让这个矿池得到区块奖励。这些矿工还是会分红，分的是别的矿工挖出来的区块奖励。 如图(第八节视频 第38分处 )是矿池在各个国家的分布比例，中国矿池占世界81%，远远超过其他国家，所以按矿池比例来看的话，中国的总算力是有绝对优势的。 如图(第八节视频 第38分第24秒)如果按照单个矿池来看，在2014年，曾经有叫GHash.IO的矿池，这个矿池的算力，占到了全球算力的一半以上。在当时曾引起一些恐慌，这一个矿石的算力就已经足以发动51%的攻击了。这个事情公布之后，该矿池主动把算力占比大幅度的减少，以免动摇大家对比特币的信心。 如图(第八节视频 第38分第56秒)是2018年的各矿池的算力分布，看上去没有那么集中了，GHash.IO矿池早已停止运营。当然，挖矿集中化的程度仍然是比较大的，几个大型矿池占了相当大的比重，但没有矿池占50%以上。这样看算比较安全了，但可能只是一个表面现象。假如一个机构有一半以上的算力，他不一定要把算力集中在一个矿池里，而可以把算力分散隐藏在很多矿池里，真正需要发动攻击的时候再集中起来发动攻击。 矿工转换矿池是很容易的，加入一个矿池就是按照这个矿池的协议跟这个矿主联系，矿池把组装好的区块信息发给矿工，矿工来尝试各种nonce值就可以了。 所以这就是矿池带来的危害，如果没有矿池，想要发动51%的攻击，攻击者要投入大量的成本来购买到足够的矿机，能够达到系统中半数以上的算力。有了矿池之后，他可能只占很小一部分比例的算力，只要能够吸引到足够多的矿工，足够多的不明真相的群众加入到他的矿池里来就行了。 一般来说，矿池的矿主要收取一定比例的出块奖励作为管理费。矿主也要按照比例收取管理费，有的是按照出块奖励的比例，也有的是抽取交易费。有的一些有恶意的矿池在发动攻击之前，可能故意把管理费降得特别低，甚至是赔本赚吆喝，吸引足够多的矿工加入之后就可以发动攻击了。这是大型矿池的一个弊端，使得51%的攻击更加容易了。 假如某个矿池占到了半数以上的算力，他具体能够发动哪些攻击呢?一个最常见的就是分叉攻击。假如一个区块链，其中一个区块包含了一个大笔的交易，又等了几个确认区块之后，自认为已经安全了。然后这时就可能有人在该交易前面的区块发动分叉攻击。 看上去好像追赶的道路是很漫长的，但如果拥有51%的算力，最终还是可以成功攻击。另外，不要把51%当成绝对的门槛，有可能不到51%就可以。算力都是估计的，而且算力还在不断变化。 攻击者还能做什么坏事?还可以做boycott(封锁境域)。比如说攻击者不喜欢某个账户，怀疑某个账户参与非法交易，想把这个账户封锁掉，所有跟这个账户相关的交易都不让上链。假如A把某个交易A→B发布到区块链上，攻击者就会马上进行分叉，产生一个不包含这个交易的区块，所有跟A有关的交易也都不包含进去。 这种攻击跟分叉攻击区别是什么?他没必要等后面几个确认区块。这时候如果攻击者等待确认区块，是为了让B放心，B以为后面有六个确认区块，已经没事了，然后攻击者再发动分叉攻击。而如果目的是为了boycott的话，就没有必要等后面区块生成。A→B交易一上链马上进行分叉，越早越好，因为攻击者是希望别人沿着他的链往下挖的。 前面讲过，有些有恶意的节点故意不把某些交易写入区块里，是可以的。但没有关系，后面的区块还是会包含的。但是如果这个坏人拥有51%的算力的话，他可能仗着自己算力强，公开抵制他想抵制的交易。这样别的矿工也不敢随便把交易打包进去了。 那么攻击者有没有可能掌握51%的算力后，把别人账上的钱转走。这是不可能的。因为他没有别人账户的私钥，没有办法伪造签名。如果他仗着算力强，强行把一个没有合法签名的交易发布到区块链上，会有什么样的结果?会造成分叉。因为诚实的矿工会沿着另外一个分叉去挖，不会沿着他发布的区块往下挖。所以盗币是不可能的。 总结:矿池的出现减轻了矿工的负担，矿工只需要挖矿，计算哈希值就行了，别的事情都由矿主来完成。矿工的收入分配也更加稳定。但矿池的出现也有危害，发动51%的攻击变得容易了。他不一定自己有这么强的算力，只要动员召集这些算力就可以了。 这有点类似于云计算中的on demand computing。平时不需要维护很大的计算机群，需要用的时候可以随时召回来。而矿池的情况，是on demand mining。","link":"/blockchain/blockchain-04.html"},{"title":"weekly-contest-187","text":"[TOC] 旅行终点站3 是否所有 1 都至少相隔 k 个元素4 绝对差不超过限制的最长连续子数组5 有序矩阵中的第 k 个最小数组和7 1123456789101112class Solution: def destCity(self, paths: List[List[str]]) -&gt; str: res = paths[0][1] m = {} for s, e in paths[1:]: if s==res: res = e while res in m: res = m.get(res) else: m[s] = e return res 212345678910111213class Solution: def kLengthApart(self, nums: List[int], k: int) -&gt; bool: try: last = nums.index(1) except: return True n = len(nums) for i in range(last+1, n): if nums[i]==1: if i-last&lt;k+1: return False last = i return True 312 412345678910111213141516171819class Solution: def kthSmallest(self, mat: List[List[int]], k: int) -&gt; int: l = [] def helper(mat): if len(mat)==1: return mat[0] la = mat.pop() lb = mat.pop() res = [] for a in la: for b in lb: res.append(a+b) res.sort() mat.append(res[:k]) return helper(mat) mat = helper(mat) mat.sort() return mat[k-1]","link":"/Leetcode%20weekly%20contest/weekly-contest-187.html"},{"title":"leetcode 278. First Bad Version","text":"leetcode九章 题目描述You are a product manager and currently leading a team to develop a newproduct. Unfortunately, the latest version of your product fails the qualitycheck. Since each version is developed based on the previous version, all theversions after a bad version are also bad. Suppose you have n versions [1, 2, ..., n] and you want to find out thefirst bad one, which causes all the following ones to be bad. You are given an API bool isBadVersion(version) which will return whetherversion is bad. Implement a function to find the first bad version. Youshould minimize the number of calls to the API. Example: Given n = 5, and version = 4 is the first bad version. call isBadVersion(3) -&gt; false call isBadVersion(5) -&gt; true call isBadVersion(4) -&gt; true Then 4 is the first bad version. Tags: Binary Search Difficulty: Easy 答案\u0004 1234567891011121314151617181920# The isBadVersion API is already defined for you.# @param version, an integer# @return a bool# def isBadVersion(version):class Solution: def firstBadVersion(self, n): \"\"\" :type n: int :rtype: int \"\"\" left, right = 1, n while left&lt;right: mid = left+(right-left)//2 # 最后 left right 都指向第一个 badVersion if isBadVersion(mid): right = mid else: left = mid + 1 return left","link":"/leetcode/leetcode-2**/leetcode-278-First-Bad-Version%20(copy).html"},{"title":"leetcode 387. First Unique Character in a String","text":"leetcode九章 题目描述Given a string, find the first non-repeating character in it and return it’sindex. If it doesn’t exist, return -1. Examples: s = &quot;leetcode&quot; return 0. s = &quot;loveleetcode&quot;, return 2.Note: You may assume the string contain only lowercase letters. Tags: Hash Table, String Difficulty: Easy 答案\u0004 123456789101112131415class Solution: def firstUniqChar(self, ss: str) -&gt; int: # 添加未重复的 字母：index m = {} # 重复的字母 s = set() for i, c in enumerate(ss): if c in s: continue if c in m: del m[c] s.add(c) else: m[c] = i return min(m.items(), key=lambda i:i[1])[1] if m else -1","link":"/leetcode/leetcode-3**/leetcode-387-First-Unique-Character-in-a-String%20(copy).html"},{"title":"2020-05-05","text":"嗨，请准确无误地输入密码查看哟！ d4ddde657b62ae9d724a3e00dfabc05a45fdaf36a8bc4373ea59463028fb879dec0bab702e62ec40be4bd40d33dd8011ba51f8d43c98b9d5bc1629306176c05577d8355c1beaf3cd461fc88eb2faf0341dcf59de272fed2aba653dff2fe249ba70a664e958658d9c25bad99b53b312a4784912b3d4d824b393d3a9bf39c7fdbd9a91353baa205adaf325e03ecaed45d28078a69f9cf2ccacd2f2aa11e354b3559c4ac979673b198b7b92de870cc798d808bc2baaf32ef42c4f4b04b743fa6613d524a3eb63642c92dc881d7484bf501849da260d78b35a97bd4f01df208b423e66b6cc5c20122a10e7d2f50b4a85217932c5af0ed34d2756766311258d19f0b0af3245a5f26b60bca23e36f84f048ddb59bdcc24daccff4d5853c21ae445eb3fd6e2ae4463ae56fa26ec4a5a822d06d7a597a2a1a659ded102fc1a53a5f25d89fe02f6e87c1f824084dc3c241b64ee13c62c879cc15a8627f934f422cd0b61965b82681e801533a1b5cb8599151819e81eb12c8cd4cf65a523fd091ce62dcbf49b84dc75c7a40066910deaf2748b838eb6dbef845bedf40b3de049706f0f7ede967f57e50907efee0b650861e28ed50cede324ebe88037c45402142058248f6ad9842dfe695fa34bec04d2539612dc48d17d5eae997b0e4b21aef75df9711a6e4002bfa74682c1edb7f9dd2668d14dafcc3b8195a3c34f5864fa57d750c457293c8fa084e3501c8f2a4077fde390b73f668da3c48f7888f220a942b975d43bcf4c61346dd7fbbd4b14e5a18148615703a6fed7d0c854bc85969ecb5ac9f9b63bf1a931483ce1a707eb049d991334ad9233f22f8ccc9748501b29b1358af172d391527b4c06f13b60bdee64af9f5b91407c5622ca27fc5ba4850a454019f99726422fcad94f751a51a6029b37b926f66bc960613afbf90d3ebf065000c226d8fbc286a977e81584d4695e2a8e080cc36993e110657aa26b2fe3a76d146511f96dbf9d0a0bdada5827f82c733799d19c981729828f25a4b564399262a3e66b70f551cbc7ad24859d587bbfeadfcac4621e7f9a3030fd91579eef2a04bbd0e1487eb19d5840f2d42376df67af56ad6f5ce2b4ead08cef7fe08d88e37cd70c323cfa0dc23fa4b66578f8a59e3d0dfd91af127992173db69f9541dbdad37730db9cb84355cf582888fb50ab08f9ca111b24ee7b7b96e30e26f95419b43b0eaf6e2107ca1a6d4c422b9d983149112fbbe4dc127f6996c9e8821e8002890c29b44f0d5d458fe0dd650c297361a1175cd83a57eff9265d9e4ca9f6ebeab43f7026daa5eca1716d50829ba65352654ead296a70fde9f4a4ef9564317c17462ccdd5d0c6674b535b683f6cc83d933b94d5245548228170e5f171c0435dea222ee9e4e7a08e6e1d72570f8abc5286bc6e7cb6d5dca4e2d11e59b1645ab2434c2fa2cd1ca7735e8de059bc8a601f419047991d4fb7e9af59fe48708a6ad86e927d72e0d710d954cc903461785ee1c9d1aef1c1845aaf453980bd1b0b4362650f8532bff87244e7a194815ad3fdcce616be6007b968a44c477a8ca793ff131c7388cdddf55856ba4bb0efc6358c33efbd6ade1487053461d13c278d8565d9b9c14bff8de18b3429122a2fd3d0bf967fb7dce51e847701a68446b4feb4919c4053adafe85d646cbcfb95190a7ca41168117c134a69c6a2d114f02e21d1b3091eee6e6318813c7685d6fb9cf869baa2b016951085e61042f54dc46ae2b4212d8e3ad152ff2e89d042e1fc8d3c19ed8f2fb3cec12cbcbc5a3ade1d4774c6fa8cf58000b1ad8522e35b7608dd799dcd4bc693c5284a3ecb3299e460004a32c177c44468fde34cb050f7967ff7bca23b280dfb90369b34547b0053eda3b96b786dcc7dec261066f5c3f27997b3523bafa49813091af82fd2ff4519c1ab24455a84b38fe9294c4e9129dcf25a1a1210eddbed5c6f4f683b305833be51bce60525347bd4b1894c02beb67d5f7567ab0de1425728709f88d5b8e3","link":"/private/2020/05/2020-05-05.html"},{"title":"2020-05","text":"嗨，请准确无误地输入密码查看哟 d4ddde657b62ae9d724a3e00dfabc05a45fdaf36a8bc4373ea59463028fb879d9a45bacecaba7ac1e6748ab25d1f452f86815e2727791a004cb6798779ddc4e82c0f7671d0be79dfc4243e2beb5a8f7973cebc86185fb071f3a5f8391c53e13f0a3f83a674fc8f303e2072efaf1e0c6c0ef15d6e93e5f29b6198b1faba1305d007fe7e4fb1532d2a627d2a99ede5d432e64a2ee9129ce0f11fa4efc3f621ddae32f8f9027f62677015285d7ddb4f12ddcd112c3b9844057cad25ad0ebbe9eb77b1cba595d70e8d14cba2ac182cf8f5415775b424125110a446e7437ed5c780d9d3d39c5151a48b5beb2dbe3ed1df352d11690a387de6793de752c62ad42c8664e35cf5a4e9d8fa0e8972edf26c334cdc6cda0abc5cdbfc38c401e2b62e917d82f490edc0dc76109a375135f823f19c586c3e5fdebc6be08df0fcd3617c4d439c80bb12d122767a535b251c68568dad466d1a8634622215211faff3be0aff478a04c5d135abb462367506c8cdf30eb84e35f90d3e32a401ae9d047332c94d9e5a773780932e51a777a9d8508fd6129c823734cd17c48a7f33a7e90faae6a822b36a09e7f9b4fe1c07c82542c41fbc6178ce4d1ec5c39aee028695af9dc78d9583af14d14dc7432069c7c40eddd7813ee93dd9bf42c0a3b0a6c1f97dc4dd8c1b3bbc1fc469e2adc1897b518267a1e58709df69644c18c3fdae134e4e01d4eb3c7a87f103fe6f11b4ef9e3f5a290f5199212a981af3a788a4a0c50a36ebdb51f92ce6fec6a5d46592681b86ddb7e1fc400badeec3825cd5fbaa1fc69519921e2df55a7d963e1d443f3ba374645cd6c99c1eb331efa85012c659d41a052e43bfda1286a598055cc31b09aa0edcb5db9f88785bc54cdf48303c7038442e6bb6139fe28db3df7fe972a39286cd681aa003affa2d0e4a5cb5b74fda02c65009300c1f4b7054d2c7e42351b0f35e6156380bbe09b53f2e3e4b2259f2940c8559c8eb29c1f2d2d3638529674231e95c81f046e97080b73c6ae763928de48f95de7d181b6579694e0657153b5d76d4b46e70c78c2698e204f1897318b0dd87eb68343d5bc319a86cb8ac44ae0aa518278b09472c8ea739aaba0aff823af05b867a97c7bd48ab75fb2f6dcbd2b06a36acf69ed02afdeb3e3db5e01e6a416a2067ec2dd5f21079eb740f9eea4267a0bac9566561374b67249f47df9197c2401cf005064e81fcdda5433e0a30c769bb9f66e47534f74c570336b4fdae83dc6c847432f3448e9575fbf1151fbf67b4f07598147f2d292a677026c00827445fbe848506e64bf9da580197abc2c8723dda7fcf16a02fa15a9c55225c2b207177030947ce7289c09bcffb765e1358133d3d16693fd99807df10f20fa8dc84cc8c761b858ea7a44c45b67fa0c710c079cf01c8cbdf4f1a3dd22b8b16476b0191818721564f14b47063b939fd33931b96a780c7df84ce8ee3b73f9c6416fe05b2817c5b9a6beb071de0ee5728c16a70e44bbd3352b71f6e52a07dee85a3bf590b511ee20f87ddd9effda1df11e73f905e449651beb17be70e7d2d5e69a0d4087d159994eb46bcf084465d2c3d624a26f01b21500507bf072c40ebd03bcde487fcbf8be84df86267bb47a791bd2e05831e38e6a831190483e7410f9a7d7452021fe9d14014c48e131cd6207f3d0bac9bbc47a9de151137b441871add3da1ee698a7a93b23e4f992ac94cc9d8c10b11f0046c5d6ab67b9fb3af8d441761e08a3e7d4ba6fd714bc48c7239b3f4b739006991d2a97a45f07c677c0394aaa76f842d17a485c21fb19ee1010fb90ec7e3584e3a43305ad7d0d7b501c7d28e4c9ba28a65dd4f01e1bfa6f739a926112b9a960e46ca98711472ff22b06ab2254d2e0793ff6e2abe15a51ba66fdf3169316fbdaf6a227559a853405d857cae371472a6da66ddc294ec46277f98c061bbb4bb50f76d9ce3ac7c8dde2267dff0e735a082847a2654aab744e4aeccb3f319dafc994630bef1297e04542ced4be486ddc420a5ee94e3332095359532aa619fdcfabd3cc5a5c7ad6c46f726e3164e1757e5a8cf8efdffdb9c91d5e61e1d000e824c4903319c353c6713b36844b9a8676e13cd26670700ee22e7c80b30f39595ee5d6d00b26fbed5883c89f7ee234a6eff313f200d4ca722988c047864e1ecdcc075ea50b9fa81f49a51a3fe7a439318574799547d692c141d6164c36a46b1cc213c0f457fca1765ee24c8e5c6ec1356aa000221c8869f544bd51e4b18ee5be078e3f6099e65c8072016eb39c02bbd6e1e212936c8740da26c0b56807487696174b71cb8abf7fca86fc191a505b1cc45c71a86d66be945dbffbeab43be3b26ad1fc45744d5b60fe6bd9d0a1710094575a4124b9d031df4954353576f51e4dd79063e6d89386965d243a45a82e89206f2426baa98161de03033a804ef5ca33a0a20a7abf455b276daf6c39158cb501eb08676eee591c5ac1c1ecc06447d3848ec59859eb789960193103c8c0470e1167dcdf59de654c39b277b7fd4126cf984338108f850b14981804855910a2b1e963004441b724b13c9879c233fac0727f4d873470adc642aeaf179db6fa13f6dce98952c55ffe00a94cb7772632dd604f8046b36c15117ddeabeb7dde39b2c4c3372c59b02bfb8880b95defb9dc55098dacbb48dfe93f42aea35b4a892ea3452","link":"/private/2020/05/2020-05.html"},{"title":"docker-todo","text":"[TOC] √ 解锁网易云灰色歌曲nondanee/UnblockNeteaseMusic: Revive unavailable songs for Netease Cloud Music 进阶配置 · Issue #48 · nondanee/UnblockNeteaseMusic食用指南 · Issue #22 · nondanee/UnblockNeteaseMusic全端通用方案搭建教程 · Issue #527 · nondanee/UnblockNeteaseMusic √ gitlabdocker + gitlab · 雪之梦技术驿站docker下gitlab安装配置使用(完整版) - 简书","link":"/todo/docker-todo.html"},{"title":"2020-05-06","text":"嗨，请准确无误地输入密码查看哟！ d4ddde657b62ae9d724a3e00dfabc05a45fdaf36a8bc4373ea59463028fb879dec0bab702e62ec40be4bd40d33dd8011ba51f8d43c98b9d5bc1629306176c05577d8355c1beaf3cd461fc88eb2faf0341dcf59de272fed2aba653dff2fe249ba70a664e958658d9c25bad99b53b312a4784912b3d4d824b393d3a9bf39c7fdbd9a91353baa205adaf325e03ecaed45d28078a69f9cf2ccacd2f2aa11e354b3559c4ac979673b198b7b92de870cc798d808bc2baaf32ef42c4f4b04b743fa6613d524a3eb63642c92dc881d7484bf501849da260d78b35a97bd4f01df208b423e66b6cc5c20122a10e7d2f50b4a8521792c77f9e5daf58bf40859309482a95c772f70caf3a4d7098f22e8c4189ee4f861e2d2c5078cd4e37b9f8590da2fc0c3839315554091cdffeec1fa19d9869bbc950d3eb086250d304d7d4ef19f936012571b7ee42591d36d3a2b4046afef8c62ecae332afcc678602fdfa12447ce4115a5d33fb3e710b3d474271fedf70dba810734bbf76e2bbf8550ad5c91d6a33b353ccf9e3b456bee8e18073d2326c374b584f5b56a6a6cf4beda43511154846e8a28949cced5fed64e28cd2f28d1e88fd65068c91af957a2b6c3ae735740ab5286332b2e882bcf5130a4af525fe019ba0760067ff59f773d603c0e258a74a33591f0c8920165bad0cb1e12bad3fcefaa138e4285590933dcf6e0b8d97de8f0b9e37ed165bb074fa77fccf9a51135b383a1e066a0fc45999134fecd158614d3256dac155db92686a73981a7bfa45494643702cf1af27dc44a856342fb8e492ba3ce9a99b5b3e2062e02ac0b4bf28df91b9e5f4e812e43d7d590e352377f49215ba7aee626be7c9d8dd7e3ffd92549a26319cca0c09378fc74ab5003b7e5225a392ddfc3541a02b5d5e59801f133ec3c68db2378356a6f16a043d84367f959c9a696ac39b0aedb75e0977155a7fde38c3954b2565e983b01494e204230aec3096209ce72d2f59ef26f3d24bfccb59d67502de3f60116f56d0cbec1ac92455dd535cfd64e3d16851f8aadd7b5b0f903a70082a5ca9bb7f5210becbf0a961281106e7dcf6f03d93188ca693e68c6830c452f0ea76244844a37e686feb999ac25d795b0d2af9daa1806916bd2b902e15bb31265a566dfa12a95a6c2333a05525ebe6e633ed16f8e0e704df0d3d45c6d79ab4c34a74c5e2c141a650c7703fc1924f7dbf13dec738fc0b8928f5a6e409c0997627b196d9f56943dd9e915d46223f11424326b6e726a8b16a77a396b2b9adf706f22fbad2dbe648031e0eefa113d277395b6a60cddbc91e3521dbb36397e793ff824038dbbf7dad662c460d439bfcad8b2b01466d28c3bff78023e919854be875f65644524985a8b5c61facb605c30b8e22784b0ae5c83299b655f854cd08d7b6f1f6e2be151bbd9d4428164fdd6c282aebb1d78ce6e9a8576d3ec431bfacd2bbab273a29fde3519f29d95dcb51e7b1ec21ef0bffcd1b15ce4ec168c86984c94f1a87b809c1d832203c6326966de8721b8627d7e19fa54efcdd7adab71d0fbf6b69c3e3e2b7dcce0745b7161b234b627a00100e711fcc8de11555712ff5965f428c3d1e0b3ce8c88e9e6bb67394d082488547fd85915e038fd2007908691c70fead72505364923e6c8099ee542f16a01b9cf51418a724c2ffd3da4ff888f47526f0258faea354accdfd7b0d7d17f236025405bfcd689190df6fc563b1968e6c0261da5ada0ba19f810dfbf4910346f8dfde99d229792d60cbe25b80a38e78fc332f59f9796bd71ee97c7dcc6e1f8959b774f72ff0a600a7b41a26ff2b11d1aabf288896b1ee7cfd820fa20bec3a39af654b34aea89e2071a65c72ad6382220f0adb72c6763e0e82b5f30ff1e5ec8ee4f53a892cbcca460cf816419276364028fd3f94f329020c6019e258db68c17babc678777076ace08662080025a24b48d4939409b81ac293847f8f16968031d34bd75083d647ce5381e8313f2ea474d5d84a1ccee9bc8a64abd0148966fc25233322f9149","link":"/private/2020/05/2020-05-06.html"},{"title":"2020-05-07","text":"嗨，请准确无误地输入密码查看哟！ d4ddde657b62ae9d724a3e00dfabc05a45fdaf36a8bc4373ea59463028fb879dec0bab702e62ec40be4bd40d33dd8011ba51f8d43c98b9d5bc1629306176c05577d8355c1beaf3cd461fc88eb2faf0341dcf59de272fed2aba653dff2fe249ba70a664e958658d9c25bad99b53b312a4784912b3d4d824b393d3a9bf39c7fdbd9a91353baa205adaf325e03ecaed45d28078a69f9cf2ccacd2f2aa11e354b3559c4ac979673b198b7b92de870cc798d808bc2baaf32ef42c4f4b04b743fa6613d524a3eb63642c92dc881d7484bf501849da260d78b35a97bd4f01df208b423e66b6cc5c20122a10e7d2f50b4a8521792c77f9e5daf58bf40859309482a95c772f70caf3a4d7098f22e8c4189ee4f861e2d2c5078cd4e37b9f8590da2fc0c3839315554091cdffeec1fa19d9869bbc950d3eb086250d304d7d4ef19f936012571b7ee42591d36d3a2b4046afef8c62ecae332afcc678602fdfa12447ce4115a5d33fb3e710b3d474271fedf70dba810734bbf76e2bbf8550ad5c91d6a33b353ccf9e3b456bee8e18073d2326c374b584f5b56a6a6cf4beda43511154846e8a280e559f58a4aa4cc83ac8205e87479061356733a6a571ac242738b96866d17263247252db87f83e4a76fc2ae66497fa73790965e193476d80a729b4c90aeefc6c50cfa631304eced4f5c3f76bb514c847aa3d780855dd75bd175662bb49f75bb270a6a833564820f32f40f5456962313cefd74d8ac667412eea97803723141fb59bab61c23ee0d08a1926ed18d0134bd466cbfb76944a1dfdec3959bd09866927a328d985827420b5e6e553275bce73f4d3e53ba5e5972c28e967b3d51c56e381bdfc710dca4465f6b8ad4230392714b726a2f7bc3b94e277e47ee8d107cad26e64d3c829ab382bcd7a518fc8019545384275fc6c174c45968de21eae0e42bf0e48b625ee6d456ce8560e634b5ab1987260f8bcc28ccbeb6f0d7c895e828f9eb4ea7463f3441cdb45f30c16edeb65cfae7d695b90b56e9bf4bedda0b3cb7ee2716fc65d3d2f88bf59f37c48d9e716788f5beab098a7c4f359f6663f041f45827c72789de987e1eea168d70847df3f483bb4e4cfeeb36a4119dc0452b4094ac28c5d21c2b5c2b7cc4acd7b448774132c3170e7835f51b123e40052090423ddd22a5aaf60828db0fe2d421b4ee524cdcd47a565910dc96d8642a80f95d657973aa65f05b89f8937d0fd44e02b9efabee4cd836099b9ed88a3bcd45fa4a2bc0658b2fe43bf973ef26c8ac617617473d6236ef09f9b9650f3838cd99cf24488340bdb0e807d9054ed669047bd9600609c63ffc5744fdacb05749344e6ae6dc00685fe4cf39e32966779440a3dbdeb95fae2a1108586fdcdc1e329e8f021e738149ee9eab76a8c68c0c54b6d4ef36340aba6462fe81c70f3838e7a9cad5a52b664941846b1cd0cf7dfbb0a395213facac1eee8a22530587f56299167041a22f88b6baf123c528bd9f09593c5717fcc806ea40a72cd1a3e8501fe6a51f1abe03666fff1d2fd895f7d4857642ac6da54f2f547d83dcea294af26722342d6514aade8fc3585f659be2f2c5ffff1c0323c323e9a9647f73cf50e41ece78c854e820ce5c576b5c34ca178d08b46b73fdcaff473ca515684864b9d3f6c3a052424512068a9c355d641781a667e98cf67bbdede45e8ce20251c3f4ccad5b00d1d943a4b85a7f1c69ae3eca43e022a7fe3b41ed5fff1b8da37488c3b86e8aa63326a03fc392fc57f8dfe6a8ae9e502aa3cd61bb7568eb026740e6ed54509c069db8bc65a4edafd","link":"/private/2020/05/2020-05-07.html"},{"title":"blockchain-05","text":"[TOC] P9. 09-BTC-比特币脚本比特币使用的脚本与原理 如图(第15秒)是比特币的一个交易实例。该交易有一个输入两个输出。左上角写着output，其实是这个交易的输入。右边两个输出，上面unspent即没有花出，下面spent表示已花出。该交易已经收到了23个确认，所以回滚的可能性很小了。 下面是这个交易的输入输出脚本，输入脚本包含两个操作，分别把两个很长的数压入栈里。比特币使用的脚本语言是非常简单的，唯一能访问的内存空间就是一个堆栈。不像通用的编程语言，像C语言C++那样有全局变量、局部变量、动态分配的内存空间，它这里就是一个栈，所以叫做基于栈的语言。这里输出脚本有两行，分别对应上面的两个输出。每个输出有自己单独的一段脚本。 如图(第1分第40秒)是交易的具体内容。首先看交易的一些宏观信息。第一行:transaction ID，第二行hash，该交易的哈希值。第三行:使用的比特币协议的版本。第四行:该交易的大小。第五行:用来设定交易的生效时间。此处的0表示立即生效。绝大多数情况下，locktime都是0。如果是非零值，那么该交易要过一段时间才能生效。比如要等10个区块以后才能被写入区块链里。第六行第七行的vin、vout是输入输出部分，后面会详细讲解。第八行是这个交易所在区块的哈希值。第九行:该交易已经有多少个确认信息。第十行是交易产生的时间，第十一行是这个区块产生的时间。(time 和block time都是指很早的一个时间到现在过了多少秒) 如图(第3分第32秒)是交易的输入结构。一个交易可以有多个输入，在这个例子中只有一个输入。每个输入都要说明该输入花的币是来自之前哪个交易的输出，所以前两行给出输出币的来源。第一行:之前交易的哈希值。vout表示这个交易里的第几个输出。所以这里表示花的币来自于哈希值为c0cb…c57b的交易中第0个输出。接下来是输入脚本，输入脚本最简单的形式就是给出signification就行了，证明你有权利花这个钱。(后面的PPT中scriptsig就写成input script输入脚本)。如果一个交易有多个输入，每个输入都要说明币的来源，并且要给出签名，也就是说比特币中的一个交易可能需要多个签名。 如图(第5分)是交易的输出，也是一个数组结构。该例子中有两个输出，value是输出的金额，就是给对方转多少钱，单位是比特币，即0.22684个比特币。还有的单位是satoshi(一聪)，是比特币中最小的单位。1比特币=10的8次方聪。n是序号，表示这是这个交易里的第几个输出。 scriptpubkey是输出脚本，后面都写成output script。输出脚本最简单的形式就是给出一个pubkey。下面asm是输出脚本的内容，里面包含一系列的操作，在后面会详细解释。require sigs表示这个输出需要多少个签名才能兑现，这两个例子中都是只需要一个签名。type是输出的类型，这两个例子类型都是pubkeyhash，是公钥的哈希。addresses是输出的地址。 如图(第6分 第36秒)是展示输入和输出脚本是怎样执行的。在区块链第二个区块里有A→B的转账交易，B收到转来的钱后，又隔了两个区块，把币又转给了C。所以B→C交易的txid、vout是指向A→B交易的输出。而要验证交易的合法性，是要把B→C的输入脚本，跟A→B交易的输出脚本拼接在一起执行。 如图(第7分 第40秒)这里有个交叉，前面交易的输出脚本放在后面，后面交易的输入脚本放在前面。在早期的比特币实践中，这两个脚本是拼接在一起，从头到尾执行一遍。后来出于安全因素的考虑，这两个脚本改为分别执行。首先执行输入脚本，如果没有出错就再执行输出脚本。如果能顺利执行，最后栈顶的结果为非零值，也就是true，那么验证通过，这个交易就是合法的。如果执行过程中出现任何错误，这个交易就是非法的。如果一个交易有多个输入的话，那么每个输入脚本都要和所对应的交易的输出脚本匹配之后来进行验证。全都验证通过了，这个交易才是合法的。 如图(第8分第45秒)是输入、输出脚本的几种形式。一种最简单的形式就是P2PK(pay to public key)。输出脚本里直接给出收款人的公钥，下面一行checksig，是检查签名的操作。在输入脚本里，直接给出签名就行了。这个签名是用私钥对输入脚本所在的整个交易的签名。这种形式是最简单的，因为公钥是直接在输出脚本里给出的。 如图(第9分第18秒)是脚本的实际执行情况。这三行是把输入脚本和输出脚本拼接起来之后的结果。第一行来自输入脚本，后两行来自输出脚本。注意，实际代码中出于安全考虑，这两个脚本实际上是分别执行的。第一行:把输入脚本提供的签名压入栈，第二条把输出里提供的公钥压入栈，第三条checksig是把栈顶的这两个元素弹出来。用公钥检查一下这个签名是否正确。如果正确，返回true，说明验证通过。否则，执行出错，这个交易就是非法的。 如图(第10分第24秒)是P2PK的一个实例。上面交易的输入脚本就是把签名压入栈，下面交易是上面交易输入的币的来源。它的输出有两行，第一行是把公钥压入栈，第二行就是checksig。这是第一种形式。 如图(第10分第52秒)是第二种形式P2PKH(pay to public key hash)，跟第一种区别是输出脚本里没有直接给出收款人的公钥，给出的是公钥的哈希。公钥是在输入脚本里给出的。输入脚本既要给出签名，也要给出公钥。输出脚本里还有一些其他操作，DUP、HASH160等等，这些操作都是为了验证签名的正确性。P2PKH是最常用的形式。 如图(第11分第37秒)是脚本的执行结果，这个是把上一页的输入脚本和输出脚本拼接之后得到的，前两条语句来自输入脚本，后面的语句来自输出脚本，还是从上往下执行。第一条语句先把签名压入栈，第二条语句把公钥压入栈。第三条语句是把栈顶的元素复制一遍，所以栈顶又多了一个公钥。HASH160是把栈顶元素弹出来，取哈希，然后把得到的哈希值再压入栈。所以栈顶变成了公钥的哈希值。 第五行是把输出脚本里提供的公钥的哈希值压入栈。这个时候栈顶有两个哈希值，上面的哈希值是输出脚本里面提供的，收款人公钥的哈希，即我发布交易时，转账的钱是转给谁的，在输出脚本里提供一个收款人的公钥的哈希。下面的哈希是指你要花这个钱时在输入脚本里给出的公钥，然后前面的操作HASH160是取哈希后得到的。倒数第二行操作的作用是弹出栈顶的两个元素，比较是否相等，即比较其哈希值是否相等。这样做的目的是防止有人莫名顶替，用自己的公钥冒充收款人的公钥。假设两个哈希是相等的，那么就从栈顶消失了。最后一条作用是用公钥检查弹出栈顶的元素是否正确。假设签名是正确的，整个脚本就顺利运行结束，栈顶留下的是true。如果执行过程任何一个环节发生错误，比如输入里给出的公钥跟输出里给出的哈希值对不上，或者是输入里给出的签名跟给出的公钥对不上，那么这个交易就是非法的。 P2PKH是最常用的脚本信息，该实例(第14分第20秒)用的就是这种脚本。输入脚本就是把签名压入栈，把公钥压入栈。下面的输出脚本复制栈顶元素，然后取哈希值，hash160。然后把公钥的哈希压入栈，最后比较栈顶的两个哈希值，检查签名。 最后一种如图(第15分第25秒)，也是最复杂的一种脚本形式，是Pay to Script Hash。这种形式的输出脚本给出的不是收款人的公钥的哈希，而是收款人提供的一个脚本的哈希，这个脚本叫redeemscript，赎回脚本。将来花这个钱时输入脚本里要给出redeemscript(这个赎回脚本的具体内容)，同时还要给出让赎回脚本能够正确运行所需要的签名。 验证时分为两部(如图第15分第40秒)，第一步验证输入脚本里给出的赎回脚本是不是跟输出脚本里给出的哈希值匹配，如果不匹配说明给出的赎回脚本是不对的，就类似于刚才讲的pay to public key hash里面给出的公钥不对一样。匹配不上说明给出的赎回脚本是不对的，那么验证就失败了。如果输入里给出的赎回脚本是正确的，那么第二步还要把赎回脚本的内容当做操作指令来执行一遍，看看最后能不能顺利执行。如果两步验证都通过了，那么这个交易才是合法的。听上去有点抽象，那么下面看一个具体的例子。 (如图第16分第47秒)用pay to script hash实现pay to public key 的功能。这里的输入脚本就是给出签名，再给出序列化的赎回脚本，赎回脚本的内容就是给出公钥，然后用checksig检查签名。下面这个输出脚本是用来验证输入脚本里给出的赎回脚本是否正确。 如图(第17分第13秒)看一下pay to script hash的执行过程。开始也是把输入脚本和输出脚本拼接在一起，前两行来自输入脚本，后面三行来自输出脚本。首先把输入脚本的签名压入栈，然后把赎回脚本压入栈，然后是取哈希的操作，得到赎回脚本的哈希。这里RSH是指redeem script hash，赎回脚本的哈希值。接下来还要把输出脚本里给出的哈希值压入栈，这时栈里就有两个哈希值了。最后用equal比较这两个哈希值是否相等，如果不等就失败了。假设相等，那这两个哈希值就从栈顶消失了，到这里第一阶段的验证就算结束了，接下来还要进行第二个阶段的验证。 如图(第18分第28秒)第二个阶段首先要把输入脚本提供的序列化的赎回脚本进行反序列化，这个反序列化的操作在PPT上并没有展现出来，这是每个节点自己要完成的。然后执行赎回脚本，首先把public key压入栈，然后用checksig验证输入脚本里给出的签名的正确性。验证痛过之后，整个pay to script hash才算执行完成。 有人可能会问:干脆用pay to public key就行了，搞这么复杂干嘛?为什么非要把这些功能嵌入到赎回脚本里面?对于这个简单的例子来说确实是复杂了，但pay to script hash它的常见的应用场景是对多重签名的支持。 比特币系统中一个输出可能要求多个签名才能把钱取出来，比如某个公司的账户，可能要求五个合伙人中任意三个人签名才能把公司账户上的钱取走，这样为私钥的泄露提供了一些安全的保护。 比如说有某个合伙人私钥泄露出去了，那么问题也不大，因为还需要两个人的签名才能把钱取走。这同时也为私钥的丢失提供了一些冗余，即使有两个人把私钥忘掉了，省下的三个人依然可以把钱取出来，然后转到某一个安全的账户。 以上的功能是通过check multisig来实现的。如图(第21分)，输出脚本里给出N个公钥，同时指定一个预值M。输入脚本只要提供接N个公钥对应的签名中任意M个合法的签名就能通过验证。 比如刚才举的例子中，N=5，M=3，五个合伙人中任意三个的签名都可以，输入脚本的第一行有一个红色的“✘”，这是什么意思呢? 比特币中check multisig的实现，有一个bug，执行的时候会从堆栈上多弹出一个元素，这个就是它的代码实现的一个bug。这个bug现在已经没有办法改了，因为这是个去中心化的系统，要想通过软件升级的方法去修复这个bug代价是很大的，要改的话需要硬分叉。所以实际采用的解决方案，是在输入脚本里，往栈上多压进去一个没用的元素，第一行的“✘”就是没用的多余的元素。另外需要注意给出的M个签名的相对顺序，要跟它们在N个公钥中的相对顺序是一致的才行。 如图(第22分第48秒)是check multisig的执行过程。这个例子假设三个签名中给出两个就行。图中可以看到这两个签名给出的相对顺序也是跟它们在公钥中的顺序是一样的。在公钥当中，第一个公钥排在第二个公钥前面。那么给出这两个签名的时候也是第一个签名排在第二个的前面。 第一行的false就是前面说的多余的元素。首先把多余的元素压入栈里，然后把两个签名依次压入栈，这个时候输入脚本就执行完了。接下来的输出脚本里把M的值，即预值M压入栈。然后把三个公钥压入栈，接着把N的值压入栈，最后执行check multisig，看看堆栈里是不是包含了这三个签名中的两个，如果是那么验证通过。 注意:这个过程中并没有用到pay to script hash。就是用比特币脚本中原生的check multisig来实现的。这么实现有什么问题吗？早期的多重签名就是这样实现的，在实际的应用当中，有一些不是很方便的地方。 比如:网上购物。某个电商用multi签名，要求有五个合伙人中任意三个人的签名才能把钱取出来，要求网上购物的用户在支付的时候生成的转账交易里给出这五个合伙人的公钥，同时要给出N和M值。在这个例子中，N=5，M=3，这些都是用户在网上购物的时候生成转账交易时输出脚本里要给出的信息，给出这五个公钥，给出N和M值。 那么用户怎么知道这些信息呢?需要购物网站在网上公布出来，比如网上可以公布我们用了多重签名，我们用的五个签名中要给出三个，这是五个公钥，然后用户生成这个转账交易的时候，就把这些信息填进去。那么不同的电商采用的多重签名的规则是不一样的。有的电商可能是五个签名中要任意三个，有的可能要四个。这就给用户生成转账交易带来了一些不方便的地方，因为这些复杂性都暴露给用户了。 那么该如何解决?这里就要用到pay to script hash。如图(第26分第39秒)是用pay to script hash实现的多重签名，它的本质是把复杂度从输出脚本转移到了输入脚本。现在这个输出脚本变得非常简单，只有这三行。原来的复杂度被转移到redeemscript赎回脚本里。输出脚本只要给出这个赎回脚本的哈希值就可以了。赎回脚本里要给出这N个公钥，还有N和M的值，这个赎回脚本是在输入脚本里提供的，也就是说是由收款人提供的。 像前面网上购物的例子，收款人是电商，他只要在网站上公布赎回脚本的哈希值，然后用户生成转账交易的时候把这个哈希值包含在输出脚本里就行了。至于这个电商用什么样的多重签名规则，对用户来说是不可见的，用户没必要知道。从用户的角度来看采用这种支付方式跟采用pay to public key hash没有多大区别，只不过把公钥的哈希值换成了赎回脚本的哈希值。当然，输出脚本的写法上也有一些区别，但不是本质性的。这个输入脚本是电商在花掉这笔输出的时候提供的，其中包含赎回脚本的序列化版本，同时还包含让这个赎回脚本验证通过所需的M个签名。将来如果这个电商改变了所采用的多重签名规则，比如由五个里选三个变成三个里选两个，那么只要改变输入脚本和赎回脚本的内容，然后把新的哈希值公布出去就行了。对用户来说，只不过是付款的时候，要包含的哈希值发生了变化，其他的变化没有必要知道。 如图(第29分第14秒)是具体的执行过程。这是把输入脚本和输出脚本拼接在一起后的情况，第一行的FALSE就是为了应付check multisig的bug而准备的一个没用的元素，执行的时候先把它压入栈，然后依次把两个签名压入栈，接下来是序列化的赎回脚本，目前只是把它作为数据压入栈，到这里输入脚本就执行完了。下面是输出脚本，取哈希，然后把输出脚本里提供的哈希值压入栈顶。最后判断两个哈希值是否相等，到这里第一阶段的验证就完成了。 如图(第30分第18秒)开始第二阶段的验证，把赎回脚本展开后执行。先把M压入栈，然后把三个公钥压入栈，把N压入栈，最后检查多重签名的正确性，三个里面有两个是正确的。第二阶段的验证过程跟前面直接使用check multisig的情况是类似的。 如图(第30分第52秒)是网上使用pay to script hash来做多重签名的一个实例。上面输入脚本的最后一个就是序列化的赎回脚本，反序列化之后得到的就是三个里面取两个的多重签名脚本。下面这个输出脚本的内容，跟前面讲的是一样的。现在的多重签名，一般都是采用这种pay to script hash的形式。 如图(第31分第25秒)这种脚本格式是比较特殊的，这种格式的输出脚本开头是return的操作，后面可以跟任意的内容。return操作的作用，是无条件的返回错误，所以包含这个操作的脚本永远不可能通过验证，执行到return语句，就会出错，然后执行就终止了，后面跟的内容根本没有机会执行。 为什么要设计这样的输出脚本呢？这样的输出岂不是永远花不出去吗？无论输入脚本写的是什么内容，执行到输出的return语句，它就会报错，那么这里的钱永远都花不出去。确实如此，这个脚本是销毁比特币的一种方法。 为什么要销毁比特币呢？这个一般有两种应用场景:①有些小的币种要求销毁一定数量的比特币才能够得到这个币种，有时候把这种小币种称为AltCoin(Alternative coin)。除了比特币之外的其他小的加密货币都可以认为是Alternative Coin。比如有的小币种要求销毁一个比特币可以得到1000个小币，也就是说要用上述的方法证明已经付出了一定的代价才能够得到这个小币种。 ②往区块链里写入一些内容。区块链是个不可篡改的账本，有人就利用这个特性往里面添加一些需要永久保存的内容，比如第一节课讲的digital commitment。要证明在某个时间，知道某些事情。比如涉及知识产权保护的，把某项知识产权的内容取哈希之后，把哈希值放到return语句的后面，其后面的内容反正是永远不会执行的，往里面写什么都没关系。而且放在这里的是一个哈希值，不会占太大的地方，而且也没有泄露出来你知识产权的具体内容。将来如果出现了纠纷，像知识产权的一些专利诉讼，再把具体的哈希值的输入内容公布出去，证明你在某个时间点已经知道某个知识了。 这个应用场景和coinbase域相似。coinbase transaction里面有个coinbase域，在这个域里写什么内容同样是没人管的，那这里为什么不用coinbase的方法呢？coinbase还不用销毁比特币，就可以直接往里写。 coinbase的方法只有获得记账权的那个节点才能用。如果是一个全节点，挖矿挖到了，然后发布一个区块，可以往coinbase transaction 里的coinbase域写入一些内容，这是可以的。 而我们说的上述方法，是所有节点都可以用的，甚至不一定是个节点，可能就是一个普通的比特币上的一个用户，任何人都可以用这种方法去写入一些内容。发布交易不需要有记账权，发布区块才需要有记账权。任何用户都可以用这种方法销毁很少的比特币，比如0.0000001个比特币，换取往区块链里面写入一些内容的机会。其实有些交易根本没有销毁比特币，只不过支付了交易费。 下面看两个实例如图(第37分第44秒)是一个coinbase transaction。这个交易有两个输出，第一个输出的脚本是正常的pay to public key hash，输出的金额就是得到的block reward加上transaction fee。第二个输出的金额是0，输出脚本就是刚才提到的格式:开头是return，后面跟了一些乱七八糟的内容，第二个输出的目的就是为了往区块链里写一些东西。 这种形式的脚本的一个好处是:矿工看到这种脚本的时候知道它里面的输出永远不可能兑现，所以就没必要把它保存在UTXO里面，这样对全节点是比较友好的。还有一点要说明:这个PPT当中涉及到比特币脚本的操作为了简单起见都没有加上OP前缀。比如CHECKSIG，实际上应该写成OP_CHECKSIG，CHECKMULTISIG、DUP也是如此。 比特币系统中用到的这种脚本语言是非常简单的，甚至连专门的名字都没有，它就叫比特币脚本语言(bitcoin scripting language)。后面可以看到，以太坊当中用的智能合约的语言比这个要复杂的多。比如说比特币的脚本语言不支持循环，所以有很多功能这个语言是实现不了的，这样的设计是有其用意的，不支持循环就不会有死循环，就不用担心停机问题。以太坊当中智能合约的语言表达能力很强，所以就要靠汽油费的机制来防止程序陷入死循环。 另外一方面，这个语言虽然在某些方面功能是很有限的，但是在另外一些方面它的功能却很强大，比如跟密码学相关的功能。如checkmultisig，检查多重签名用一条语句就能够完成，这个比很多通用的编程语言要方便的多。所以比特币的脚本语言虽然看上去很简单，但其实针对比特币的应用场景做了很好的优化。 P10. 10-BTC-分叉比特币分叉 区块链由一条链变为两条链就叫分叉。分叉可能是多种原因造成的，比如挖矿的时候，两个节点差不多同一个时候挖到了矿，就会出现一个临时性的分叉，我们把这个分叉叫作state fork，是由于对比特币区块链当前的状态有意见分歧而导致的分叉。 前面还讲过分叉攻击(forking attack)，它也属于state fork，也是属于对比特币这个区块链当前的状态产生的意见分歧，只不过这个意见分歧是故意造成的，人为造成的，所以我们又叫它deliberate fork。 除了这种state fork 之外，还有一种产生分叉的情况是，比特币的协议发生了改变，要修改比特币系统需要软件升级。在一个去中心化的系统里，升级软件的时候没有办法保证所有的节点同时都升级软件。 假设大部分节点升级了软件，少数节点因为种种原因可能没有升级，有可能是还没来得及升级，也可能是不同意对这个协议的修改。即假如你想把协议改成某个样子社区中可能是有人不支持的，这个时候也会出现分叉，这种分叉叫protocol fork(协议分叉)。因为对比特币协议产生了分歧，用不同版本的协议造成的分叉，我们称作protocol fork。 根据对协议修改的内容的不同，我们又可以进一步分成硬分叉和软分叉。出现硬分叉的情况:如果对比特币协议增加一些新的特性，扩展一些新的功能，这些时候那些没有升级软件的这些旧的节点，它是不认可这些新特性的，认为这些特性是非法的，这就属于对比特币协议内容产生了意见分歧，所以会导致分叉。 硬分叉的一个例子就是比特币中的区块大小限制(block size limit)。比特币系统规定每个区块最多是1M字节，有些人认为1M的限制太小了，也增加了交易的延迟。可以计算一下:1M=1百万 一个交易大概认为是250个字节 1百万/250=4000 一个区块大概是4000个交易 平均10分钟出现一个区块 4000/(60×10)=7 大概每秒钟产生7笔交易即7tx/sec 这个传输速度是非常低的。 有人发布一个软件更新，把block size limit从1M增加到4M。假设大多数节点更新这个软件，把block size limit更新到4M，少数节点没有更新。这里的大多数节点和少数节点不是按照账户数目来算的，而是按照算力，即系统中拥有大多数哈希算力的节点都更新了软件。新节点认为区块大小限制是4M，旧节点认为是1M。 如图(第11分第40秒)这时运行系统，会有什么结果?假如一个新节点挖出一个区块，这个区块比较大，但旧节点不认可，它忽略大区块的存在会继续沿着它的前一个小区块接着挖。而旧节点如果挖出了区块新节点是认可的，因为4M的限制指不能超过4M，比4M小是可以的。 那为什么会产生分岔呢?大区块挖出之后，因为大多数区块是更新了的，是认可新的大区块的，所以会沿着它继续挖。只有少数旧节点会接着下面链往下挖，这时新节点认为上下两条链都是合法的，但上面那条是最长合法链，所以会沿着上面一条挖。而且算力足够大会使上面那条链越来越长。而旧节点认为上面的链无论多长都是非法的，它们只会沿着下面的链挖。当然上面的链也可能出现小区块，因为新节点也可能挖出大小不到1M的区块，虽然这种是新旧节点都认可的，但这是没有用的，因为这条链上它们认为有非法的区块。所以这种分叉是永久性的，只要旧节点不更新软件，分叉就不会消失，所以才叫它硬结点。 比特币社区当中有些人是比较保守的，提高block size limit有些人就是不同意。而且区块的大小也不是越大越好，比特币底层系统是个P2P overlay network，它的传播主要采用flooding的方式，所以对带宽的消耗是很大的，带宽是瓶颈。 那么旧节点挖出的小的区块还有没有出块奖励呢？出现hard fork后出现了两条平行运行的链，平行运行链彼此之间有各自的加密货币。下面链的出块奖励在下面链里是认的。而分叉之前的币按道理应该是上下两条链都认可，所以会拆成两部分。 曾经出现过这样的问题:分叉前有A→B的交易，分叉后在上面链出现了B→C，下面链也出现了B→C，因为账户，私钥都是一样的。既然如此，就会有人利用这个特性，想收到上下两条链的转账。但如果没有人转账给他怎么办？ 可以这样做:比如说B去购物，花一笔钱，给了C。后来B要退货，要取消这笔交易，C又把钱交给B。然后B又在下面一条链进行回放，就赚了一笔钱。那么在开始B转给C的交易在下面链会不会回放呢？所以这样做也是有风险的。为了解决这个问题，就让这两条链各带一个chain ID，所以现在以太坊的分叉已经没有问题了，就是两条独立运行的链了。 soft fork:软分叉出现的情况是什么?如果对比特币协议加一些限制，加入限制之后原来合法的交易或区块在新的协议当中有可能变的不是合法了，这就引起软分叉。 假设有人发布一个软件更新，把这个区块大小变小了。调整区块大小不止是改变一个参数那么简单。一个去中心化的系统，改变一个参数，就可能导致分叉，而且取决于这个参数是怎么改的。有可能是硬分叉，有可能是软分叉。这里把区块大小变小只是为了解释软分叉这个概念，实际中是不会这么做的。 假设新节点把区块大小改为0.5M，旧节点依然以1M为准，这时候会出现什么情况？假如一个区块链开始分叉，新节点挖出小区块，这种区块旧节点也是认的。而旧节点挖出的大区块新节点是不认的。这样下去，旧节点看到上面链更长，而且是合法的之后，就会转去挖上面链。 所以为什么称这种分叉是软分叉?因为这种分叉是临时性的。所以旧节点如果不更新软件，它们挖的区块可能就白挖了。旧节点转向上面链挖的话，问题可能又会出现:它们可能又挖出了大区块。而新节点不认这个，新节点会继续沿着大区块前面一个小区块挖，如图(第29分第25秒)所示。 实际中可能出现软分叉的情况:给某些目前协议中没有规定的域增加一些新的含义，赋予它们一些新的规则，典型的例子就是coinbase域。前面讲过每一个发布的区块里可以有一个铸币交易(coinbase transaction)，coinbase transaction里有一个域叫coinbase域，这个域用来干什么是没人规定也没人检查的。 前面讲过coinbase域的一个用途:可以把它作为extra nonce。挖矿的时候要不断调整block header里的nonce，但block header里的nonce只有四个字节，最多只有2的32次方个可能性，所以实际中可以把coinbase前八个字节用来做extra nonce。两个合在一起就成了2的96次方，对于目前的挖矿难度，这个域已经是足够了。但coinbase域不止是八个字节，后面还有很多，剩下的字节有人就提议做UTXO集合的根哈希值。 目前这个集合只是每个全节点自己在内存中维护的，主要是为了快速查找、判断该交易是不是属于double spending，但这个集合的内容并没有写到区块链里，这跟前面讲到的merkle proof是不太一样的。 merkle proof能证明什么？证明某个交易是不是在给定的区块里。比如一个轻节点，没有维护整个区块的内容，只知道block header。轻节点问一个全节点:该交易是不是在这个区块里?全节点返回一个merkle proof作为证明，轻节点就可以验证是否属实。但如果是另外一种情况，想要证明某个账户上有多少钱，这个目前在比特币系统中是证不出来的。如果是全节点还可以算一下，方法如下:想要知道A账户有多少钱，就看一下A在UTXO里对应的输出总共收到多少个币，就是该账户上有多少钱。 对于全节点是可以算出来的，但如果是区块链钱包、有的手机上的APP，它不可能在手机上维护一个完整的区块链，它实际上是个轻节点，它想要知道账户的余额需要询问全节点。全节点返回一个结果，怎么知道这个结果是否属实呢？现在是证不出来的。如果你自己不维护一个UTXO集合，就没法用merkle proof 证出来。 有人提议把UTXO集合当中的内容也组织成一颗merkle tree，这个merkle tree有一个根哈希值，根哈希值写在coinbase域里面。因为block header没法再改了，改block header动静就太大了，coinbase域正好是没人用的，所以就写入UTXO的根哈希值。coinbase域当中的内容最终往上传递的时候会传递到block header里的根哈希值里。所以改coinbase域的内容，根哈希值会跟着改。 因此这个提案就是说把UTXO集合的内容组织成merkle tree，算出一个根哈希值来，写入coinbase域里某个位置。coinbase域的内容本身也会算哈希，算到block header里的根哈希值，这样就可以用merkle proof证出来了。 假设有人发布一个软件更新，规定coinbase域要按照这个要求来填写，大多数节点都升级了软件，少数节点没有更新，这属于软分叉，因为新节点发布的区块旧节点认为是合法的，因为旧节点不管新节点写什么内容。但旧节点发布的区块新节点可能是不认的，因为如果coinbase域不按要求写它是不认的，所以属于软分叉。 比特币历史上比较著名的软分叉的例子是pay to script hash。P2SH这个功能在最初的比特币版本里是没有的，它是后来通过软分叉的功能给加进去的。这是什么意思呢?你支付的时候不是付给一个public key的哈希，而是付给一个赎回脚本的哈希。花钱的时候要把这个交易的输入脚本跟前面币的来源的交易的输出脚本拼接在一起执行。执行的时候验证分为两步，第一步是要验证输入脚本中给出的redeem script跟前面那个输出脚本给出的script的哈希值是对的上的，证明输入脚本里提供的script是正确的。第二步再执行redeem script，来验证输入脚本里给出的签名是合法的。 对于旧节点来说，它不知道P2SH的特性，只会做第一阶段的验证，即验证redeem script是否正确。新节点才会做第二阶段的验证，所以旧节点认为合法的交易新节点可能认为是非法的(如果第二阶段的验证通不过的话)。而新节点认为合法的交易旧节点肯定认为是合法的，因为旧节点只验证第一阶段。 总结:soft fork是什么?只要系统中拥有半数以上算力的节点更新了软件，那么系统就不会出现永久性的分叉，只可能有一些临时性的分叉。hard fork特点是什么？必须是所有的节点都要更新软件，系统才不会出现永久性的分叉，如果有小部分节点不愿意更新，那么系统就会分成两条链。 P11. 11-BTC-问答P12. 12-BTC-匿名性P13. 13-BTC-思考","link":"/blockchain/blockchain-05.html"},{"title":"追剧","text":"[TOC] 动漫 百妖谱 美剧 雪国列车 电影悬疑电影 9.钟表馆事件 8.恶意 7.奇想，天动 6.看不见的客人 5.控方证人 4.X的悲剧 3.罗杰疑案 2.耳语之人 1.高尔夫球场的疑云 韩剧豆瓣评分8.0以上的韩剧（评价人数≥1000）","link":"/todo/%E8%BF%BD%E5%89%A7.html"},{"title":"app to install","text":"[TOC] Volume Styles：个性化你的音量调节面板","link":"/todo/app-to-install.html"},{"title":"万一有 iPhone/iPad 了呢","text":"[TOC] Simple Timers 可同时运行多个计时的 app – Mac玩儿法","link":"/%E4%B8%87%E4%B8%80%E6%9C%89-iPhone-iPad-%E4%BA%86%E5%91%A2.html"},{"title":"docker mindmap[图片版]","text":"[TOC]","link":"/docker%20k8s/docker-mindmap-%E5%9B%BE%E7%89%87%E7%89%88.html"},{"title":"docker","text":"[TOC] docker 服务 端口对应gitlab 8001 yunmusic 8002 portainer 9000 学习资料动手玩Docker - 网易云课堂 Docker 教程 | 菜鸟教程 1.docker 安装Install Docker Engine on CentOS | Docker Documentation MacOS Docker 安装 | 菜鸟教程 Docker 镜像加速 | 菜鸟教程 centos123456789101112131415161718192021222324# 卸载旧版本sudo yum remove docker \\ docker-client \\ docker-client-latest \\ docker-common \\ docker-latest \\ docker-latest-logrotate \\ docker-logrotate \\ docker-engine # 用存储库进行安装# 安装 yum-utils 包(它提供 yum-config-manager 实用工具)并设置稳定存储库sudo yum install -y yum-utilssudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo# 安装 DOCKER 引擎sudo yum install docker-ce docker-ce-cli containerd.io# 验证指纹是否与060A 61c51b558a7f 742B 77AA C52F EB6B 621E 9F35匹配，如果是，接受它# 启动 Dockersudo systemctl start dockersudo docker run hello-world# 开机自启sudo systemctl enable docker 镜像加速 配置文件: /etc/docker/daemon.json 阿里云 ID 见：https://cr.console.aliyun.com/undefined/instances/mirrors 123{ \"registry-mirrors\": [\"https://my-id.mirror.aliyuncs.com\", \"http://hub-mirror.c.163.com\"]} 1234sudo systemctl restart docker# 或者sudo systemctl stop dockersudo systemctl start docker docker info 查看是否生效 docker-composeLinux 需要安装 docker-compose ；Mac win 自带 1234sudo yum install epel-release#sudo pip install docker-compose # 此时 alias 失效pip3 install docker-composedocker-compose version MacMacOS Docker 安装 | 菜鸟教程 从手动下载安装开始看 特慢的 brew 2.docker 操作docker 操作 · 雪之梦技术驿站 查看 docker 容器使用的资源 - sparkdev - 博客园 帮助命令 1docker command --help 运行容器 docker run [OPTIONS] IMAGE [COMMAND] [ARG...] 1docker run -it ubuntu /bin/bash 退出容器 exit 查看容器 1docker ps -a 启动容器 1docker start b750bbbcfd88 容器-container 后台运行 1docker run -itd --name ubuntu-test ubuntu /bin/bash 停止容器 12docker stop &lt;容器 ID&gt;docker kill &lt;容器 ID&gt; # 强制停止 重启容器 1docker restart &lt;容器 ID&gt; 进入容器 docker attach 和 docker exec 1docker attach 1e560fca3906 注意: 如果从这个容器退出,会导致容器的停止. 1docker exec -it 243c32535da7 /bin/bash 导出容器 1docker export 1e560fca3906 &gt; ubuntu.tar 导入容器 1docker import - test/ubuntu:v1 删除容器 1docker rm -f 1e560fca3906 清理掉所有处于终止状态的容器 1docker container prune 端口映射 ？ 1docker port bf08b7f2cd89 查看容器日志 1docker logs -f bf08b7f2cd89 查看容器进程 1docker top wizardly_chandrasekhar 镜像操作 列出镜像 1docker images 下载镜像 1docker pull 查找镜像 1docker search httpd 删除镜像 1docker rmi hello-world 创建镜像 1docker commit -m=\"updated\" -a=\"snowdreams1006\" eb3c83541f05 snowdreams1006/ubuntu 构建镜像 12345678910FROM centos:6.7MAINTAINER Fisher &quot;fisher@sudops.com&quot;RUN /bin/echo 'root:123456' |chpasswdRUN useradd runoobRUN /bin/echo 'runoob:123456' |chpasswdRUN /bin/echo -e &quot;LANG=\\&quot;en_US.UTF-8\\&quot;&quot; &gt;/etc/default/localEXPOSE 22EXPOSE 80CMD /usr/sbin/sshd -D Dockerfile 1docker build -t runoob/centos:6.7 . 设置镜像标签 1docker tag 860c279d2fec runoob/centos:dev web 应用 随机映射 1docker run -d -P training/webapp python app.py 指定端口 1docker run -d -p 5000:5000 training/webapp python app.py 指定地址 1docker run -d -p 127.0.0.1:5001:5000 training/webapp python app.py 容器互联 命名容器 1docker run -d -P --name runoob training/webapp python app.py 新建网络 1docker network create -d bridge test-net 连接容器 1docker run -itd --name test1 --network test-net ubuntu /bin/bash sudo docker logs -f -t –tail 10 s12 常用操作(我用过的操作)： 命令 用途 docker ps -a 查看所有容器 docker stop xxx 停止容器 docker restart xxx 重启容器 docker container prune 清除所有停止的容器 -p outDocker:inDocker 端口映射 docker stats 类似top, 查看各个容器的 CPU mem 占用情况（为什么不是 states） docker stats –no-stream 查看一次 docker images 查看所有 image docker log -f xxxxx 查看容器日志 docker rmi xx 删除 image 容器资源限制：内存、CPU、带宽Docker - 常用命令汇总2（容器资源限制：内存、CPU、带宽） 一、内存限额1，参数说明2，使用样例二、CPU 限额1，参数说明2，使用样例三、Block IO 宽带限额1，block io 权重2，限制 bps 和 iops DockerizeBetter Docker experience with Dockerize 假设有docker-compose.yml内容如下： 12345678910version: '2'services: database: image: postgres application: image: registry.example.com/our-application command: node ports: - 80:80 文件没问题，但是逻辑有问题，node 应用依赖于 database，有一定几率 node 启动失败 解决办法，使用 dockerize 在 dockerfile 里添加： 1234ENV DOCKERIZE_VERSION v0.4.0RUN wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\ &amp;&amp; tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\ &amp;&amp; rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz 修改 docker-compose.yml 123456services: ... application: image: registry.example.com/our-application command: dockerize -wait tcp://database:5432 node ... 更多用法、参数 1234567891011121314151617# redirect files to stdout and stderrdockerize \\ -stdout info.log \\ -stdout perf.log \\ ...# wait for 2 services with 10s timeoutdockerize \\ -wait tcp://db:5432 \\ -wait http://web:80 \\ -timeout 10s \\ ...# template optiondockerize \\ -template nginx.tmpl:nginx.conf \\ ... docker django eselasticsearch - Docker Hub Install Elasticsearch with Docker | Elasticsearch Reference [7.5] | Elastic *docker save和docker export的区别总结一下docker save和docker export的区别： docker save保存的是镜像（image），docker export保存的是容器（container）；docker load用来载入镜像包，docker import用来载入容器包，但两者都会恢复为镜像；docker load不能对载入的镜像重命名，而docker import可以为镜像指定新名称。 3.docker gitlab :8001主要看 gitlab 官方文档 GitLab Docker images | GitLab docker + gitlab · 雪之梦技术驿站docker下gitlab安装配置使用(完整版) - 简书 通过 docker 搭建自用的 gitlab 服务 - 掘金使用 Dockcer-Compose 安装 Gitlab 服务 | Michael翔sameersbn/docker-gitlab: Dockerized GitLab For Linux users set the path to /srv export GITLAB_HOME=/srv For Mac OS users, use the user’s $HOME folder. export GITLAB_HOME=$HOME 123456789101112export GITLAB_HOME=/srv# export GITLAB_HOME=$HOMEsudo docker run --detach \\ --hostname gitlab.zronghui.com \\ --publish 443:443 --publish 8001:80 \\ --name gitlab \\ --restart always \\ -m 500M \\ --volume $GITLAB_HOME/gitlab/config:/etc/gitlab \\ --volume $GITLAB_HOME/gitlab/logs:/var/log/gitlab \\ --volume $GITLAB_HOME/gitlab/data:/var/opt/gitlab \\ gitlab/gitlab-ce:latest 由于某些疏忽，Mac 和服务器的 gitlab home都为空 所以： 123456789sudo docker run --detach \\ --hostname gitlab.zronghui.com \\ --publish 443:443 --publish 8001:80 \\ --name gitlab \\ --restart always \\ --volume /gitlab/config:/etc/gitlab \\ --volume /gitlab/logs:/var/log/gitlab \\ --volume /gitlab/data:/var/opt/gitlab \\ gitlab/gitlab-ce:latest mem 占用过高问题解决：然而并没有解决，启动不了，而且 mem 占用仍然很高，差点的服务器跑不起来 git - High memory usage for Gitlab CE - Stack OverflowReducing the amount of memory used by gitlab - Ed Spencer - Performance obsessive web developer【Git学习】解决GitLab内存消耗大的问题_运维_欧阳鹏-CSDN博客 vim /gitlab/config/gitlab.rb 123456# 去除注释unicorn['worker_processes'] = 2 # 最低为 2postgresql['shared_buffers'] = \"256MB\"postgresql['max_worker_processes'] = 1 # 默认为 8sidekiq['concurrency'] = 1 # 默认为 25prometheus_monitoring['enable'] = false 之后执行 12docker exec -it gitlab gitlab-ctl reconfiguredocker exec -it gitlab gitlab-ctl restart 等待3分钟，访问 127.0.0.1:8001 ,设置 root 密码 添加 group，添加用户，将用户添加到 group 里，创建 group 的项目 我感觉可以直接创建 root 的项目，反正是自己一个人使用 语言设置： 添加本地已有仓库1234567git remote add gitlab http://47.93.53.47:8001/group1/zronghui_xxxtgit push -u gitlab mastercot .git/config[remote \"origin\"] 下面添加 gitlab 的 URL:url = http://47.93.53.47:8001/group1/zronghui_xxxt 4. 解锁网易云灰色歌曲 :8002nondanee/UnblockNeteaseMusic: Revive unavailable songs for Netease Cloud Music 进阶配置 · Issue #48 · nondanee/UnblockNeteaseMusic食用指南 · Issue #22 · nondanee/UnblockNeteaseMusic全端通用方案搭建教程 · Issue #527 · nondanee/UnblockNeteaseMusic 1docker run -d --restart always --name yunmusic -p 8002:8080 nondanee/unblockneteasemusic 小爱 淘宝 不经过代理设置： cnbj1.fds.api.xiaomi.com,file.ai.xiaomi.com,resolver.mi.xiaomi.com,access.speech.ai.xiaomi.com,data.mistat.xiaomi.com,tracker.ai.xiaomi.com,account.ai.xiaomi.com,query-suggestion.ai.xiaomi.com,trade-acs.m.taobao.com,guide-acs.m.taobao.com 想设置更多网址，可以查看日志文件，然后请求资源，记录转发的域名 不知为何，直接设置 xiaomi.com 没有生效 5. rsshub :1200DIYgod/RSSHub: 🍰 Everything is RSSible介绍 | RSSHub 部署 | RSSHub 部分RSS需要单独配置后方可生成，如 pixiv、disqus、twitter、youtube、telegram、github 123456789101112mcd rsshubwget https://raw.githubusercontent.com/DIYgod/RSSHub/master/docker-compose.ymldocker-compose up -d# 启动成功，但是外网无法访问git clone https://github.com/DIYgod/RSSHub.git# 或者只下载项目下的 lib/middleware/header.jsvim lib/middleware/header.js# 将 allow-origin 改为 0.0.0.0# 'Access-Control-Allow-Origin': '0.0.0.0',docker cp lib/middleware/header.js 8c144637ddef:/app/lib/middleware/docker restart 8c144637ddef 6. gogsGogs: A painless self-hosted Git servicegogs/gogs: Gogs is a painless self-hosted Git service阿里云Linux CentOS 7 Docker部署使用gogs搭建自己的git服务器 - DonaldTDZ - 博客园 1234docker pull gogs/gogsmkdir -p /var/gogsdocker run --name=gogs -p 10022:22 -p 10080:3000 -v /var/gogs:/data gogs/gogs# 阿里云需要在安全组规则配置入站规则，即服务器端口10080， ssh端口10022 更多类似项目：cgit: “A hyperfast web frontend for git repositories written in C.” GPLv2 Homepage Source C Gitea: “Gitea is a community managed fork of Gogs, lightweight code hosting solution written in Go and published under the MIT license.” MIT Homepage Source *Go*, SQLite3 GitLab: “Open source software to collaborate on code.” GitLab license Homepage Source Ruby, *Javascript* gitolite: “Gitolite allows you to setup git hosting on a central server, with very fine-grained access control and many (many!) more powerful features.” GPLv2 Homepage Source Perl, Shell Gogs: “A painless self-hosted Git service.” MIT Homepage Source *Go*, SQLite3 Phabricator: “Phabricator is a collection of web applications which help software companies build better software.” Apache 2.0 Homepage Source PHP, supports Git, Mercurial, and Subversion Docker + Spring Boot: 快速搭建和部署Java Web应用bingohuang/spring-boot-docker: 《动手玩Docker》示例代码：Docker + Spring Boot: 快速搭建和部署Java Web应用 0、你需要： JDK 1.8 : java -version Maven 3.0+ : mvn -v Git : git –version Source Code : https://github.com/bingoHuang/spring-boot-docker Docker : docker version docker-machine ls docker-machine start docker-machine env eval $(docker-machine env) 1、Maven编译工程 下载源码到本地，进入工程目录，执行maven编译 git clone https://github.com/bingoHuang/spring-boot-docker.git cd spring-boot-docker tree1234567891011121314151617项目结构：├── README.md├── pom.xml└── src ├── main │ ├── docker │ │ ├── Dockerfile │ │ └── gs-spring-boot-docker-0.1.0.jar │ ├── java │ │ └── hello │ │ └── Application.java │ └── resources │ └── application.yml └── test └── java └── hello └── HelloWorldConfigurationTests.java mvn package2、测试Jar包执行 执行生成的jar包，运行spring boot应用 java -jar target/gs-spring-boot-docker-0.1.0.jar3、验证本地运行是否可以访问成功 命令行下访问：curl http://127.0.0.1:8080/ 浏览器中访问：http://127.0.0.1:8080/ 4、编写Dockerfile文件 进入到源码的docker目录下，编写Dockerfile文件 mkdir spring-boot-docker cd spring-boot-docker 拷贝编译好的gs-spring-boot-docker-0.1.0.jar到当前目录，和Dockerfile放在同一目录 # 编写Dockerfile文件 FROM hub.c.163.com/xbingo/jdk8:latest ADD gs-spring-boot-docker-0.1.0.jar app.jar CMD [&quot;java&quot;,&quot;-jar&quot;,&quot;/app.jar&quot;]5、构建Dockerfile docker build -t cloudcomb/springbootdocker:1.0 .6、查看构建的镜像 docker images REPOSITORY TAG IMAGE ID CREATED SIZE cloudcomb/springbootdocker 1.0 c5a57ce057e7 About a minute ago 180.8 MB7、运行docker容器 docker run -p 8081:8080 -t cloudcomb/springbootdocker:1.0 docker ps8、验证Docker容器运行是否可以访问成功 新建一个命令行tag：command+T 命令行下访问：curl http://192.168.99.100:8081 浏览器中访问：http://192.168.99.100:8081 Nginx网址：https://hub.docker.com/_/nginx/ nginx - Docker Hub 12345678910111213141516171819202122# 拉取docker pull nginx# 运行docker run -di --name nginx -p 80:80 nginx# 静态资源放入 nginx 中 /usr/share/nginx/html 目录下# Hosting some simple static content# 1.-v /some/content:/usr/share/nginx/html:ro# 2.FROM nginxCOPY static-html-directory /usr/share/nginx/html# Complex configuration# 1.-v /host/path/nginx.conf:/etc/nginx/nginx.conf:ro# 2.docker run --name tmp-nginx-container -d nginxdocker cp tmp-nginx-container:/etc/nginx/nginx.conf /host/path/nginx.conf# 3.FROM nginxCOPY nginx.conf /etc/nginx/nginx.conf 其他 NGINX image nginxdemos/nginx-hello - Docker Hubjwilder/nginx-proxy - Docker Hub 12 minio1234567docker run -it -d --restart always -p 9000:9000 --name minio \\ -e \"MINIO_ACCESS_KEY=minio\" \\ -e \"MINIO_SECRET_KEY=miniosecret\" \\ -v /home/zhang/minio/data:/data:z \\ -v /home/zhang/minio/config:/root/.minio:z \\ --restart=always \\ minio/minio server /data http://10.103.242.60:9000/ http://10.103.242.76:9000/ Can’t mount host data directory to minio server docker container · Issue #6237 · minio/minio 报错 123Created minio configuration file successfully at /root/.minio ERROR Unable to initialize backend: Unable to write to the backend. &gt; Please ensure Minio binary has write permissions for the backend. 解决 For Project Atomic you can also set append :z or :Z to the have SElinux allow writing to the container: docker run -p 9000:9000 –name minio1-v /mnt/data:/data:zminio/minio server /data More info at:https://www.projectatomic.io/blog/2016/03/dwalsh_selinux_containers/ 8.可以部署在 docker 里的工具记账 budgetrange-of-motion/budget: Get a grip on your finances. Dashboard - Budget 9.Django 工具kitematic – Mac管理 dockerportainer – 在网页端远程管理 dockerportainer/portainer: Making Docker management easy. 12docker volume create portainer_datadocker run -d -p 9000:9000 -p 8000:8000 --name portainer --restart always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer 启动起来后，开启 9000 端口，然后在本地： 访问 http://47.93.53.47:9000/ 设置密码，选择 Local–Manage the local Docker environment 推荐5款好用的开源Docker工具 - InfoQ watchtower ：自动更新 Docker 容器docker-gc ：容器和镜像的垃圾回收docker-slim ：面向容器的神奇减肥药rocker ：突破 Dockerfile 的限制ctop：容器的类顶层接口 docker-squashjwilder/docker-squash: Squash docker images to make them smaller **常用的Docker汇总一下我常用的Docker镜像以及说明 - 矿渣社区 - 其他系统 - 软件专区 google 更多 CentOS6 12345678910镜像：treasureboat/ssh用户名：root密码：123456建站的，配合这个脚本超好用：yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install.sh &amp;&amp; sh install.sh##该镜像安装aria的步骤为：wget http://ftp.tu-chemnitz.de/pub/linux/dag/redhat/el6/en/x86_64/rpmforge/RPMS/rpmforge-release-0.5.3-1.el6.rf.x86_64.rpm rpm -ivh rpmforge-release-0.5.3-1.el6.rf.x86_64.rpm yum -y install aria2 Ubuntu18 123镜像：rastasheep/ubuntu-sshd用户名：root密码：root 宝塔面板 123镜像：tangniyuqi/baota用户名：admin密码：admin123 Debian 123镜像：hklcf/debian-ssh-docker用户名: root密码：password Centos 123456tutum/centos:latest .tutum/centos:centos5 centos5tutum/centos:centos6 centos6tutum/centos:centos7 centos7用户名：root密码随机，在docker日志中查看密码 OwnCloud 123镜像：imdjh/owncloud-with-ocdownloader端口：80就是owncloud peerflix-server（磁力下载工具） 12镜像：fish/peerflix-server端口：9000 Owncloud（可以启用外部存储并具有下载功能） 12镜像：limaofeng/owncloud-with-ocdownloader端口：80 chrome浏览器 12345镜像：consol/centos-xfce-vnc #（支持中文）consol/ubuntu-xfce-vnc #（不支持中文）密码：vncpassword端口：5901 xware-kodexplorer 123镜像：mrlyc/xware-kodexplorer端口：80初始账号密码：admin 宝塔面板 123镜像：tangniyuqi/baota用户名：admin密码：admin123 tomcat网址：https://hub.docker.com/_/tomcat/ 1234# 拉取docker pull tomcat# 运行docker run -di --name tomcat -p 8081:8080 tomcat Nginx网址：https://hub.docker.com/_/nginx/ 12345# 拉取docker pull nginx# 运行docker run -di --name nginx -p 80:80 nginx# 静态资源放入 nginx 中 /usr/share/nginx/html 目录下 MySQL网址：https://hub.docker.com//mysql_/ 1234#拉取docker pull mysql# 运行docker run --name mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=ROOT_Password -d mysql MySQL 连接问题 12345问题：Client does not support authentication protocol requested by server; consider upgrading MySQL client解决方案：进入容器内，登录容器内的MySQL，在SQL中执行以下命令即可：alter user 'root'@'%' identified with mysql_native_password by '19491001';FLUSH PRIVILEGES; Oracle网址：https://hub.docker.com/r/wnameless/oracle-xe-11g/ 1234# 拉取docker pull wnameless/oracle-xe-11g# 运行，默认账号 system，默认密码 oracle，-e 允许远程连接docker run -d --name oracle -p 49161:1521 -e ORACLE_ALLOW_REMOTE=true wnameless/oracle-xe-11g Redis网址：https://hub.docker.com//redis_/ 1234567# 拉取docker pull redis# 运行## 无密码运行docker run -d --name redis -p 6379:6379 redis## 有密码运行docker run -d --name redis10 -p 6379:6379 redis --requirepass 19491001 docker 安装 redis 以及配置连接Redis - Docker —— 从入门到实践 123456789docker run -d \\--restart always \\-p 6379:6379 \\-v /home/wang/redis/redis.conf:/etc/redis/redis.conf \\-v /home/wang/redis/data:/data \\--privileged=true \\--name redis \\redis \\redis-server /etc/redis/redis.conf MongoDB网址：https://hub.docker.com/_/mongo/ 1234567# 拉取docker pull mongo# 运行## 无账号密码运行docker run -d --name mongo -p 27017:27017 mongo## 账号密码运行docker run -d --name mongo -p 27017:27017 -e MONGO_INITDB_ROOT_USERNAME=mongo -e MONGO_INITDB_ROOT_PASSWORD=19491001 mongo Gitlab网址：https://hub.docker.com/r/gitlab/gitlab-ce/ 12345678# 使用 docker 拉取 gitlab 镜像docker pull gitlab/gitlab-ce# 运行 giltab 镜像docker run -di --name=gitlab-ce -p 7000:80 gitlab/gitlab-ce# 进入 gitlab 容器中docker exec -it gitlab-ce /bin/bash# 执行 giltab 配置,访问 http://IP:7000 即可，首次访问需要配置 root 密码gitlab-ctl reconfigure JenkinsDockerHub 官网：https://hub.docker.com/_/jenkins/ 使用： 1234# 拉取docker pull jenkins# 运行docker run -di --name simbajenkins -p 7000:8080 -p 50000:50000 jenkins RancherDockerHub 官网：https://hub.docker.com/r/rancher/server/ 使用： 1234# 拉取docker pull rancher/server# 运行docker run -di --name simbarancher -p 7001:8080 rancher/server 参考、学习资料wsargent/docker-cheat-sheet: Docker Cheat Sheetveggiemonk/awesome-docker: A curated list of Docker resources and projectsyeasy/docker_practice: Learn and understand Docker technologies, with real DevOps practice! 谁在运行我的Kubernetes Pod？容器运行时的过去、现在和未来 - InfoQ docker 操作 · 雪之梦技术驿站docker compose · 雪之梦技术驿站 Docker Compose | 菜鸟教程 How to set an environment variable in a running docker containerhow to set env while running - Google 搜索How to set an environment variable in a running docker container - Stack Overflow","link":"/docker%20k8s/docker.html"},{"title":"k8s","text":"[TOC] 学习**从零开始入门 K8s任务 - Kubernetes K8s 资源全汇总 | K8s 大咖带你 31 堂课从零入门 K8s - 掘金 课时3. k8s 核心概念核心功能调度、自动修复、水平伸缩 服务的发现与负载的均衡；容器的自动装箱–scheduling–调度，把一个容器放到一个集群的某一个机器上，Kubernetes 会帮助我们去做存储的编排，让存储的声明周期与容器的生命周期能有一个连接；自动化的容器的恢复。在一个集群中，经常会出现宿主机的问题或者说是 OS 的问题，导致容器本身的不可用，Kubernetes 会自动地对这些不可用的容器进行恢复；Kubernetes 会帮助我们去做应用的自动发布与应用的回滚，以及与应用相关的配置密文的管理；对于 job 类型任务，Kubernetes 可以去做批量的执行；为了让这个集群、这个应用更富有弹性，Kubernetes 也支持水平的伸缩。 Kubernetes 的架构 核心概念 一个比较有意思的 metadata 叫做“label” 这些 label 是可以被 selector，也就是选择器所查询的。这个能力实际上跟我们的 sql 类型的 select 语句是非常相似的 课时4. Pod 与容器设计模式从零入门 K8s| 人人都能看懂 Pod 与容器设计模式 为什么需要 Pod容器的基本概念 容器的本质实际上是一个进程，是一个视图被隔离，资源受限的进程。很多人都说 Kubernetes 是云时代的操作系统，这个非常有意思，因为如果以此类推，容器镜像就是这个操作系统的软件安装包。 真实操作系统里的例子 如果说 Kubernetes 就是操作系统的话，那么不妨看一下真实的操作系统的例子。 例子里面有一个程序叫做 Helloworld，这个 Helloworld 程序实际上是由一组进程组成的，需要注意一下，这里说的进程实际上等同于 Linux 中的线程。 因为 Linux 中的线程是轻量级进程，所以如果从 Linux 系统中去查看 Helloworld 中的 pstree，将会看到这个 Helloworld 实际上是由四个线程组成的，分别是 {api、main、log、compute}。也就是说，四个这样的线程共同协作，共享 Helloworld 程序的资源，组成了 Helloworld 程序的真实工作情况。 这是操作系统里面进程组或者线程组中一个非常真实的例子，以上就是进程组的一个概念。 在真实的操作系统里面，一个程序往往是根据进程组来进行管理的。Kubernetes 把它类比为一个操作系统，比如说 Linux。针对于容器我们前面提到可以类比为进程，就是前面的 Linux 线程。那么 Pod 又是什么呢？实际上 Pod 就是我们刚刚提到的进程组，也就是 Linux 里的线程组。 进程组概念 若为了管理很多个进程，直接把容器里 PID=1 的进程直接改成 systemd，那么会有一些问题： 首先，PID=1 进程是应用本身，如果现在把这个 PID=1 的进程给 kill 了，或者它自己运行过程中死掉了，那么剩下三个进程的资源就没有人回收了。 其次，不能知道应用是不是退出，fail， 异常 Pod = “进程组” 在 Kubernetes 里面，Pod 实际上正是 Kubernetes 项目为你抽象出来的一个可以类比为进程组的概念。 Pod 在 Kubernetes 里面只有一个逻辑单位，没有一个真实的东西对应说这个就是 Pod。 真正起来在物理上存在的东西，就是容器 为什么 Pod 必须是原子调度单位？ 为了解决Task co-scheduling 问题，具体分析过程见原文 再次理解 Pod Pod 里面的容器是“超亲密关系” 超亲密关系大概分为以下几类： 比如说两个进程之间会发生文件交换，前面提到的例子就是这样，一个写日志，一个读日志； 两个进程之间需要通过 localhost 或者说是本地的 Socket 去进行通信，这种本地通信也是超亲密关系； 这两个容器或者是微服务之间，需要发生非常频繁的 RPC 调用，出于性能的考虑，也希望它们是超亲密关系； 两个容器或者是应用，它们需要共享某些 Linux Namespace。最简单常见的一个例子，就是我有一个容器需要加入另一个容器的 Network Namespace。这样我就能看到另一个容器的网络设备，和它的网络信息。 Pod 要解决的问题 具体的解法分为两个部分：网络和存储 共享网络 比如说现在有一个 Pod，其中包含了一个容器 A 和一个容器 B，它们两个就要共享 Network Namespace。在 Kubernetes 里的解法是这样的：在每个 Pod 里，额外起一个 Infra container 小容器来共享整个 Pod 的 Network Namespace。（Infra container 是一个非常小的镜像，大概 100~200KB 左右。所以说一个 Pod 里面的所有容器，它们看到的网络视图是完全一样的。即：它们看到的网络设备、IP地址、Mac地址等等，跟网络相关的信息，其实全是一份） 所以整个 Pod 里面，必然是 Infra container 第一个启动。并且整个 Pod 的生命周期是等同于 Infra container 的生命周期的，与容器 A 和 B 是无关的。这也是为什么在 Kubernetes 里面，它是允许去单独更新 Pod 里的某一个镜像的，即：做这个操作，整个 Pod 不会重建，也不会重启，这是非常重要的一个设计。 共享存储 比如说现在有两个容器，一个是 Nginx，另外一个是非常普通的容器，在 Nginx 里放一些文件，让我能通过 Nginx 访问到。所以它需要去 share 这个目录。我 share 文件或者是 share 目录在 Pod 里面是非常简单的，实际上就是把 volume 变成了 Pod level。然后所有容器，就是所有同属于一个 Pod 的容器，他们共享所有的 volume。 详解容器设计模式举例 有一个 WAR 包需要把它放到 Tomcat 的 web APP 目录下面，这样就可以把它启动起来了。可是像这样一个 WAR 包或 Tomcat 这样一个容器的话，怎么去做，怎么去发布 第一种方式：可以把 WAR 包和 Tomcat 打包放进一个镜像里面。但是这样带来一个问题，就是现在这个镜像实际上揉进了两个东西。那么接下来，无论是我要更新 WAR 包还是说我要更新 Tomcat，都要重新做一个新的镜像，这是比较麻烦的； 第二种方式：就是镜像里面只打包 Tomcat。它就是一个 Tomcat，但是需要使用数据卷的方式，比如说 hostPath，从宿主机上把 WAR 包挂载进我们 Tomcat 容器中，挂到我的 web APP 目录下面，这样把这个容器启用起来之后，里面就能用了。 InitContainer 在上图的 yaml 里，首先定义一个 Init Container，它只做一件事情，就是把 WAR 包从镜像里拷贝到一个 Volume 里面，它做完这个操作就退出了，所以 Init Container 会比用户容器先启动，并且严格按照定义顺序来依次执行 容器设计模式：Sidecar 在 Pod 里面，可以定义一些专门的容器，来执行主业务容器所需要的一些辅助工作，比如我们前面举的例子，其实就干了一个事儿，这个 Init Container，它就是一个 Sidecar，它只负责把镜像里的 WAR 包拷贝到共享目录里面，以便被 Tomcat 能够用起来。 Sidecar：应用与日志收集 业务容器将日志写在一个 Volume 里面,Sidecar 容器一定可以通过共享该 Volume，直接把日志文件读出来，然后存到远程存储里面，或者转发到另外一个例子 Sidecar：代理容器 单独写一个小的 Proxy，用来处理对接外部的服务集群，它对外暴露出来只有一个 IP 地址就可以了。所以接下来，业务容器主要访问 Proxy，然后由 Proxy 去连接这些服务集群 Sidecar：适配器容器 有个例子：现在业务容器暴露出来的监控接口是 /metrics，访问这个容器的 metrics 的 URL 就可以拿到了。可是现在，这个监控系统升级了，它访问的 URL 是 /health，我只认得暴露出 health 健康检查的 URL，才能去做监控，metrics 不认识。那这个怎么办？那就需要改代码了，但可以不去改代码，额外写一个 Adapter，用来把所有对 health 的这个请求转发给 metrics 就可以了，所以这个 Adapter 对外暴露的是 health 这样一个监控的 URL，这就可以了，你的业务就又可以工作了。 课时5. 应用编排与管理(一)：核心原理资源元信息元数据 包括 labels annotations owereference, 常用命令： 12345678910111213141516171819202122232425262728# 查看所有 podskubectl get podskubectl apply -f pod1.yamlkubectl apply -f pod2.yaml# 查看所有 pods, 并且显示 labelskubectl get pods —show-labelskubectl get pods nginx1 -o yaml | less# 增 labelkubectl label pods nginx1 env=test# 改 labelkubectl label pods nginx1 env=test —overwritekubectl get pods —show-labels# 删 labelkubectl label pods nginx tie-kubectl get pods —show-labels# 查 labelkubectl get pods —show-labels -l env=testkubectl get pods —show-labels -l env=test,env=dev # , 与 的关系kubectl get pods —show-labels -l env=dev,tie=frontkubectl get pods —show-labels -l ’env in (dev,test)’# 增加 annotationkubectl annotate pods nginx1 my-annotate=‘my annotate,ok’kubectl get pods nging1 -o yaml | lesskubectl apply -f rs.yamlkubectl get replicasets nginx-replicasets -o yaml |lesskubectl get podskubectl get pods nginx-replicasets-rhd68 -o yaml | less 控制器模式 控制循环 Sensor 控制循环例子-扩容 没看懂 总结： 两种 API 设计方法 Kubernetes 控制器模式依赖声明式的 API。另外一种常见的 API 类型是命令式 API。为什么 Kubernetes 采用声明式 API，而不是命令式 API 来设计整个控制器呢？ 首先，比较两种 API 在交互行为上的差别。在生活中，常见的命令式的交互方式是家长和孩子交流方式，因为孩子欠缺目标意识，无法理解家长期望，家长往往通过一些命令，教孩子一些明确的动作，比如说：吃饭、睡觉类似的命令。我们在容器编排体系中，命令式 API 就是通过向系统发出明确的操作来执行的。 而常见的声明式交互方式，就是老板对自己员工的交流方式。老板一般不会给自己的员工下很明确的决定，实际上可能老板对于要操作的事情本身，还不如员工清楚。因此，老板通过给员工设置可量化的业务目标的方式，来发挥员工自身的主观能动性。比如说，老板会要求某个产品的市场占有率达到 80%，而不会指出要达到这个市场占有率，要做的具体操作细节。 类似的，在容器编排体系中，我们可以执行一个应用实例副本数保持在 3 个，而不用明确的去扩容 Pod 或是删除已有的 Pod，来保证副本数在三个。 命令式 API 的问题 控制器模式总结 控制型模式中最核心的就是控制循环的概念； 两种 API 设计方法：声明式 API 和命令式 API ；Kubernetes 所采用的控制器模式，是由声明式 API 驱动的。 课时6. 应用编排与管理(二)：Deployment一、需求来源Deployment：管理部署发布的控制器 Deployment 能帮我们做什么事情呢？ 首先，Deployment 定义了一种 Pod 期望数量，比如说应用 A，我们期望 Pod 数量是四个，那么这样的话，controller 就会持续维持 Pod 数量为期望的数量。当我们与 Pod 出现了网络问题或者宿主机问题的话，controller 能帮我们恢复，也就是新扩出来对应的 Pod，来保证可用的 Pod 数量与期望数量一致；配置 Pod 发布方式，也就是说 controller 会按照用户给定的策略来更新 Pod，而且更新过程中，也可以设定不可用 Pod 数量在多少范围内；如果更新过程中发生问题的话，即所谓“一键”回滚，也就是说你通过一条命令或者一行修改能够将 Deployment 下面所有 Pod 更新为某一个旧版本 。 二、用例解读Deployment 语法 “apiVersion：apps/v1”，也就是说 Deployment 当前所属的组是 apps，版本是 v1 Deployment.spec 中首先要有一个核心的字段，即 replicas，这里定义期望的 Pod 数量为三个；selector 其实是 Pod 选择器，那么所有扩容出来的 Pod，它的 Labels 必须匹配 selector 层上的 image.labels，也就是 app.nginx MinReadySeconds：Deployment 会根据 Pod ready 来看 Pod 是否可用，ready 的 Pod 不一定是 available 的，它一定要超过 MinReadySeconds 之后，才会判断为 available； revisionHistoryLimit：保留历史 revision，即保留历史 ReplicaSet 的数量，默认值为 10 个。这里可以设置为一个或两个，如果回滚可能性比较大的话，可以设置数量超过 10； paused：paused 是标识，Deployment 只做数量维持，不做新的发布，这里在 Debug 场景可能会用到； progressDeadlineSeconds：前面提到当 Deployment 处于扩容或者发布状态时，它的 condition 会处于一个 processing 的状态，processing 可以设置一个超时时间。如果超过超时时间还处于 processing，那么 controller 将认为这个 Pod 会进入 failed 的状态。 升级策略字段解析 Deployment 在 RollingUpdate 中主要提供了两个策略，一个是 MaxUnavailable，另一个是 MaxSurge。这两个字段解析的意思，可以看下图中详细的 comment，或者简单解释一下： MaxUnavailable：滚动过程中最多有多少个 Pod 不可用； MaxSurge：滚动过程中最多存在多少个 Pod 超过预期 replicas 数量。 MaxSurge 和 MaxUnavailable 不能同时为 0。 查看 Deployment 状态 kubectl get deployment 查看 Pod Pod 名字格式我们不难看到。 最前面一段：nginx-deployment，其实是 Pod 所属 Deployment.name；中间一段：template-hash，这里三个 Pod 是一样的，因为这三个 Pod 其实都是同一个 template 中创建出来的。最后一段，是一个 random 的字符串 更新镜像 kubectl set image deployment.v1.apps/nginx-deployment nginx=nginx:1.9.1 首先 kubectl 后面有一个 set image 固定写法，这里指的是设定镜像；其次是一个 deployment.v1.apps，这里也是一个固定写法，写的是我们要操作的资源类型，deployment 是资源名、v1 是资源版本、apps 是资源组，这里也可以简写为 deployment 或者 deployment.apps，比如说写为 deployment 的时候，默认将使用 apps 组 v1 版本。第三部分是要更新的 deployment 的 name，也就是我们的 nginx-deployment；再往后的 nginx 其实指的是 template，也就是 Pod 中的 container.name；这里我们可以注意到：一个 Pod 中，其实可能存在多个 container，而我们指定想要更新的镜像的 container.name，就是 nginx。最后，指定我们这个容器期望更新的镜像版本，这里指的是 nginx: 1.9.1。如下图所示：当执行完这条命令之后，可以看到 deployment 中的 template.spec 已经更新为 nginx: 1.9.1。 快速回滚 DeploymentStatus Processing 指的是 Deployment 正在处于扩容和发布中。比如说 Processing 状态的 deployment，它所有的 replicas 及 Pod 副本全部达到最新版本，而且是 available，这样的话，就可以进入 complete 状态。而 complete 状态如果发生了一些扩缩容的话，也会进入 processing 这个处理工作状态。 如果在处理过程中遇到一些问题：比如说拉镜像失败了，或者说 readiness probe 检查失败了，就会进入 failed 状态；如果在运行过程中即 complete 状态，中间运行时发生了一些 pod readiness probe 检查失败，这个时候 deployment 也会进入 failed 状态。进入 failed 状态之后，除非所有点 replicas 均变成 available，而且是 updated 最新版本，deployment 才会重新进入 complete 状态。 三、操作演示略 四、架构设计管理模式 课时7. 应用编排与管理(三)：Job &amp; DaemonSetJobJob 为我们提供的功能 它可以创建一个或多个 Pod 来指定 Pod 的数量，并可以监控它是否成功地运行或终止； 我们可以根据 Pod 的状态来给 Job 设置重置的方式及重试的次数； 我们还可以根据依赖关系，保证上一个任务运行完成之后再运行下一个任务； 同时还可以控制任务的并行度，根据并行度来确保 Pod 运行过程中的并行次数和总体完成大小。 Job 语法 上图是 Job 最简单的一个 yaml 格式，这里主要新引入了一个 kind 叫 Job，这个 Job 其实就是 job-controller 里面的一种类型。 然后 metadata 里面的 name 来指定这个 Job 的名称，下面 spec.template 里面其实就是 pod 的 spec。 所以在 Job 里面，我们主要重点关注的是 restartPolicy 重启策略和 backoffLimit 重试次数限制。 Never、OnFailure、Always Job 状态 Job 创建完成之后，我们就可以通过 kubectl get jobs 这个命令，来查看当前 job 的运行状态。得到的值里面，基本就有 Job 的名称、当前完成了多少个 Pod 以及运行了多长时间。 查看 Pod kubectl get pods kubectl get pods pi-4cids -o yaml Pod 的名称会以“${job-name}-${random-suffix}” 并行运行 Job 主要看两个参数：一个是 completions，一个是 parallelism 分别含义为： Job 指定的可以运行的总次数 、 并行执行的个数 比如说 Job 一定要执行 8 次（completions），每次并行 2 个 Pod（parallelism），这样的话，一共会执行 4 个批次。 查看并行 Job 运行 cronjob startingDeadlineSeconds：如果等待时间超过startingDeadlineSeconds的话，CronJob 就会停止这个 Job； concurrencyPolicy：就是说是否允许并行运行。所谓的并行运行就是，当第二个 Job 要到时间需要去运行的时候，上一个 Job 还没完成。如果这个 policy 设置为 true 的话，那么不管你前面的 Job 是否运行完成，每分钟都会去执行；如果是 false，它就会等上一个 Job 运行完成之后才会运行下一个； JobsHistoryLimit：这个就是每一次 CronJob 运行完之后，它都会遗留上一个 Job 的运行历史、查看时间。当然这个额不能是无限的，所以需要设置一下历史存留数，一般可以设置默认 10 个或 100 个都可以 操作演示略 Job 的编排文件Job 的创建及运行验证并行 Job 的编排文件并行 Job 的创建及运行验证Cronjob 的编排文件Cronjob 的创建及运行验证 架构设计略 Job 管理模式Job 控制器 DaemonSetDaemonSet：守护进程控制器 查看 DaemonSet 状态 kubectl get ds 有几个参数，分别是：需要的 pod 个数、当前已经创建的 pod 个数、就绪的个数，以及所有可用的、通过健康检查的 pod；还有 NODE SELECTOR，因为 NODE SELECTOR 在 DaemonSet 里面非常有用。 有时候我们可能希望只有部分节点去运行这个 pod 而不是所有的节点，所以有些节点上被打了标的话，DaemonSet 就只运行在这些节点上。比如，我只希望 master 节点运行某些 pod，或者只希望 Worker 节点运行某些 pod，就可以使用这个 NODE SELECTOR。 更新 DaemonSet 操作演示略 DaemonSet 的编排DaemonSet 的创建与运行验证DaemonSet 的更DaemonSet 管理模式DaemonSet 控制器 课时8. 应用配置管理：ConfigMap Secret从零开始入门 K8s | 如何实现应用配置管理？ ConfigMap 和 Secret首先介绍了 ConfigMap 和 Secret 的创建方法和使用场景，然后对 ConfigMap 和 Secret 的常见使用注意点进行了分类和整理。最后介绍了私有仓库镜像的使用和配置； 使用场景：一些可变的配置。因为我们不可能把一些可变的配置写到镜像里面，当这个配置需要变化的时候，可能需要我们重新编译一次镜像，这个肯定是不能接受的，所以有了 ConfigMap; 一些敏感信息的存储和使用。比如说应用需要使用一些密码，或者用一些 token， 所以有了 Secret。 创建方法： 主要用 –from-file 和 –from-literal 引入配置 一二联合使用，首先引入配置为环境变量，再用 $x。三是挂载配置文件到容器内 Pod 身份认证: 首先介绍了 ServiceAccount 和 Secret 的关联关系，然后从源码角度对 Pod 身份认证流程和实现细节进行剖析，同时引出了 Pod 的权限管理 (即 RBAC 的配置管理)； 容器资源和安全：首先介绍了容器常见资源类型 (CPU/Memory) 的配置，然后对 Pod 服务质量分类进行详细的介绍。同时对 SecurityContext 有效层级和权限配置项进行简要说明；InitContainer: 首先介绍了 InitContainer 和普通 container 的区别以及 InitContainer 的用途。然后基于实际用例对InitContainer 的用途进行了说明。 略 课时9. 应用存储和持久化数据卷：核心知识首先来看一下 Pod Volumes 的使用场景： 场景一：如果 pod 中的某一个容器在运行时异常退出，被 kubelet 重新拉起之后，如何保证之前容器产生的重要数据没有丢失？ 场景二：如果同一个 pod 中的多个容器想要共享数据，应该如何去做？ 以上两个场景，其实都可以借助 Volumes 来很好地解决，接下来首先看一下 Pod Volumes 的常见类型： 本地存储，常用的有 emptydir/hostpath； 网络存储：网络存储当前的实现方式有两种，一种是 in-tree，它的实现代码是放在 K8s 代码仓库中的，随着 K8s 对存储类型支持的增多，这种方式会给 K8s 本身的维护和发展带来很大的负担；而第二种实现方式是 out-of-tree，它的实现其实是给 K8s 本身解耦的，通过抽象接口将不同存储的 driver 实现从 K8s 代码仓库中剥离，因此 out-of-tree 是后面社区主推的一种实现网络存储插件的方式； Persistent Volumes：它其实是将一些配置信息，如 secret/configmap 用卷的形式挂载在容器中，让容器中的程序可以通过 POSIX 接口来访问配置数据； 课时 9 后面的暂时就不看了 实践Kubectl 安装、启动centos安装失败 How to Install Kubernetes(k8s) with Minikube on CentOS 8 12345678910curl -LO \"https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/darwin/amd64/kubectl\"curl -LO \"https://storage.googleapis.com/kubernetes-release/release/v1.18.2/bin/darwin/amd64/kubectl\"# 没有代理的话，很慢，可以本地下载好，传到服务器# https://storage.googleapis.com/kubernetes-release/release/v1.18.2/bin/darwin/amd64/kubectl# rsync -azvhP kubectl root@47.93.53.47:/root/k8schmod +x ./kubectlmv ./kubectl /usr/local/bin/kubectlkubectl version --client Minikube1234567curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64chmod +x minikubemkdir -p /usr/local/bin/install minikube /usr/local/bin/# 用无需虚拟机的方式启动minikube start --driver=none MacHow to Install Kubernetes on Mac with Docker, Minikube, VirtualBox - Kubernetes Book /usr/local/bin/kubectl is v1.15.5, which may be incompatible with Kubernetes v1.18.2 12345678910export HOMEBREW_NO_AUTO_UPDATE=truebrew install kubectlbrew cask install virtualboxbrew install minikubebrew install bash-completionminikube start --image-mirror-country cn \\ --iso-url=https://kubernetes.oss-cn-hangzhou.aliyuncs.com/minikube/iso/minikube-v1.9.0.iso \\ --registry-mirror=https://vbd8z16m.mirror.aliyuncs.comminikube dashboard 12345678910# 自动补全# 编辑 ~/.zshrc 文件if [ $commands[kubectl] ]; then source &lt;(kubectl completion zsh)fi# 2. 更新 plugins= 行以包含 kubectl 插件plugins=(kubectl)source ~/.zshrctail -n 5 ~/.zshrc 12345# minikube 可选参数minikube start \\ --kubernetes-version v1.18.0 \\ --vm-driver=&lt;driver_name&gt; \\ --extra-config=kubelet.MaxPods=5 minikube stop 命令可用于停止集群 minikube delete 命令可用于删除集群 此命令将关闭并删除 Minikube 虚拟机，不保留任何数据或状态 minikube status 查看集群是否正常 停止k8s demo1234567891011121314151.提交一个 nginx deploymentkubectl apply -f https://k8s.io/examples/application/deployment.yaml2.升级 nginx deploymentkubectl apply -f https://k8s.io/examples/application/deployment-update.yaml3.扩容 nginx deploymentkubectl apply -f https://k8s.io/examples/application/deployment-scale.yamlkubectl describe deployment nginx-deploymentkubectl get --watch deploymentskubectl delete deployment nginx-deploymentkubectl delete deployments --allkubectl delete pods --all Kubernetes kubectl delete 命令详解 _ Kubernetes(K8S)中文文档_Kubernetes中文社区 工具*配置高效的 Kubernetes 命令行终端如何配置高效的 Kubernetes 命令行终端 - 陈少文的博客 交互式Kubernetes客户端，搭建高效Kubernetes命令行终端_Linux命令_云网牛站 1. *自动补全kube-shell 好用点，支持模糊搜索 cloudnativelabs/kube-shell: Kubernetes shell: An integrated shell for working with the Kubernetes 1pip install kube-shell c-bata/kube-prompt: An interactive kubernetes client featuring auto-complete. OS X 安装命令： 1brew install bash-complete@2 不仅仅是 kubectl ，也给其他命令行提供自动补全的命令提示。 在 .zshrc 中添加如下内容： 12# kubectl completesource &lt;(kubectl completion zsh) 在输入 kubectl get pod 命令时，键入 Tab 会自动列举当前类型下的资源，如果没有任何资源，则列举目录文件。 2. 环境切换和管理 - kubectxOS X 安装命令： 1brew install kubectx 提供两个命令行工具： kubectx ，切换不同集群 kubens ，切换不同 Namespaces 3. 将当前环境显示在命令中 - kube-ps1OS X 安装命令： 1brew install kube-ps1 在 .profile 中添加如下内容: 123# kube-ps1source &quot;/usr/local/opt/kube-ps1/share/kube-ps1.sh&quot;PS1='$(kube_ps1)'$PS1 但是由于通常 config 中配置的 context 名比较长，同时不易区分，需要修改下： 1sed -i'.s' -E 's/kubernetes-admin@cluster.local'/dev/ ~/.kube/config 将 kubernetes-admin@cluster.local 替换为 dev ，可以配合 本地快速切换不同 Kubernetes 环境 使用。 4. 交互式命令 - kube-promptkube-prompt 可以让用户省略每次都需要输入的 kubectl ，同时给出一些交互式的自动补全。kube-shell 也提供交互式的自动补全，但是很长时间没有更新了，使用 pip install kube-shell 进行安装，在服务器上可能用得上。 安装命令： 1brew install c-bata/kube-prompt/kube-prompt 开始使用： 1kube-prompt 5.Kubectl Aliaseshttps://github.com/ahmetb/kubectl-aliases 12下载 https://raw.githubusercontent.com/ahmetb/kubectl-alias/master/.kubectl_aliases[ -f ~/dotfiles/kubectl_aliases.sh ] &amp;&amp; source ~/dotfiles/kubectl_aliases.sh 别名规则 Kubeval、KubensKubeval 是一个用于校验 Kubernetes YAML 或 JSON 配置文件的工具，支持多个 Kubernetes 版本，可以帮助我们解决不少的麻烦。 项目地址：https://github.com/garethr/kubeval Kubens 该工具可以帮助您快速的在 Kubernetes 的多个命名空间之间切换。 项目地址：https://github.com/ahmetb/kubectx Kubens 使用效果图： 参考 https://github.com/ahmetb/kubectx https://github.com/jonmosco/kube-ps1 https://github.com/c-bata/kube-prompt https://github.com/cloudnativelabs/kube-shell lens最华丽的 Kubernetes 桌面客户端：Lens python: Official Python client library for kuberneteskubernetes-client/python: Official Python client library for kubernetes 其他给 Kubernetes 配置 Proxy - 陈少文的博客Kubernetes Cheat Sheet - 陈少文的博客 Minikube、kubeadm、Kubespray、Kops等Kubernetes部署工具该如何选择？简单来说就是几个工具的使用场景不一样，Minikube 通过虚拟机方式快速安装单节点 Kubernetes 集群，可用于个人电脑快速体验Kubernetes；Kubeadm 是官方推荐的Kubernetes 分发工具，该工具有助于在现有基础架构上引导最佳 Kubernetes 集群实践，优点是能够在任何地方发布最小的可行 Kubernetes 集群；但 Kubeadm 不提供基础架构配置（例如：网络、负载均衡、存储等都需要额外配置）；Kops适合于在阿里云、AWS、GCE、Azure、OpenStack等云平台上部署Kubernetes群集，目前不支持裸机部署。Kubespray是产线部署常用工具，依赖Ansible，支持AWS，GCE，Azure，OpenStack等云平台，以及物理服务器的IaaS平台。 Kubernetes 部署 Dashboard网页界面 (Dashboard) - Kubernetes","link":"/docker%20k8s/k8s.html"},{"title":"如何编写最佳的Dockerfile","text":"[TOC] How to write excellent Dockerfiles如何编写最佳的Dockerfile Docker Dockerfile | 菜鸟教程 目标: 更快的构建速度 更小的 Docker 镜像大小 更少的 Docker 镜像层 充分利用镜像缓存 增加 Dockerfile 可读性 让 Docker 容器使用起来更简单 总结 编写.dockerignore 文件 容器只运行单个应用 将多个 RUN 指令合并为一个 基础镜像的标签不要用 latest 每个 RUN 指令后删除多余文件 选择合适的基础镜像(alpine 版本最好) 设置 WORKDIR 和 CMD 使用 ENTRYPOINT (可选) 在 entrypoint 脚本中使用 exec COPY 与 ADD 优先使用前者 合理调整 COPY 与 RUN 的顺序 设置默认的环境变量，映射端口和数据卷 使用 LABEL 设置镜像元数据 添加 HEALTHCHECK 示例示例 Dockerfile 犯了几乎所有的错(当然我是故意的)。接下来，我会一步步优化它。假设我们需要使用 Docker 运行一个 Node.js 应用，下面就是它的 Dockerfile(CMD 指令太复杂了，所以我简化了，它是错误的，仅供参考)。 12345678910111213FROM ubuntuADD . /appRUN apt-get updateRUN apt-get upgrade -yRUN apt-get install -y nodejs ssh mysqlRUN cd /app &amp;&amp; npm install# this should start three processes, mysql and ssh# in the background and node app in foreground# isn't it beautifully terrible? &lt;3CMD mysql &amp; sshd &amp; npm start 构建镜像: 1docker build -t wtf . 1. 编写.dockerignore 文件构建镜像时，Docker 需要先准备context ，将所有需要的文件收集到进程中。默认的context包含 Dockerfile 目录中的所有文件，但是实际上，我们并不需要.*git* 目录，node_modules 目录等内容。 .dockerignore 的作用和语法类似于 .gitignore，可以忽略一些不需要的文件，这样可以有效加快镜像构建时间，同时减少 Docker 镜像的大小。示例如下: 12.git/node_modules/ 2. 容器只运行单个应用从技术角度讲，你可以在 Docker 容器中运行多个进程。你可以将数据库，前端，后端，ssh，supervisor 都运行在同一个 Docker 容器中。但是，这会让你非常痛苦: 非常长的构建时间(修改前端之后，整个后端也需要重新构建) 非常大的镜像大小 多个应用的日志难以处理(不能直接使用 stdout，否则多个应用的日志会混合到一起) 横向扩展时非常浪费资源(不同的应用需要运行的容器数并不相同) 僵尸进程问题 - 你需要选择合适的 init 进程 因此，我建议大家为每个应用构建单独的 Docker 镜像，然后使用 Docker Compose 运行多个 Docker 容器。 现在，我从 Dockerfile 中删除一些不需要的安装包，另外，SSH 可以用docker exec替代。示例如下： 12345678910111213FROM ubuntuADD . /appRUN apt-get updateRUN apt-get upgrade -y# we should remove ssh and mysql, and use# separate container for databaseRUN apt-get install -y nodejs # ssh mysqlRUN cd /app &amp;&amp; npm installCMD npm start 3. 将多个 RUN 指令合并为一个Docker 镜像是分层的，下面这些知识点非常重要: Dockerfile 中的每个指令都会创建一个新的镜像层。 镜像层将被缓存和复用 当 Dockerfile 的指令修改了，复制的文件变化了，或者构建镜像时指定的变量不同了，对应的镜像层缓存就会失效 某一层的镜像缓存失效之后，它之后的镜像层缓存都会失效 镜像层是不可变的，如果我们再某一层中添加一个文件，然后在下一层中删除它，则镜像中依然会包含该文件(只是这个文件在 Docker 容器中不可见了)。 Docker 镜像类似于洋葱。它们都有很多层。为了修改内层，则需要将外面的层都删掉。记住这一点的话，其他内容就很好理解了。 现在，我们将所有的RUN指令合并为一个。同时把apt-get upgrade删除，因为它会使得镜像构建非常不确定(我们只需要依赖基础镜像的更新就好了) 12345678910FROM ubuntuADD . /appRUN apt-get update \\ &amp;&amp; apt-get install -y nodejs \\ &amp;&amp; cd /app \\ &amp;&amp; npm installCMD npm start 记住一点，我们只能将变化频率一样的指令合并在一起。将 node.js 安装与 npm 模块安装放在一起的话，则每次修改源代码，都需要重新安装 node.js，这显然不合适。因此，正确的写法是这样的: 1234567FROM ubuntuRUN apt-get update &amp;&amp; apt-get install -y nodejsADD . /appRUN cd /app &amp;&amp; npm installCMD npm start 4. 基础镜像的标签不要用 latest当镜像没有指定标签时，将默认使用latest 标签。因此， FROM ubuntu 指令等同于FROM ubuntu:latest。当时，当镜像更新时，latest 标签会指向不同的镜像，这时构建镜像有可能失败。如果你的确需要使用最新版的基础镜像，可以使用 latest 标签，否则的话，最好指定确定的镜像标签。 示例 Dockerfile 应该使用16.04作为标签。 1234567FROM ubuntu:16.04 # it's that easy!RUN apt-get update &amp;&amp; apt-get install -y nodejsADD . /appRUN cd /app &amp;&amp; npm installCMD npm start 5. 每个 RUN 指令后删除多余文件假设我们更新了 apt-get 源，下载，解压并安装了一些软件包，它们都保存在/var/lib/apt/lists/目录中。但是，运行应用时 Docker 镜像中并不需要这些文件。我们最好将它们删除，因为它会使 Docker 镜像变大。 示例 Dockerfile 中，我们可以删除/var/lib/apt/lists/目录中的文件(它们是由 apt-get update 生成的)。 1234567891011FROM ubuntu:16.04RUN apt-get update \\ &amp;&amp; apt-get install -y nodejs \\ # added lines &amp;&amp; rm -rf /var/lib/apt/lists/*ADD . /appRUN cd /app &amp;&amp; npm installCMD npm start 6. 选择合适的基础镜像(alpine 版本最好)在示例中，我们选择了ubuntu作为基础镜像。但是我们只需要运行 node 程序，有必要使用一个通用的基础镜像吗？node镜像应该是更好的选择。 12345678FROM nodeADD . /app# we don't need to install node# anymore and use apt-getRUN cd /app &amp;&amp; npm installCMD npm start 更好的选择是 alpine 版本的node镜像。alpine 是一个极小化的 Linux 发行版，只有 4MB，这让它非常适合作为基础镜像。 123456FROM node:7-alpineADD . /appRUN cd /app &amp;&amp; npm installCMD npm start apk是 Alpine 的包管理工具。它与apt-get有些不同，但是非常容易上手。另外，它还有一些非常有用的特性，比如no-cache和 --virtual选项，它们都可以帮助我们减少镜像的大小。 7. 设置 WORKDIR 和 CMDWORKDIR指令可以设置默认目录，也就是运行RUN / CMD / ENTRYPOINT指令的地方。 CMD指令可以设置容器创建是执行的默认命令。另外，你应该讲命令写在一个数组中，数组中每个元素为命令的每个单词(参考官方文档)。 1234567FROM node:7-alpineWORKDIR /appADD . /appRUN npm installCMD [&quot;npm&quot;, &quot;start&quot;] 8. 使用 ENTRYPOINT (可选)ENTRYPOINT指令并不是必须的，因为它会增加复杂度。ENTRYPOINT是一个脚本，它会默认执行，并且将指定的命令错误其参数。它通常用于构建可执行的 Docker 镜像。entrypoint.sh 如下: 123456789101112131415161718192021222324252627#!/usr/bin/env sh# $0 is a script name,# $1, $2, $3 etc are passed arguments# $1 is our commandCMD=$1case &quot;$CMD&quot; in &quot;dev&quot; ) npm install export NODE_ENV=development exec npm run dev ;; &quot;start&quot; ) # we can modify files here, using ENV variables passed in # &quot;docker create&quot; command. It can't be done during build process. echo &quot;db: $DATABASE_ADDRESS&quot; &gt;&gt; /app/config.yml export NODE_ENV=production exec npm start ;; * ) # Run custom command. Thanks to this line we can still use # &quot;docker run our_image /bin/bash&quot; and it will work exec $CMD ${@:2} ;;esac 示例 Dockerfile: 12345678FROM node:7-alpineWORKDIR /appADD . /appRUN npm installENTRYPOINT [&quot;./entrypoint.sh&quot;]CMD [&quot;start&quot;] 可以使用如下命令运行该镜像: 12345678# 运行开发版本docker run our-app dev# 运行生产版本docker run our-app start# 运行bashdocker run -it our-app /bin/bash 9. 在 entrypoint 脚本中使用 exec在前文的 entrypoint 脚本中，我使用了exec命令运行 node 应用。不使用exec的话，我们则不能顺利地关闭容器，因为 SIGTERM 信号会被 bash 脚本进程吞没。exec命令启动的进程可以取代脚本进程，因此所有的信号都会正常工作。 10. COPY 与 ADD 优先使用前者COPY指令非常简单，仅用于将文件拷贝到镜像中。ADD相对来讲复杂一些，可以用于下载远程文件以及解压压缩包(参考官方文档)。 123456789FROM node:7-alpineWORKDIR /appCOPY . /appRUN npm installENTRYPOINT [&quot;./entrypoint.sh&quot;]CMD [&quot;start&quot;] 11. 合理调整 COPY 与 RUN 的顺序我们应该把变化最少的部分放在 Dockerfile 的前面，这样可以充分利用镜像缓存。 示例中，源代码会经常变化，则每次构建镜像时都需要重新安装 NPM 模块，这显然不是我们希望看到的。因此我们可以先拷贝package.json，然后安装 NPM 模块，最后才拷贝其余的源代码。这样的话，即使源代码变化，也不需要重新安装 NPM 模块。 12345678910FROM node:7-alpineWORKDIR /appCOPY package.json /appRUN npm installCOPY . /appENTRYPOINT [&quot;./entrypoint.sh&quot;]CMD [&quot;start&quot;] 12. 设置默认的环境变量，映射端口和数据卷运行 Docker 容器时很可能需要一些环境变量。在 Dockerfile 设置默认的环境变量是一种很好的方式。另外，我们应该在 Dockerfile 中设置映射端口和数据卷。示例如下: 12345678910111213141516171819FROM node:7-alpineENV PROJECT_DIR=/appWORKDIR $PROJECT_DIRCOPY package.json $PROJECT_DIRRUN npm installCOPY . $PROJECT_DIRENV MEDIA_DIR=/media \\ NODE_ENV=production \\ APP_PORT=3000VOLUME $MEDIA_DIREXPOSE $APP_PORTENTRYPOINT [&quot;./entrypoint.sh&quot;]CMD [&quot;start&quot;] ENV指令指定的环境变量在容器中可以使用。如果你只是需要指定构建镜像时的变量，你可以使用ARG指令。 13. 使用 LABEL 设置镜像元数据使用LABEL指令，可以为镜像设置元数据，例如镜像创建者或者镜像说明。旧版的 Dockerfile 语法使用MAINTAINER指令指定镜像创建者，但是它已经被弃用了。有时，一些外部程序需要用到镜像的元数据，例如nvidia-docker需要用到com.nvidia.volumes.needed。示例如下: 123FROM node:7-alpineLABEL maintainer &quot;jakub.skalecki@example.com&quot;... 14. 添加 HEALTHCHECK运行容器时，可以指定--restart always选项。这样的话，容器崩溃时，Docker 守护进程(docker daemon)会重启容器。对于需要长时间运行的容器，这个选项非常有用。但是，如果容器的确在运行，但是不可(陷入死循环，配置错误)用怎么办？使用HEALTHCHECK指令可以让 Docker 周期性的检查容器的健康状况。我们只需要指定一个命令，如果一切正常的话返回 0，否则返回 1。对 HEALTHCHECK 感兴趣的话，可以参考这篇博客。示例如下: 1234567891011121314151617181920FROM node:7-alpineLABEL maintainer &quot;jakub.skalecki@example.com&quot;ENV PROJECT_DIR=/appWORKDIR $PROJECT_DIRCOPY package.json $PROJECT_DIRRUN npm installCOPY . $PROJECT_DIRENV MEDIA_DIR=/media \\ NODE_ENV=production \\ APP_PORT=3000VOLUME $MEDIA_DIREXPOSE $APP_PORTHEALTHCHECK CMD curl --fail http://localhost:$APP_PORT || exit 1ENTRYPOINT [&quot;./entrypoint.sh&quot;]CMD [&quot;start&quot;] 当请求失败时，curl --*fail* 命令返回非 0 状态。","link":"/docker%20k8s/%E5%A6%82%E4%BD%95%E7%BC%96%E5%86%99%E6%9C%80%E4%BD%B3%E7%9A%84Dockerfile.html"},{"title":"你了解你的女儿吗","text":"嗨，请准确无误地输入密码查看哟 d4ddde657b62ae9d724a3e00dfabc05a45fdaf36a8bc4373ea59463028fb879d9d5b0bcbab6e7d124a128f99b479ca7942f4b7fe33c017f8918e35de966a6d0532dd8ffff620f29919950cef1b11444b8a05ed323b27496a2a930cc3d14c0f8bf48506dfce5d1ec8813bd60e993486106658fe73e4a13f8ada1927bac7cc1e21d4120052525ef1258351d7b385c53d32f7cad887fe7b1ed179d91dd231e315aaf4f8a07d89e5888b47a872ae58bf063215007c5dbfb47d4733ad5b28942ef618b22b6efb50ff33566baf7af02ec74b440cd0335ef4c11182969ccb8dbc61cec17e84d4dd22b31d7ff09b611f997af7be7eebd02d606215c665461da81159be2b07437e1b4f6b40e88b5530a90e9fa32e063a55ddc631431681956f47d4d5976c7a108211d6cf798347d3d4efe991e1f4a14c2f6f6ba7dd4887787bf99fd3981f3f69c9a0eaf0e24de47ec7a2e13fd47c9dbd89e28b50879ab3ff6cdcd6a0a4a08a441e38ecb509dc08ef9296d73ff1066d67e35a82b20c506ba74c82d8f2ed71c1f99c69cfe2637f998b84638f4403a64fe4e5438b6fcdb37bec2329fd76cd8bdd414c1b59448c3cf3edea8a22b842753ec9a187158a69ac30a790d1555d26845d8d334d1c4888fbcea786109a73e055d50c1480a7f32ba39c081b18a6c77a5043eb398f5e566e38920989aaa8a715a320ad0b6ba61a7f2b8dff2c4dec2831d81aa9af7b427a20f78888aff1cdac0b7f375154d2c579200d01dfd5a8d42b82952a88784ac926f5a22f238b476493447a2fc3542482bcf2799c57ccb6d1d009e83975b30d73869ff020cc1f194d74638b449fe9ffd838304ebcb181f316517920fb8533739a4b5ea900750507b693b7c617fa4840c25be31bf50b1d46470cc424735fc8e049a8952ca536caede6e2722f5037c9dd51fa8e023f282fbd472d9e4ee8e33e8b2727049a3cc3b853338244b09c979755a34c4f2cc23e33704a3c8b266f224ca4259d9f4c6da1e33a464cb89f105f8407f662bc03564b2a3f5dd01fd4cf878e0e96d27eb6d5d4726e051a4c38412d190625577e99538837456569ab0693247494b008dd2df041e2283072beab7481b7b5e9b65af402459767ea5a8e14eb8aca0d6baa082e5f5118b51d6b54e74013179629b53d46e2a48b2c5690a4e5482b6f9f4fc0653111105de9881ab2b4004a82ac23cc6618e09390e39349283cd66af4a4b8c66e2e5e3ec21ffe53c7c3555fcf53ebfb2689b11dee1ccbeba68f17cf6f6586d2cd134e0b21941e1156b9dd5656012c14cc74fecc23c1844a2d257364c96135848dd2b7cf861d59c20fd8705b09a5066ef7307155722234cffed912e20387e93b2180ec93d1dbfc45725947feacf75fe930cb6a14540dda907915ecbc2c0869dbfd18683c9ed2de6eeff9a43e42571f93c55a834db0ebf8cbcea7ef4519cf88bf33996a393b902347beb8f852df8255ec9db5a17c7a28245f2305d3be9bf18d5bbfcaf09834ca7595d89ec46ce723c07d4515f5f7b920ae803a9dcce99839cdd1f60488e639f70f5b2217b1922c2cd5efba3ff6bb89c7d94dcedcaa273c5e5fd57fab89186173ac14cd9599b8e0e71a96d5afb8104b84517ed4c183812cdf8fd7995513e63875c314b37d0650f926440fa784f25e6847e65def51b0de51d38bfee916b5038e68be4a693b87fbf05d72ae355da9e839b6fee4daa7e1976003cbd4e6fe2e1c371b28f3977c3f6aba8fd794bd8105638d0cbc440866753bebeb85905783568176b648ed280f20b1de2e1e73507338b71277fa8e66b9a9a41b9ae47013bb9ed6187347cfb6b6ff635eb8a3cecd2b4c64c7a5c73387bc491e01b2000acec0953265aecd342b685191f17b31456d287a9dfeaf4537c03d455fe65bc3d4488d29d2610d323de532cf57e4aef8c2c5ae01cb12005f977edb6fe815bada76e1d2db83a543b86bb01461f051be5ebae056feade28ccb7f9026c69ee0293c03ffe09171147ccd757879df5f260a04d75bd7a8d9ab19ce3343dcdff8de7bd3b3106394933bb4c621823dc6bac5d2adf22def5908f59604622e6d7f1f4e5aa198afee8ebe94c48ca0586df40f434794cb44f0d33c0caeb7443082df070439a093a809034a8d463f9ceb46755fb1d26e34c058374b7bb8e4f979821efdeac0142717061ab792ce0e2b1b43a3c6d7b742fa04ccf2de759df6db8dd41f8bd028ba1007c4be861af17d2c23156b60ebea09684ad1e8336e4df28b33aeaf63035c4a1a89eeb9006a74211bb7e259efa427fe62fba80a4b5e1496aa3414f4bc7dd5c8e0102448c9c37fc2015bd029b77d5f9f13c2567fedfe899aef11fbcf3735b41bb5acd19cb8cc78d55c2a1759d9c8d86f8c8d923896993aa45217dd16abbb77f17280f622dff27d8241998971a9ab7b152b18dacfca4862f6e633f3933be0c9894f043179473e579cd6dfc0355b114aa99f5e5948dc0275f79a41291b2bd2c196519b5e95f15b773bf7525aa5088bbe11f51686a7f47dbb11f7f54dfd759aa6e63c3a6ca4a27a886e994658e3a25e04b1c430eaf0211a7710ae2ba63e95d4480b2c1d36ebdc4dd94601abcafa7c4b84cd751d53e81ab01deb1e8cc51d6e1928f7073f0e7d26ed3ec48dd43ef302233c4bbb3f0bc7bcdaf07484b517da9f8f56ee5f27ee149ca3c497401152cbfc8876b39b43d057fd229edd4edb4f059ed0da125a02a2c05d137ac782053a545995e8ad1bb95e48233f37e33294716a7dcacda76c224eacc836f78fe40613a92c94e0ab889e2b723de7ed201029e561fdc77a8848eb3137b68376e1ea74a2594dfd409268adae9c64dd60a2a73d30913a1c3d6f11ca997294e3118b91c0f5f04d4686c90b6a195846b96e246cbfd03bb8e324bbf4576ebdcf3b4970ff17b2b2abe58dcc79b324f9feb409ed199d05895d7641861067c5f87752c63196e95c971dfacff9564ed21d9745845510fd91a75f140a6b7de48c2e606a1f8a0059aaef8d04b693a38b81f0ce16b0d95f1e5369700ccfbc8ad04094e5e281c2f95d3c2a9ea4082a0b266d22c95f71e2be34114e0314fb6ad399bf2adac07ffa8e346f353344d2222265beb0a9a8b75e88703bfc5760b66f896c8130e6f800a87b32e4933faccaf54bc697f5d37d2e686afa550e01f2487b3733d27adfa2c37738932bc658fa37847ec906b5c3aa7993471fb59c702306b6f8e7a975ae6060d58a915c6c17bdaeb9fe851649d18af6f4f7d0057c5f14f7fc1d7242ddb756ef0b0ba75b4be63cbf11609594889023c31615917dd174b4c7b1805f59cfc951e42429e46245b8d04d2138cb7114ddf8b1d1c938b21682fac2d2f3ea33fabc084562869c4aa13226f41d265782c27e41e6657cbfa824882e92bc465557b2f6c5958f9a40ac959658d09227bc4ff0d3a86710c8b75be867d34f43fd635134df6ba902d9fdfc6a93e1ffbdb7cd256ae634c252b05cc37d6a5abf5257b4ac295ef9747c9a2a8f5508f1428bd0536314b2516b87e356c85885d3ebe36a2ead44b3b5c4240e88436d12d8d097b865ecef47dcbe7c72310129bc9eb105bdeaf83e79beca91a96d579637ea4f18df3fef3147d25f8d87d99e026dfe68617e441539c7fb3026c6984615be88db18282532ede87d97dd9e946d1bc50f0100e8e0308c57105aa20230ddd7f9d0ced4099f6b140498a1ab66f3d2a6f5676cbb701a49e690de27bb9a219bbfa89d3793ce0a7fe9e94af92d897ff459566797cfb45f22d8d678e9f2d8364b5848cc8de65ab841d21e0102213ab9aeb58811edd05c73aa846edb0a815c7eb643ab2617453d3f4c640fc3a8edf890699223dcecb5ba258535fe13cfb46af1d28e01525c00eb6269b583d1d6f043c44985bb030a5155fc50f6983b42a21b450a8ce4b13677f1fa1b61d60ceb4117ed61b3dc1a26eed3bee964e0dbdd4b2159db11105a3db24a868f5c4e754ad4d49fbd24d7437659bd91b6727347f6dfe980d363b1b312914d3082f91e9accd9036f02c47b7d09e6e1a1b06dd37ff754c3007ae00be41d2830f810d141ef2e9511c583e7792d346383c8fe98a86a07e4a592d01cdd0675b96556ea34997ef2de4ff387553d1e2bceca2f997cec2da60ef6be35eaf177ab871f9885aec3825c18ec7b5ea28bf5a2c00081f7b661169f5d8a8c80a645605347009689fa46c8ca1f3e23cfa786505624f06a1205d822df79187aea8cdd53b31ca30743b1e85886614bc9d5ed4f493f8210d19f8bdac17fd0b14e376e8e3eceb2ff410f7602e6fcbc4f5cdb8d2a4c417afb57674e4a5ab8fed41bfac78ec2e225ed265079b6aa173b65612b7970930fc03eabc403daf55926ef15b46e3ba556a6f585888acf2d9ec5e706e8c412cd7237b8659bb69ed593b0202ae32c85576ac3c300c0b746d59df5a79decc03c15afa5d5156ca17d204716f9945bd9e9f8a4ad3934167bcc123e372ff349de1d81e5b573c6dbbeec289194c8f7e1faaae0fd2b2c69170a759b9aeb3f65d1a3c2b81c4484dd63f010a24bbbe4fbbda7262bdbffb54e69a82c2063eadc41a76fab03eab099a69b4464afc72732cfdf90a6b373bd5b2770d218530a6ecf57b7745b22ac5badfb339d9dea3b22e66c97d79fc79846b063548c5c49035b50eb9257c023c0f6e3b8cc05d910bf32bd53326cd89bbab2a3dab80c915ece2d20cc06ec27ed4432bc67d6214e95d637b5fc79d7d61e36201a2bec7f22373644d666f987fcbcde6f70a604bb811ed66fbd80ff592fd55f635d0ca77aac55e118814514a84622915941a361ddb2ef75f9b36239be6501486b1267d32b11c0fd45dce0670609d5f7e66fd30f67f489f64f8a2fbd7be23d3d79cfa96ffb05908510e8f6edb8a64bc8bfc0ed088551df4029f0337dffa48fdcd762d59ffa2064dd30f32fa1a6957135dd7695a8a259b72cd75dd5ae1641718f9333825ff2fcd3e38e0f9c351ce9e60169881592d790c0b280dc87ed235a7434ef8dc2107402ac736a6e842356a83e8a9caf342e633f09fe370424880703c321d50bc2e73cdaf4f9d4a85bfe53cbf14872a668d22cf970f44b51ff37c97fef9074d3831aca7835cb522c6175a414ad46dc2745bcb496c552a744d9494c6be06a14b0db5dc209a517d3a16b32ba454618f185f84f03c7b9b4dd853cd6acfc95fbbe5a7777a9cdff8701170a8cc84d41df454a38b011dd280b684e1c44028c6d0067c07818e950185584e9ad0655fc71a99d71fd60a9a614ff829d436b1bcb63c51694160beae9b9bad4187fd775f0a32f320a5f6eec93b24d9b90284dd2d5c397c65b71c8b995e2d7d2e7e29cc1ad9ff2a6cca59bf5518ea3ec07ba4985e0b35e72c1a06c728a7bee7e8fdb8f1fbeb4254bd92bd0432dcb11bf74cb2b791e3d1a055f7070390634d8cc587e84deadc9b8afdc114c79b7a734363965e0f1b44c6cffe42171671c0028005943aefab087a67cb97c6e6508dfffb58ea3fe071dfc56f591316fcf4de528b929b733b6727b2021b18fffec58940008242bc18eecf0fe4ebb3beb28d13a4e90e641508f174f56d88358e6cff0ab43e036dfa98bbc49ed341cc590511fb94bfdef4a5e9b4596c9c573aa052d8f47c4d0e7e7809fcac159c5356ba8031edc6a4e0e54ade3e06f4c1704f775b47f0e274a95ec570f7a5c76b6767405653233dc8450e71a6337a9e84ddc4bd3ffb82e52f2f50920443e3167f6e7656619b6426196794a3f59ad78346e42673b80bdb866f7587ed2ea658044d5fc083dfce2910fabb60e2edee42c821c5380539fc23a9d4349601249da03f4515b0163fef8116e7cf8325a9840e7c003d180f153d852f413468b74d3440826aed06c0494a542eb32e713bac7d8efea8815c8027c8c810d7a50f0526f9a15ef2afd982860310ffeccb3da773aa69095c0cf2f857e690901f294f5c4447b5c0e27d8963bbf4bed92362256e235f36170ce897090df4f0daf3682442ba5a591c680f7ce35b53cb9d486c707672779c87ac008b8e90001187e25b0f016c9c96d09c9163d6bc38764543e54c062f7039c191370c7712f68c6da3f6bab91c0f7832d6594b2433e2bc22d13f0e25899d2dc423f4a4069054753d924a14d95216dd7264cf6b39378e6157d3aa1b3d31d1a5c5bddebe7919f89a874471ea3d575a02e93eaf5d189c9ecd8a623d8c423a0c63edbe917efe52b3a34502fa523a4d31835656d5aeec09d56b0940d50f45bc7666edc1ebae8aa0f7bcce4ed0fc29a6c0c026e88fa77f24527b2da78fc5981cc06053922b410eeed7ed9572d7c645eab64898b748ecb522d830ea33f0e1fed1420a3d952f4c6171386d8c24b59f825dacb749b429b9588bedb3f83c0571bf8de7aa8ffa9c3c5fe4560f307d9a84380ff8f0b40a23ca57df60f0d2052d0e598bcc39f3a868851285cd5e98abca72c4a9be05124d956762b2f36bab7efdd13776e090b7ca4372ea0c996e4bb4555ba66ed1ff19465c14c978cd96ef24f910cf6e6d96d6f5d3730aa499bef112606a169082ec88d6b4e07ce4566222d57b1ed2a825d4e18c27807c587c7245886f596d4aeb930ce97b8d9a8254a95869896e3478ce9a7aeb2d7075e85afb6b9b36c31f5a6f71faf91dae29535eb99c5b5235fc722f553eed974e8c26ab921a9750d0642bfb86256fbc1e63e3ba6192452e2b01fdae7b81ca14f3de9fd4d9e4c44460748b03be825a54f49e8a5b00fa4be58885ddb5186f4646c083c9ec97fe593a50caaec7cf9f9d86f77c8d772646d43cc8be069e1452c97bdbfa326e236801e098fa6aa151ee81a82c4a7f162c69ec108c8e47e4e8169900ac3fd7884d4d31bbe9f7165a341cd96b03604a8f307164bed1d7e23ec1473d1fb53f48c576e760468f9fe3e9668ff1e0dc7144acac3aeafcd533dbf4a8a75cc8a1827d3e6cfe68837d973ccb7cfb9e6b8bc8b6a69c8469d42edf5c258ffde8c483244a5d35c3ff93c3229d90ad6d84b6f36c89c3d7ffb703f04dca42d87e2666de8934c22d76a0672cf1e9c2acb8528168ec25f83feef76355ba4c4af1d0b390c47b4d9efc84bcf52d962e6997d471a066f4c3a76c539609176c24a436c40c3875f8a5f439b06045bdad9ce8bb8b2e9fcd9407fcb3110944179e8f1c4d5a59361285a96e257552ee349e88e532817d8d7063feca6e815db15b605dc485f2b49ca8ab3679891a30f1779dc89c1ad50521ce6e9d8ad2e3d2ff9a93c063cf48461ab2840b945b76270aeff4d9afa48dd1c82e8817ee713aa853a923b2aac95f9f2aaf27281780ba147d826291d0aaa7252a9f48a111aa689e21aa2f5e20704fbdc3bd7bd9b8c1e342f18ea920eeb80b1a8695ddc8d71e6f3d983ec18a5bdb1ff9b8716142435bbb9fef97e3774a771a9a0754a481bcff67c1477a901febc3303d29c39a4a6ce27c104b6c6a587a865f12bd9167c29e998bee145d4b772900c34815cba02688b5f79994109b1878e7fd61019e3a5bbb256dd507816d4ba598250cbc34233b0e71e6894130c902f1f70a78bceb03e06f7bfb851fc0f064f042a9f659a44bc95067fbd7b89dba718539560336290aa13afcc945f8f5849eb82f0474bf5722f9f9843856852a387a1d4e7b6c3bd8039dcb777d7c7ae309ecd24acccc29eca6784edee259b272bf79893af6d9776de5f3343d41623eb07260ab785102091f030829f4a4ede990986612bd854450fdc012bed75992f595b3238770421ea298ac2e6a56cbdc6c26fdc89b8e237874b1e93418a190835608bfe0dcb0ba1695ad829e1d1418a91eaf9e40b105a1cd9a8b35caab95d110e747e6e846db724fdc08a28cc76d0d77e2429f12cc715b1a3f0258c5b57ddb8aca02a810e18fad0e85963d3f9a7a0d0a73f75e12ff2f8f40ab3fac225f571e21c3ba01276e63acea01d2848453f5d13b0cb365a62d1e4efa18f87a50ce949a5aa0c5136cbd0a55e37b10ad59d539430330d726d37890d1a537462a3caf0fce7f1eac25438f2bba4edd6b000e3046ef4d3d43148ab738e5be08044f8edd25cbc68ec55db68cf94e4f49e806dd75d8cba06010e1580ee51cfdfd9b062222735b52054f183941ce2208c7feee46ac2b6f52d71ca6842b6f46f26d9415c34c7842e15a0d44684fceae0fd0ae30b3bf5e2744581bad3734b608f244ce87db83cfd9ddafaaded0d715063a3f5ec2fa9626eba2f061f462a6217a9271e0fda02c1b22a52fd64789c088da394e27a2679958c54f7a153745674d7a531bbd5741cff1c88794f45b3a6318e0dff63f095297a7f4d7ae961a255aa2eb2625537cbb43f21b5fa4dbb364914e03a5f60b10fc3fc461f2c2ac3fa8e1d5e11322265fd075a4c259946231215aa4eccc67b37b6c33b43f0322d682517e64819f38476ba4e8b15d425cc0f2ab81cdb1a1f43962acc81a1c8a90d3265b7a1f6e3154f9d212f70fa82a22e03d40b3afc840a606f7b53759977b1c3731e97085684ed50a1f84a258736905507e94f1c11e93875796b7d7db951965fb20276a97057654f371a5f913ac8c0eb406118ce67529da7da115ea23565df3c040669b92c7ada73f3064776b0cc480b393e2ccf8e4170e4732fcca7108949833942e5786ff2320646bd5997daa19d4dc91b1bf4439da6822ef93d8bdc4e1a028db6decd6c4c165037603669d5d4eeca2825c021076450622736f6103bf6e815ced0f0976c0a78447c1f962819bfe4be853ce0591ee5c28015a17faedad40ab80a85f0360302411f3a480b173d3721e674985c569f1216559c7af80693f40582258db1f949228000b43c17d55b23427d71d97a233bbc89bd5b3ae4fc802b1a5bac7039a3365dc0b6d4b0f77d05c83a78616d2ac2a40846de59a51f1bdfa38fd45f469dcab78047439bc1ad3322ba729dc8874b27fa69fe4eb68afdf4fa62d0fd064c455a43d4997267bec588c4ed5176f8869dcbaa33ca8a12768ecb755e5ef36e6a3f6686bcd410a33a10fa5dfa9b84874ea225bd8e583de9c091fad6644c94fc89db73cdf7d3191081fb4cac8fd44f99a0241a6ecdf860d7e57617a65d3b840e1c905f073fa190cef3281becda87b918c3f2f77cb1f6ce6d4139faa9beb70b83ff16609143b542901739568aeecd301a45c4bce909d7c7d7231255f2fb0c6535150de0b14260c66d57af6f5a0aad344f48a965492691425d2be387113bf5ce7de8a8560ccf1796ef9da3dac7daca6de3588e1f448dcf149924f68e1a73a3bab33b7d2496bba945024fece847f8fdeddc4e4d208427e8f18679a887b22528f85faac77837f1448d0c63a549835aa875cde719b204bc9a70517c3af95df85eca5497ffd4de5c93c9aeccbba3cd3c4a98e7688d1928adaca935d77f1b513ae14a75ed213fc05626b336dcaafab9ebc5c3cc4b89a7f210efb9658238872cf2299b5e23cb0befe6be7e42253ec2bbfaac7d8b6e7d741a4b62988d7f2e80654a779dc33a6bc34f045495c28dd27d511a1fe5472b82ab3a37abd7cb399fdd13ee7116bb79df00d78b097ad401e1034afec347edd6d5bf07a7aa13407890eca28b8d006d6309f9b7ed532a2e4ff01df8ed2cd5423487279ab4593e1387ad1b15b67e00aa1a09c69ab134f8afbc44e460b2d92a136f2d406ce624c843468004dd9b3557b2ec447dac64cd4fcc4392f357e05cc19b0efac7df11ccae40892e3325eb307094f7cd9c488aad268e044c88bea2673b9540eaddd31821c9ade5b0d090b2b3862735f008542323741fea14db03259591a98365aa73b6be4eb4186e948bce2d927a37ac5fdc7304620579ab0742f7e5462fe687b0a389f28d4ec0641384e4a20652a335d2f8cc862f473ae95ecfd250dd94511189696bf7fe6cbc74d0b1d4b6c87227ed5fcb2f4a500cca5b8ddff83e4f4febbd32091c5b18e470cf08696b3cac6bc0b3195a7b4581333971ef1fe999dc6724d955a8708c6a16fced18f054b857b34d8fbb14c5e60828443aceef0605270889ca7c697f5ad17c95a1eb9e5efd2b69c1734acdb72375bf0de5ff6acd27fb5bc6f8cd8e7a1397c751cb6c089677f4f1a9a5f8c141aca2e95329c39042d70c48d42399ce53cf2909fc8000e976d694ae711ddfae21ec326a7c6747a70ae02eac102a9bee77421e5d20857c8311635a2f2cd68078dd868ae722331c9c812b35c2d98d5ebfbe5e2adcee9ff427ad6989fa2d978ef479b5f96919f6bced7e8a182fe57b82f4d01545b547bc0fda69b6904d72eedf0e17d9b981b8a016970472829b32c3806487d82553b2f467cd18b12ecc311eda559051877af610f4b5f9b4206614ffc2df6f4bf10550d8598861efbcd4e5a4ad126f38fec9a3edeed482bf3133619bb055ba7916d371a23bddedc9076b4c15018abb394119e4e61df400ee7042abfe84c7298b4fd364759f6e1ec0035f4e7cf8b8c7c8d25657fc73a7e05ffc33a05de519cddf833205f0594572c2143298bd517f73758c8aa70d423aa905173ea80445f6f82c8ee4cb4819a66255bf850dd054386c283ecf43bf57b9ce551b5d5aa55dc3bfdeb61213ccd3cbb871b2316f2847709734255d6379c91cd08ffc7a41050181e63c93f55528a42cee73e5754862952fbab78fd3b47bed73a49a7699903bf57f7edb849669d30da6a397aa01c8425355b8e48f1630df618564ae69f950a1888321ab5451cfa5dee95ee2e2a05200455cd8f913db68394fe8f7e2658a44ffe138535f9fbe48d3934875016737c76a0448d4558e09215d699564859f08123f75ff4f02b15daa70288005f4dc30573b3ab18c7ab89512d2945cb0a410f8a66164f6bf8541ebc2d57c4500a3f6f1c523ea9e953b5b3da12381b688e6ba31949a6d554cb6cea0fdf6acf8d9326b18fe9c3114549d98f82257cbd28d35da9b5683935b7df1efd06da8158da60d009f32391e338134d2b01aa658bc2fe5002af0f75579ffcafd6ac76f2a188a7a2e3da84fe93827cf5453c67f609d41803614c22a4f3cdf122827e4ce6dacaf094317772d21fa96a06f5fb50674604c27162b525fc17f813b1518ccce519568367c5ef825cf15e7227ed6e16e455350587694de5e0fec6c86441c1f5735d3401ca6f895dcdb39fcb59ea9457694cd0723c67d21f317e83f09440fb4b3a01339d9631962f87de25e110589beeaf504db4ff53a752bfd2fad71bb90eb9ca91fe8ed9769068a9058e3877f6685ca7dc0232190c223010a43d23c46bf25bfe9d07e8fedc26035d87d1de6416f600b9b3bd59aa81a5c3eee4985d86465fa8ccadc7b4df22fced7e2356accfbb3651ea64aaf2c943926b31a4159e7b95b2bf50426a8062b4e89516da0b43ba50903a042572d74848e5ffb814618cb5e00d298500d18d4a1c9f0ee349a84f949b3d098eb7d1e5bffdb79da49bc836c761fcbabce6878157273edb0b45dbeb54c4da387895d72540102c28fe8b4ca172359f97290534aa13d23c2dac0193fe680a701130ef256e93c97cbb694eaff8253d707eb6e298a81ef0ff8644475a32e7fb138bafb5043d37bf13ca32f2d2fe3c43a930a7ca7fb3b9b69b41e1ec6db4eb2720b6642dbdc7886f366aa10a02294d2a808e8cfd495fcd5d9e7c24c28a6df0fa89ff966ed33ffac0d1106e135098078cf305644b84e15ad4ea5bf836dc154d3a4bce7a6795ffa2d656fc8e08b226badab1686d2a51dc5cbc3c7e974d22515e73ce2fd395fdfb33d4fa33d6298f3e1201b6582499da2a7ef7453e893993c3b819f28b4194c34a3b313e8b4bc985858d1bf5c62967c6491e5606852df7fb7920db3e904d9fae41af2075a7905c9da3adedfbec571367c1f9c9ed577493345ed63c7bf4f9c9edbb08841f664ac0df3e56bc5d6e00352a1b01e0a6dea5d1e60c786e5f93ac3abae7653e510a95fd5952226643f3926d4cc9b23bc732a2a1c86c762c850f4d582a407479873da49c65e82981b8f3eeb8b1e58b9973a8db464bcace8b19332b48d2d51390aa452df67595a92ce8038e290f5dd6ec88bc942c85a963144fa8ceca81448125811de5b6baad880241c1d6d6dda0de1bdac44003dd358c15314446d6a7b4234d307866a6b0ab927576b3f30f4b890834c70f9a4ef011a2b26d01742ea557e8cff16b2632e33b3e200d81c4157cb86c7669e936c497acdf72fb1c1efe289d9715fb98fc242796176809f461f8434a91518790dd53f1794beed10a4c42fd9384a7137448050cd9e81a33021d108adec29ba06c154e7c3896e345e01e1c82409e3f6ecb0977f5948a7a546d9be00491302ff0808cfac4e77cd8a7e03d8b34c1191ba2ad44c185d2158583ec327850f7ceaf557c67f27d62f47d574945fa3494dfe6b04aafcc910a94ce598d5bb176ec372d5ae2373921bcbc80358c21915b1311b5abbeb0fee13e2db62f4ade1b71d4ddad6dda8bbf4e907c4bc17955f7136b13433bea6844b7dbb95a71f035ecbf69a1de7804548956a026235b2a852f3370cba28afec1790ca88b4b505b16219df16d5203ef61b2e95f3c21f2ae1736de2fe2dc4418a994872a9cda306645743e3880a8f560934a1ec730222e5f368e41efae0a4807977fe54be7fcd0070ab32f97d8a9bdaf9e5cc186080d1c6cdd9c030eb0aecfc64907c1e1c21138403d594ffb35f91a6dbdc4ed51bf08f9fb2276d2f5b709b6780a8040ef0e784c5d5e947b23a7dfaaa9e96d6edce1f810fca9bdb3474b97ce6bb156f6012f68a9088c60f3c0396e5327675ef717e6fa4022e90c38fa28453dd60a5822ada424cd40af640ed37169d7c8d936620cdb3af30f8461d6a6740a0999aea45d3eac668b7e501a66e09e3ab3d1c3ffdd8591e1291428d9ceeba639d317bdae0ab5e03f2168fe7ffb37a6d28e3f54f35b406669d6c1b97f22b3c6b63b72b7b582c91f16f07ee48643389ed2995e8425d82b44c43a891c1dd81f5048f30aa7e276275e19a2909e9f39a88afa5601895ca1cd450bb1c658ec05c61c51af0871678b99ba10e00be86162a56e7bb54afb64316eef3745245e07d6ca0b3dbde8ed5e97bdcae7be5033814f5a5da029dbd62a617c706ef6f61ad70d58628b676361a608982541324485a7811e613d20588614ee10b0eddbd79470dcf6c970bd9c740c75cb621fc0dfcd42c12aa80942daffc6af7d441efb867de5658cbc978c2ba6b09424cf20f629e31fcf478c3ca3ff6780506303c8d6dacccb428ed178c4f181a37a3371a3ede13a217415597ee5ace27e3392e4bb16b15a927999f785ec1ba6894d7e44d01b8a90915faa149650646e735c0cc9a68077b38d46a364fe13dea2be205e50232ddc96d4ae611f9608dd4c45e7cb1f327b2bf6c8b67584bcd2a3b5715b40054a153955d73d74417da468461608266ed8b3fe6ed7b5f9111a170e05af2c362233cccb347930c4fb45c904791c277a68182fbab83d3e9ef5201340ed4c5c36ea24e8f953235a72e130ef7801b870037d4e0370fd8d24f74cbb72aa18e53bb7445321c4f4f6cf6753ae115f0a1c888b003bb29d855457a5c5c3b9e3f541047867098c7afc4f61be07d54742067b95cff58ea2e3d13b074107c17d2a3d6bf8d3b68af8541f814bfa649d91a8216d70f514e5cebf98209fdfdfd8d51654f730a63b87dee5539c63ec080e332ddf45251db3b3971c5c3b3288cc8ece622c07ad1843e1bf57c01f32d6ecc7b3aa9cc5091f465af33845c39bcfd7cba1ae49cc7a93dc22b7051b1a71b759df31c0608750998503d6cb04aef7dbe23d7543383f02e3d6c584abc57b3f99274662fede1577cd1b68d3ad1bafdbe7c2cf4f14ea4dc1155fdd86cab827bad2aff537388908e260924a88fa65f01ef07ca9198e597fe738177baaa5fd1f426daea08d4715fcbab59de3c306ee90d752849452761eb8749006ea3c32f8e9177c0ed81cc6a9eb126af1aa432c4e61443327df317222fceb11ae61241c311797447b910ae576adb92bcb491d9616e369c085b2880fe4d5932fbecdd6292ac6f22e1782736a5ccabcbfe7fc444b8fe2f5edc042848d1ec8c0f3470ddc240eacdf93f0dc5e8373f584dd5ae057b4b70b5e0c906c8eab6ce86c461b83c520a031b1e071095290f8bd102b51a869a8579906852b287857306804129c81d65750e5f90daef99f0a1ce0354147f9a843d39070b7af4e5edbb147d6a2615e3ce6ec5c64c32b42e52648c45d8cb8ac57fc4c553f579430de905f0f41a6a31d8715b9916bf298a8265903639104a5980f16c36c0b3e5568b812ef36c243ef8190609b048a831ffd1b901059fe094b0ee15817c8c04561a8f4305032786a201b027ab95bc3923f60e9f2a6cb1ea68834b7cd4ada809b5c2cd628acfe49943380f283e3be8e4c5f9b27f1bf15d92362a6575a26bda4c7a2966f770a6b47ea81fd54f78bf646ae27a607de5728d0789f33fb4e3d2e9b14dbb06bb0daa40e267bd12835f854aabfd89e329b3eb79e463919f3c4bd60e30aac5c43e98d6b8d1ddab99fef5c74c149133105436c8644399e7c3f8b98a87da2f9d106499570a8164098e10647eee327e0d7008a54aa0e31d302d2940d1e7d6956d63e2c8b4ea1f5e1bbfea798b00783a24cf0774af3a444353d8c392f4d1ca38ba635404ad7815ba0e441b53d618b936862ec981b100361614ffe19aac5f3b41ec1bb1b16d3cf4281f1b859b671418727ccdfc06de59e314bf5a8b524ea00041ff243e0ce7584f7dd57642271aead03eaa90e93fe0e178bd83116389f827955a6cf38a7740fdfb139629e95315bf00db2786c6cb5ee19defe758f8d5e793eb7c7932d7ef26cfd9fdc1fdaf8d2ac802381b2acd74416059a68ed10f5497d1b012d70cd574e12d4314844e02499ec2c338420826e3c203ec404748ffd244b68ccb4ad72884c9c81828c00d121e9813c752e80a7638dd7b61bf791256088eb09eae2940a98e85da1e9ba489d7eb69000330b9ec8099ebb531a30e934b0526e3209465a3062dcb3c7f8f3c965efa0bda638877d43ea79591455bb424b89c5860890ea8787f859bc30b4f1b3079419812811e8afdd082be23c8b6853416d6700d4d873c83f410e286b7256c9770dbfc0ab1bdb725868b506626d699a26c190066b33b35ff44556de0da7888d4e171d92bfcdd6c87fb64e6f289596dbcd7d07624cbbd9e9385cffecf4678b6eddc191610622f2798250ecd1e21bd79e05c225d51df7837bed8303952a3f04110efaaac9fd23369c002c1898797163d83949c023459e1f549c2eda17b1c9989b27d287ab4fbb73f0586088adc922a7cc2e7e2fb88ecaae76e766b4b60634cc4862152d0768233df46511b86b3854aef89407dfc2a9f9616b6e6e3b82951354c102704a217833222720db3fb53ca1537b84badeb4b701fba35626399e104b1e1654c5333cf36e0f506a23da0ddd2e34fee47a7e0c3c55d1f3a7dbf9ca82e8e8d09f2761a636d91111687eda1e8110dc5a6ae2c67c9581e95b29876e008973a96f34b360e9104d525ae5f","link":"/other/jiao-%E7%9A%84%E9%82%A3%E7%82%B9%E7%A0%B4%E4%BA%8B.html"},{"title":"fabric","text":"[TOC] 分类账 – 账本 学习channel : 定义 Fabric 网络功能, 比如块的制作方式和节点可以使用的 Fabric 版本 、 定义了哪些组织是联盟的成员。channel是特定网络成员之间的私有通信层。 只有被邀请到频道的组织才能使用频道，而网络中的其他成员是看不见的。每个channel都有一个独立的区块链分类账。 被邀请“加入”其同行的组织存储通道分类账并验证通道上的交易。 ordering nodes: 允许 peers 专注于验证事务并将它们提交到分类账中, 从客户端接收经过认可的事务后，它们对事务的顺序达成共识，然后将它们添加到块中 peers: 验证交易并将交易块添加到区块链分类账时，它们不会决定交易的顺序 smart contract: 智能合约。包含管理区块链分类账上资产的业务逻辑。 由网络成员运行的应用程序可以调用智能合同在分类账上创建资产，以及更改和转移这些资产。 应用程序还可以查询智能合同来读取分类账上的数据。 multiple signatures: 多重签名。为了确保交易有效，使用智能合同创建的交易通常需要由多个组织签署，以便提交给渠道分类账。 chaincode: 在 fabric 中，是智能合约打的包。链码安装在一个组织的 peer 上，在将链码部署到通道之前，通道的成员需要就链码定义达成一致，以建立链码治理。 当所需的组织数量一致时，链码定义可以提交给通道，并且链码已经可以使用了。然后部署到一个通道，在那里它可以用来认可交易和与区块链分类账互动。 实践hyperledger/fabric-samples 安装https://raw.githubusercontent.com/hyperledger/fabric/master/scripts/bootstrap.sh Releases · hyperledger/fabric 此脚本实现以下功能： 克隆 hyperledger/fabric-samples 仓库检出适当的版本标签将指定版本的Hyperledger Fabric平台特定二进制文件和配置文件安装到fabric-samples下的/bin和/config目录中下载指定版本的Hyperledger Fabric docker镜像 123456mcd fabric# 将 bootstrap.sh 弄到这个目录里chmod u+x bootstrap.sh./bootstrap.shexport PATH=/root/fabric/fabric-samples/bin:$PATH Bring up the test networkUsing the Fabric test network — hyperledger-fabricdocs master 文档 123456789101112131415161718192021222324252627282930cd fabric-samples/test-network./network.sh -h./network.sh down # 从以前的运行中删除任何容器或工件./network.sh up # 启动网络docker ps -a # 应该可以看到由 network.sh 脚本创建的三个节点./network.sh createChannel# createChannel 主要的操作：# 1. Creating channel mychannel# 2. Join Org1 peers to the channel...# 3. Join Org2 peers to the channel...export GOPROXY=https://goproxy.ioexport GO111MODULE=on./network.sh deployCC # 在通道上启动链码# deployCC 主要的操作：# 1. 安装 golang 的依赖# 2. Chaincode is packaged on peer0.org1# 3. Chaincode is installed on peer0.org1# 4. Chaincode is installed on peer0.org2# 5. Query installed successful on peer0.org1 on channel# 6. Chaincode definition approved on peer0.org1 on channel 'mychannel'# 7. Checking the commit readiness of the chaincode definition on peer0.org1 on channel 'mychannel'...# 8. Checking the commit readiness of the chaincode definition on peer0.org2 on channel 'mychannel'...# 9. Chaincode definition approved on peer0.org2 on channel 'mychannel'# 10. Chaincode definition committed on channel 'mychannel'# 11. Querying chaincode definition on peer0.org1 on channel 'mychannel'...# 12. Querying chaincode definition on peer0.org2 on channel 'mychannel'...# 13. Invoke transaction successful on peer0.org1 peer0.org2 on channel 'mychannel'# 14. Querying on peer0.org1 on channel 'mychannel'... 查询、更改1234567891011121314151617181920212223242526export PATH=${PWD}/../bin:${PWD}:$PATHexport FABRIC_CFG_PATH=$PWD/../config/# Environment variables for Org1export CORE_PEER_TLS_ENABLED=trueexport CORE_PEER_LOCALMSPID=\"Org1MSP\"export CORE_PEER_TLS_ROOTCERT_FILE=${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crtexport CORE_PEER_MSPCONFIGPATH=${PWD}/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/mspexport CORE_PEER_ADDRESS=localhost:7051# 查询peer chaincode query -C mychannel -n fabcar -c '{\"Args\":[\"queryAllCars\"]}'# 更改peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls true --cafile ${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n fabcar --peerAddresses localhost:7051 --tlsRootCertFiles ${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crt --peerAddresses localhost:9051 --tlsRootCertFiles ${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt -c '{\"function\":\"changeCarOwner\",\"Args\":[\"CAR9\",\"Dave\"]}'# 查询运行在 org 2对等节点上的链码# Environment variables for Org2export CORE_PEER_TLS_ENABLED=trueexport CORE_PEER_LOCALMSPID=\"Org2MSP\"export CORE_PEER_TLS_ROOTCERT_FILE=${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crtexport CORE_PEER_MSPCONFIGPATH=${PWD}/organizations/peerOrganizations/org2.example.com/users/Admin@org2.example.com/mspexport CORE_PEER_ADDRESS=localhost:9051peer chaincode query -C mychannel -n fabcar -c '{\"Args\":[\"queryAllCars\"]}'./network.sh down Fabcar ：用 fabric 的 SDK 调用智能合约编写你的第一个应用 — hyperledger-fabricdocs master 文档 12345678910cd fabric/fabric-samples/first-network# 删除旧网络./byfn.sh down# docker rm -f $(docker ps -aq) # 删除所有 images，不可调用docker rmi -f $(docker images | grep fabcar | awk '{print $3}')# 启动网络cd ../fabcar./startFabric.sh javascript# 最后出现下面的 doc 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263Follow the instructions for the programming language of your choice:JavaScript: Start by changing into the \"javascript\" directory: cd javascript Next, install all required packages: npm install Then run the following applications to enroll the admin user, and register a new user called appUser which will be used by the other applications to interact with the deployed FabCar contract: node enrollAdmin node registerUser You can run the invoke application as follows. By default, the invoke application will create a new car, but you can update the application to submit other transactions: node invoke You can run the query application as follows. By default, the query application will return all cars, but you can update the application to evaluate other transactions: node queryTypeScript: Start by changing into the \"typescript\" directory: cd typescript Next, install all required packages: npm install Next, compile the TypeScript code into JavaScript: npm run build Then run the following applications to enroll the admin user, and register a new user called appUser which will be used by the other applications to interact with the deployed FabCar contract: node dist/enrollAdmin node dist/registerUser You can run the invoke application as follows. By default, the invoke application will create a new car, but you can update the application to submit other transactions: node dist/invoke You can run the query application as follows. By default, the query application will return all cars, but you can update the application to evaluate other transactions: node dist/queryJava: Start by changing into the \"java\" directory: cd java Then, install dependencies and run the test using: mvn test The test will invoke the sample client app which perform the following: - Enroll admin and appUser and import them into the wallet (if they don't already exist there) - Submit a transaction to create a new car - Evaluate a transaction (query) to return details of this car - Submit a transaction to change the owner of this car - Evaluate a transaction (query) to return the updated details of this car 1234567891011121314151617181920212223242526272829303132333435# 安装应用程序cd javascriptnpm installls# 你会看到下边的文件：# enrollAdmin.js node_modules package.json registerUser.js# invoke.js package-lock.json query.js wallet# 登记管理员用户node enrollAdmin.js# 注册和登记 user1node registerUser.js# 查询账本node query.js # 使用 user1 查询账本# query.js 里面有一句是# const result = await contract.evaluateTransaction('queryAllCars');vim query.js # 把它调成 queryCar# const result = await contract.evaluateTransaction('queryCar', 'CAR4');node query.js# 更新账本node invoke.js# 构建和提交交易到网络的代码段：# await contract.submitTransaction('createCar', 'CAR12', 'Honda', 'Accord', 'Black', 'Tom');# 注意是 submitTransaction 而不是 evaluateTransaction# 为了查看这个被写入账本的交易，返回到 query.js 并将参数 CAR4 更改为 CAR12node query.js# 假设 Tom 很大方，想把他的 Honda Accord 送给一个叫 Dave 的人。# 为了完成这个，返回到 invoke.js 然后利用输入的参数，将智能合约的交易从 createCar 改为 changeCarOwner ：# await contract.submitTransaction('changeCarOwner', 'CAR12', 'Dave');node invoke.jsnode query.js 商业票据123456789101112131415161718192021222324252627# 路径定义export FabricSamples=/root/fabric/fabric-samples# 启动网络cd $FabricSamples/basic-network./start.sh# 查看各个 container 的日志# cd $FabricSamples/commercial-paper/organization/magnetocorp/configuration/cli/# ./monitordocker.sh net_basic# ./monitordocker.sh net_basic &lt;port_number&gt; # 或者指定一个端口# 启动一个 MagnetoCorpcd $FabricSamples/commercial-paper/organization/magnetocorp/configuration/cli/docker-compose -f docker-compose.yml up -d cliMagnetoCorp# 智能合约cd $FabricSamples/commercial-paper/organization/magnetocorp/contractdocker exec cliMagnetoCorp peer chaincode install -n papercontract -v 0 -p /opt/gopath/src/github.com/contract -l nodedocker exec cliMagnetoCorp peer chaincode instantiate -n papercontract -v 0 -l node -c '{\"Args\":[\"org.papernet.commercialpaper:instantiate\"]}' -C mychannel -P \"AND ('Org1MSP.member')\"# 应用程序依赖项cd $FabricSamples/commercial-paper/organization/magnetocorp/application/npm install# 钱包node addToWallet.js# 发行node issue.js 准备工作 12sudo ./bootstrap.sh 1.2.0export PATH=&lt;path to download location&gt;/bin:$PATH start.sh 1234567891011121314151617181920212223242526272829303132333435# 路径定义export FabricSamples=/root/fabric/fabric-samples# 3.1生成组织身份cd $FabricSamples/first-network/sudo ../bin/cryptogen generate --config=./crypto-config.yaml# 证书和密钥（即MSP材料）将被输出到当前一个名为 crypto-config 的目录中# 3.2.2 Orderer服务启动初始区块的创建sudo ../bin/configtxgen -profile TwoOrgsOrdererGenesis -outputBlock ./channel-artifacts/genesis.block# 3.2.3 生成应用通道交易配置文件export CHANNEL_NAME=mychannelsudo ../bin/configtxgen -profile TwoOrgsChannel -outputCreateChannelTx ./channel-artifacts/channel.tx -channelID $CHANNEL_NAME# 3.2.4 生成锚节点更新配置文件sudo ../bin/configtxgen -profile TwoOrgsChannel -outputAnchorPeersUpdate ./channel-artifacts/Org1MSPanchors.tx -channelID $CHANNEL_NAME -asOrg Org1MSPsudo ../bin/configtxgen -profile TwoOrgsChannel -outputAnchorPeersUpdate ./channel-artifacts/Org2MSPanchors.tx -channelID $CHANNEL_NAME -asOrg Org2MSP# 3.3 启动网络cd $FabricSamples/first-networkdocker-compose -f docker-compose-cli.yaml up -d# 创建通道docker exec -it cli bashexport CHANNEL_NAME=mychannelpeer channel create -o orderer.example.com:7050 -c $CHANNEL_NAME -f ./channel-artifacts/channel.tx --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem# 3.4.2 节点怎么加入应用通道peer channel join -b mychannel.block# 更新锚节点peer channel update -o orderer.example.com:7050 -c $CHANNEL_NAME -f ./channel-artifacts/Org1MSPanchors.tx --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pemexport CORE_PEER_LOCALMSPID=\"Org2MSP\"export CORE_PEER_ADDRESS=peer0.org2.example.com:7051 export CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/users/Admin@org2.example.com/mspexport CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crt peer channel update -o orderer.example.com:7050 -c $CHANNEL_NAME -f ./channel-artifacts/Org1MSPanchors.tx --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem stop.sh 12345# 路径定义export FabricSamples=/root/fabric/fabric-samples# 关闭网络cd $FabricSamples/first-networkdocker-compose -f docker-compose-cli.yaml down 私有数据start.sh 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071export FabricSamples=/root/fabric/fabric-samples# 删除之前的环境cd $FabricSamples/test-network./network.sh down# 下载链码所需的依赖cd $FabricSamples/chaincode/marbles02_private/goGO111MODULE=on go mod vendor# 删除之前弹珠私有数据链码的 Docker 容器docker rm -f $(docker ps -a | awk '($2 ~ /dev-peer.*.marblesp.*/) {print $1}')docker rmi -f $(docker images | awk '($1 ~ /dev-peer.*.marblesp.*/) {print $3}')# 创建通道cd $FabricSamples/test-network./network.sh up createChannel -s couchdb# 安装并定义一个带集合的链码# peer lifecycle chaincode package/install ...# 1. 以 Org1 管理员的身份与测试网络进行交互cd $FabricSamples/test-networkexport PATH=${PWD}/../bin:${PWD}:$PATHexport FABRIC_CFG_PATH=$PWD/../config/export CORE_PEER_TLS_ENABLED=trueexport CORE_PEER_LOCALMSPID=\"Org1MSP\"export CORE_PEER_TLS_ROOTCERT_FILE=${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crtexport CORE_PEER_MSPCONFIGPATH=${PWD}/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/mspexport CORE_PEER_ADDRESS=localhost:7051# 打包、安装 弹珠私有数据链码peer lifecycle chaincode package marblesp.tar.gz --path ../chaincode/marbles02_private/go/ --lang golang --label marblespv1peer lifecycle chaincode install marblesp.tar.gz# 切换到 Org2 管理员export CORE_PEER_LOCALMSPID=\"Org2MSP\"export CORE_PEER_TLS_ROOTCERT_FILE=${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crtexport CORE_PEER_MSPCONFIGPATH=${PWD}/organizations/peerOrganizations/org2.example.com/users/Admin@org2.example.com/mspexport CORE_PEER_ADDRESS=localhost:9051# 安装链码peer lifecycle chaincode install marblesp.tar.gz# 每个通道中的成员想要使用链码，都需要为他们的组织审批链码定义# 查询节点上已安装链码包的 IDpeer lifecycle chaincode queryinstalled# Package ID: marblespv1:f8c8e06bfc27771028c4bbc3564341887881e29b92a844c66c30bac0ff83966e, Label: marblespv1export CC_PACKAGE_ID=marblespv1:f8c8e06bfc27771028c4bbc3564341887881e29b92a844c66c30bac0ff83966eexport ORDERER_CA=${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pempeer lifecycle chaincode approveformyorg -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --channelID mychannel --name marblesp --version 1.0 --collections-config ../chaincode/marbles02_private/collections_config.json --signature-policy \"OR('Org1MSP.member','Org2MSP.member')\" --init-required --package-id $CC_PACKAGE_ID --sequence 1 --tls true --cafile $ORDERER_CAexport CORE_PEER_LOCALMSPID=\"Org1MSP\"export CORE_PEER_TLS_ROOTCERT_FILE=${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crtexport CORE_PEER_MSPCONFIGPATH=${PWD}/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/mspexport CORE_PEER_ADDRESS=localhost:7051peer lifecycle chaincode approveformyorg -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --channelID mychannel --name marblesp --version 1.0 --collections-config ../chaincode/marbles02_private/collections_config.json --signature-policy \"OR('Org1MSP.member','Org2MSP.member')\" --init-required --package-id $CC_PACKAGE_ID --sequence 1 --tls true --cafile $ORDERER_CA# 提交链码定义# 当组织中大部分成员审批通过了链码定义，该组织才可以提交该链码定义到通道上export ORDERER_CA=${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pemexport ORG1_CA=${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crtexport ORG2_CA=${PWD}/organizations/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/tls/ca.crtpeer lifecycle chaincode commit -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --channelID mychannel --name marblesp --version 1.0 --sequence 1 --collections-config ../chaincode/marbles02_private/collections_config.json --signature-policy \"OR('Org1MSP.member','Org2MSP.member')\" --init-required --tls true --cafile $ORDERER_CA --peerAddresses localhost:7051 --tlsRootCertFiles $ORG1_CA --peerAddresses localhost:9051 --tlsRootCertFiles $ORG2_CA# 初始化链码peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --channelID mychannel --name marblesp --isInit --tls true --cafile $ORDERER_CA --peerAddresses localhost:7051 --tlsRootCertFiles $ORG1_CA -c '{\"Args\":[\"Init\"]}'# 存储私有数据export CORE_PEER_LOCALMSPID=\"Org1MSP\"export CORE_PEER_TLS_ROOTCERT_FILE=${PWD}/organizations/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/tls/ca.crtexport CORE_PEER_MSPCONFIGPATH=${PWD}/organizations/peerOrganizations/org1.example.com/users/Admin@org1.example.com/mspexport CORE_PEER_ADDRESS=localhost:7051export MARBLE=$(echo -n \"{\\\"name\\\":\\\"marble1\\\",\\\"color\\\":\\\"blue\\\",\\\"size\\\":35,\\\"owner\\\":\\\"tom\\\",\\\"price\\\":99}\" | base64 | tr -d \\\\n)peer chaincode invoke -o localhost:7050 --ordererTLSHostnameOverride orderer.example.com --tls --cafile ${PWD}/organizations/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C mychannel -n marblesp -c '{\"Args\":[\"initMarble\"]}' --transient \"{\\\"marble\\\":\\\"$MARBLE\\\"}\" 在多台主机上搭建 Fabric集群30分钟快速在多台主机上搭建开发/测试Hyperledger Fabric集群（不适用于正式部署） | by Jasmine Yang | Medium 1git clone -b extra_hosts https://github.com/eugeneyl/one-org-kafka.git todocentos aliyun 搭建 Java 环境，再测试代码 工具其他Hyperledger Composer (已经过时了)Installing Installing pre-requisites Install nvm and switch node to 8 install docker、 vs code、Hyperledger Composer plugin for vscode 1234567curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.0/install.sh | bash# new iterm2 tabnvm —-versionnvm install v8nvm use 8node --version 一个链上不同节点能不能存入不同的数据 docker swarm 遇到的一些问题主要参考教程超级账本Fabric Raft多机集群部署教程 - 区块链教程的个人空间 - OSCHINA host1 1.以 manager 加入失败 先以 worker 加入，再 docker node promote 提升为 manager 每个Docker engine实例称为一个Node，既可以是物理机，也可以是虚拟机。分为manager和worker。worker只负责接收并执行任务，manager在此基础上还要接收用户指令，服务调度，服务发现… 2.docker 版本不一致出现问题 3./etc/systemd/sstem/docker.service.d/http-proxy.conf 中设置 noproxy 12[Service]Environment=\"NO_PROXY=localhost,127.0.0.1,123.56.42.224,47.93.53.47,39.105.73.181\" 4.创建 first-network 失败 教程 缺少步骤，去 官网 Networking with overlay networks | Docker Documentation docker run -dit –name alpine2 –network first-network alpine 问题ImportError: cannot import name ImageNotFound docker_service - Unable to load docker-compose. Try pip install docker-compose. Error: cannot import name ImageNotFound · Issue #37958 · ansible/ansible After pip uninstall -y docker docker-py &amp;&amp; pip install docker the above command completes successfully. Issue with chaincode instantiate in hyperledger fabric? - Stack Overflow Please check with this variable CORE_PEER_GOSSIP_USELEADERELECTION=true","link":"/blockchain/fabric.html"},{"title":"articles-to-read","text":"[TOC] 05-04https://mp.weixin.qq.com/s/Cimeyo4cVQsF-MfHBsNgGg?1=a读懂MySQL Explain结果，上亿数据的查询耗时从几分钟降到63毫秒记一次 SQL 优化过程，从 7.2s 到 10ms - 掘金考前复习必备MySQL数据库（关系型数据库管理系统） - 掘金数据库密码配置项都不加密？心也太大了！技术|必知必会的 Vim 编辑器基础命令技术|使用 Python 在 GitHub 上运行你的博客技术|10 篇对初学者和专家都有用的 Linux 命令教程我的外包经验：印度、中国和菲律宾（译文） - 阮一峰的网络日志容器与云|适用于初学者的基本 kubectl 和 Helm 命令又一款Docker/K8s管理平台的瑞士军刀 - 掘金分享|4 个 Linux 命令行下的 Markdown 工具写给大忙人看的操作系统 - 掘金从后端开发转职前端开发，我学到了什么？一日一学–如何对数值型特征进行分桶https://mr-houzi.com/2019/03/18/use-phone-capture-package/redis 分布式锁的 5个坑，真是又大又深[译]编写更快、更好的JavaScript的13个技巧 - 掘金Redis基础知识总结（面试必备）MySQL 数据库的提速器-写缓存（Change Buffer）K8s 资源全汇总 | K8s 大咖带你 31 堂课从零入门 K8s - 掘金K8S ? K3S ! - 掘金Java8的Stream流真香，没体验过的永远不知道Git 分支设计规范Germey (崔庆才丨静觅) / StarredElasticsearch数据迁移与集群容灾 - 云+社区 - 腾讯云Elasticsearch 跨集群同步-云栖社区-阿里云(16) ElasticSearch分页与深度分页问题解决 - 大数据学习笔记 - SegmentFault 思否Docker搭建与配置检查Docker实战之Gitlab搭建 - 掘金Docker 还需要学习吗？ - 掘金Debug MySQL slow query3w字深度好文|Redis面试全攻略，读完这个就可以和面试官大战几个回合了7个有用的JavaScript技巧 - 掘金2020 年为什么要选择 Go 并放弃 Python10分钟教你手写8个常用的自定义hooks - 掘金0voice/from_coder_to_expert: 2019年最新总结，从程序员到CTO，从专业走向卓越，分享大牛企业内部pdf与PPT 05-0530 Days of Python - Day 13 - Using a REST API Service - Python TUTORIAL - YouTube30 Days of Python - Day 14 - Web App with Flask, FastAPI, ngrok, and Invictify - Python TUTORIAL - YouTube30 Days of Python - Day 15 - Automated Video Processing with Moviepy - Python TUTORIAL - YouTubeDocker Tutorial and Introduction. Simple and Easy. - YouTubeDjango on Docker Tutorial - Deploy Django on Heroku with OpenCV - YouTube Django-Docker容器化部署：Django-Docker本地部署 - 掘金使用 Docker 容器化 Django Web 应用 - DockOne.ioerroneousboat/docker-django: A project to get you started with Docker and Django.testdrivenio/django-on-docker使用 Docker 部署 Python/Django 项目 (单机/swarm集群) 实战 Django - Docker —— 从入门到实践 - 极客学院Wikitwtrubiks/docker-tutorial: Docker 基本教學 - 從無到有 Docker-Beginners-Guide 教你用 Docker 建立 Django + PostgreSQL 📝twtrubiks/docker-django-nginx-uwsgi-postgres-tutorial: Docker + Django + Nginx + uWSGI + Postgres 基本教學 - 從無到有 ( Docker + Django + Nginx + uWSGI + Postgres Tutorial )容器与云|如何 Docker 化 Python Django 应用程序如何 Docker 化 Python Django 应用程序 - 知乎Docker 實戰系列（一）：一步一步帶你 dockerize 你的應用 - Larry・BlogDjango, Docker and Elasticsearch - Sergey Lyapustin - Medium使用Docker和Elasticsearch搭建全文本搜索引擎应用(上) - 每日头条Django的haystack對接elasticsearch伺服器完成全文檢索詳解 - IT閱讀es-django-example,使用Elasticsearch的示例 Django 项目,下载es-django-example的源码_GitHub_酷徒 05-09Mac息屏后如何保持网络连接，方便远程访问 - Questions张 - 博客园Mac下使用Charles抓包https接口 - Questions张 - 博客园MacOs上的Intellij idea高频快捷键总结（2018.1版本） - Questions张 - 博客园彻底解决MacOS上应用程序快捷键冲突的问题，自定义快捷键设置 - Questions张 - 博客园ZOC7在Mac下发送命令到多个窗口设置 - Questions张 - 博客园 倒计时提醒 · 雪之梦技术驿站java8新特性 · 雪之梦技术驿站webhook · 雪之梦技术驿站从零开始搭建服务器 · 雪之梦技术驿站 docker/kitematic: Visual Docker Container Management on Mac &amp; Windowsmoby/moby: Moby Project - a collaborative project for the container ecosystem to assemble container-based systemsnetdata/netdata: Real-time performance monitoring, done right! https://www.netdata.cloudcontainous/traefik: The Cloud Native Edge RouterKong/kong: 🦍 The Cloud-Native API Gatewaydrone/drone: Drone is a Container-Native, Continuous Delivery Platformtootsuite/mastodon: Your self-hosted, globally interconnected microblogging communitywagoodman/dive: A tool for exploring each layer in a docker imagedocker/compose: Define and run multi-container applications with Dockerwsargent/docker-cheat-sheet: Docker Cheat Sheetveggiemonk/awesome-docker: A curated list of Docker resources and projectsyeasy/docker_practice: Learn and understand Docker technologies, with real DevOps practice! 如何使用 Charles 抓包 | Xuan’s blog使用 webhook 自动更新博客 | Xuan’s blog 05-10pandownload还能用的旧版本 百度网盘资源不限速下载神器 - 无二辅助网《鬼吹灯》作者天下霸唱为你讲述盗墓故事-福利吧西瓜导航-收藏你喜欢的网站！ pandownload不能用了？Docker容器推荐第一期:Linux版本百度云_哔哩哔哩 (゜-゜)つロ 干杯~-bilibili搭建内网DNS解析过滤广告。Docker容器推荐第四期:ADGUARDHOME_哔哩哔哩 (゜-゜)つロ 干杯~-bilibili 宝塔面板Docker安装UnblockNeteaseMusic – 解锁网易云音乐变灰歌曲 - 大鸟博客宝塔linux面板使用教程，以及一些宝塔技术分享！Android手机/Docker使用UnblockNeteaseMusic播放网易云音乐客户端无版权歌曲 Mac/Win/Linux/iOS/Android | MAC萌新网 航歌-Docker / K8s-第1页K8s - Kubernetes集群的安装部署教程（CentOS系统） 航歌-SpringBoot / Cloud-第1页 05-11Watchtower - 自动更新 Docker 镜像与容器 - P3TERX ZONESSH 连接到 GitHub Actions 虚拟服务器环境 - P3TERX ZONEGitHub Actions 开启工作流程运行成功邮件通知 - P3TERX ZONEGitHub Actions 入门教程 - P3TERX ZONETermux 使用教程 #2 - 打造手机上的最强终端 - P3TERX ZONETermux 使用教程 #1 - Android 手机安装 Linux - P3TERX ZONESSH 密钥一键配置脚本 使用教程 - P3TERX ZONEGit 多远程仓库管理：GitHub 与 Gitee 双向同步 - P3TERX ZONE 打造 Windows 10 下最强终端方案：WSL + Terminus + Oh My Zsh + The Fuck - P3TERX ZONE便宜高性价比 VPS 推荐 - P3TERX ZONE开机启动并隐藏 cmd 窗口程序在后台运行 - winsw 使用教程 - P3TERX ZONE不限速！百度网盘转存到 OneDrive 、Google Drive 等其他网盘 - P3TERX ZONE 更新 GitHub 上 fork 的项目 - P3TERX ZONE删除 GitHub 所有 Commit 记录 - P3TERX ZONEGit 中的撤销操作 - P3TERX ZONEGit 常用命令速查表 - P3TERX ZONE tuteng/Best-websites-a-programmer-should-visit-zh: 程序员应该访问的最佳网站中文版 短网址(short URL)系统的原理及其实现小猿大圣的设计资源收藏夹 Web Development Tutorials | TestDriven.io How To: Redis Enterprise Products and Code Samples | Redis Labs RSS for HackersCopy of Generate an RSS feed from HTTP POST requests, retrieve via GET request | Edit - PipedreamTriggers | Docs Domesticating Kubernetes | Practical kubernetes as a home server | QuickbirdShrinking this sites docker imageFast Autocomplete Search for Your Website ◆ 24 waysInsomnia | API Design Platform and REST Client leeoniya/uPlot: 📈 A small, fast chart for time series, lines, areas, ohlc &amp; bars Tara 项目管理软件 Jira 的一个免费仿制品。 2、Insomnia 一个开源的桌面软件，用于简化 API 的设计和开发。 Help the World by Healing Your NGINX Configuration - NGINXHow a 2 person startup already uses 28 other tools Effortless Concurrency with Python’s concurrent.futures | Red’s Digressions Improve Your Tests With the Python Mock Object Library – Real Python Exploring an Alternative to Jupyter Notebooks for Python Development - Practical Business PythonCreating Interactive Dashboards from Jupyter Notebooks - Practical Business PythonUsing WSL to Build a Python Development Environment on Windows - Practical Business Python GoDjango - YouTube 05-16Kubernetes - 陈少文的博客Homebrew 使用 - 陈少文的博客工具 - 陈少文的博客PPT制作攻略之呈现篇课程笔记 - 陈少文的博客Python 下各种环境隔离工具简介 - 陈少文的博客Vim 必备插件 - 陈少文的博客ELK 日志搜索实践 - 陈少文的博客我的工具箱 - 陈少文的博客交互式笔记本-Jupyter - 陈少文的博客常用 Git 命令 - 陈少文的博客Vagrant 搭建 Django 开发环境 - 陈少文的博客Django 调试工具 django-debug-toolbar - 陈少文的博客 小技巧 - 陈少文的博客开发 Tips（1） - 陈少文的博客开发 Tips（2） - 陈少文的博客开发 Tips（3） - 陈少文的博客开发 Tips（4） - 陈少文的博客开发 Tips（5） - 陈少文的博客开发 Tips（6） - 陈少文的博客开发 Tips（7） - 陈少文的博客开发 Tips（8） - 陈少文的博客开发 Tips（9） - 陈少文的博客开发 Tips（10） - 陈少文的博客开发 Tips（11） - 陈少文的博客开发 Tips（12） - 陈少文的博客开发 Tips（13） - 陈少文的博客开发 Tips（14） - 陈少文的博客开发 Tips（15） - 陈少文的博客开发 Tips（16） - 陈少文的博客开发 Tips（17） - 陈少文的博客开发 Tips（18） - 陈少文的博客开发 Tips（19） - 陈少文的博客 fzf · macOS Setup Guide YouTubeDocker Tutorials - YouTube(1) Dockerize your Django App for Production (nginx + gunicorn) - Part 1 - YouTubeNew Frontend优秀的命令行工具（三）优秀的命令行工具（一）A Blog by Darren Burns优秀的命令行工具（二） 05-17通知滤盒 App+1 | 解决 Android 通知管理难题，用正则表达式过滤无关推送：通知滤盒 - 少数派微信群聊不是法外之地：用通知滤盒降低敏感词「炸群」风险 - 少数派 2020年程序猿必读10本好书推荐 - ABC实验室刚才面试官问我你会Mysql吗，我一聊一个多小时！ - 掘金[译]让Web应用更安全的13个小技巧 - 掘金 Caching in Django | TestDriven.io Docker 基本使用技巧 | 奔哲明的博客汇总一下我常用的Docker镜像以及说明 - 矿渣社区 - 其他系统 - 软件专区VPS菜鸟园本站提供免费 RSS 和 RSSHub 服务 - 思有云 - IOIOX思有云 - IOIOX - 个人博客 生活记录 原创文章 技术分享 资源分享 群晖技巧 群晖教程 免费FRP 免费内网穿透Hi, DIYgodTiny Tiny RSS : Login GitHub 文件加速分享优质工具 - gh-proxy 代理下载或 git clone Github 仓库 - 思有云 - IOIOXiptables 常用命令,选项,参数及实例整理收集 - 思有云 - IOIOX 「实战篇」从docker走向k8s进阶 – IT人故事会 交互式Kubernetes客户端，搭建高效Kubernetes命令行终端_Linux命令_云网牛站 LinuxTechi: Linux How-Tos, commands and Tutorials 应用控制(手机远程控制手机) - 发现频道 - 小众软件官方论坛最牛X的时间管理软件【KINGTIME】免费版！！！ - 『精品软件区』 - 吾爱破解 - LCG - LSG |安卓破解|病毒分析|www.52pojie.cn【自荐】点书-记录美好生活：一款自动记录人生的app - 发现频道 - 小众软件官方论坛Telegram 公众索引系统ZhiMap - 在线思维导图、电脑与手机微信里都能作图 inancgumus/learngo: 1000+ Hand-Crafted Go Examples, Exercises, and Quizzes IDEA 中 30 秒生成 Spring Cloud Alibaba 工程 - 掘金Kubernetes笔记（三）：Gitlab+Jenkins Pipeline+Docker+k8s+Helm自动化部署实践（干货分享！） - 掘金 05-22十个超级实用的git命令 - 技术小黑屋 交互式学习编程网站 - 创造者日报Markdown Image - 创造者日报看批 - 创造者日报 从开题报告到毕业论文，这 16 个工具帮你顺利毕业 - 少数派 MySQL常见6个考题在实际工作中的运用 10个 解放双手的 IDEA 插件，少些冤枉代码 app_spider/Red_Wars.py at master · xingag/app_spider Python-Functools 11个函数讲解 - 掘金 Centos 搭建 Java Web 开发环境-云栖社区-阿里云 AWS 云服务-专业的大数据和云计算服务以及云解决方案提供商 这一团糟的代码，真的是我写的？！ SQL 进阶技巧（上） 使用 archlinux-java 实现多 Java 版本共存|OhYee博客 05-26Base64编码详解别再暴力匹配字符串了，高效的KMP才是真的香！干货 | 数万实例数百TB数据量，携程Redis治理演进之路探寻繁杂定时任务的解决方案：分布式任务调度系统重磅 | eBay提出强大的轻量级推荐算法——洛伦兹因子分解机云原生时代消息中间件的演进路线思考结构，决定一个人能看多远2020前端性能优化清单（一）2020前端性能优化清单（二）2020前端性能优化清单（三）2020前端性能优化清单（四）2020前端性能优化清单（五） Elasticsearch能检索出来，但不能正确高亮怎么办？微前端在企业级应用中的实践(上) - 掘金关于零拷贝的一点认识 - 掘金看了《余欢水》，我学到了一个PPT技巧！第02期：MySQL 数据类型的艺术 - 大对象字段数据库连接配置策略和实践阿里终于重罚蒋凡，这对我们又有什么警示？PPT文字看不清？只会放大字号你就out了！看了2000页PPT案例，总结大神常用的5个技巧~定时和延时问题在业务场景中的常见处理提问清单 | 1招快速提高大脑思考能力纯干货 | 一篇讲透如何理解数据库并发控制 倒排索引/全文搜索基本原理 - 郭大侠1 - 博客园如何监控网页崩溃？ - 知乎终端下的常用操作干货 | Elasticsearch开发人员最佳实战指南Git commit message 规范 - 掘金编写可靠 bash 脚本的一些技巧 担心歌单变灰？试试这个拥有 10 万曲库的免费音乐云盘：YouTube Music - 少数派 https://mp.weixin.qq.com/s/g7wvEIBa0mK3XbJZ_4ZvRA业务异常只能看着数据库崩溃？看看应急处理利器——自动SQL限流一天有24个小时？别开玩笑了！如何快速定位 Redis 热 key?人生苦短，何苦2B ！隐私设置错误天天强调做PPT要会对齐，问题是到底该怎么对齐？越简单重复的事情越要自动化做blog/jsr107.zh.md at master · c-rainstorm/blog KMP算法教程 - 在线工具 05-28一千行 MySQL 学习笔记 - 格物 redis nginx 学习笔记归档 - Shui’s Blog归档 - Shui’s Blog iswbm/GolangCodingTime: Go编程时光，一个零基础入门 Golang 的教程 10个 解放双手的 IDEA 插件，少些冤枉代码值得收藏！介绍15个Linux下 CPU 监控工具 - 推酷(17) 值得收藏！介绍15个Linux下 CPU 监控工具 - 民工哥技术之路 - SegmentFault 思否Docker知识点的系统化梳理 - 推酷https://mp.weixin.qq.com/s/Jw1Bp6zdIO7aGbMdTNgZyw不懂Redis Cluster原理，我被同事diss了！(2)你真的会用Chrome devtool吗?有了这款低代码开发工具，Java 开发者可以告别 996 啦！面试官：不会看 Explain执行计划，简历敢写 SQL 优化？MySQL 数据库生成 10000 条测试数据 | Laravel China 社区进程间的五种通信方式介绍-详解 | Laravel China 社区如何让自己看起来不像编程菜鸟？别犯这9个编程错误 - CocoaChina_一站式开发者成长社区10款主流的软件测试工具，你用过吗 - CocoaChina_一站式开发者成长社区 https://mp.weixin.qq.com/s/toPt7ebEmM8wMa0UZqeUsg你以为只要努力就够了吗？2020 最新技术趋势你知道吗？ | VIP 上新K8S 生态周报| Helm v3.2.1 发布 - 掘金我在工作中是这样使用Git - 掘金从原理上理解MySQL的优化建议 - 掘金Mac 前端开发环境从零配置 - 掘金为什么要使用 Redis？ | Laravel China 社区 [译] 看我如何把网站性能提升 422% - 掘金震惊！生产力提效 300% 的秘诀全公开 - 掘金API 越来越多，没个接口管理工具哪行？试试这款吧！为什么 IPv6 难以取代 IPv4 - 面向信仰编程架构设计 | 分布式系统调度，Zookeeper集群化管理找不到页面 - 掘金给我一分钟，让你彻底明白MySQL聚簇索引和非聚簇索引 - 掘金同样都是开发，为什么你不如别人？ - 掘金有哪些算法惊艳到了你？ - 知乎Chrome DevTools中的这些骚操作，你都知道吗？ - 掘金 开发者头条 - 程序员分享平台 | 程序员必装的App | 技术极客的头条新闻cdk8s人人都能看懂的 6 种限流实现方案！(纯干货) - 掘金 (7 封私信 / 1 条消息) 程序员有哪些平时自己开发的小工具来简便工作？ - 知乎作为程序员的你，常用的工具软件有哪些？ - 知乎(7 封私信 / 1 条消息) 程序员如何一个人干几个人的活？ - 知乎 05-30高效工作—优雅的阅读微信公众号 | 冰蓝记录思考的地方高效工作—快捷键整理 | 冰蓝记录思考的地方Ubuntu下常用软件的安装使用及常见问题汇总 | 冰蓝记录思考的地方Windows系统下的一些经验技巧 | 冰蓝记录思考的地方Git常用命令总结 | 冰蓝记录思考的地方 前端 | Jecyu’s Notebookdocker | Jecyu’s Notebook2020 | Jecyu’s Notebook 读书笔记系列 异类-读书简记 | 冰蓝记录思考的地方 06学Spring Boot不能装! 🤣不装Maven、Database、Tomcat 才是正常开发模式 - 知乎 maven 最全教程 Centos中安装MySQL5.7 - 掘金 像素标签简单用法-对方是否查阅你的邮件 - 友人C 当你在浏览器中输入了本站网址并回车后，产生了哪些技术步骤？-小伟博客 如何选择分布式事务解决方案？ 面试三轮我倒在了一道sql题上——sql性能优化3万字总结，Mysql优化之精髓 - 掘金我以为我对Mysql事务很熟，直到我遇到了阿里面试官 - 掘金 面试官：说说你对 options 请求的理解 - 掘金什么？终止一个容器竟然用了 10 秒钟，这不能忍！项目中如何实现 SQL 耗时监控？（实现篇）ElasticSearch在数十亿级别数据下，如何提高查询效率？ - 知乎 AobingJava/JavaFamily: 【Java面试+Java学习指南】 一份涵盖大部分Java程序员所需要掌握的核心知识。 https://mp.weixin.qq.com/s/FW-Oc5JtedX0mdmjN6evzg玩转redis-延时消息队列 - li-peng - 博客园(20) Java8新特性之日期处理 - WayfreemBlog - SegmentFault 思否美团为啥要用Word汇报工作？Android字节码优化工具redex初探如何存储 Git 大文件？预览速度提升30倍，这是什么黑科技？（天猫618之3D渲染篇）记一次Redis连接池问题引发的RST | 火丁笔记掌门前端破茧成蝶之：低代码开发工具——魔方小公司招聘和管理 95 后的 10 个技巧。MySQL关于日期为零值的处理 - 掘金深知｜电商薅羊毛研究报告 https://mp.weixin.qq.com/s/bWlQVGekhxW3IOFKswBgRw驳《阿里「Java开发手册」中的1个bug》？PPT怎么画立方体? | 100个PPT技巧专栏·44期开发一个大型后台管理系统，应该用前后端分离的技术方案吗？微博和头条的Py交易！如何做好Code Review? 分享一份我们团队的 ChecklistLombok是让你代码处于“亚健康”状态的真正元凶京东腾讯拼多多 618其实是内部玩过家家？假如让你从0到1实现一个直播弹幕系统 - 王亚普的博客 | Wyp Blog你永远别想吃垮一家自助餐厅这11个问题解决工具，管理者必知！（建议收藏）如何不焦虑的活着Java锁的那些事儿https://mp.weixin.qq.com/s/GFPMIJGT4x6Q_86ZZfOOpg 喂来猫-常用工具一网打尽 - 发现频道 - 小众软件官方论坛推荐10个让你大开眼界的神仙软件工具 - 知乎(3 封私信 / 18 条消息) 哪些网站有好的学习资源？ - 知乎 Git 的 cherry-pick 命令还没用过？快来看看它的厉害！面向开发人员的12个最佳GUI Git客户端面向开发人员的Docker入门级实战，真香为什么数据库不应该使用外键 - 面向信仰编程三年 Git 使用心得 &amp; 常见问题整理 - 掘金 团队的GIT 分支管理策略(1) ： 基本概念- 嗨，世界- Medium 如何实现微服务的规模部署与批量发布？| 文末赠书 - 在线工具大厂如何开发和部署前端代码？淘宝8年案例解读 - 在线工具非暴力沟通：一条说话公式，解决90%沟通问题 - 在线工具Java 如何实现动态脚本？ - 在线工具基准测试表明, Async Python 远不如同步方式 - 在线工具明明价格下降了，为什么你却花了更多钱？ - 在线工具震惊！ConcurrentHashMap里面也有死循环，作者留下的“彩蛋”了解一下？ - 在线工具你知道自己的代码在线上有多少问题吗？ - 在线工具云原生已来，只是分布不均 - 在线工具JS逆向时碰到了恶心的死代码怎么办？手把手教你解决！ - 在线工具设计冲刺方法论：如何5天高效解决棘手难题 - 在线工具京喜前端自动化测试之路 - 在线工具顶级咨询公司PPT制作指南 - 在线工具💫 CSS 幻术 | 抗锯齿 | Lionad Blogs - 在线工具深度 | 实时历史数据库存储成本惊人，怎么破？ - 在线工具 常用的排序算法 - 掘金爬虫让我再次在女同学面前长脸了~(现实版真实案例) - 掘金面试官：小伙子，给我说一下Spring 和 Spring Boot 的区别吧 - 掘金实战讲解 Django-rest-framework JWT 用户认证开发 - 掘金简单实用，Python中常用的十个简短小技巧 - 掘金掌握了Docker Layer Caching才敢自称精通Dockerfile - 掘金微服务太多怎么办？简单聊聊微服务治理 - 掘金Python - rich 库讲解 - 掘金使用cron-job解决Valine-admin因流控原因自动唤醒失败的问题 - 掘金由一次安全扫描引发的思考：如何保障 API 接口的安全性？ - 掘金Springboot+layui实现数据列表及分页功能 - 掘金你要的Redis干货来了！Redis集群模式搭建与原理详解 - 掘金 https://mp.weixin.qq.com/s/kyFAWH3mVNJvurQDt4vchANginx 从入门到实践，万字详解！为了资料不被白嫖，我学会了做网站的防盗链为什么你会被限制登录网页版微信？ - 掘金MySQL 的优化方案总结 - 掘金Redis 性能优化 13 条军规 | Laravel China 社区插入数据时会自动更新 MySQL 非空字段 | Laravel China 社区一口气说出 6种 延时队列的实现方案，面试稳稳的 - 掘金字节跳动算法工程师面经_笔经面经_牛客网 www.mzitu.comwww.mzitu.com 区块链|智能合约编写之 Solidity 的基础特性区块链|智能合约编写之 Solidity 的高级特性软件开发|4 个不可或缺的 Git 脚本技术|线上图片请抛弃 PNG 和 JPG：使用 WebP软件开发|完美生活：git rebase-i软件开发|如何在 Mac 上使用 pyenv 运行多个版本的 Python软件开发|使用子模块和子树来管理 Git 项目容器与云|k9s：你没看错，这是一个加速 k8s 集群管理的工具技术|Linux 中软链接和硬链接的区别软件开发|学习用 Git 变基来改变历史！分享|20 个 Linux 终端下的生产力工具技术|如何在重启或启动时执行命令或脚本软件开发|使用 Python FastAPI 构建 Web 服务技术|如何使用 Tmpwatch/Tmpreaper 删除旧文件系统运维|我最喜欢用的 5 个 Ansible 模块分享|9 款 Linux 上的最佳笔记应用容器与云|提升你 Kubernetes 技能的 5 种方式技术|如何在 Bash 中编写函数软件开发|用 Python 绘制数据的7种最流行的方法 Serverless 的初心、现状和未来 - 在线工具简单实用，快速提升UI水平的8个技巧 - 在线工具Setzer首页、文档和下载 - LaTeX 编辑器 - OSCHINAQuickRedis首页、文档和下载 - Redis 可视化管理工具 - OSCHINA刚哥谈架构（七）- 为你的应用选择合适的API - naughty的个人页面 - OSCHINA哔哩哔哩天气时钟: 这款萌萌的物联网时钟可显示天气信息以及哔哩哔哩网站粉丝数(๑•̀ㅂ•́)و✧Git Extensions 3.4.2 发布，Git 图形化客户端 - OSCHINA死磕synchronized底层实现 - 掘金你居然还去服务器上捞日志，搭个日志收集系统难道不香么！ - 掘金FizzBuzz与写代码的“一万”个细节 - 在线工具Why Not To Start A Thread In The Constructor? | BaeldungRedirecting Logged-in Users with Spring Security | BaeldungDOM API中append和appendChild的三个不同点 - 在线工具xk-time 1.1.3 发布，增加时间格式验证功能 - OSCHINAProxy-Go 控制面板 v2.4 发布，小白轻松驾驭的全能网络代理服务！ - OSCHINA如何画好一张架构图？ - 在线工具7 个建议让 Code Review 高效又高质 - 在线工具函数式编程对于java有哪些质的提升？ - OSCHINASpring Tools 4.7.0 发布，Spring 开发工具 - OSCHINAIstio 1.6.3 发布，大型微服务系统管理工具 - OSCHINASpring @RequestParam vs @PathVariable Annotations | BaeldungLiveness and Readiness Probes in Spring Boot | Baeldung 技术|使用 at 命令在 Linux 上安排任务容器与云|值得关注的 9 个开源云原生项目 Diving into Go by building a CLI application | Eryb’s Space 07SQLite Python Placeholder – Four Methods for SQL Statements | Finxter 技术|通过重定向在 Linux 终端任意读写数据 08抖音、腾讯、阿里、美团春招服务端开发岗位硬核面试（完结） - 掘金","link":"/todo/articles-to-read.html"},{"title":"books to read","text":"[TOC] TXT、EPUB、UMD 技术书籍 左手 MongoDB，右手 Redis - 从入门到商业实战 pdf 高清扫描版 | Kindle 电子书，mobi 电子书，epub 电子书，azw3 电子书，PDF,TXT 格式免费下载《左手 MongoDB，右手 Redis - 从入门到商业实战》_谢乾坤 - AiBooKs.Cc.pdf - 免费高速下载 分布式系统常用技术及案例分析（第 2 版） pdf 高清扫描版 | Kindle 电子书，mobi 电子书，epub 电子书，azw3 电子书，PDF,TXT 格式免费下载《分布式系统常用技术及案例分析（第 2 版）》_柳伟卫 - AiBooKs.Cc.pdf - 免费高速下载 放松 外婆的道歉信 (豆瓣) 清单人生 (豆瓣) 小说 放学后 东野圭吾 恶意 东野圭吾","link":"/todo/books-to-read.html"},{"title":"待总结","text":"[TOC] 通俗易懂 限流算法原理剖析 3 种限流算法 Thread.sleep(0)的意义&amp; 多线程详解 - 走过路过ボ不要错过 - 博客园 为了重新竞争 CPU ，防止系统假死 如何模拟环境cron执行脚本？ | 智子 感觉就是把 env 保存下来，再删除当前 shell 的 env linux - why do I get “Suspended (tty output)” in one terminal but not in others? - Stack Overflow stty -tostop Docker容器访问宿主机网络 - jingsam","link":"/todo/%E5%BE%85%E6%80%BB%E7%BB%93.html"},{"title":"redis","text":"[TOC] 学习cv 学习法。。。 redis 七种数据类型1234567891011121314151617181920212223242526272829303132333435363738394041# string key-&gt;value,像是 mapset k vmset k1 v1 k2 v2get kmget k1 k2# hash key-&gt; {k1: v1, k2: v2} 像是 map 的 maphmset key k1 v1 k2 v2hgetall key# list name -&gt; [i1, i2...] value 是个 listlpush name i1lpush name i2lrange name 0 10# set name -&gt; {i1, i2, ...}哈希表实现的，增删查 复杂度都是 o1sadd name i1sadd name i2smembers name# zset name -&gt; {i1-&gt;score1, i2-&gt;score2, ...}# 有序 set 为什么是 z 而不是 s(sort) sset每个元素关联一个分数zadd name score1 i1zincreby name i1 自动加一zrangebyscore name 0 1000# Bitmaps通过类似 map 的结果存放 0 1可以用来统计状态，如日活？ 是否浏览过某个东西# HyperLogLogs 接受许多个元素作为输入，以很少空间给出元素的基数估算值基数：len(set(l))估算值：可能有一点误差PFADD unique::ip::counter '192.168.0.1'PFADD unique::ip::counter '127.0.0.1'PFCOUNT unique::ip::counter2 redis-cli1redis-cli -h host -p port -a password Redis 键(key) 命令如 del key, del 则是一个 key 命令 命令 描述 DEL 用于删除 key DUMP 序列化给定 key ，并返回被序列化的值 EXISTS 检查给定 key 是否存在 EXPIRE 为给定 key 设置过期时间 EXPIREAT 用于为 key 设置过期时间点 接受的时间参数是 UNIX 时间戳 PEXPIRE 设置 key 的过期时间，以毫秒计 PEXPIREAT 设置 key 过期时间的时间戳(unix timestamp)，以毫秒计 KEYS 查找所有符合给定模式的 key MOVE 将当前数据库的 key 移动到给定的数据库中 PERSIST 移除 key 的过期时间，key 将持久保持 PTTL 以毫秒为单位返回 key 的剩余的过期时间 TTL 以秒为单位，返回给定 key 的剩余生存时间 RANDOMKEY 从当前数据库中随机返回一个 key RENAME 修改 key 的名称 RENAMENX 仅当 newkey 不存在时，将 key 改名为 newkey TYPE 返回 key 所储存的值的类型 Redis 字符串(String) 命令 命令 描述 SET 设置指定 key 的值 GET 获取指定 key 的值 GETRANGE 返回 key 中字符串值的子字符 GETSET 将给定 key 的值设为 value ，并返回 key 的旧值 ( old value ) GETBIT 对 key 所储存的字符串值，获取指定偏移量上的位 ( bit ) MGET 获取所有(一个或多个)给定 key 的值 SETBIT 对 key 所储存的字符串值，设置或清除指定偏移量上的位(bit) SETEX 设置 key 的值为 value 同时将过期时间设为 seconds SETNX 只有在 key 不存在时设置 key 的值 SETRANGE 从偏移量 offset 开始用 value 覆写给定 key 所储存的字符串值 STRLEN 返回 key 所储存的字符串值的长度 MSET 同时设置一个或多个 key-value 对 MSETNX 同时设置一个或多个 key-value 对 PSETEX 以毫秒为单位设置 key 的生存时间 INCR 将 key 中储存的数字值增一 INCRBY 将 key 所储存的值加上给定的增量值 ( increment ) INCRBYFLOAT 将 key 所储存的值加上给定的浮点增量值 ( increment ) DECR 将 key 中储存的数字值减一 DECRBY 将 key 所储存的值减去给定的减量值 ( decrement ) APPEND 将 value 追加到 key 原来的值的末尾 Redis 哈希(Hash) 命令 命令 描述 HDEL 删除一个或多个哈希表字段 HEXISTS 查看哈希表 key 中，指定的字段是否存在 HGET 获取存储在哈希表中指定字段的值 HGETALL 获取在哈希表中指定 key 的所有字段和值 HINCRBY 为哈希表 key 中的指定字段的整数值加上增量 increment HINCRBYFLOAT 为哈希表 key 中的指定字段的浮点数值加上增量 increment HKEYS 获取所有哈希表中的字段 HLEN 获取哈希表中字段的数量 HMGET 获取所有给定字段的值 HMSET 同时将多个 field-value (域-值)对设置到哈希表 key 中 HSET 将哈希表 key 中的字段 field 的值设为 value HSETNX 只有在字段 field 不存在时，设置哈希表字段的值 HVALS 获取哈希表中所有值 HSCAN 迭代哈希表中的键值对 HSTRLEN 返回哈希表 key 中， 与给定域 field 相关联的值的字符串长度 Redis 列表(List) 命令 命令 描述 BLPOP 移出并获取列表的第一个元素 BRPOP 移出并获取列表的最后一个元素 BRPOPLPUSH 从列表中弹出一个值，并将该值插入到另外一个列表中并返回它 LINDEX 通过索引获取列表中的元素 LINSERT 在列表的元素前或者后插入元素 LLEN 获取列表长度 LPOP 移出并获取列表的第一个元素 LPUSH 将一个或多个值插入到列表头部 LPUSHX 将一个值插入到已存在的列表头部 LRANGE 获取列表指定范围内的元素 LREM 移除列表元素 LSET 通过索引设置列表元素的值 LTRIM 对一个列表进行修剪(trim) RPOP 移除并获取列表最后一个元素 RPOPLPUSH 移除列表的最后一个元素，并将该元素添加到另一个列表并返回 RPUSH 在列表中添加一个或多个值 RPUSHX 为已存在的列表添加值 Redis 集合(Set) 命令 命令 描述 SADD 向集合添加一个或多个成员 SCARD 获取集合的成员数 SDIFF 返回给定所有集合的差集 SDIFFSTORE 返回给定所有集合的差集并存储在 destination 中 SINTER 返回给定所有集合的交集 SINTERSTORE 返回给定所有集合的交集并存储在 destination 中 SISMEMBER 判断 member 元素是否是集合 key 的成员 SMEMBERS 返回集合中的所有成员 SMOVE 将 member 元素从 source 集合移动到 destination 集合 SPOP 移除并返回集合中的一个随机元素 SRANDMEMBER 返回集合中一个或多个随机数 SREM 移除集合中一个或多个成员 SUNION 返回所有给定集合的并集 SUNIONSTORE 所有给定集合的并集存储在 destination 集合中 SSCAN 迭代集合中的元素 Redis 有序集合(sorted set) 命令 命令 描述 ZADD 向有序集合添加一个或多个成员，或者更新已存在成员的分数 ZCARD 获取有序集合的成员数 ZCOUNT 计算在有序集合中指定区间分数的成员数 ZINCRBY 有序集合中对指定成员的分数加上增量 increment ZINTERSTORE 计算给定的一个或多个有序集的交集并将结果集存储在新的有序集合 key 中 ZLEXCOUNT 在有序集合中计算指定字典区间内成员数量 ZRANGE 通过索引区间返回有序集合成指定区间内的成员 ZRANGEBYLEX 通过字典区间返回有序集合的成员 ZRANGEBYSCORE 通过分数返回有序集合指定区间内的成员 ZRANK 返回有序集合中指定成员的索引 ZREM 移除有序集合中的一个或多个成员 ZREMRANGEBYLEX 移除有序集合中给定的字典区间的所有成员 ZREMRANGEBYRANK 移除有序集合中给定的排名区间的所有成员 ZREMRANGEBYSCORE 移除有序集合中给定的分数区间的所有成员 ZREVRANGE 返回有序集中指定区间内的成员，通过索引，分数从高到底 ZREVRANGEBYSCORE 返回有序集中指定分数区间内的成员，分数从高到低排序 ZREVRANK 返回有序集合中指定成员的排名，有序集成员按分数值递减(从大到小)排序 ZSCORE 返回有序集中，成员的分数值 ZUNIONSTORE 计算一个或多个有序集的并集，并存储在新的 key 中 ZSCAN 迭代有序集合中的元素（包括元素成员和元素分值） Redis HyperLogLog 命令 命令 描述 PFADD 添加指定元素到 HyperLogLog 中 PFCOUNT 返回给定 HyperLogLog 的基数估算值 PFMERGE 将多个 HyperLogLog 合并为一个 HyperLogLog Redis 发布订阅Redis 发布订阅 - Redis 基础教程 - 简单教程，简单编程 Redis 事务Redis Script( 脚本 ) 命令Redis 连接命令Redis 服务器Java 使用 RedisPHP 和 RedisRedis 数据备份与恢复Redis 服务安全Redis 性能测试Redis 客户端连接Redis 管道技术Redis 分区redis安全学习小记redis安全学习小记 REDIS连接命令 redis-cli -h host -p port 获取配置 config get * 编辑配置 修改 redis.conf 文件或使用 config set 命令来修改配置 数据类型 五种：string list set zset hash 服务器配置 用 sed 修改配置（值得学习的装逼技术）： sed -i ‘s/daemonize no/daemonize yes/g’ /etc/redis-5.0.8/redis.conf redis设置密码的两种方法redis-cli连上去config set requirepass 123456或者修改redis.conf 1sed -i 's/# requirepass foobared/requirepass 123456/g' /etc/redis/redis.conf 第二种方法设置完之后需要重启redis。 然后再用redis-cli*去连的时候需要先执行 AUTH 命令才可以执行其他命令。AUTH 123456*redis-cli -a 的参数本质是就是 AUTH 命令 数据库备份Redis SAVE 命令用于创建当前数据库的备份。常见利用其来写文件达到 getshell 的目的。 redis-cli -h 127.0.0.1 flushall #清空所有keyredis-cli -h 127.0.0.1 config set dir /var/www #设置数据库备份保存的目录redis-cli -h 127.0.0.1 config set dbfilename shell.php #设置数据库备份保存的文件名redis-cli -h 127.0.0.1 set webshell ““ #将想写入的内容写进key值redis-cli -h 127.0.0.1 save # 备份 实践安装Mac：1234567891011121314151617181920brew install redis# To have launchd start redis now and restart at login:# brew services start redis# Or, if you don't want/need a background service you can just run:# redis-server /usr/local/etc/redis.confbrew update;brew services start rediscotEdit /usr/local/etc/redis.conf注释 bind 127.0.0.1取消注释 requirepass foobare， 并配置密码brew services list # Name Status User Plist# elasticsearch stopped# redis started zhangronghui /Users/zhangronghui/Library/LaunchAgents/homebrew.mxcl.redis.plist# unbound stoppedbrew services restart redispip install iredisredis-cli/iredis -a redispassword --raw Linux 上centos安装redis - 掘金 1234567891011121314151617181920212223242526# wget http://download.redis.io/releases/redis-5.0.7.tar.gzrsync -azvhP ~/Downloads/Compressed/redis-5.0.7.tar.gz root@47.93.53.47:/tmpcd /tmptar xf /tmp/redis-5.0.7.tar.gzcd redis-5.0.7makemake PREFIX=/usr/local/redis installmkdir /usr/local/redis/etccp redis.conf /usr/local/redis/etcvim /usr/local/redis/etc/redis.conf1）配置redis为后台启动：daemonize no 修改为 daemonize yes2）开启外网访问：bind 127.0.01 注释掉3）配置密码：requirepass 设置密码pip install iredisiredis --rawvim ~/.zshrcexport PATH=/usr/local/redis/bin:$PATH# 启动redis-server /usr/local/redis/etc/redis.confiredis --raw 工具laixintao/iredis: Interactive Redis: A Terminal Client for Redis with AutoCompletion and Syntax Highlighting. 1pip install iredis 启动 redis-cli 或者更好的替代品 iredis ( pip install iredis ) 1iredis -a redispassword --raw # --raw 为了可以查看中文 mylxsw/redis-tui: A Redis Text-based UI client in CLI 其他","link":"/redis/redis.html"},{"title":"tools to use","text":"嗨，请准确无误地输入密码查看哟！ ","link":"/todo/tools-to-use.html"},{"title":"tricks-2020-06","text":"嗨，请准确无误地输入密码查看哟 ","link":"/tricks/tricks-2020-06.html"},{"title":"shop","text":"[TOC] 小米音箱米家空调伴侣 2远程遥控空调、电量统计 阿米洛 VDbox 键盘宝有线键盘 转 无线","link":"/todo/shop.html"},{"title":"weekly-contest-191","text":"[TOC] 数组中两元素的最大乘积3 切割后面积最大的蛋糕4 重新规划路线5 两个盒子中球的颜色数相同的概率7 11234567891011class Solution: def maxProduct(self, nums: List[int]) -&gt; int: m1 = m2 = 0 for i in nums: if i&gt;m1: m1, m2 = i, m1 continue elif i&gt;m2: m2 = i print(m1, m2) return (m1-1)*(m2-1) 21234567891011121314class Solution: def maxArea(self, h: int, w: int, hCuts: List[int], vCuts: List[int]) -&gt; int: hCuts.append(0) hCuts.append(h) vCuts.append(0) vCuts.append(w) hCuts.sort() vCuts.sort() def maxInterval(cuts): m = 0 for i in range(1, len(cuts)): m = max(m, cuts[i]-cuts[i-1]) return m return (maxInterval(hCuts)*maxInterval(vCuts))%(1000000007) 31234567891011121314151617181920212223242526272829class Solution: def minReorder(self, n: int, connections: List[List[int]]) -&gt; int: To, In = [set() for i in range(n)], [set() for i in range(n)] ''' To[x] -&gt; y In[y] -&gt; x ''' ans = 0 for x, y in connections: To[x].add(y) In[y].add(x) queue = [0] while queue: # 不为空，添加所有与 cur 相连的节点，若反向，添加到 ans 里 cur = queue.pop() # 如 0 -&gt; 1 ，所以 To 里面都是需要纠正的 # To 添加到 queue 里面后，discard In 里面对应的数据 # In 添加到 queue 里面后，discard To 里面对应的数据 ans += len(To[cur]) for i in To[cur]: queue.append(i) In[i].discard(cur) for i in In[cur]: queue.append(i) To[i].discard(cur) return ans 412","link":"/Leetcode%20weekly%20contest/weekly-contest-191.html"},{"title":"leetcode 25. Reverse Nodes in k-Group","text":"leetcode九章 题目描述Given a linked list, reverse the nodes of a linked list k at a time andreturn its modified list. k is a positive integer and is less than or equal to the length of thelinked list. If the number of nodes is not a multiple of k then left-outnodes in the end should remain as it is. Example: Given this linked list: 1-&gt;2-&gt;3-&gt;4-&gt;5 For k = 2, you should return: 2-&gt;1-&gt;4-&gt;3-&gt;5 For k = 3, you should return: 3-&gt;2-&gt;1-&gt;4-&gt;5 Note: Only constant extra memory is allowed. You may not alter the values in the list’s nodes, only nodes itself may be changed. Tags: Linked List Difficulty: Hard 答案虽说效率有点低，但是图很直观 图解k个一组翻转链表 - K 个一组翻转链表 - 力扣（LeetCode） \u0004 123456789101112131415161718192021222324252627282930313233343536373839# Definition for singly-linked list.# class ListNode:# def __init__(self, x):# self.val = x# self.next = Noneclass Solution: def reverseKGroup(self, head: ListNode, k: int) -&gt; ListNode: dummy = ListNode(0) dummy.next = head pre = dummy cur = dummy while cur.next: for i in range(k): cur = cur.next if not cur: break if not cur: break start = pre.next next = cur.next cur.next = None pre.next = self.reverse(start) start.next = next pre = start cur = start return dummy.next def reverse(self, head: ListNode) -&gt; ListNode: cur = head pre = None while cur: next = cur.next cur.next = pre pre = cur cur = next return pre","link":"/leetcode/leetcode-2**/leetcode-25-Reverse-Nodes-in-k-Group.html"},{"title":"leetcode 572. Subtree of Another Tree","text":"leetcode九章 题目描述Given two non-empty binary trees s and t , check whether tree thas exactly the same structure and node values with a subtree of s. Asubtree of s is a tree consists of a node in s and all of this node’sdescendants. The tree s could also be considered as a subtree of itself. Example 1:Given tree s: 3 / \\ 4 5 / \\ 1 2Given tree t: 4 / \\ 1 2Return true , because t has the same structure and node values with asubtree of s. Example 2:Given tree s: 3 / \\ 4 5 / \\ 1 2 / 0Given tree t: 4 / \\ 1 2Return false. Tags: Tree Difficulty: Easy 答案\u0004 123456789101112131415161718# Definition for a binary tree node.# class TreeNode:# def __init__(self, val=0, left=None, right=None):# self.val = val# self.left = left# self.right = rightclass Solution: def isSubtree(self, s: TreeNode, t: TreeNode) -&gt; bool: if s is None: return False return self.isSubtree(s.left, t) or self.isSubtree(s.right, t) or self.isSameTree(s, t) def isSameTree(self, s: TreeNode, t: TreeNode) -&gt; bool: if s is None and t is None: return True if any([s is None, t is None]): return False return s.val==t.val and self.isSameTree(s.left, t.left) and self.isSameTree(s.right, t.right)","link":"/leetcode/leetcode-5**/leetcode-572-Subtree-of-Another-Tree.html"},{"title":"qq机器人","text":"嗨，请准确无误地输入密码查看哟！ ","link":"/Mac/qq%E6%9C%BA%E5%99%A8%E4%BA%BA.html"},{"title":"软件测试读论文作业","text":"[TOC] 《具有堆快照的超扩展静态分析》论文阅读笔记张荣辉 2019140740 摘要 提出了一个“轻量化”分析，该分析将堆的动态快照与对程序行为的完全静态分析结合在一起。该分析具有极强的可扩展性，提供了超过3倍的加速。尽管它永远无法完全捕获所有程序行为（即，它不能与完全静态分析的近乎完美的调用相匹配），但它通常会非常接近它同时达到更高的（3.5x）精度 关键词程序分析，堆快照，可伸缩性 1.引言静态分析 主要优点： 完整性，即对实际行为的完美（或实际上是近乎完美的）回忆。 通常存在两个主要缺点： （i）计算量大并且存在可伸缩性问题 （ii）静态分析可能缺乏准确性，通常会产生大量误报，即预测的行为不会匹配实际执行。 动态分析 优点： 通过将自己限制在执行程序所显示的信息上，避免了计算量大的分析，还充分利用了学习到的运行时信息的优势，例如具体的参数和内存值（否则将很难静态推断） 缺点 并不详尽 因此，程序分析的空间是由竞争质量标准定义的：完整性，准确性和可伸缩性。 本文提出了一个折衷方案，该方案试图在静态分析中合并有限的动态信息，以一定的完整性（即召回实际执行）的代价大幅度提高可伸缩性和精度。 3.轻量化混合分析该方法包括对程序的静态分析，但仅考虑程序堆的动态视图 3.1轻量级静态分析 堆的建模是静态分析不可伸缩性的主要来源，为了避免建模，我们的轻量级静态分析是一个点到点的分析，它仅对堆负载（例如，从字段和数组读取）建模，而对存储（例如，字段更新）不建模 3.2动态分析 要生成我们的混合分析，需要为轻量级静态分析提供标准Java中的动态堆信息 HPROF 堆转储，是在程序执行期间堆和堆栈的快照 继Grech等， 我们的 HPROF堆转储分析器充分利用了基于Java的运行时环境中对堆分析的标准跨平台支持，即能够生成包含堆中分配的所有对象以及这些对象之间的引用（堆）。堆快照脱机分析。堆快照还提供有关堆栈形状的见解：它们包括创建任何对象时产生的完整堆栈跟踪。Grech等总结了现代堆快照技术的这种功能，因为典型的堆快照还集成了成千上万的堆快照。 通常，堆转储反映了程序复杂动态行为的很大一部分，而不管这种行为的原因如何：堆转储记录了累积语义，而不是观察特定动作（例如，反射或动态加载操作）发生了什么。程序执行在其本机环境和复杂环境中的影响。同时，堆转储不会丢失捕获动态操作（例如，动态调用图），因为每个对象在分配动态对象时都会记录描述动态上下文的信息。 3.3合并分析 必须强调的是，轻量级混合分析是静态分析 混合分析可以利用动态分析的优势，同时避免整个程序Java的某些弱点指针分析；反之亦然，与全面的静态分析相比，轻量级分析的主要好处是可伸缩性：动态分析在获取非常精确的堆信息方面具有出色的能力，该信息仍然可以完全捕获观察到的动态行为（但可能不会捕获其他行为）。与独立的动态分析相比，预期的好处是可以覆盖可能的程序行为，从而具有更高的完整性。 4.实现 我们在 Doop 指针和 taint 分析框架上实现 轻量混合分析。Doop 是全功能的，可处理Java语言的多个复杂语义方面，例如反射，隐式初始化，异常等。为了进行动态分析，我们使用了 heapdl 。 此外，我们对将堆快照集成到静态分析中：单例 、 缺失字段数据、反射分析 5.实验评估介绍轻量级分析的实验评估结果 5.1可扩展性 结论：所有基准测试结果表明，对于大型应用程序，权重分析至少比全静态分析快3.5倍；对于较小的应用程序，快达10倍以上。权重分析具有恒定的开销，这些开销在运行时占主导地位，例如可能无法访问的代码的预计算属性。 5.2完整性和准确性 完整性： 全静态分析是高度完整的，可以预期得到最新的静态分析。 轻量级分析在召回率方面也很不错 准确性： 与全静态分析相比，轻量级分析的精度指标明显更高（方法提高2.2倍，边缘提高3.5倍） 6.相关工作 静态和动态分析的组合空间很大。我们对相关工作的讨论只是一个示例。类似的一些工作： 使用静态分析来优化/减少运行时检查；堆快照；静态-动态分析组合；使用混合分析来发现错误；动态语言功能分析；捕获有关反射的运行时信息。","link":"/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E8%AF%BB%E8%AE%BA%E6%96%87%E4%BD%9C%E4%B8%9A.html"},{"title":"leetcode 680. Valid Palindrome II","text":"leetcode九章 题目描述Given a non-empty string s, you may delete at most one character. Judgewhether you can make it a palindrome. Example 1: Input: &quot;aba&quot; Output: TrueExample 2: Input: &quot;abca&quot; Output: True Explanation: You could delete the character &apos;c&apos;.Note: The string will only contain lowercase characters a-z. The maximum length of the string is 50000. Tags: String Difficulty: Easy 答案\u0004 12345678910111213141516171819202122class Solution: def isPalindrome(self, s): n = len(s) l = 0 r = n-1 while l&lt;=r: if s[l]!=s[r]: return False l += 1 r -= 1 return True def validPalindrome(self, s: str) -&gt; bool: n = len(s) l = 0 r = n-1 while l&lt;=r: if s[l]!=s[r]: return self.isPalindrome(s[l:r]) or self.isPalindrome(s[l+1:r+1]) l += 1 r -= 1 return True","link":"/leetcode/leetcode-6**/leetcode-680-Valid-Palindrome-II.html"},{"title":"leetcode-1300-sum-of-mutated-array-closest-to-target","text":"[TOC] 给你一个整数数组 arr 和一个目标值 target ，请你返回一个整数 value ，使得将数组中所有大于 value 的值变成 value 后，数组的和最接近 target （最接近表示两者之差的绝对值最小）。 如果有多种使得和最接近 target 的方案，请你返回这些整数中的最小值。 请注意，答案不一定是 arr 中的数字。 示例 1： 输入：arr = [4,9,3], target = 10输出：3解释：当选择 value 为 3 时，数组会变成 [3, 3, 3]，和为 9 ，这是最接近 target 的方案。示例 2： 输入：arr = [2,3,5], target = 10输出：5示例 3： 输入：arr = [60864,25176,27249,21296,20204], target = 56803输出：11361 提示： 1 &lt;= arr.length &lt;= 10^41 &lt;= arr[i], target &lt;= 10^5 本来以为 7 行代码就够的 - 转变数组后最接近目标值的数组和 - 力扣（LeetCode） 1234567891011121314151617181920class Solution: def findBestValue(self, arr: List[int], target: int) -&gt; int: arr.sort(reverse=True) _sum = 0 for i in reversed(range(len(arr))): # sum(arr[i+1:]) + (i+1)*arr[i] &gt; target if _sum + (i+1)*arr[i]&gt;target: # bug: [3, 4, 9] 10 输出 4 而不是 3，abs相等，但是 3 更小 # return round((target-_sum)/(i+1)) # 比较 int 和 ceil a = int((target-_sum)/(i+1)) b = a + 1 aabs = abs(target-_sum-(i+1)*a) babs = abs(target-_sum-(i+1)*b) if aabs&lt;=babs: return a return b _sum += arr[i] return arr[0]","link":"/leetcode/leetcode-1**/leetcode-1300-sum-of-mutated-array-closest-to-target.html"},{"title":"leetcode 739. Daily Temperatures","text":"leetcode九章 题目描述Given a list of daily temperatures T, return a list such that, for each dayin the input, tells you how many days you would have to wait until a warmertemperature. If there is no future day for which this is possible, put 0instead. For example, given the list of temperatures T = [73, 74, 75, 71, 69, 72, 76, 73], your output should be [1, 1, 4, 2, 1, 1, 0, 0]. Note: The length of temperatures will be in the range [1, 30000]. Eachtemperature will be an integer in the range [30, 100]. Tags: Hash Table, Stack Difficulty: Medium 答案LeetCode 图解 | 739.每日温度 - 每日温度 - 力扣（LeetCode） \u0004 123456789101112class Solution: def dailyTemperatures(self, T: List[int]) -&gt; List[int]: n = len(T) res = [0] * n stack = [] for i in range(n): while stack and stack[-1][1]&lt;T[i]: res[stack[-1][0]] = i - stack[-1][0] stack.pop() stack.append((i, T[i])) return res","link":"/leetcode/leetcode-7**/leetcode-739-Daily-Temperatures.html"},{"title":"leetcode 70. Climbing Stairs","text":"leetcode九章 题目描述You are climbing a stair case. It takes n steps to reach to the top. Each time you can either climb 1 or 2 steps. In how many distinct ways can youclimb to the top? Note: Given n will be a positive integer. Example 1: Input: 2 Output: 2 Explanation: There are two ways to climb to the top. 1. 1 step + 1 step 2. 2 stepsExample 2: Input: 3 Output: 3 Explanation: There are three ways to climb to the top. 1. 1 step + 1 step + 1 step 2. 1 step + 2 steps 3. 2 steps + 1 stepTags: Dynamic Programming Difficulty: Easy 答案\u0004 12345678class Solution: @functools.lru_cache(maxsize=None) def climbStairs(self, n: int) -&gt; int: if n==1: return 1 if n==2: return 2 return self.climbStairs(n-1)+self.climbStairs(n-2)","link":"/leetcode/leetcode-7**/leetcode-70-Climbing-Stairs.html"},{"title":"leetcode 15. 3Sum","text":"leetcode九章 题目描述Given an array nums of n integers, are there elements a , b , c innums such that a + b + c = 0? Find all unique triplets in the arraywhich gives the sum of zero. Note: The solution set must not contain duplicate triplets. Example: Given array nums = [-1, 0, 1, 2, -1, -4], A solution set is: [ [-1, 0, 1], [-1, -1, 2] ]Tags: Array, Two Pointers Difficulty: Medium 答案\u0004 1234567891011121314151617181920212223242526class Solution: def threeSum(self, nums: List[int]) -&gt; List[List[int]]: res = [] if len(nums)&lt;3: return res nums.sort() # for i in range(len(nums)-2): i = 0 while i&lt;len(nums)-2: l = i+1 r = len(nums)-1 while l&lt;r: _sum = nums[i]+nums[l]+nums[r] if _sum==0: res.append([nums[i], nums[l], nums[r]]) while l&lt;r-1 and nums[l]==nums[l+1]: l += 1 l += 1 elif _sum&gt;0: r -= 1 else: l += 1 while i&lt;len(nums)-2 and nums[i]==nums[i+1]: i += 1 i += 1 return res","link":"/leetcode/leetcode-1**/leetcode-15-3Sum.html"},{"title":"leetcode 983. Minimum Cost For Tickets","text":"leetcode九章 题目描述In a country popular for train travel, you have planned some train travellingone year in advance. The days of the year that you will travel is given as anarray days. Each day is an integer from 1 to 365. Train tickets are sold in 3 different ways: a 1-day pass is sold for costs[0] dollars; a 7-day pass is sold for costs[1] dollars; a 30-day pass is sold for costs[2] dollars. The passes allow that many days of consecutive travel. For example, if we geta 7-day pass on day 2, then we can travel for 7 days: day 2, 3, 4, 5, 6, 7,and 8. Return the minimum number of dollars you need to travel every day in the givenlist of days. Example 1: Input: days = [1,4,6,7,8,20], costs = [2,7,15] Output: 11 Explanation: For example, here is one way to buy passes that lets you travel your travel plan: On day 1, you bought a 1-day pass for costs[0] = $2, which covered day 1. On day 3, you bought a 7-day pass for costs[1] = $7, which covered days 3, 4, ..., 9. On day 20, you bought a 1-day pass for costs[0] = $2, which covered day 20. In total you spent $11 and covered all the days of your travel.Example 2: Input: days = [1,2,3,4,5,6,7,8,9,10,30,31], costs = [2,7,15] Output: 17 Explanation: For example, here is one way to buy passes that lets you travel your travel plan: On day 1, you bought a 30-day pass for costs[2] = $15 which covered days 1, 2, ..., 30. On day 31, you bought a 1-day pass for costs[0] = $2 which covered day 31. In total you spent $17 and covered all the days of your travel.Note: 1 &lt;= days.length &lt;= 365 1 &lt;= days[i] &lt;= 365 days is in strictly increasing order. costs.length == 3 1 &lt;= costs[i] &lt;= 1000 Tags: Dynamic Programming Difficulty: Medium 答案遇到一道不算简单的 DP，好不容易吭哧吭哧写出来，结果： \u0004 1234567891011121314151617181920212223242526272829303132333435import sysclass Solution: def mincostTickets(self, days: List[int], costs: List[int]) -&gt; int: # dp[n][4] n: 最多n天，4: -1(不买) 1 7 30 这 4 种选择 # 主要考虑：n 在不在 days 中； -1 买没买 # n 不在 days 中，一定不用买，其他三种情况存 sys.maxsize n = days[-1] # start 和 nxt 都存放 index start = days.pop(0) - 1 if days: nxt = days.pop(0) - 1 dp = [[sys.maxsize for _ in range(4)] for _ in range(n)] dp[start] = [sys.maxsize, costs[0], costs[1], costs[2]] m = {1: 1, 2: 7, 3: 30} for i in range(start+1, n): if nxt!=i: dp[i][0] = min(dp[i-1]) continue if days: nxt = days.pop(0) - 1 dp[i][1] = min(dp[i-1]) + costs[0] dp[i][2] = min(dp[i-1]) + costs[1] dp[i][3] = min(dp[i-1]) + costs[2] # 要求：i-j &gt;= start -&gt; j &lt;= i-start mj = i-start for j in range(1, min(29, mj)+1): dp[i][0] = min(dp[i][0], dp[i-j][3]) for j in range(1, min(6, mj)+1): dp[i][0] = min(dp[i][0], dp[i-j][2]) return min(dp[-1])","link":"/leetcode/leetcode-9**/leetcode-983-Minimum-Cost-For-Tickets.html"},{"title":"leetcode 1028. Recover a Tree From Preorder Traversal","text":"leetcode九章 题目描述We run a preorder depth first search on the root of a binary tree. At each node in this traversal, we output D dashes (where D is the depthof this node), then we output the value of this node. (If the depth of anode isD, the depth of its immediate child is D+1. The depth of the rootnode is 0.) If a node has only one child, that child is guaranteed to be the left child. Given the output S of this traversal, recover the tree and return itsroot. Example 1: ![](https://assets.leetcode.com/uploads/2019/04/08/recover-a-tree-from-preorder-traversal.png) Input: &quot;1-2--3--4-5--6--7&quot; Output: [1,2,5,3,4,6,7]Example 2: ![](https://assets.leetcode.com/uploads/2019/04/11/screen-shot-2019-04-10-at-114101-pm.png) Input: &quot;1-2--3---4-5--6---7&quot; Output: [1,2,5,3,null,6,null,4,null,7]Example 3: ![](https://assets.leetcode.com/uploads/2019/04/11/screen-shot-2019-04-10-at-114955-pm.png) Input: &quot;1-401--349---90--88&quot; Output: [1,401,null,349,88,90]Note: The number of nodes in the original tree is between 1 and 1000. Each node will have a value between 1 and 10^9. Tags: Tree, Depth-first Search Difficulty: Hard 答案\u0004 123456789101112131415161718192021222324252627282930313233343536373839404142# Definition for a binary tree node.# class TreeNode:# def __init__(self, x):# self.val = x# self.left = None# self.right = Noneclass Solution: def recoverFromPreorder(self, s: str) -&gt; TreeNode: nums = [i for i in s.split('-') if i!=''] deps = [] def getDepths(s, deps): t = 0 firstnum = True for i in s: if i=='-': t += 1 firstnum = True elif firstnum: deps.append(t) t = 0 firstnum = False getDepths(s, deps) data = list(zip(nums, deps)) print(nums, deps, data) def buildTree(data, dep): if not data: return None if data[0][1]&gt;dep: val, _ = data.pop(0) root = TreeNode(val) root.left = buildTree(data, dep+1) root.right = buildTree(data, dep+1) return root else: return None return buildTree(data, -1)","link":"/leetcode/leetcode-1**/leetcode-1028-Recover-a-Tree-From-Preorder-Traversal.html"},{"title":"软件测试实训PPT","text":"[TOC] 软件测试实训by 张荣辉 2019140740 大纲 1~3 周：测试工具学习及使用 4~10 周：Web 项目测试 11~15 周：AI 项目测试 测试工具学习及使用findbugs Junit postman swagger Scrutiny 9（web link validator） selenium Web 项目测试选取客户端子系统下的登录系统，注册系统，留言板系统 3 个功能点设计、执行测试主要采用测试工具：postman、selenium用例执行情况统计本次测试共有12个测试用例，实际测试项数为10，测试通过项为8，测试未通过项2，未测试项2 功能点名称 总测试项数 实际测试项数 测试通过项数 测试未通过项数 未测项 登录系统 5 3 3 0 2 注册系统 3 3 2 1 0 留言板系统 4 4 3 1 0 总计 12 10 8 2 2 2 个 bug注册系统：在注册新用户时，当用户名或密码不符合长度、格式要求，仅仅前端网页给出错误提示，但仍能注册成功。留言板系统：用 postman 请求接口正常，但是用户访问留言板板块，每次都会给出错误警告，影响用户体验。 AI 项目测试已有案例8种算法的准确率 伯努利贝叶斯 多项式贝叶斯 线性支持向量机 支持向量机 参数调优总结 高斯贝叶斯 伯努利贝叶斯 多项式贝叶斯 线性支持向量机 支持向量机 调优前 0.575 0.658 0.617 0.575 0.583 调优后 - 0.658 0.617 0.758 0.758 变化 - 0 0 +0.183 +0.175 与原案例对比原案例中最好的预测是决策树，通过调整参数，达到 0.750000 的准确率而 线性支持向量机 和 支持向量机 经过参数调优，预测准确率都达到了 0.7583 感谢聆听！","link":"/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%AE%9E%E8%AE%AD/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%AE%9E%E8%AE%AD%20PPT.html"},{"title":"leetcode 125. Valid Palindrome","text":"leetcode九章 题目描述Given a string, determine if it is a palindrome, considering only alphanumericcharacters and ignoring cases. Note: For the purpose of this problem, we define empty string as validpalindrome. Example 1: Input: &quot;A man, a plan, a canal: Panama&quot; Output: trueExample 2: Input: &quot;race a car&quot; Output: falseTags: Two Pointers, String Difficulty: Easy 答案\u0004 1234567891011class Solution: def isPalindrome(self, s: str) -&gt; bool: s = ''.join(i.lower() for i in s if i.isalnum()) n = len(s) l, r = 0, n-1 while l&lt;r: if s[l]!=s[r]: return False l += 1 r -= 1 return True","link":"/leetcode/leetcode-1**/leetcode-125-Valid-Palindrome.html"},{"title":"软件测试实训","text":"[TOC] 第一周实训 1. FindbugsAnalyze -&gt; findbugs -&gt; analyze project files 包括测试代码 分析完，有 2 个 bugs 主要是读写文件时没有指定编码 2. Junit添加 Junit maven 依赖 123456&lt;dependency&gt; &lt;groupId&gt;junit&lt;/groupId&gt; &lt;artifactId&gt;junit&lt;/artifactId&gt; &lt;version&gt;4.13&lt;/version&gt; &lt;scope&gt;test&lt;/scope&gt;&lt;/dependency&gt; cmd + n generate code: 为整个文件的函数生成 Junit test 为光标处函数生成 Junit test 生成代码123456789101112131415161718192021222324252627282930313233343536373839404142434445import org.junit.After;import org.junit.Before;import org.junit.Test;/** * log Tester. * * @author &lt;Authors name&gt; * @version 1.0 * @since &lt;pre&gt;3月 5, 2020&lt;/pre&gt; */public class logTest { @Before public void before() throws Exception { } @After public void after() throws Exception { } /** * Method: add(int a, int b) */ @Test public void testAdd() throws Exception { //TODO: Test goes here... } /** * Method: multiply(int a, int b) */ @Test public void testMultiply() throws Exception { //TODO: Test goes here... } /** * Method: main(String[] args) */ @Test public void testMain() throws Exception { //TODO: Test goes here... }} 第二周实训3. postmanDownload Postman App 创建了 collection 分类管理请求，先建立一个 request 简单测试： 再查看简书某位用户发的文章 还可以预览 response 为每个请求填写test script，测试返回状态码是 200 执行整个 collection 的测试结果 设置 cookie 4. swaggerSwagger UISwagger Editor 添加宠物 查询宠物 查询结果，就是刚添加的数据： 第三周实训 Scrutiny 9web link validator 没有 Mac 版本的软件，因此用 scrutiny 替代 以某博客为例，scrutiny 检测全站的链接有效性。有无效网页的报错信息、URL、出现在哪些页面中、文本内容。 selenium准备工作参考：mac 搭建selenium与ChromeDriver环境 - 简书 1pip install selenium 查看 Chrome 版本，并下载相应 webdriver ChromeDriver - WebDriver for Chrome设置 - 关于 Chrome selenium IDE 插件安装： Selenium IDE - Chrome 网上应用店 selenium IDE 的使用录制 script 后，页面如下： 右键导出项目 在 pycharm 中执行导出的测试脚本： 第四周实训 测试报告 手工测试 记录 bug 报告 按照如下格式提交测试报告（压缩文件提交） BUPTSSE-SPM-TestReport-2019140740-张荣辉 测试任务基本信息SPM课程网站是由北京邮电大学学生设计编写完成的，主要针对于软件教育部-IBM精品课程，网站内容包含课程简介、教学方法、课程特色、考评方式、书目、内容等等详尽的资料，其详尽全面的内容为同学提供了极大的便利，学生通过此网站可系统性并且有计划性地了解一个软件的项目开发。 测试任务是任意选取 3 个功能点进行测试。根据《SPM 课程网站需求规格》，选取客户端子系统下的登录系统，注册系统，留言板系统 3 个功能点设计、执行测试。 测试工具： postman selenium 测试执行结果统计用例执行情况统计 本次测试共有12个测试用例，实际测试项数为10，测试通过项为8，测试未通过项2，未测试项2 功能点名称 总测试项数 实际测试项数 测试通过项数 测试未通过项数 未测项 登录系统 5 3 3 0 2 注册系统 3 2 1 0 留言板系统 4 4 3 1 0 总计 12 10 8 2 2 未测项原因说明 原计划用身份为教师、学生、管理员、游客分别登陆系统，现缺失教师、管理员账号 测试结论本次测试了登录系统，注册系统，留言板系统 3 个功能点，基本功能正常，有以下 2 个小 bug： 注册系统：在注册新用户时，当用户名或密码不符合长度、格式要求，仅仅前端网页给出错误提示，但仍能注册成功。 留言板系统：用 postman 请求接口正常，但是用户访问留言板板块，每次都会给出错误警告，影响用户体验。 http://cookdata.cn 伯努利贝叶斯 多项式贝叶斯 线性支持向量机 支持向量机 高斯贝叶斯 伯努利贝叶斯 多项式贝叶斯 线性支持向量机 支持向量机 调优前 0.575 0.658 0.617 0.575 0.583 调优后 - 0.658 0.617 0.758 0.758 变化 - 0 0 +0.183 +0.175 ![image-20200609145058707](/Users/zhangronghui/Library/Application Support/typora-user-images/image-20200609145058707.png)","link":"/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%AE%9E%E8%AE%AD/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%AE%9E%E8%AE%AD.html"},{"title":"分类代码","text":"[TOC] 目录¶1. 数据读取、清洗、预处理 2. 建立模型并评估 3. 参数调优 4. 我做的工作 4.1 高斯贝叶斯 参数调优 4.2 伯努利贝叶斯 参数调优 4.3 多项式贝叶斯 参数调优 4.4 线性支持向量机 参数调优 4.5 支持向量机 参数调优 4.6 参数调优总结 4.7 与原案例对比 5 鲁棒性测试 数据字段及说明： 特征 说明 gender 学生性别（ 'Male' or 'Female’） NationalITy 学生国籍 PlaceofBirth 学生的出生地 StageID 受教育水平（‘lowerlevel’,’MiddleSchool’,’HighSchool’） GradeID 年级（‘G-01’, ‘G-02’, ‘G-03’, ‘G-04’, ‘G-05’, ‘G-06’, ‘G-07’, ‘G-08’, ‘G-09’, ‘G-10’, ‘G-11’, ‘G-12 ‘） SectionID 隶属的教室（’A’,’B’,’C’） Topic 课程名 Semester 学校的学期（’ First’,’ Second’） Relation 监护学生的家长（’mom’,’father’） raisedhands 学生在教室中举手次数（0-100） VisITedResources 学生访问在线课程次数（0-100） AnnouncementsView 学生检查新公告的次数（0-100） Discussion 学生参加讨论组的次数（0-100） ParentAnsweringSurvey 家长是否回答了学校提供的调查问卷（’Yes’,’No’） ParentschoolSatisfaction 家长对学校的满意度（’Yes’,’No’） StudentAbsenceDays 每个学生的缺勤天数（'above-7', 'under-7'） Class 根据学生的总成绩分为三个等级（低分：0-69，中等分数：70-89，高分：90-100） In&nbsp;[1]: ## 载入必要库 import numpy as np import pandas as pd import matplotlib.pyplot as plt %matplotlib inline import seaborn as sns from sklearn.preprocessing import LabelEncoderfrom sklearn.model_selection import train_test_split from sklearn.linear_model import LogisticRegressionfrom sklearn.neighbors import KNeighborsClassifierfrom sklearn.naive_bayes import BernoulliNBfrom sklearn.naive_bayes import GaussianNBfrom sklearn.naive_bayes import MultinomialNBfrom sklearn.svm import LinearSVCfrom sklearn.svm import SVCfrom sklearn.tree import DecisionTreeClassifier from sklearn.metrics import confusion_matrix, classification_report, accuracy_score &lt;/div&gt; In&nbsp;[2]: # 忽略警告 import warnings warnings.filterwarnings(\"ignore\") &lt;/div&gt; 数据读取、清洗、预处理¶ In&nbsp;[3]: # 导入数据 edm = pd.read_csv('./input/xAPI-Edu-Data.csv') edm.head() &lt;/div&gt; &lt;div class=&quot;prompt output_prompt&quot;&gt;Out[3]:&lt;/div&gt; .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } gender NationalITy PlaceofBirth StageID GradeID SectionID Topic Semester Relation raisedhands VisITedResources AnnouncementsView Discussion ParentAnsweringSurvey ParentschoolSatisfaction StudentAbsenceDays Class 0 M KW KuwaIT lowerlevel G-04 A IT F Father 15 16 2 20 Yes Good Under-7 M 1 M KW KuwaIT lowerlevel G-04 A IT F Father 20 20 3 25 Yes Good Under-7 M 2 M KW KuwaIT lowerlevel G-04 A IT F Father 10 7 0 30 No Bad Above-7 L 3 M KW KuwaIT lowerlevel G-04 A IT F Father 30 25 5 35 No Bad Above-7 L 4 M KW KuwaIT lowerlevel G-04 A IT F Father 40 50 12 50 No Bad Above-7 M 探索性数据分析¶首先，我们来查看一下数据集的基本信息： In&nbsp;[26]: ## 数据集基本信息 edm.info() &lt;/div&gt; &lt;div class=&quot;prompt&quot;&gt;&lt;/div&gt; &lt;class 'pandas.core.frame.DataFrame'&gt; RangeIndex: 480 entries, 0 to 479 Data columns (total 17 columns): gender 480 non-null object NationalITy 480 non-null object PlaceofBirth 480 non-null object StageID 480 non-null object GradeID 480 non-null object SectionID 480 non-null object Topic 480 non-null object Semester 480 non-null object Relation 480 non-null object raisedhands 480 non-null int64 VisITedResources 480 non-null int64 AnnouncementsView 480 non-null int64 Discussion 480 non-null int64 ParentAnsweringSurvey 480 non-null object ParentschoolSatisfaction 480 non-null object StudentAbsenceDays 480 non-null object Class 480 non-null object dtypes: int64(4), object(13) memory usage: 63.8+ KB 可以看到数据中不存在缺失值，但列名中有些字母大小写不统一，为方便我们统一改为首字母大写，其余小写： In&nbsp;[4]: # 修改列名 edm.rename(index=str, columns={'gender':'Gender', 'NationalITy':'Nationality', 'raisedhands':'RaisedHands', 'VisITedResources':'VisitedResources'}, inplace=True) &lt;/div&gt; 接下来我们通过可视化来进一步挖掘数据中包含的信息，首先来看3个成绩等级的数量分布情况： In&nbsp;[5]: ## 绘制条形图 plt.figure(figsize=(8, 6)) counts = sns.countplot(x='Class', data=edm, palette='coolwarm') counts.set(xlabel='Class', ylabel='Count', title='Occurences per class') plt.show() &lt;/div&gt; &lt;div class=&quot;prompt&quot;&gt;&lt;/div&gt; 可以看到虽然成绩中等的学生要比其余两个成绩等级的学生多一些，但数据集不存在类别分布极端不平衡的情况。 继续查看学生的国籍分布情况： In&nbsp;[29]: ## 绘制条形图 plt.figure(figsize=(8, 6)) nat = sns.countplot(x='Nationality', data=edm, palette='coolwarm') nat.set(xlabel='Nationality', ylabel='Count', title='Nationality Representation') plt.setp(nat.get_xticklabels(), rotation=60) plt.show() &lt;/div&gt; &lt;div class=&quot;prompt&quot;&gt;&lt;/div&gt; 数据集中的学生分别来自14个国家，大多数学生来自科威特或约旦。 下面再来看看两个不同学期间，学生成绩等级的数量分布差异： In&nbsp;[30]: ## 绘制条形图 plt.figure(figsize=(8, 6)) sem = sns.countplot(x='Class', hue='Semester', order=['L', 'M', 'H'], data=edm, palette='coolwarm') sem.set(xlabel='Class', ylabel='Count', title='Semester comparison') plt.show() &lt;/div&gt; &lt;div class=&quot;prompt&quot;&gt;&lt;/div&gt; 学生在第二学期（'S'）的表现比第一学期（'F'）好一些。 在第二学期，成绩中等的学生人数保持不变，但是成绩差的学生人数较少，而成绩好的学生人数较多。 接着来看看不同性别之间，学生成绩等级的数量分布差异： In&nbsp;[31]: ## 绘制条形图 plt.figure(figsize=(8, 6)) plot = sns.countplot(x='Class', hue='Gender', data=edm, order=['L', 'M', 'H'], palette='coolwarm') plot.set(xlabel='Class', ylabel='Count', title='Gender comparison') plt.show() &lt;/div&gt; &lt;div class=&quot;prompt&quot;&gt;&lt;/div&gt; 可以看到学生中男生较多，并且较女生而言，低分成绩的人较多，高分成绩的人较少。 再来看看访问在线教学资源次数的多少会不会影响学生的成绩等级： In&nbsp;[32]: ## 绘制条形图 plt.figure(figsize=(8, 6)) plot = sns.swarmplot(x='Class', y='VisitedResources', hue='Gender', order=['L', 'M', 'H'], data=edm, palette='coolwarm') plot.set(xlabel='Class', ylabel='Count', title='Gender comparison on visited resources') plt.show() &lt;/div&gt; &lt;div class=&quot;prompt&quot;&gt;&lt;/div&gt; 上图显示获得低分（L）的学生比获得中等分数（M）或高分（H）的学生访问的资源少的多。此外，获得高分（H）的女性几乎都访问了很多在线资源。 从数据集的基本信息中可以看到，有些特征的类型是字符型，需要在建模前做一些预处理。 数据预处理¶首先对字符型特征进行数值编码： In&nbsp;[6]: ## 选出需要进行数值编码的特征 str_columns = edm.dtypes[edm.dtypes == 'object'].index ## 数值编码for col in str_columns: edm[col] = LabelEncoder().fit_transform(edm[col]) &lt;/div&gt; 为方便后续建立模型，需要对除去目标特征之外的无序分类特征进行独热编码： In&nbsp;[7]: ## 独热编码 edm_new = pd.get_dummies(edm, columns=str_columns.drop(['Class', 'StageID'])) &lt;/div&gt; In&nbsp;[8]: ## 查看独热编码后的维度 edm_new.shape &lt;/div&gt; &lt;div class=&quot;prompt output_prompt&quot;&gt;Out[8]:&lt;/div&gt; (480, 71) 最后，将目标与数据分离，准备建立模型： In&nbsp;[9]: ## 分离目标 X_new = edm_new.drop(['Class'], axis=1) y_new = edm_new['Class'] &lt;/div&gt; 建立模型并评估¶首先将数据集划分为训练集和测试集，比例为4:3： In&nbsp;[10]: X_train,X_test, y_train, y_test = train_test_split(X_new, y_new, test_size=.25, random_state=10, stratify=y_new) &lt;/div&gt; 我们首先建立K-近邻、逻辑回归和支持向量机模型，并输出测试集的分类正确率和分类报告： In&nbsp;[38]: ## 建模并评估 keys = [] scores = [] models = {'K-近邻': KNeighborsClassifier(), '逻辑回归': LogisticRegression(), '线性支持向量机': LinearSVC(), '支持向量机': SVC()} for k,v in models.items(): mod = v mod.fit(X_train, y_train) pred = mod.predict(X_test) print(str(k) + ‘建模效果：’ + ‘\\n‘) print(classification_report(y_test, pred, target_names=[‘H’, ‘L’, ‘M’])) acc = accuracy_score(y_test, pred) print(‘分类正确率：’+ str(acc)) print(‘\\n‘ + ‘\\n‘) keys.append(k) scores.append(acc) table = pd.DataFrame({‘model’:keys, ‘accuracy score’:scores}) table &lt;/div&gt; &lt;div class=&quot;prompt&quot;&gt;&lt;/div&gt; K-近邻建模效果： precision recall f1-score support H 0.74 0.71 0.72 35 L 0.75 0.75 0.75 32 M 0.70 0.72 0.71 53avg / total 0.73 0.72 0.73 120 分类正确率：0.725 逻辑回归建模效果： precision recall f1-score support H 0.68 0.54 0.60 35 L 0.78 0.78 0.78 32 M 0.62 0.70 0.65 53avg / total 0.68 0.68 0.67 120 分类正确率：0.675 线性支持向量机建模效果： precision recall f1-score support H 0.00 0.00 0.00 35 L 0.90 0.59 0.72 32 M 0.51 0.94 0.66 53avg / total 0.47 0.57 0.48 120 分类正确率：0.575 支持向量机建模效果： precision recall f1-score support H 0.71 0.34 0.46 35 L 0.80 0.38 0.51 32 M 0.52 0.87 0.65 53avg / total 0.65 0.58 0.56 120 分类正确率：0.5833333333333334 &lt;div class=&quot;prompt output_prompt&quot;&gt;Out[38]:&lt;/div&gt; .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } model accuracy score 0 K-近邻 0.725000 1 逻辑回归 0.675000 2 线性支持向量机 0.575000 3 支持向量机 0.583333 从上表看到，K-近邻模型的预测效果较另外三种模型要好。 接下来我们建立决策树和三种朴素贝叶斯模型: In&nbsp;[39]: ## 建模并评估 keys = [] scores = [] models = {'决策树': DecisionTreeClassifier(), '高斯贝叶斯': GaussianNB(), '伯努利贝叶斯': BernoulliNB(), '多项式贝叶斯': MultinomialNB()} for k,v in models.items(): mod = v mod.fit(X_train, y_train) pred = mod.predict(X_test) print(str(k) + ‘建模效果：’ + ‘\\n‘) print(classification_report(y_test, pred, target_names=[‘H’, ‘L’, ‘M’])) acc = accuracy_score(y_test, pred) print(‘分类正确率：’+ str(acc)) print(‘\\n‘ + ‘\\n‘) keys.append(k) scores.append(acc) table = pd.DataFrame({‘model’:keys, ‘accuracy score’:scores}) table &lt;/div&gt; &lt;div class=&quot;prompt&quot;&gt;&lt;/div&gt; 决策树建模效果： precision recall f1-score support H 0.62 0.60 0.61 35 L 0.77 0.75 0.76 32 M 0.60 0.62 0.61 53avg / total 0.65 0.65 0.65 120 分类正确率：0.65 高斯贝叶斯建模效果： precision recall f1-score support H 0.57 0.80 0.67 35 L 0.57 0.88 0.69 32 M 0.59 0.25 0.35 53avg / total 0.58 0.57 0.53 120 分类正确率：0.575 伯努利贝叶斯建模效果： precision recall f1-score support H 0.64 0.66 0.65 35 L 0.71 0.75 0.73 32 M 0.64 0.60 0.62 53avg / total 0.66 0.66 0.66 120 分类正确率：0.6583333333333333 多项式贝叶斯建模效果： precision recall f1-score support H 0.59 0.66 0.62 35 L 0.72 0.66 0.69 32 M 0.58 0.57 0.57 53avg / total 0.62 0.62 0.62 120 分类正确率：0.6166666666666667 &lt;div class=&quot;prompt output_prompt&quot;&gt;Out[39]:&lt;/div&gt; .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } model accuracy score 0 决策树 0.650000 1 高斯贝叶斯 0.575000 2 伯努利贝叶斯 0.658333 3 多项式贝叶斯 0.616667 上表可以看到决策树、伯努利朴素贝叶斯模型效果较好。 参数调优¶我们对两次建模效果比较好的三种模型：K-近邻、决策树、逻辑回归模型(伯努利朴素贝叶斯模型不作调整)进行调参，看看能否进一步提升模型的效果： 逻辑回归¶首先对LogisticRegression类中的参数C、penalty和class_weight进行调整： In&nbsp;[40]: # 创建一个包含不同C取值的列表 C_grid = [0.2, 0.4, 0.6, 0.8, 1, 1.2, 1.4, 1.6, 1.8] # 创建一个包含不同penalty取值的列表penalty_grid = [“l2”, “l1”] # 创建一个包含不同class_weight取值的列表class_weight_grid = [‘balanced’, None] # 组合成元组列表parameters=[(C_, penalty_, class_weight_) for C_ in C_grid for penalty_ in penalty_grid for class_weight_ in class_weight_grid]parameters &lt;/div&gt; &lt;div class=&quot;prompt output_prompt&quot;&gt;Out[40]:&lt;/div&gt; [(0.2, 'l2', 'balanced'), (0.2, 'l2', None), (0.2, 'l1', 'balanced'), (0.2, 'l1', None), (0.4, 'l2', 'balanced'), (0.4, 'l2', None), (0.4, 'l1', 'balanced'), (0.4, 'l1', None), (0.6, 'l2', 'balanced'), (0.6, 'l2', None), (0.6, 'l1', 'balanced'), (0.6, 'l1', None), (0.8, 'l2', 'balanced'), (0.8, 'l2', None), (0.8, 'l1', 'balanced'), (0.8, 'l1', None), (1, 'l2', 'balanced'), (1, 'l2', None), (1, 'l1', 'balanced'), (1, 'l1', None), (1.2, 'l2', 'balanced'), (1.2, 'l2', None), (1.2, 'l1', 'balanced'), (1.2, 'l1', None), (1.4, 'l2', 'balanced'), (1.4, 'l2', None), (1.4, 'l1', 'balanced'), (1.4, 'l1', None), (1.6, 'l2', 'balanced'), (1.6, 'l2', None), (1.6, 'l1', 'balanced'), (1.6, 'l1', None), (1.8, 'l2', 'balanced'), (1.8, 'l2', None), (1.8, 'l1', 'balanced'), (1.8, 'l1', None)] In&nbsp;[43]: ## 参数调优 result_accuracy={} for parameter in parameters: result_accuracy[parameter] = LogisticRegression(random_state=0, penalty=parameter[1], C=parameter[0], class_weight=parameter[2]).fit(X_train, y_train).score(X_test, y_test) df = pd.DataFrame(list(result_accuracy.items()), columns=['parameter_list', 'accuracy']).sort_values(by='accuracy', ascending=False)[:5] df.reset_index(drop=True) &lt;/div&gt; &lt;div class=&quot;prompt output_prompt&quot;&gt;Out[43]:&lt;/div&gt; .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } parameter_list accuracy 0 (1, l1, balanced) 0.708333 1 (1.2, l1, balanced) 0.708333 2 (1.4, l1, balanced) 0.708333 3 (1.8, l1, balanced) 0.700000 4 (1, l1, None) 0.700000 当采用L1正则化项，正则化强度为1，且平衡样本分类权重时，模型效果提升最为明显。 K-近邻¶接着我们对KNeighborsClassifier类中的参数n_neighbors和weights进行调整： In&nbsp;[44]: # 创建一个包含不同n_neighbors取值的列表 k_grid = [1, 2, 3, 4, 5, 6, 7, 8] # 创建一个包含不同weights取值的列表weights_grid = [“uniform”, “distance”] # 组合成元组列表parameters = [(k_, weights_) for k_ in k_grid for weights_ in weights_grid]parameters &lt;/div&gt; &lt;div class=&quot;prompt output_prompt&quot;&gt;Out[44]:&lt;/div&gt; [(1, 'uniform'), (1, 'distance'), (2, 'uniform'), (2, 'distance'), (3, 'uniform'), (3, 'distance'), (4, 'uniform'), (4, 'distance'), (5, 'uniform'), (5, 'distance'), (6, 'uniform'), (6, 'distance'), (7, 'uniform'), (7, 'distance'), (8, 'uniform'), (8, 'distance')] In&nbsp;[45]: ## 参数调优 result_accuracy={} for parameter in parameters: result_accuracy[parameter] = KNeighborsClassifier(n_neighbors=parameter[0], weights=parameter[1]).fit(X_train, y_train).score(X_test, y_test) df = pd.DataFrame(list(result_accuracy.items()), columns=[‘parameter_list’, ‘accuracy’]).sort_values(by=‘accuracy’, ascending=False)[:5]df.reset_index(drop=True) &lt;/div&gt; &lt;div class=&quot;prompt output_prompt&quot;&gt;Out[45]:&lt;/div&gt; .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } parameter_list accuracy 0 (5, uniform) 0.725000 1 (5, distance) 0.725000 2 (6, uniform) 0.691667 3 (6, distance) 0.691667 4 (7, uniform) 0.683333 可以看到当近邻样本个数为5，K-近邻与加权K-近邻模型效果一致，且与之前持平。 决策树¶最后我们对DecisionTreeClassifier类中的参数criterion、max_depth和class_weight进行调整： In&nbsp;[46]: # 创建一个包含不同criterion取值的列表 criterion_grid = ['gini', 'entropy'] # 创建一个包含不同max_depth取值的列表depth_grid = [1, 2, 3, 4, 5, 6, 7, 8, None] # 创建一个包含不同class_weight取值的列表class_weight_grid = [‘balanced’, None] # 组合成元组列表parameters = [(criterion_, depth_, weights_) for criterion_ in criterion_grid for depth_ in depth_grid for weights_ in class_weight_grid]parameters &lt;/div&gt; &lt;div class=&quot;prompt output_prompt&quot;&gt;Out[46]:&lt;/div&gt; [('gini', 1, 'balanced'), ('gini', 1, None), ('gini', 2, 'balanced'), ('gini', 2, None), ('gini', 3, 'balanced'), ('gini', 3, None), ('gini', 4, 'balanced'), ('gini', 4, None), ('gini', 5, 'balanced'), ('gini', 5, None), ('gini', 6, 'balanced'), ('gini', 6, None), ('gini', 7, 'balanced'), ('gini', 7, None), ('gini', 8, 'balanced'), ('gini', 8, None), ('gini', None, 'balanced'), ('gini', None, None), ('entropy', 1, 'balanced'), ('entropy', 1, None), ('entropy', 2, 'balanced'), ('entropy', 2, None), ('entropy', 3, 'balanced'), ('entropy', 3, None), ('entropy', 4, 'balanced'), ('entropy', 4, None), ('entropy', 5, 'balanced'), ('entropy', 5, None), ('entropy', 6, 'balanced'), ('entropy', 6, None), ('entropy', 7, 'balanced'), ('entropy', 7, None), ('entropy', 8, 'balanced'), ('entropy', 8, None), ('entropy', None, 'balanced'), ('entropy', None, None)] In&nbsp;[48]: ## 参数调优 result_accuracy={} for parameter in parameters: result_accuracy[parameter] = DecisionTreeClassifier(criterion=parameter[0], max_depth=parameter[1], class_weight=parameter[2]).fit(X_train, y_train).score(X_test, y_test) df = pd.DataFrame(list(result_accuracy.items()), columns=[‘parameter_list’, ‘accuracy’]).sort_values(by=‘accuracy’, ascending=False)[:5]df.reset_index(drop=True) &lt;/div&gt; &lt;div class=&quot;prompt output_prompt&quot;&gt;Out[48]:&lt;/div&gt; .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } parameter_list accuracy 0 (gini, 6, None) 0.750000 1 (gini, 5, None) 0.741667 2 (gini, 5, balanced) 0.733333 3 (gini, 4, balanced) 0.733333 4 (gini, 4, None) 0.733333 当采用Gini系数计算不纯度，最大树深度设为5且平衡样本分类权重时，模型效果提升最明显, 也是目前的最佳模型，正确率达到了76%。 决策树模型特征重要性排序¶我们再次利用选出的最佳参数建立模型，并输出特征重要性： In&nbsp;[49]: ## 训练模型 model_DF = DecisionTreeClassifier(max_depth=5, class_weight='balanced') model_DF.fit(X_train, y_train) ## 特征重要性fea_imp = pd.Series(model_DF.feature_importances_, index=X_train.columns).sort_values(ascending=False)[:5]fea_imp &lt;/div&gt; &lt;div class=&quot;prompt output_prompt&quot;&gt;Out[49]:&lt;/div&gt; StudentAbsenceDays_0 0.364314 VisitedResources 0.205334 RaisedHands 0.103485 Relation_1 0.083464 AnnouncementsView 0.066993 dtype: float64 可以看到学生缺勤的天数StudentAbsenceDays、访问在线课程次数VisitedResources、举手次数RaisedHands、监护人Relation和检查新公告的次数AnnouncementsView这5个特征最为重要。至此，我们通过探索性数据分析、数据预处理、模型选择和参数调优，最终建立了决策树模型来预测学生的成绩等级。 我做的工作¶ In&nbsp;[&nbsp;]: from sklearn.linear_model import LogisticRegression from sklearn.neighbors import KNeighborsClassifier from sklearn.naive_bayes import BernoulliNB from sklearn.naive_bayes import GaussianNB from sklearn.naive_bayes import MultinomialNB from sklearn.svm import LinearSVC from sklearn.svm import SVC from sklearn.tree import DecisionTreeClassifier &lt;/div&gt; 高斯贝叶斯 参数调优¶ 主要有 2 个参数，priors, var_smoothing ，都没什么可调整的 伯努利贝叶斯 参数调优¶Parameters¶ alpha : float, default=1.0 Additive (Laplace/Lidstone) smoothing parameter (0 for no smoothing). binarize : float or None, default=0.0 Threshold for binarizing (mapping to booleans) of sample features. If None, input is presumed to already consist of binary vectors. fit_prior : bool, default=True Whether to learn class prior probabilities or not. If false, a uniform prior will be used. class_prior : array-like of shape (n_classes,), default=None Prior probabilities of the classes. If specified the priors are not adjusted according to the data. 试着调整 alpha binarize 参数，结果预测准确率没有任何变化 In&nbsp;[81]: # 构造 parameters alpha = [0.1*i for i in range(11)] binarize = [0.1*i for i in range(11)] parameters=[(alpha_, binarize_) for alpha_ in alpha for binarize_ in binarize] len(parameters) &lt;/div&gt; &lt;div class=&quot;prompt output_prompt&quot;&gt;Out[81]:&lt;/div&gt; 121 In&nbsp;[54]: # 参数调优 result_accuracy={} for parameter in parameters: result_accuracy[parameter] = BernoulliNB(alpha=parameter[0], binarize=parameter[1]).fit(X_train, y_train).score(X_test, y_test) df = pd.DataFrame(list(result_accuracy.items()), columns=[‘parameter_list’, ‘accuracy’]).sort_values(by=‘accuracy’, ascending=False)[:5]df.reset_index(drop=True) &lt;/div&gt; &lt;div class=&quot;prompt output_prompt&quot;&gt;Out[54]:&lt;/div&gt; .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } parameter_list accuracy 0 (0.5, 0.5) 0.658333 1 (0.5, 0.8) 0.658333 2 (0.6000000000000001, 0.7000000000000001) 0.658333 3 (0.6000000000000001, 0.6000000000000001) 0.658333 4 (0.6000000000000001, 0.5) 0.658333 多项式贝叶斯 参数调优¶Parameters¶ alpha : float, default=1.0 Additive (Laplace/Lidstone) smoothing parameter (0 for no smoothing). fit_prior : bool, default=True Whether to learn class prior probabilities or not. If false, a uniform prior will be used. class_prior : array-like of shape (n_classes,), default=None Prior probabilities of the classes. If specified the priors are not adjusted according to the data. 试着调整 alpha fit_prior 参数，结果预测准确率仍然没有任何变化 In&nbsp;[56]: # 构造 parameters alpha = [0.1*i for i in range(11)] fit_prior = [True, False] parameters=[(alpha_, fit_prior_) for alpha_ in alpha for fit_prior_ in fit_prior] parameters &lt;/div&gt; &lt;div class=&quot;prompt output_prompt&quot;&gt;Out[56]:&lt;/div&gt; [(0.0, True), (0.0, False), (0.1, True), (0.1, False), (0.2, True), (0.2, False), (0.30000000000000004, True), (0.30000000000000004, False), (0.4, True), (0.4, False), (0.5, True), (0.5, False), (0.6000000000000001, True), (0.6000000000000001, False), (0.7000000000000001, True), (0.7000000000000001, False), (0.8, True), (0.8, False), (0.9, True), (0.9, False), (1.0, True), (1.0, False)] In&nbsp;[57]: # 参数调优 result_accuracy={} for parameter in parameters: result_accuracy[parameter] = MultinomialNB(alpha=parameter[0], fit_prior=parameter[1]).fit(X_train, y_train).score(X_test, y_test) df = pd.DataFrame(list(result_accuracy.items()), columns=[‘parameter_list’, ‘accuracy’]).sort_values(by=‘accuracy’, ascending=False)[:5]df.reset_index(drop=True) &lt;/div&gt; &lt;div class=&quot;prompt output_prompt&quot;&gt;Out[57]:&lt;/div&gt; .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } parameter_list accuracy 0 (0.7000000000000001, True) 0.616667 1 (1.0, True) 0.616667 2 (0.2, True) 0.616667 3 (0.9, True) 0.616667 4 (0.8, True) 0.616667 线性支持向量机 参数调优¶选取以下Parameters:¶ dual : bool, default=True Select the algorithm to either solve the dual or primal optimization problem. Prefer dual=False when n_samples &gt; n_features. C : float, default=1.0 Regularization parameter. The strength of the regularization is inversely proportional to C. Must be strictly positive. multi_class : {'ovr', 'crammer_singer'}, default='ovr' Determines the multi-class strategy if `y` contains more than two classes. ``\"ovr\"`` trains n_classes one-vs-rest classifiers, while ``\"crammer_singer\"`` optimizes a joint objective over all classes. While `crammer_singer` is interesting from a theoretical perspective as it is consistent, it is seldom used in practice as it rarely leads to better accuracy and is more expensive to compute. If ``\"crammer_singer\"`` is chosen, the options loss, penalty and dual will be ignored. fit_intercept : bool, default=True Whether to calculate the intercept for this model. If set to false, no intercept will be used in calculations (i.e. data is expected to be already centered). class_weight : dict or 'balanced', default=None Set the parameter C of class i to ``class_weight[i]*C`` for SVC. If not given, all classes are supposed to have weight one. The \"balanced\" mode uses the values of y to automatically adjust weights inversely proportional to class frequencies in the input data as ``n_samples / (n_classes * np.bincount(y))``. In&nbsp;[67]: # 构造 parameters # penalty = ['l1', 'l2'] # loss = ['hinge', 'squared_hinge'] dual = [True, False] C = [0.2, 0.4, 0.6, 0.8, 1, 1.2, 1.4, 1.6, 1.8] multi_class = ['ovr', 'crammer_singer'] fit_intercept = [True, False] class_weight = ['balanced', None] # max_iter = [1000 * i for i in range(1, 11)] parameters=[(dual_, C_, multi_class_, fit_intercept_, class_weight_) for dual_ in dual for C_ in C for multi_class_ in multi_class for fit_intercept_ in fit_intercept for class_weight_ in class_weight ]len(parameters) &lt;/div&gt; &lt;div class=&quot;prompt output_prompt&quot;&gt;Out[67]:&lt;/div&gt; 144 In&nbsp;[68]: # 参数调优 result_accuracy={} for parameter in parameters: result_accuracy[parameter] = LinearSVC( dual=parameter[0], C=parameter[1], multi_class=parameter[2], fit_intercept=parameter[3], class_weight=parameter[4], ).fit(X_train, y_train).score(X_test, y_test) df = pd.DataFrame(list(result_accuracy.items()), columns=[‘parameter_list’, ‘accuracy’]).sort_values(by=‘accuracy’, ascending=False)[:5]df.reset_index(drop=True) &lt;/div&gt; &lt;div class=&quot;prompt output_prompt&quot;&gt;Out[68]:&lt;/div&gt; .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } parameter_list accuracy 0 (False, 1, crammer_singer, True, None) 0.758333 1 (False, 1.2, crammer_singer, False, balanced) 0.725000 2 (True, 0.4, crammer_singer, True, None) 0.725000 3 (False, 0.8, crammer_singer, False, None) 0.725000 4 (False, 0.6, crammer_singer, False, balanced) 0.716667 支持向量机 参数调优¶Parameter选取以下Parameters:¶ C : float, default=1.0 Regularization parameter. The strength of the regularization is inversely proportional to C. Must be strictly positive. The penalty is a squared l2 penalty. kernel : {'linear', 'poly', 'rbf', 'sigmoid', 'precomputed'}, default='rbf' Specifies the kernel type to be used in the algorithm. It must be one of 'linear', 'poly', 'rbf', 'sigmoid', 'precomputed' or a callable. If none is given, 'rbf' will be used. If a callable is given it is used to pre-compute the kernel matrix from data matrices; that matrix should be an array of shape ``(n_samples, n_samples)``. class_weight : dict or 'balanced', default=None Set the parameter C of class i to class_weight[i]*C for SVC. If not given, all classes are supposed to have weight one. The \"balanced\" mode uses the values of y to automatically adjust weights inversely proportional to class frequencies in the input data as ``n_samples / (n_classes * np.bincount(y))`` In&nbsp;[79]: # 构造 parameters C = [0.2, 0.4, 0.6, 0.8, 1, 1.2, 1.4, 1.6, 1.8] kernel = ['linear', 'poly', 'rbf', 'sigmoid'] class_weight = ['balanced', None] parameters=[(C_, kernel_, class_weight_) for C_ in C for kernel_ in kernel for class_weight_ in class_weight ] len(parameters) &lt;/div&gt; &lt;div class=&quot;prompt output_prompt&quot;&gt;Out[79]:&lt;/div&gt; 72 In&nbsp;[80]: # 参数调优 result_accuracy={} for parameter in parameters: result_accuracy[parameter] = SVC( C=parameter[0], kernel=parameter[1], class_weight=parameter[2], ).fit(X_train, y_train).score(X_test, y_test) df = pd.DataFrame(list(result_accuracy.items()), columns=['parameter_list', 'accuracy']).sort_values(by='accuracy', ascending=False)[:5] df.reset_index(drop=True) &lt;/div&gt; &lt;div class=&quot;prompt output_prompt&quot;&gt;Out[80]:&lt;/div&gt; .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .dataframe thead th { text-align: right; } parameter_list accuracy 0 (0.4, linear, balanced) 0.758333 1 (0.8, linear, balanced) 0.750000 2 (0.2, linear, balanced) 0.741667 3 (1.2, linear, balanced) 0.741667 4 (1, linear, balanced) 0.741667 参数调优总结¶ 高斯贝叶斯 伯努利贝叶斯 多项式贝叶斯 线性支持向量机 支持向量机 调优前 0.575 0.658 0.617 0.575 0.583 调优后 - 0.658 0.617 0.758 0.758 变化 - 0 0 +0.183 +0.175 3个贝叶斯，要不就是参数没什么可调的，要不就是调整没有作用。 线性支持向量机 支持向量机 经过参数调优，预测准确率都达到了 0.7583 与原案例对比¶原案例中最好的预测是决策树，通过调整参数，达到 0.750000 的准确率 而 线性支持向量机 和 支持向量机 经过参数调优，预测准确率都达到了 0.7583 5 鲁棒性测试¶ In&nbsp;[11]: my_X_train,my_X_test, my_y_train, my_y_test = train_test_split(X_new, y_new, test_size=.5, random_state=10, stratify=y_new) &lt;/div&gt; In&nbsp;[13]: params1 = (0.4, 'linear', 'balanced') SVC_result_accuracy = SVC( C=params1[0], kernel=params1[1], class_weight=params1[2], ).fit(X_train, y_train).score(my_X_test, my_y_test) &lt;/div&gt; In&nbsp;[14]: SVC_result_accuracy &lt;/div&gt; &lt;div class=&quot;prompt output_prompt&quot;&gt;Out[14]:&lt;/div&gt; 0.8125 实际上，测试数据集有相当一部分来自训练数据集，准确率必然比之前更好，这样的测试算不上鲁棒性测试，也没有什么意义。 In&nbsp;[&nbsp;]: &lt;/div&gt;","link":"/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%AE%9E%E8%AE%AD/%E5%88%86%E7%B1%BB%E4%BB%A3%E7%A0%81.html"},{"title":"leetcode 41. First Missing Positive","text":"leetcode九章 题目描述Given an unsorted integer array, find the smallest missing positive integer. Example 1: Input: [1,2,0] Output: 3Example 2: Input: [3,4,-1,1] Output: 2Example 3: Input: [7,8,9,11,12] Output: 1Note: Your algorithm should run in O ( n ) time and uses constant extra space. Tags: Array Difficulty: Hard 答案\u0004 12345678910111213class Solution: def firstMissingPositive(self, nums: List[int]) -&gt; int: def swap(nums, i, j): nums[i], nums[j] = nums[j], nums[i] n = len(nums) for i in range(n): while nums[i]&gt;0 and nums[i]!=i+1 and nums[i]-1&lt;n and nums[nums[i]-1]!=nums[i]: swap(nums, i, nums[i]-1) for i in range(n): if nums[i]!=i+1: return i+1 return n+1","link":"/leetcode/leetcode-4**/leetcode-41-First-Missing-Positive.html"},{"title":"leetcode 209. Minimum Size Subarray Sum","text":"leetcode九章 题目描述Given an array of n positive integers and a positive integer s , findthe minimal length of a contiguous subarray of which the sum ≥ s. Ifthere isn’t one, return 0 instead. *Example: * Input: s = 7, nums = [2,3,1,2,4,3] Output: 2 Explanation: the subarray [4,3] has the minimal length under the problem constraint.Follow up: If you have figured out the O ( n ) solution, try coding another solutionof which the time complexity is O ( n log n ). Tags: Array, Two Pointers, Binary Search Difficulty: Medium 答案\u0004 12345678910111213141516171819202122class Solution: def minSubArrayLen(self, s: int, nums: List[int]) -&gt; int: if not nums: return 0 l = 0 r = -1 _sum = 0 n = len(nums) res = n+1 while r&lt;n-1: r += 1 _sum += nums[r] while _sum&lt;s and r+1&lt;n: r += 1 _sum += nums[r] while l&lt;=r and _sum-nums[l]&gt;=s: _sum -= nums[l] l += 1 if _sum&gt;=s: res = min(res, r-l+1) print(l, r, _sum) return 0 if res==n+1 else res","link":"/leetcode/leetcode-2**/leetcode-209-Minimum-Size-Subarray-Sum.html"},{"title":"剑指 Offer 03. 数组中重复的数字","text":"[TOC] 剑指 Offer 03. 数组中重复的数字 - 力扣（LeetCode） 1234567891011class Solution: def findRepeatNumber(self, nums: List[int]) -&gt; int: # 0 1 2 3 3 5 def swap(l, a, b): l[a], l[b] = l[b], l[a] i = 0 for i in range(len(nums)): while i!=nums[i]: if nums[nums[i]]==nums[i]: return nums[i] swap(nums, i, nums[i])","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-03-%E6%95%B0%E7%BB%84%E4%B8%AD%E9%87%8D%E5%A4%8D%E7%9A%84%E6%95%B0%E5%AD%97.html"},{"title":"剑指 Offer 04 二维数组中的查找","text":"[TOC] 剑指 Offer 04. 二维数组中的查找 - 力扣（LeetCode） 1.找一个角落，使得 上下、左右 两个方向 一个正序 一个逆序 2.判断当前元素是否是 target，减少代码的编写（而不是判断下一行、列的元素） 12345678910111213141516class Solution: def findNumberIn2DArray(self, matrix: List[List[int]], target: int) -&gt; bool: # [n][m] if not matrix or not matrix[0]: return False n, m = len(matrix), len(matrix[0]) i, j = 0, m-1 while i&lt;n and j&gt;=0: if target==matrix[i][j]: return True if matrix[i][j]&gt;target: j -= 1 else: i += 1 return False","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-04-%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9F%A5%E6%89%BE.html"},{"title":"剑指 Offer 06 从尾到头打印链表","text":"[TOC] 剑指 Offer 06. 从尾到头打印链表 - 力扣（LeetCode） 1234567891011121314# Definition for singly-linked list.# class ListNode:# def __init__(self, x):# self.val = x# self.next = Noneclass Solution: def reversePrint(self, head: ListNode) -&gt; List[int]: l = [] cur = head while cur: l.append(cur.val) cur = cur.next return list(reversed(l)) 面试题06. 从尾到头打印链表（递归法、辅助栈法，清晰图解） - 从尾到头打印链表 - 力扣（LeetCode） 123class Solution: def reversePrint(self, head: ListNode) -&gt; List[int]: return self.reversePrint(head.next) + [head.val] if head else []","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-06-%E4%BB%8E%E5%B0%BE%E5%88%B0%E5%A4%B4%E6%89%93%E5%8D%B0%E9%93%BE%E8%A1%A8.html"},{"title":"剑指 Offer 07 重建二叉树","text":"[TOC] 123456789101112131415161718192021# Definition for a binary tree node.# class TreeNode:# def __init__(self, x):# self.val = x# self.left = None# self.right = Noneclass Solution: def rootIndex(self, preorder, inorder): for i in range(len(inorder)): if inorder[i]==preorder[0]: return i def buildTree(self, preorder: List[int], inorder: List[int]) -&gt; TreeNode: if not preorder: return None i = self.rootIndex(preorder, inorder) root = TreeNode(preorder[0]) root.left = self.buildTree(preorder[1:i+1], inorder[:i]) root.right = self.buildTree(preorder[i+1:], inorder[i+1:]) return roots","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-07-%E9%87%8D%E5%BB%BA%E4%BA%8C%E5%8F%89%E6%A0%91.html"},{"title":"剑指 Offer 05 替换空格","text":"[TOC] 剑指 Offer 05. 替换空格 - 力扣（LeetCode） 12345678910class Solution: def replaceSpace(self, s: str) -&gt; str: # return s.replace(' ', '%20') l = [] for i in s: if i==' ': l.append('%20') else: l.append(i) return ''.join(l)","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-05-%E6%9B%BF%E6%8D%A2%E7%A9%BA%E6%A0%BC.html"},{"title":"剑指 Offer 09. 用两个栈实现队列","text":"[TOC] 剑指 Offer 09. 用两个栈实现队列 - 力扣（LeetCode） 面试题09. 用两个栈实现队列（清晰图解） - 用两个栈实现队列 - 力扣（LeetCode） 双栈可实现列表倒序： 设有含三个元素的栈 A = [1,2,3]A=[1,2,3] 和空栈 B = []B=[]。若循环执行 AA 元素出栈并添加入栈 BB ，直到栈 AA 为空，则 A = []A=[] , B = [3,2,1]B=[3,2,1] ，即 栈 BB 元素实现栈 AA 元素倒序 。利用栈 BB 删除队首元素： 倒序后，BB 执行出栈则相当于删除了 AA 的栈底元素，即对应队首元素。 加入队尾 appendTail()函数： 将数字 val 加入栈 A 即可。删除队首deleteHead()函数： 有以下三种情况。当栈 B 不为空： B中仍有已完成倒序的元素，因此直接返回 B 的栈顶元素。否则，当 A 为空： 即两个栈都为空，无元素，因此返回 -1−1 。否则： 将栈 A 元素全部转移至栈 B 中，实现元素倒序，并返回栈 B 的栈顶元素。 12345678910111213141516171819202122232425class CQueue: def __init__(self): self.a, self.b = [], [] def appendTail(self, value: int) -&gt; None: self.a.append(value) def deleteHead(self) -&gt; int: if self.b: return self.b.pop() if self.a: while self.a: self.b.append(self.a.pop()) return self.b.pop() return -1# Your CQueue object will be instantiated and called as such:# obj = CQueue()# obj.appendTail(value)# param_2 = obj.deleteHead()","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-09-%E7%94%A8%E4%B8%A4%E4%B8%AA%E6%A0%88%E5%AE%9E%E7%8E%B0%E9%98%9F%E5%88%97.html"},{"title":"剑指 Offer 10- I 斐波那契数列","text":"[TOC] 12345678import functoolsclass Solution: @functools.lru_cache def fib(self, n: int) -&gt; int: if n&lt;2: return n return (self.fib(n-1)+self.fib(n-2))%1000000007","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-10-I-%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97.html"},{"title":"剑指 Offer 10- II 青蛙跳台阶问题","text":"[TOC] 12345678class Solution: def numWays(self, n: int) -&gt; int: if n&lt;2: return 1 a = b = 1 for _ in range(1, n): a, b = a+b, a return a%1000000007","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-10-II-%E9%9D%92%E8%9B%99%E8%B7%B3%E5%8F%B0%E9%98%B6%E9%97%AE%E9%A2%98.html"},{"title":"剑指 Offer 12 矩阵中的路径","text":"[TOC] 123456789101112131415161718192021222324class Solution: def exist(self, board: List[List[str]], word: str) -&gt; bool: directions = [(1, 0), (-1, 0), (0, 1), (0, -1)] n, m = len(board), len(board[0]) mark = [[False]*m for i in range(n)] lw = len(word) def helper(i, j, index): if not(0&lt;=i&lt;n and 0&lt;=j&lt;m) or mark[i][j] or board[i][j]!=word[index]: return False mark[i][j] = True if index==lw-1: return True for x, y in directions: if helper(i+x, j+y, index+1): return True mark[i][j] = False return False for i in range(n): for j in range(m): if helper(i, j, 0): return True return False","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-12-%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E8%B7%AF%E5%BE%84.html"},{"title":"剑指 Offer 13 机器人的运动范围","text":"[TOC] 剑指 Offer 13. 机器人的运动范围 - 力扣（LeetCode）面试题13. 机器人的运动范围（ DFS / BFS ，清晰图解） - 机器人的运动范围 - 力扣（LeetCode） 123456789101112class Solution: def movingCount(self, m: int, n: int, k: int) -&gt; int: def dfs(i, j, si, sj): if i&gt;=m or j&gt;=n or (i, j) in visited or si+sj&gt;k: return 0 visited.add((i, j)) return 1+\\ dfs(i+1, j, si+1 if (i+1)%10 else si-8, sj)+\\ dfs(i, j+1, si, sj+1 if (j+1)%10 else sj-8) visited = set() return dfs(0, 0, 0, 0)","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-13-%E6%9C%BA%E5%99%A8%E4%BA%BA%E7%9A%84%E8%BF%90%E5%8A%A8%E8%8C%83%E5%9B%B4.html"},{"title":"剑指 Offer 14- I 剪绳子","text":"[TOC] 剑指 Offer 14- I. 剪绳子 - 力扣（LeetCode）面试题14- I. 剪绳子（数学推导 / 贪心思想，清晰图解） - 剪绳子 - 力扣（LeetCode） 省略数学推导 1234567891011class Solution: def cuttingRope(self, n: int) -&gt; int: if n&lt;=3: return n-1 a, b = divmod(n, 3) if b==0: return int(math.pow(3, a)) elif b==1: return int(math.pow(3, a-1)*4) else: return int(math.pow(3, a)*2)","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-14-I-%E5%89%AA%E7%BB%B3%E5%AD%90.html"},{"title":"剑指 Offer 14- II 剪绳子 II","text":"[TOC] 更正规的解法： todo 大数求余 面试题14- II. 剪绳子 II（数学推导 / 贪心思想 + 快速幂求余，清晰图解） - 剪绳子 II - 力扣（LeetCode） 123456789101112131415161718class Solution: def cuttingRope(self, n: int) -&gt; int: if n&lt;=3: return n-1 a, b = divmod(n, 3) def powmod(x): res = 1 for _ in range(x): res = 3*res % 1000000007 return res if b==0: return powmod(a) elif b==1: return powmod(a-1)*4 % 1000000007 else: return powmod(a)*2 % 1000000007","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-14-II-%E5%89%AA%E7%BB%B3%E5%AD%90-II.html"},{"title":"剑指 Offer 15 二进制中1的个数","text":"[TOC] 1234567class Solution: def hammingWeight(self, n: int) -&gt; int: res = 0 while n: n &amp;= n-1 res += 1 return res","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-15-%E4%BA%8C%E8%BF%9B%E5%88%B6%E4%B8%AD1%E7%9A%84%E4%B8%AA%E6%95%B0.html"},{"title":"剑指 Offer 16 数值的整数次方","text":"[TOC] 12345678910111213141516171819202122232425262728293031323334class Solution: def myPow(self, x: float, n: int) -&gt; float: if x==0: return 0 if n==0: return 1 if x&lt;0 and n%2==1: sign = -1 else: sign = 1 if n&lt;0: reverse = True else: reverse = False x, n = abs(x), abs(n) i, v = 0, x # 当前位置 i, 当前 x**(2**i) res = 1 # 10 1010 4*256 while n!=1: print(n, v) if n&amp;1: print(i) print('res *', v) res *= v v *= v i += 1 n = n//2 print('res *', v) res *= v # 最高位 if sign==-1: res *= -1 if reverse: res = 1/res return res","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-16-%E6%95%B0%E5%80%BC%E7%9A%84%E6%95%B4%E6%95%B0%E6%AC%A1%E6%96%B9.html"},{"title":"剑指 Offer 17 打印从1到最大的n位数","text":"[TOC] 123class Solution: def printNumbers(self, n: int) -&gt; List[int]: return list(range(1, 10**n))","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-17-%E6%89%93%E5%8D%B0%E4%BB%8E1%E5%88%B0%E6%9C%80%E5%A4%A7%E7%9A%84n%E4%BD%8D%E6%95%B0.html"},{"title":"剑指 Offer 18 删除链表的节点","text":"[TOC] 123456789101112131415161718# Definition for singly-linked list.# class ListNode:# def __init__(self, x):# self.val = x# self.next = Noneclass Solution: def deleteNode(self, head: ListNode, val: int) -&gt; ListNode: dummy = ListNode(0) dummy.next = head cur = head pre = dummy while cur: if cur.val==val: pre.next = cur.next break pre = cur cur = cur.next return dummy.next","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-18-%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E7%9A%84%E8%8A%82%E7%82%B9.html"},{"title":"剑指 Offer 21 调整数组顺序使奇数位于偶数前面","text":"[TOC] 123456789class Solution: def exchange(self, nums: List[int]) -&gt; List[int]: i = j = 0 while j&lt;len(nums): if nums[j]%2: nums[i], nums[j] = nums[j], nums[i] i += 1 j += 1 return nums","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-21-%E8%B0%83%E6%95%B4%E6%95%B0%E7%BB%84%E9%A1%BA%E5%BA%8F%E4%BD%BF%E5%A5%87%E6%95%B0%E4%BD%8D%E4%BA%8E%E5%81%B6%E6%95%B0%E5%89%8D%E9%9D%A2.html"},{"title":"剑指 Offer 19 正则表达式匹配","text":"[TOC] 123456789101112131415161718192021222324252627282930313233343536373839class Solution: def isMatch(self, s: str, p: str) -&gt; bool: # a a b # 1 0 0 0 # c 0 0 0 0 # * 1 0 0 0 # a 0 1 0 0 # * 1 1 1 0 # b 0 0 0 1 # 更复杂的情况：\"mississippi\" \"mis*is*p*.\" n, m = len(p), len(s) dp = [[False]*(m+1) for _ in range(n+1)] dp[0][0] = True # 更新 dp 第一列的值 nums = 0 # 当前字母个数，遇到 * -1, 大于 1 break for i in range(1, n+1): if p[i-1]=='*': nums -= 1 dp[i][0] = True else: nums += 1 if nums&gt;1: break for i in range(1, n+1): # 开头一个*, 或连续 2 个* ,格式错误 if p[i-1]=='*' and (i==1 or p[i-2]=='*'): return False for j in range(1, m+1): if p[i-1]=='.' or p[i-1]==s[j-1]: dp[i][j] = dp[i-1][j-1] elif p[i-1]=='*': # dp[i-2][j] 当 * 表示 0 次 # dp[i-1][j] 当 * 表示 1 次 # 当 * 表示 多 次: # 条件 1. p[i-2] in [s[j-1], '.'] (当前字符匹配*前的字符) dp[i][j] = dp[i-2][j] or (dp[i-1][j]) or (p[i-2] in [s[j-1], '.'] and dp[i][j-1]) # print(dp) return dp[-1][-1]","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-19-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%8C%B9%E9%85%8D.html"},{"title":"剑指 Offer 22 链表中倒数第k个节点","text":"[TOC] 123456789101112131415# Definition for singly-linked list.# class ListNode:# def __init__(self, x):# self.val = x# self.next = Noneclass Solution: def getKthFromEnd(self, head: ListNode, k: int) -&gt; ListNode: slow = fast = head for _ in range(k): fast = fast.next while fast: fast = fast.next slow = slow.next return slow","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-22-%E9%93%BE%E8%A1%A8%E4%B8%AD%E5%80%92%E6%95%B0%E7%AC%ACk%E4%B8%AA%E8%8A%82%E7%82%B9.html"},{"title":"剑指 Offer 24 反转链表","text":"[TOC] 1234567891011121314151617# Definition for singly-linked list.# class ListNode:# def __init__(self, x):# self.val = x# self.next = Noneclass Solution: def reverseList(self, head: ListNode) -&gt; ListNode: # x &lt;- cur next-&gt; x cur = None next = head while next: t = next.next next.next = cur cur = next next = t return cur 1234567891011121314151617181920# Definition for singly-linked list.# class ListNode:# def __init__(self, x):# self.val = x# self.next = Noneclass Solution: def reverseList(self, head: ListNode) -&gt; ListNode: # x &lt;- cur next-&gt; x if not head: return head cur = head next = head.next cur.next = None while next: t = next.next next.next = cur cur = next next = t return cur","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-24-%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8.html"},{"title":"剑指 Offer 20 表示数值的字符串","text":"[TOC]","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-20-%E8%A1%A8%E7%A4%BA%E6%95%B0%E5%80%BC%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2.html"},{"title":"剑指 Offer 25 合并两个排序的链表","text":"[TOC] 1234567891011121314151617181920212223# Definition for singly-linked list.# class ListNode:# def __init__(self, x):# self.val = x# self.next = Noneclass Solution: def mergeTwoLists(self, l1: ListNode, l2: ListNode) -&gt; ListNode: dummy = ListNode(0) cur = dummy while l1 and l2: if l1.val&lt;l2.val: cur.next = l1 l1 = l1.next else: cur.next = l2 l2 = l2.next cur = cur.next if not l1: cur.next = l2 if not l2: cur.next = l1 return dummy.next 12345678910111213141516171819# Definition for singly-linked list.# class ListNode:# def __init__(self, x):# self.val = x# self.next = Noneclass Solution: def mergeTwoLists(self, l1: ListNode, l2: ListNode) -&gt; ListNode: cur = dummy = ListNode(0) while l1 and l2: if l1.val&lt;l2.val: cur.next = l1 l1 = l1.next else: cur.next = l2 l2 = l2.next cur = cur.next cur.next = l1 if l1 else l2 return dummy.next","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-25-%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%8E%92%E5%BA%8F%E7%9A%84%E9%93%BE%E8%A1%A8.html"},{"title":"剑指 Offer 26 树的子结构","text":"[TOC] 1234567891011121314151617181920212223242526# Definition for a binary tree node.# class TreeNode:# def __init__(self, x):# self.val = x# self.left = None# self.right = Noneclass Solution: def isSubStructure(self, A: TreeNode, B: TreeNode) -&gt; bool: # 考虑 [10,12,6,8,3,11] [10,12,6,8] # [-1,3,2,0] [] if not A and not B: return True if not A or not B: return False # a b 有相同的结点 def helper(A, B): if not B: return True if not A: return False if A.val==B.val: if helper(A.left, B.left) and helper(A.right, B.right): return True return False return helper(A, B) or self.isSubStructure(A.left, B) or self.isSubStructure(A.right, B)","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-26-%E6%A0%91%E7%9A%84%E5%AD%90%E7%BB%93%E6%9E%84.html"},{"title":"剑指 Offer 11 旋转数组的最小数字","text":"[TOC] 123456789101112class Solution: def minArray(self, nums: List[int]) -&gt; int: i, j = 0, len(nums)-1 while i&lt;j: m = i+(j-i)//2 if nums[m]&gt;nums[j]: i = m+1 elif nums[m]&lt;nums[j]: j = m else: j -= 1 return nums[i]","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-11-%E6%97%8B%E8%BD%AC%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%8F%E6%95%B0%E5%AD%97.html"},{"title":"剑指 Offer 27 二叉树的镜像","text":"[TOC] 剑指 Offer 27. 二叉树的镜像 - 力扣（LeetCode） 123456789101112131415161718192021222324252627282930# Definition for a binary tree node.# class TreeNode:# def __init__(self, x):# self.val = x# self.left = None# self.right = Noneclass Solution: def mirrorTree(self, root: TreeNode) -&gt; TreeNode: if not root: return root t = self.mirrorTree(root.left) root.left = self.mirrorTree(root.right) root.right = t return root class Solution: def invertTree(self, root: TreeNode) -&gt; TreeNode: stack = [root] while stack: node = stack.pop() if not node: continue t = node.left node.left = node.right node.right = t stack.append(node.left) stack.append(node.right) return root 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748/* * @lc app=leetcode id=226 lang=java * * [226] Invert Binary Tree *//** * Definition for a binary tree node. * public class TreeNode { * int val; * TreeNode left; * TreeNode right; * TreeNode(int x) { val = x; } * } */class Solution { // 递归 简单些 public TreeNode invertTree1(TreeNode root) { if (root==null) { return null; } TreeNode left = root.left; root.left = root.right; root.right = left; invertTree(root.left); invertTree(root.right); return root; } // 用stack解决，可应对树层数过多，无法递归的情形 public TreeNode invertTree(TreeNode root) { if (root==null) { return null; } Stack&lt;TreeNode&gt; stack = new Stack(); stack.push(root); while (!stack.isEmpty()) { TreeNode top = stack.pop(); if (top!=null) { stack.push(top.left); stack.push(top.right); TreeNode left = top.left; top.left = top.right; top.right = left; } } return root; }}","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-27-%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E9%95%9C%E5%83%8F.html"},{"title":"剑指 Offer 28 对称的二叉树","text":"[TOC] 1234567891011121314151617181920# Definition for a binary tree node.# class TreeNode:# def __init__(self, x):# self.val = x# self.left = None# self.right = Noneclass Solution: def isSymmetric(self, root: TreeNode) -&gt; bool: def helper(a, b): if not a and not b: return True if not a or not b: return False if a.val!=b.val: return False return helper(a.left, b.right) and helper(a.right, b.left) if not root: return True return helper(root.left, root.right)","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-28-%E5%AF%B9%E7%A7%B0%E7%9A%84%E4%BA%8C%E5%8F%89%E6%A0%91.html"},{"title":"剑指 Offer 29 顺时针打印矩阵","text":"[TOC] 面试题29. 顺时针打印矩阵（模拟、设定边界，清晰图解） - 顺时针打印矩阵 - 力扣（LeetCode） 超烂的代码： 1234567891011121314151617181920212223class Solution: def spiralOrder(self, matrix: List[List[int]]) -&gt; List[int]: if not matrix or not matrix[0]: return [] n, m = len(matrix), len(matrix[0]) def helper(matrix, nstart, nend, mstart, mend): l = [] if nend&gt;nstart and mend&gt;mstart: if nend-nstart==1: return matrix[nstart][mstart:mend] if mend-mstart==1: return [matrix[i][mstart] for i in range(nstart, nend)] l.extend(matrix[nstart][mstart:mend]) for i in range(nstart+1, nend-1): l.append(matrix[i][mend-1]) print(matrix[nend-1][mstart:mend][::-1]) l.extend(matrix[nend-1][mstart:mend][::-1]) for i in reversed(range(nstart+1, nend-1)): l.append(matrix[i][mstart]) l.extend(helper(matrix, nstart+1, nend-1, mstart+1, mend-1)) return l return helper(matrix, 0, n, 0, m) 改进后： 123456789101112131415161718192021222324class Solution: def spiralOrder(self, matrix: List[List[int]]) -&gt; List[int]: # top bottom left right if not matrix or not matrix[0]: return [] res = [] t, b, l, r = 0, len(matrix)-1, 0, len(matrix[0])-1 while t&lt;=b and l&lt;=r: # 上 res.extend(matrix[t][l:r+1]) t += 1 # 右 if t&lt;=b and l&lt;=r: res.extend([matrix[i][r] for i in range(t, b+1)]) r -= 1 # 下 if t&lt;=b and l&lt;=r: res.extend(matrix[b][l:r+1][::-1]) b -= 1 # 左 if t&lt;=b and l&lt;=r: res.extend([matrix[i][l] for i in reversed(range(t, b+1))]) l += 1 return res","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-29-%E9%A1%BA%E6%97%B6%E9%92%88%E6%89%93%E5%8D%B0%E7%9F%A9%E9%98%B5.html"},{"title":"剑指 Offer 31 栈的压入、弹出序列","text":"[TOC] 剑指 Offer 31. 栈的压入、弹出序列 - 力扣（LeetCode） 123456789101112131415class Solution: def validateStackSequences(self, pushed: List[int], popped: List[int]) -&gt; bool: nxti = 0 # pushed 中下一个入栈的序号 l = [] # 栈 for i in popped: # 若栈为空，或栈顶元素非 i，入栈 if not l or l[-1]!=i: while nxti &lt; len(pushed): l.append(pushed[nxti]) nxti += 1 if l[-1]==i: break if l.pop()!=i: return False return True","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-31-%E6%A0%88%E7%9A%84%E5%8E%8B%E5%85%A5%E3%80%81%E5%BC%B9%E5%87%BA%E5%BA%8F%E5%88%97.html"},{"title":"剑指 Offer 32 - II 从上到下打印二叉树 II","text":"[TOC] 1234567891011121314151617181920212223# Definition for a binary tree node.# class TreeNode:# def __init__(self, x):# self.val = x# self.left = None# self.right = Noneclass Solution: def levelOrder(self, root: TreeNode) -&gt; List[List[int]]: l, stack, res = [], collections.deque(), [] if not root: return res stack.append(root) while stack: t = [] slen = len(stack) for _ in range(slen): node = stack.popleft() t.append(node.val) if node.left: stack.append(node.left) if node.right: stack.append(node.right) res.append(t) return res","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-32-II-%E4%BB%8E%E4%B8%8A%E5%88%B0%E4%B8%8B%E6%89%93%E5%8D%B0%E4%BA%8C%E5%8F%89%E6%A0%91-II.html"},{"title":"剑指 Offer 30 包含min函数的栈","text":"[TOC] 我的解法： 12345678910111213141516171819202122232425class MinStack: def __init__(self): \"\"\" initialize your data structure here. \"\"\" self.l = [] self.minl = [] def push(self, x: int) -&gt; None: self.l.append(x) curmin = x if self.minl: curmin = min(x, self.minl[-1]) self.minl.append(curmin) def pop(self) -&gt; None: self.minl.pop() return self.l.pop() def top(self) -&gt; int: return self.l[-1] def min(self) -&gt; int: return self.minl[-1] 更省空间的解法： 面试题30. 包含 min 函数的栈（辅助栈，清晰图解） - 包含min函数的栈 - 力扣（LeetCode） 12345678910111213141516171819202122class MinStack: def __init__(self): \"\"\" initialize your data structure here. \"\"\" self.l, self.minl = [], [] def push(self, x: int) -&gt; None: self.l.append(x) if not self.minl or x&lt;=self.minl[-1]: self.minl.append(x) def pop(self) -&gt; None: if self.l.pop()==self.minl[-1]: self.minl.pop() def top(self) -&gt; int: return self.l[-1] def getMin(self) -&gt; int: return self.minl[-1]","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-30-%E5%8C%85%E5%90%ABmin%E5%87%BD%E6%95%B0%E7%9A%84%E6%A0%88.html"},{"title":"剑指 Offer 32 - I 从上到下打印二叉树","text":"[TOC] ![image-20200706213752707](/Users/zhangronghui/Library/Application Support/typora-user-images/image-20200706213752707.png) 12345678910111213141516class Solution: def levelOrder(self, root: TreeNode) -&gt; List[int]: if not root: return [] res, queue = [], collections.deque() queue.append(root) while queue: node = queue.popleft() res.append(node.val) if node.left: queue.append(node.left) if node.right: queue.append(node.right) return res# 作者：jyd# 链接：https://leetcode-cn.com/problems/cong-shang-dao-xia-da-yin-er-cha-shu-lcof/solution/mian-shi-ti-32-i-cong-shang-dao-xia-da-yin-er-ch-4/# 来源：力扣（LeetCode）# 著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-32-I-%E4%BB%8E%E4%B8%8A%E5%88%B0%E4%B8%8B%E6%89%93%E5%8D%B0%E4%BA%8C%E5%8F%89%E6%A0%91.html"},{"title":"剑指 Offer 32 - III 从上到下打印二叉树 III","text":"[TOC] 层次遍历的同时，记录层次 12345678910111213141516171819202122232425262728# Definition for a binary tree node.# class TreeNode:# def __init__(self, x):# self.val = x# self.left = None# self.right = Noneclass Solution: def levelOrder(self, root: TreeNode) -&gt; List[List[int]]: l, res, stack = [], [], collections.deque() if not root: return res stack.append(root) level = 0 while stack: t = [] slen = len(stack) for _ in range(slen): node = stack.popleft() t.append(node.val) if node.left: stack.append(node.left) if node.right: stack.append(node.right) if level&amp;1: res.append(t[::-1]) else: res.append(t) level += 1 return res","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-32-III-%E4%BB%8E%E4%B8%8A%E5%88%B0%E4%B8%8B%E6%89%93%E5%8D%B0%E4%BA%8C%E5%8F%89%E6%A0%91-III.html"},{"title":"剑指 Offer 33 二叉搜索树的后序遍历序列","text":"[TOC] 剑指 Offer 33. 二叉搜索树的后序遍历序列 - 力扣（LeetCode） 1234567891011121314151617181920212223class Solution: def verifyPostorder(self, l: List[int]) -&gt; bool: # 1 3 2 6 5 # start end # 0, 4 -&gt; (0, 2) (3, 3) # 解法1. 递归 def helper(l, start, end): # [start, end] 左闭右闭 if end-start&lt;2: return True # print(start, end) mid = start while l[mid]&lt;l[end] and mid&lt;end: mid += 1 if not all(i&gt;l[end] for i in l[mid:end]): return False return helper(l, start, mid-1) and helper(l, mid, end-1) return helper(l, 0, len(l)-1) # 解法2.(略) # l = [] 存放子树的 (start, end) # 不断 pop, push 子树的子树 # 如果 有一个子树不符合要求，return False # 最后 return True","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-33-%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86%E5%BA%8F%E5%88%97.html"},{"title":"剑指 Offer 35 复杂链表的复制","text":"[TOC] 1234567891011121314151617181920212223242526272829303132\"\"\"# Definition for a Node.class Node: def __init__(self, x: int, next: 'Node' = None, random: 'Node' = None): self.val = int(x) self.next = next self.random = random\"\"\"class Solution: def copyRandomList(self, head: 'Node') -&gt; 'Node': idx = 0 d = {} # node -&gt; idx curcpnode = dummy = Node(0) cpl = [] # 存放 node # 遍历第一遍，复制 val, next cur = head while cur: d[cur] = idx newnode = Node(cur.val) curcpnode.next = newnode curcpnode = curcpnode.next cpl.append(curcpnode) cur = cur.next idx += 1 # 遍历 head 第二遍，复制 random 指针 cur = head curcpnode = dummy.next while cur: curcpnode.random = cpl[d[cur.random]] if cur.random else None curcpnode = curcpnode.next cur = cur.next return dummy.next","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-35-%E5%A4%8D%E6%9D%82%E9%93%BE%E8%A1%A8%E7%9A%84%E5%A4%8D%E5%88%B6.html"},{"title":"剑指 Offer 34 二叉树中和为某一值的路径","text":"[TOC] 12345678910111213141516171819202122# Definition for a binary tree node.# class TreeNode:# def __init__(self, x):# self.val = x# self.left = None# self.right = Noneclass Solution: def pathSum(self, root: TreeNode, target: int) -&gt; List[List[int]]: res, l = [], [] if not root: return [] def helper(root, cursum): cursum += root.val l.append(root.val) if not root.left and not root.right and cursum==target: res.append(l.copy()) if root.left: helper(root.left, cursum) if root.right: helper(root.right, cursum) l.pop() helper(root, 0) return res","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-34-%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E5%92%8C%E4%B8%BA%E6%9F%90%E4%B8%80%E5%80%BC%E7%9A%84%E8%B7%AF%E5%BE%84.html"},{"title":"剑指 Offer 36 二叉搜索树与双向链表","text":"[TOC] 1234567891011121314151617181920212223242526272829303132333435363738\"\"\"# Definition for a Node.class Node: def __init__(self, val, left=None, right=None): self.val = val self.left = left self.right = right\"\"\"class Solution: def treeToDoublyList(self, root: 'Node') -&gt; 'Node': # 二叉搜索树 的中序遍历是有序的 # 返回 node 的中序遍历链 的首尾节点 def helper(node): if not node: return None, None lstart, lend = helper(node.left) rstart, rend = helper(node.right) if lstart: start = lstart lend.right = node node.left = lend else: start = node if rstart: end = rend node.right = rstart rstart.left = node else: end = node return start, end if not root: return None start, end = helper(root) start.left = end end.right = start return start","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-36-%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E4%B8%8E%E5%8F%8C%E5%90%91%E9%93%BE%E8%A1%A8.html"},{"title":"剑指 Offer 37 序列化二叉树","text":"[TOC] 123456789101112131415161718192021222324class Codec: def serialize(self, root): l = [] def helper(node): if node: l.append(str(node.val)) helper(node.left) helper(node.right) else: l.append('X') helper(root) return ','.join(l) def deserialize(self, data): l = collections.deque(data.split(',')) def helper(): val = l.popleft() if val=='X': return None node = TreeNode(val) node.left = helper() node.right = helper() return node return helper()","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-37-%E5%BA%8F%E5%88%97%E5%8C%96%E4%BA%8C%E5%8F%89%E6%A0%91.html"},{"title":"剑指 Offer 38 字符串的排列","text":"[TOC] 剑指 Offer 38. 字符串的排列 - 力扣（LeetCode） 123456789101112class Solution: def permutation(self, s: str) -&gt; List[str]: n = len(s) if n==0: return [] if n==1: return [s] c = s[0] l = self.permutation(s[1:]) res = set() for si in l: for i in range(n): res.add(si[:i]+c+si[i:]) return list(res)","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-38-%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%8E%92%E5%88%97.html"},{"title":"剑指 Offer 40 最小的k个数","text":"[TOC]","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-40-%E6%9C%80%E5%B0%8F%E7%9A%84k%E4%B8%AA%E6%95%B0.html"},{"title":"剑指 Offer 42 连续子数组的最大和","text":"[TOC] 12345678910111213class Solution: def maxSubArray(self, nums: List[int]) -&gt; int: # -2 1 -3 4 -1 2 1 -5 4 nums # -2 1 -2 4 3 5 6 1 5 dp(表示以 i 结尾的最大和) # if dp[i-1] &lt;= 0: dp[i] = nums[i] # else: dp[i] = dp[i-1]+nums[i] # 可以看到若要返回那个数组，范围是 [maxdp 前第一个非负的 dp : maxdp] dp = maxdp = nums[0] for num in nums[1:]: if dp&lt;=0: dp = num else: dp += num maxdp = max(maxdp, dp) return maxdp","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-42-%E8%BF%9E%E7%BB%AD%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E5%92%8C.html"},{"title":"剑指 Offer 39 数组中出现次数超过一半的数字","text":"[TOC] 1234567891011121314class Solution: def majorityElement(self, nums: List[int]) -&gt; int: major, cnt = '', 0 for i in nums: if cnt: if major!=i: cnt -= 1 else: cnt += 1 else: major = i cnt += 1 # print(major, cnt) return major","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-39-%E6%95%B0%E7%BB%84%E4%B8%AD%E5%87%BA%E7%8E%B0%E6%AC%A1%E6%95%B0%E8%B6%85%E8%BF%87%E4%B8%80%E5%8D%8A%E7%9A%84%E6%95%B0%E5%AD%97.html"},{"title":"剑指 Offer 43 1～n整数中1出现的次数","text":"[TOC]","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-43-1%EF%BD%9En%E6%95%B4%E6%95%B0%E4%B8%AD1%E5%87%BA%E7%8E%B0%E7%9A%84%E6%AC%A1%E6%95%B0.html"},{"title":"剑指 Offer 41 数据流中的中位数","text":"[TOC] 123456789101112131415class MedianFinder: def __init__(self): self.l = [] def addNum(self, num: int) -&gt; None: bisect.insort(self.l, num) def findMedian(self) -&gt; float: n = len(self.l) if n&amp;1: return self.l[n//2] return (self.l[n//2]+self.l[n//2-1])/2","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-41-%E6%95%B0%E6%8D%AE%E6%B5%81%E4%B8%AD%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0.html"},{"title":"剑指 Offer 44 数字序列中某一位的数字","text":"[TOC]","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-44-%E6%95%B0%E5%AD%97%E5%BA%8F%E5%88%97%E4%B8%AD%E6%9F%90%E4%B8%80%E4%BD%8D%E7%9A%84%E6%95%B0%E5%AD%97.html"},{"title":"剑指 Offer 45 把数组排成最小的数","text":"[TOC] 面试题45. 把数组排成最小的数（自定义排序，清晰图解） - 把数组排成最小的数 - 力扣（LeetCode） 绝了 strs.sort(key = functools.cmp_to_key(sort_rule)) 1234567891011class Solution: def minNumber(self, nums: List[int]) -&gt; str: def sort_rule(x, y): a, b = x + y, y + x if a &gt; b: return 1 elif a &lt; b: return -1 else: return 0 strs = [str(num) for num in nums] strs.sort(key = functools.cmp_to_key(sort_rule)) return ''.join(strs)","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-45-%E6%8A%8A%E6%95%B0%E7%BB%84%E6%8E%92%E6%88%90%E6%9C%80%E5%B0%8F%E7%9A%84%E6%95%B0.html"},{"title":"剑指 Offer 46 把数字翻译成字符串","text":"[TOC] 1234567891011121314class Solution: def translateNum(self, num: int) -&gt; int: # 1 2 2 5 8 # 1 1 2 3 5 5 s = str(num) n = len(s) if n&lt;2: return 1 dp = [1]*(n+1) for i in range(2, n+1): if 10&lt;=int(s[i-2:i])&lt;26: dp[i] = dp[i-1]+dp[i-2] else: dp[i] = dp[i-1] return dp[-1]","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-46-%E6%8A%8A%E6%95%B0%E5%AD%97%E7%BF%BB%E8%AF%91%E6%88%90%E5%AD%97%E7%AC%A6%E4%B8%B2.html"},{"title":"剑指 Offer 47 礼物的最大价值","text":"[TOC] 12345678class Solution: def maxValue(self, grid: List[List[int]]) -&gt; int: n, m = len(grid), len(grid[0]) dp = [[0]*(m+1) for _ in range(n+1)] for i in range(1, n+1): for j in range(1, m+1): dp[i][j] = max(dp[i-1][j], dp[i][j-1])+grid[i-1][j-1] return dp[-1][-1]","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-47-%E7%A4%BC%E7%89%A9%E7%9A%84%E6%9C%80%E5%A4%A7%E4%BB%B7%E5%80%BC.html"},{"title":"剑指 Offer 48 最长不含重复字符的子字符串","text":"[TOC]","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-48-%E6%9C%80%E9%95%BF%E4%B8%8D%E5%90%AB%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2.html"},{"title":"剑指 Offer 49 丑数","text":"[TOC] 丑数 II - 丑数 II - 力扣（LeetCode）面试题49. 丑数（动态规划，清晰图解） - 丑数 - 力扣（LeetCode） 1234567891011121314151617class Ugly: def __init__(self): self.nums = [1] a = b = c = 0 for _ in range(1690): n2, n3, n5 = self.nums[a]*2, self.nums[b]*3, self.nums[c]*5 m = min(n2, n3, n5) self.nums.append(m) if m==n2: a += 1 if m==n3: b += 1 if m==n5: c += 1class Solution: u = Ugly() def nthUglyNumber(self, n: int) -&gt; int: return self.u.nums[n-1]","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-49-%E4%B8%91%E6%95%B0.html"},{"title":"剑指 Offer 50 第一个只出现一次的字符","text":"[TOC] 12345678910111213class Solution: def firstUniqChar(self, s: str) -&gt; str: once = [] more = [] for i in s: if i not in more: if i not in once: once.append(i) else: once.remove(i) more.append(i) once.append(' ') return once[0] 优化的解法：用字典可以快速查询元素是否在里面，且 Python3.6 之后 dict 是有序的了 面试题50. 第一个只出现一次的字符（哈希表 / 有序哈希表，清晰图解） - 第一个只出现一次的字符 - 力扣（LeetCode） 12345678class Solution: def firstUniqChar(self, s: str) -&gt; str: d = {} for i in s: d[i] = not (i in d) for i, v in d.items(): if v: return i return ' '","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-50-%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E5%AD%97%E7%AC%A6.html"},{"title":"剑指 Offer 51 数组中的逆序对","text":"[TOC] 数组中的逆序对 - 数组中的逆序对 - 力扣（LeetCode） 视频讲解的不错 相较答案里用索引，我的代码写的很垃圾，重新创建了许多新的数组，不过胜在简单 1234567891011121314151617181920212223class Solution: def reversePairs(self, nums: List[int]) -&gt; int: # 归并排序，后半部分元素入队时 加上 前半部分的长度 def merge(l1, l2): l, cnt = [], 0 while l1 and l2: if l2[0]&lt;l1[0]: l.append(l2.pop(0)) cnt += len(l1) else: l.append(l1.pop(0)) if l1: l.extend(l1) if l2: l.extend(l2) return l, cnt def mergeSort(l): if len(l)&lt;2: return l, 0 l1, cnt1 = mergeSort(l[:len(l)//2]) l2, cnt2 = mergeSort(l[len(l)//2:]) l3, cnt3 = merge(l1, l2) # print(l3, cnt3) return l3, cnt1+cnt2+cnt3 return mergeSort(nums)[1] 人家的代码： 1234567891011121314151617181920212223242526272829303132333435363738class Solution: def reversePairs(self, nums: List[int]) -&gt; int: self.cnt = 0 def merge(nums, start, mid, end, temp): i, j = start, mid + 1 while i &lt;= mid and j &lt;= end: if nums[i] &lt;= nums[j]: temp.append(nums[i]) i += 1 else: self.cnt += mid - i + 1 temp.append(nums[j]) j += 1 while i &lt;= mid: temp.append(nums[i]) i += 1 while j &lt;= end: temp.append(nums[j]) j += 1 for i in range(len(temp)): nums[start + i] = temp[i] temp.clear() def mergeSort(nums, start, end, temp): if start &gt;= end: return mid = (start + end) &gt;&gt; 1 mergeSort(nums, start, mid, temp) mergeSort(nums, mid + 1, end, temp) merge(nums, start, mid, end, temp) mergeSort(nums, 0, len(nums) - 1, []) return self.cnt作者：fe-lucifer链接：https://leetcode-cn.com/problems/shu-zu-zhong-de-ni-xu-dui-lcof/solution/jian-dan-yi-dong-gui-bing-pai-xu-python-by-azl3979/来源：力扣（LeetCode）著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-51-%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E9%80%86%E5%BA%8F%E5%AF%B9.html"},{"title":"剑指 Offer 52 两个链表的第一个公共节点","text":"[TOC] Intersection of Two Linked Lists （双指针，链表拼接） - 相交链表 - 力扣（LeetCode） 12345678910111213# Definition for singly-linked list.# class ListNode:# def __init__(self, x):# self.val = x# self.next = Noneclass Solution: def getIntersectionNode(self, headA: ListNode, headB: ListNode) -&gt; ListNode: pa, pb = headA, headB while pa!=pb: pa = pa.next if pa else headB pb = pb.next if pb else headA return pa","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-52-%E4%B8%A4%E4%B8%AA%E9%93%BE%E8%A1%A8%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%85%AC%E5%85%B1%E8%8A%82%E7%82%B9.html"},{"title":"剑指 Offer 53 - I 在排序数组中查找数字 I","text":"[TOC] 面试题53 - I. 在排序数组中查找数字 I（二分法，清晰图解） - 在排序数组中查找数字 I - 力扣（LeetCode） 123456789101112class Solution: def search(self, nums: List[int], target: int) -&gt; int: # return bisect.bisect(nums, target)-bisect.bisect(nums, target-1) def helper(n): l, r = 0, len(nums)-1 while l&lt;=r: mid = (l+r)//2 if nums[mid]&lt;=n: l = mid+1 else: r = mid-1 return l return helper(target)-helper(target-1)","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-53-I-%E5%9C%A8%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E6%9F%A5%E6%89%BE%E6%95%B0%E5%AD%97-I.html"},{"title":"剑指 Offer 53 - II 0～n-1中缺失的数字","text":"[TOC] 12345678class Solution: def missingNumber(self, nums: List[int]) -&gt; int: l, r = 0, len(nums)-1 while l&lt;=r: mid = (l+r)//2 if nums[mid]!=mid: r = mid-1 else: l = mid+1 return l","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-53-II-0%EF%BD%9En-1%E4%B8%AD%E7%BC%BA%E5%A4%B1%E7%9A%84%E6%95%B0%E5%AD%97.html"},{"title":"剑指 Offer 54 二叉搜索树的第k大节点","text":"[TOC] 面试题54. 二叉搜索树的第 k 大节点（中序遍历 + 提前返回，清晰图解） - 二叉搜索树的第k大节点 - 力扣（LeetCode） 关键：使用 self.k 以及 self.res 1234567891011121314class Solution: def kthLargest(self, root: TreeNode, k: int) -&gt; int: # \"中序遍历\"(右 中 左)，取第 k 个元素 def helper(node): if not node: return helper(node.right) self.k -= 1 if not self.k: self.res = node.val return helper(node.left) self.k = k helper(root) return self.res","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-54-%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E7%AC%ACk%E5%A4%A7%E8%8A%82%E7%82%B9.html"},{"title":"剑指 Offer 55 - I 二叉树的深度","text":"[TOC] 12345678910111213class Solution: def maxDepth(self, root: TreeNode) -&gt; int: res = 0 stack = collections.deque() if root: stack.append(root) while stack: res += 1 for _ in range(len(stack)): node = stack.popleft() if node.left: stack.append(node.left) if node.right: stack.append(node.right) return res","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-55-I-%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%B7%B1%E5%BA%A6.html"},{"title":"剑指 Offer 55 - II 平衡二叉树","text":"[TOC] 12345678910class Solution: def isBalanced(self, root: TreeNode) -&gt; bool: def helper(node): if not node: return 0 ldepth = helper(node.left) rdepth = helper(node.right) if -1 in [ldepth, rdepth] or abs(rdepth-ldepth)&gt;1: return -1 return max(ldepth, rdepth)+1 return helper(root)!=-1","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-55-II-%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91.html"},{"title":"剑指 Offer 56 - I 数组中数字出现的次数","text":"[TOC]","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-56-I-%E6%95%B0%E7%BB%84%E4%B8%AD%E6%95%B0%E5%AD%97%E5%87%BA%E7%8E%B0%E7%9A%84%E6%AC%A1%E6%95%B0.html"},{"title":"剑指 Offer 56 - II 数组中数字出现的次数 II","text":"[TOC]","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-56-II-%E6%95%B0%E7%BB%84%E4%B8%AD%E6%95%B0%E5%AD%97%E5%87%BA%E7%8E%B0%E7%9A%84%E6%AC%A1%E6%95%B0-II.html"},{"title":"剑指 Offer 57 - II 和为s的连续正数序列","text":"[TOC] 1234567891011121314151617181920class Solution: def findContinuousSequence(self, target: int) -&gt; List[List[int]]: # 3 4 5 6 (3+6)*4/2=18 # x = (l+(l+h-1))*h/2= (2l+h-1)*h/2 -&gt; 2x = (2l+h-1)*h (h&gt;1) # 求 2x 的因数 res = [] x = 2*target h = 2 # 比如求 18 的因数，能被 2 整除, h 的上界不超过 r=9 r = x while h&lt;=r: if x%h==0: r = x//h # 此时 r=2l+h-1 : r、 h 奇偶相反，即相加为奇数 if (r+h)&amp;1: l = (r+1-h)//2 if l&gt;0: res.append([l+i for i in range(h)]) h += 1 return res[::-1]","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-57-II-%E5%92%8C%E4%B8%BAs%E7%9A%84%E8%BF%9E%E7%BB%AD%E6%AD%A3%E6%95%B0%E5%BA%8F%E5%88%97.html"},{"title":"剑指 Offer 57 和为s的两个数字","text":"[TOC] 1234567891011class Solution: def twoSum(self, nums: List[int], target: int) -&gt; List[int]: l, r = 0, len(nums)-1 while l&lt;=r: _sum = nums[l]+nums[r] if _sum==target: return [nums[l], nums[r]] elif _sum&gt;target: r -= 1 else: l += 1","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-57-%E5%92%8C%E4%B8%BAs%E7%9A%84%E4%B8%A4%E4%B8%AA%E6%95%B0%E5%AD%97.html"},{"title":"剑指 Offer 58 - I 翻转单词顺序","text":"[TOC] 123class Solution: def reverseWords(self, s: str) -&gt; str: return ' '.join(s.split()[::-1])","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-58-I-%E7%BF%BB%E8%BD%AC%E5%8D%95%E8%AF%8D%E9%A1%BA%E5%BA%8F.html"},{"title":"剑指 Offer 58 - II 左旋转字符串","text":"[TOC] 123class Solution: def reverseLeftWords(self, s: str, n: int) -&gt; str: return s[n:]+s[:n]","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-58-II-%E5%B7%A6%E6%97%8B%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2.html"},{"title":"剑指 Offer 59 - I 滑动窗口的最大值","text":"[TOC] 1234567891011121314151617181920212223242526class Solution: def maxSlidingWindow(self, nums: List[int], k: int) -&gt; List[int]: if not nums: return [] stack = collections.deque() n = len(nums) stack.append([nums[0], 0]) res = [nums[0]] for i in range(1, n): # 去除队尾比当前小的数 while stack and stack[-1][0]&lt;nums[i]: stack.pop() stack.append([nums[i], i]) if stack[0][1]&lt;i-k+1: stack.popleft() res.append(stack[0][0]) return res[k-1:] # s = [(nums[0], 0)] # n = len(nums) # res = [] # for i in range(1, n): # res.append(s[0][0]) # while s and nums[i]&gt;s[-1][0]: # s.pop() # s.append((nums[i], i)) # if s[0][1]&lt;=i-k: # s.pop(0) # res.append(s[0][0]) # return res[k-1:]","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-59-I-%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC.html"},{"title":"剑指 Offer 59 - II 队列的最大值","text":"[TOC] 如何解决 O(1) 复杂度的 API 设计题 - 队列的最大值 - 力扣（LeetCode） 123456789101112131415161718192021222324252627282930class MaxQueue: def __init__(self): self.q = collections.deque() self.maxq = collections.deque() def max_value(self) -&gt; int: return self.maxq[0] if self.maxq else -1 def push_back(self, value: int) -&gt; None: self.q.append(value) while self.maxq and self.maxq[-1]&lt;value: self.maxq.pop() self.maxq.append(value) def pop_front(self) -&gt; int: if not self.q: return -1 value = self.q.popleft() if self.maxq[0]==value: self.maxq.popleft() return value# Your MaxQueue object will be instantiated and called as such:# obj = MaxQueue()# param_1 = obj.max_value()# obj.push_back(value)# param_3 = obj.pop_front()","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-59-II-%E9%98%9F%E5%88%97%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC.html"},{"title":"剑指 Offer 60 n个骰子的点数","text":"[TOC] 动态规划（扫了一圈，俺是最短的） - n个骰子的点数 - 力扣（LeetCode） 1234567891011class Solution: def twoSum(self, n: int) -&gt; List[float]: # n: n~6n 长度为 5*n+1 pre = [1/6]*6 for i in range(2, n+1): t = [0]*(5*i+1) for j in range(len(pre)): for k in range(6): t[j+k] += pre[j]/6 # 实际是 * 1/6 pre = t return pre","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-60-n%E4%B8%AA%E9%AA%B0%E5%AD%90%E7%9A%84%E7%82%B9%E6%95%B0.html"},{"title":"剑指 Offer 61 扑克牌中的顺子","text":"[TOC] 面试题61. 扑克牌中的顺子（集合 Set / 排序，清晰图解） - 扑克牌中的顺子 - 力扣（LeetCode） 改进版： 123456789class Solution: def isStraight(self, nums: List[int]) -&gt; bool: # 1. 排序 nums.sort(reverse=True) # 2. 去除所有 0 while nums and nums[-1]==0: nums.pop() # 3. 判断是否没有重复数字，且最大最小值差小于 5 return nums[0]-nums[-1]&lt;5 and len(nums)==len(set(nums)) 别人的代码： 12345678class Solution: def isStraight(self, nums: List[int]) -&gt; bool: joker = 0 nums.sort() # 数组排序 for i in range(4): if nums[i] == 0: joker += 1 # 统计大小王数量 elif nums[i] == nums[i + 1]: return False # 若有重复，提前返回 false return nums[4] - nums[joker] &lt; 5 # 最大牌 - 最小牌 &lt; 5 则可构成顺子","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-61-%E6%89%91%E5%85%8B%E7%89%8C%E4%B8%AD%E7%9A%84%E9%A1%BA%E5%AD%90.html"},{"title":"剑指 Offer 62 圆圈中最后剩下的数字","text":"[TOC] Java解决约瑟夫环问题 1234567class Solution: def lastRemaining(self, n: int, m: int) -&gt; int: # 数学公式，倒推 res = 0 for i in range(2, n+1): res = (res+m)%i return res","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-62-%E5%9C%86%E5%9C%88%E4%B8%AD%E6%9C%80%E5%90%8E%E5%89%A9%E4%B8%8B%E7%9A%84%E6%95%B0%E5%AD%97.html"},{"title":"剑指 Offer 65 不用加减乘除做加法","text":"[TOC] 面试题65. 不用加减乘除做加法（位运算，清晰图解） - 不用加减乘除做加法 - 力扣（LeetCode） 1234567891011class Solution { public int add(int a, int b) { // 用 Python 此解法会有问题 while(b != 0) { // 当进位为 0 时跳出 int c = (a &amp; b) &lt;&lt; 1; // c = 进位 a ^= b; // a = 非进位和 b = c; // b = 进位 } return a; }}","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-65-%E4%B8%8D%E7%94%A8%E5%8A%A0%E5%87%8F%E4%B9%98%E9%99%A4%E5%81%9A%E5%8A%A0%E6%B3%95.html"},{"title":"剑指 Offer 63 股票的最大利润","text":"[TOC] 1234567class Solution: def maxProfit(self, prices: List[int]) -&gt; int: cost, profit = float(\"+inf\"), 0 for price in prices: cost = min(cost, price) profit = max(profit, price - cost) return profit 12345678910class Solution: def maxProfit(self, prices: List[int]) -&gt; int: n = len(prices) if n&lt;2: return 0 res = 0 m = prices[0] for i in prices[1:]: res = max(res, i-m) m = min(m, i) return res","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-63-%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E5%A4%A7%E5%88%A9%E6%B6%A6.html"},{"title":"剑指 Offer 64 求1+2+…+n","text":"[TOC] 思路参考： 面试题64. 求 1 + 2 + … + n（逻辑符短路，清晰图解） - 求1+2+…+n - 力扣（LeetCode） 123456789class Solution: def sumNums(self, n: int) -&gt; int: self.res = 0 # 用 and 替代 if def helper(n): n&gt;1 and helper(n-1) self.res += n return self.res return helper(n)","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-64-%E6%B1%821-2-%E2%80%A6-n.html"},{"title":"剑指 Offer 66 构建乘积数组","text":"[TOC] 123456789101112class Solution: def constructArr(self, a: List[int]) -&gt; List[int]: # a [1,2,3,4,5] # l [1,1,2,6,24] # r [120,60,20,5,1] n = len(a) l, r = [1]*n, [1]*n for i in range(1, n): l[i] = l[i-1]*a[i-1] for i in reversed(range(n-1)): r[i] = r[i+1]*a[i+1] return [l[i]*r[i] for i in range(n)]","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-66-%E6%9E%84%E5%BB%BA%E4%B9%98%E7%A7%AF%E6%95%B0%E7%BB%84.html"},{"title":"剑指 Offer 67 把字符串转换成整数","text":"[TOC]","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-67-%E6%8A%8A%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E6%88%90%E6%95%B4%E6%95%B0.html"},{"title":"剑指 Offer 68 - I 二叉搜索树的最近公共祖先","text":"[TOC] 1234567class Solution: def lowestCommonAncestor(self, root, p, q): if p.val&gt;root.val and q.val&gt;root.val: return self.lowestCommonAncestor(root.right, p, q) if p.val&lt;root.val and q.val&lt;root.val: return self.lowestCommonAncestor(root.left, p, q) return root","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-68-I-%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88.html"},{"title":"剑指 Offer 68 - II 二叉树的最近公共祖先","text":"[TOC] 面试题68 - II. 二叉树的最近公共祖先（后序遍历 DFS ，清晰图解） - 二叉树的最近公共祖先 - 力扣（LeetCode） 把我绕晕了 12345678class Solution: def lowestCommonAncestor(self, root, p, q): if root in [None, p, q]: return root left = self.lowestCommonAncestor(root.left, p, q) right = self.lowestCommonAncestor(root.right, p, q) if not left: return right if not right: return left return root 12345678910111213141516class Solution { public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) { //找 P 或 Q, 或者没找到 if(root==null || root==q || root==p) return root; //左边查询结果 TreeNode left = lowestCommonAncestor(root.left, p, q); //右边查询结果 TreeNode right = lowestCommonAncestor(root.right, p, q); //因为肯定有这两个节点，所以如果一边是空，另一边查到了 p 或 q 任意一个，那个就是目标节点 //如果两边都查到了，肯定是一个 q,一个p ,所以直接返回顶部的就行。 //两边都没查到的话 就不存在这种情况了 if(left==null) return right; else if(right==null) return left; return root; }}","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-68-II-%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88.html"},{"title":"tricks-2020-07","text":"嗨，请准确无误地输入密码查看哟 ","link":"/tricks/tricks-2020-07.html"},{"title":"leetcode 153. Find Minimum in Rotated Sorted Array","text":"leetcode九章 题目描述Suppose an array sorted in ascending order is rotated at some pivot unknown toyou beforehand. (i.e., [0,1,2,4,5,6,7] might become [4,5,6,7,0,1,2]). Find the minimum element. You may assume no duplicate exists in the array. Example 1: Input: [3,4,5,1,2] Output: 1Example 2: Input: [4,5,6,7,0,1,2] Output: 0Tags: Array, Binary Search Difficulty: Medium 答案\u0004 12345678910class Solution: def findMin(self, nums: List[int]) -&gt; int: i, j = 0, len(nums)-1 while i&lt;j: m = i+(j-i)//2 if nums[m]&gt;nums[j]: i = m+1 else: j = m return nums[i]","link":"/leetcode/leetcode-1**/leetcode-153-Find-Minimum-in-Rotated-Sorted-Array.html"},{"title":"leetcode 154. Find Minimum in Rotated Sorted Array II","text":"leetcode九章 题目描述Suppose an array sorted in ascending order is rotated at some pivot unknown toyou beforehand. (i.e., [0,1,2,4,5,6,7] might become [4,5,6,7,0,1,2]). Find the minimum element. The array may contain duplicates. Example 1: Input: [1,3,5] Output: 1Example 2: Input: [2,2,2,0,1] Output: 0Note: This is a follow up problem to Find Minimum in Rotated Sorted Array. Would allow duplicates affect the run-time complexity? How and why? Tags: Array, Binary Search Difficulty: Hard 答案\u0004 123456789101112class Solution: def minArray(self, nums: List[int]) -&gt; int: i, j = 0, len(nums)-1 while i&lt;j: m = i+(j-i)//2 if nums[m]&gt;nums[j]: i = m+1 elif nums[m]&lt;nums[j]: j = m else: j -= 1 return nums[i]","link":"/leetcode/leetcode-1**/leetcode-154-Find-Minimum-in-Rotated-Sorted-Array-II.html"},{"title":"leetcode 231. Power of Two","text":"leetcode九章 题目描述Given an integer, write a function to determine if it is a power of two. Example 1: Input: 1 Output: true Explanation: 20 = 1Example 2: Input: 16 Output: true Explanation: 24 = 16Example 3: Input: 218 Output: falseTags: Math, Bit Manipulation Difficulty: Easy 答案\u0004 123456789class Solution: def isPowerOfTwo(self, n: int) -&gt; bool: if n&lt;=0:pyt return False cnt = 0 while n: n &amp;= n-1 cnt += 1 return True if cnt==1 else False","link":"/leetcode/leetcode-2**/leetcode-231-Power-of-Two.html"},{"title":"leetcode 32. Longest Valid Parentheses","text":"leetcode九章 题目描述Given a string containing just the characters '(' and ')', find the lengthof the longest valid (well-formed) parentheses substring. Example 1: Input: &quot;(()&quot; Output: 2 Explanation: The longest valid parentheses substring is &quot;()&quot;Example 2: Input: &quot;)()())&quot; Output: 4 Explanation: The longest valid parentheses substring is &quot;()()&quot;Tags: String, Dynamic Programming Difficulty: Hard 答案\u0004 123456789101112131415class Solution: def longestValidParentheses(self, s: str) -&gt; int: # )()()) # [('', -1), (')', 0), ('(', 5), ('', 6)] 5-0-1 l = [('', -1)] for i, c in enumerate(s): if c==')' and l[-1][0]=='(': l.pop() else: l.append((c, i)) l.append(('', len(s))) res = 0 for i, v in enumerate(l[1:], start=1): res = max(res, v[1]-l[i-1][1]-1) return res","link":"/leetcode/leetcode-3**/leetcode-32-Longest-Valid-Parentheses.html"},{"title":"剑指 Offer 00 题解","text":"[TOC] 「 剑指 OFFER 系列题解 」 扬帆，起航 | Krahets’s Blog","link":"/leetcode/%E5%89%91%E6%8C%87offer/%E5%89%91%E6%8C%87-Offer-00-%E9%A2%98%E8%A7%A3.html"},{"title":"leetcode 718. Maximum Length of Repeated Subarray","text":"leetcode九章 题目描述Given two integer arrays A and B, return the maximum length of an subarraythat appears in both arrays. Example 1: Input: A: [1,2,3,2,1] B: [3,2,1,4,7] Output: 3 Explanation: The repeated subarray with maximum length is [3, 2, 1].Note: 1 &lt;= len(A), len(B) &lt;= 1000 0 &lt;= A[i], B[i] &lt; 100 Tags: Array, Hash Table, Binary Search, Dynamic Programming Difficulty: Medium 答案\u0004 370，最长公共子串和子序列 123456789101112131415161718class Solution: def findLength(self, A: List[int], B: List[int]) -&gt; int: n, m = len(A), len(B) res = 0 dp = [[0]*(m+1) for _ in range(n+1)] # n = 3 m=5 A:[3, 2, 1] B:[4, 7, 3, 2, 1] # [1, 7, 3, 2, 1] # 3: 0 0 1 0 0 # 2: 0 0 0 2 0 # 1: 1 0 0 0 3 for i in range(1, n+1): for j in range(1, m+1): if A[i-1]==B[j-1]: dp[i][j] = dp[i-1][j-1]+1 res = max(res, dp[i][j]) else: dp[i][j] = 0 return res 123456789101112131415161718class Solution: def findLength(self, A: List[int], B: List[int]) -&gt; int: n, m = len(A), len(B) res = 0 dp = [0]*(m+1) # n = 3 m=5 A:[3, 2, 1] B:[4, 7, 3, 2, 1] # [1, 7, 3, 2, 1] # 3: 0 0 1 0 0 # 2: 0 0 0 2 0 # 1: 1 0 0 0 3 for i in range(1, n+1): for j in reversed(range(1, m+1)): if A[i-1]==B[j-1]: dp[j] = dp[j-1]+1 res = max(res, dp[j]) else: dp[j] = 0 return res","link":"/leetcode/leetcode-7**/leetcode-718-Maximum-Length-of-Repeated-Subarray.html"},{"title":"医学健康相关","text":"[TOC] 体检体检的误区，不需要做的体检 拍胸片 现在基本没有任何作用，完全是浪费钱 基因检测 价格昂贵，而且没有必要 需要做的体检常规：血压、血脂、血糖、腰围、口腔、肛门、指检、心电图、肝胆胰超声 1 个细菌：幽门螺杆菌（查胃癌），一人查出，全家治疗 2 种病毒：HPV（2-3 年一次，女，查 宫颈内病毒的存在）、乙肝 3种检查：肺癌（低剂量CT）、无痛胃肠镜（没问题的话五年一次，2000 一次）、前列腺彩超+PSA（男，40 岁后）、乳腺的 第一次 彩超+钼靶射线，之后只查彩超即可 体检后需要做的事其他 夏天吃西瓜能缓解被晒中暑的情况；空调房里吹着凉喝 霍强正气水","link":"/other/%E5%8C%BB%E5%AD%A6%E5%81%A5%E5%BA%B7%E7%9B%B8%E5%85%B3.html"},{"title":"leetcode 10. Regular Expression Matching","text":"leetcode九章 题目描述Given an input string (s) and a pattern (p), implement regular expressionmatching with support for '.' and '*'. ‘.’ Matches any single character. ‘*’ Matches zero or more of the preceding element. The matching should cover the entire input string (not partial). Note: s could be empty and contains only lowercase letters a-z. p could be empty and contains only lowercase letters a-z, and characters like . or *. Example 1: Input: s = “aa” p = “a” Output: false Explanation: “a” does not match the entire string “aa”. Example 2: Input: s = “aa” p = “a*” Output: true Explanation: ‘*’ means zero or more of the preceding element, ‘a’. Therefore, by repeating ‘a’ once, it becomes “aa”. Example 3: Input: s = “ab” p = “.*” Output: true Explanation: “.*” means “zero or more (*) of any character (.)”. Example 4: Input: s = “aab” p = “cab” Output: true Explanation: c can be repeated 0 times, a can be repeated 1 time. Therefore, it matches “aab”. Example 5: Input: s = “mississippi” p = “misis*p.” Output: false Tags: String, Dynamic Programming, Backtracking Difficulty: Hard 答案\u0004 123456789101112131415161718192021222324252627282930313233343536373839class Solution: def isMatch(self, s: str, p: str) -&gt; bool: # a a b # 1 0 0 0 # c 0 0 0 0 # * 1 0 0 0 # a 0 1 0 0 # * 1 1 1 0 # b 0 0 0 1 # 更复杂的情况：\"mississippi\" \"mis*is*p*.\" n, m = len(p), len(s) dp = [[False]*(m+1) for _ in range(n+1)] dp[0][0] = True # 更新 dp 第一列的值 nums = 0 # 当前字母个数，遇到 * -1, 大于 1 break for i in range(1, n+1): if p[i-1]=='*': nums -= 1 dp[i][0] = True else: nums += 1 if nums&gt;1: break for i in range(1, n+1): # 开头一个*, 或连续 2 个* ,格式错误 if p[i-1]=='*' and (i==1 or p[i-2]=='*'): return False for j in range(1, m+1): if p[i-1]=='.' or p[i-1]==s[j-1]: dp[i][j] = dp[i-1][j-1] elif p[i-1]=='*': # dp[i-2][j] 当 * 表示 0 次 # dp[i-1][j] 当 * 表示 1 次 # 当 * 表示 多 次: # 条件 1. p[i-2] in [s[j-1], '.'] (当前字符匹配*前的字符) dp[i][j] = dp[i-2][j] or (dp[i-1][j]) or (p[i-2] in [s[j-1], '.'] and dp[i][j-1]) # print(dp) return dp[-1][-1]","link":"/leetcode/leetcode-1**/leetcode-10-Regular-Expression-Matching.html"},{"title":"leetcode 583. Delete Operation for Two Strings","text":"leetcode九章 题目描述Given two words word1 and word2 , find the minimum number of stepsrequired to make word1 and word2 the same, where in each step you candelete one character in either string. Example 1: Input: &quot;sea&quot;, &quot;eat&quot; Output: 2 Explanation: You need one step to make &quot;sea&quot; to &quot;ea&quot; and another step to make &quot;eat&quot; to &quot;ea&quot;.Note: The length of given words won’t exceed 500. Characters in given words can only be lower-case letters. Tags: String Difficulty: Medium 答案\u0004 12345678910111213141516171819202122232425class Solution: def minDistance(self, s1: str, s2: str) -&gt; int: # s e a # 0 1 2 3 # e 1 2 1 2 # a 2 3 2 1 # t 3 4 3 2 # s1[i]==s2[j]: dp[i][j] = dp[i-1][j-1] # else: dp[i][j] = min(dp[i-1][j]+1, dp[i][j-1]+1, dp[i-1][j-1]+2) n, m = len(s1), len(s2) dp = [[0]*(m+1) for _ in range(n+1)] # 初始化第一行、第一列 dp[0] = list(range(m+1)) for i in range(n+1): dp[i][0] = i for i in range(1, n+1): for j in range(1, m+1): if s1[i-1]==s2[j-1]: dp[i][j] = dp[i-1][j-1] else: dp[i][j] = min(dp[i-1][j]+1, dp[i][j-1]+1, dp[i-1][j-1]+2) print(s1[i-1], s2[j-1], dp[i][j], '') print() print(dp) return dp[-1][-1]","link":"/leetcode/leetcode-5**/leetcode-583-Delete-Operation-for-Two-Strings.html"},{"title":"leetcode 44. Wildcard Matching","text":"leetcode九章 题目描述Given an input string (s) and a pattern (p), implement wildcard patternmatching with support for '?' and '*'. &apos;?&apos; Matches any single character. &apos;*&apos; Matches any sequence of characters (including the empty sequence).The matching should cover the entire input string (not partial). Note: s could be empty and contains only lowercase letters a-z. p could be empty and contains only lowercase letters a-z, and characters like ? or *. Example 1: Input: s = &quot;aa&quot; p = &quot;a&quot; Output: false Explanation: &quot;a&quot; does not match the entire string &quot;aa&quot;.Example 2: Input: s = &quot;aa&quot; p = &quot;*&quot; Output: true Explanation: &apos;*&apos; matches any sequence.Example 3: Input: s = &quot;cb&quot; p = &quot;?a&quot; Output: false Explanation: &apos;?&apos; matches &apos;c&apos;, but the second letter is &apos;a&apos;, which does not match &apos;b&apos;.Example 4: Input: s = &quot;adceb&quot; p = &quot;*a*b&quot; Output: true Explanation: The first &apos;*&apos; matches the empty sequence, while the second &apos;*&apos; matches the substring &quot;dce&quot;.Example 5: Input: s = &quot;acdcb&quot; p = &quot;a*c?b&quot; Output: falseTags: String, Dynamic Programming, Backtracking, Greedy Difficulty: Hard 答案\u0004 字符串动态规划，🤷‍♀️ 必须秒懂！ - 通配符匹配 - 力扣（LeetCode）44. 通配符匹配 - 力扣（LeetCode） 123456789101112131415161718192021222324252627class Solution: def isMatch(self, s: str, p: str) -&gt; bool: # 思路参考： # [字符串动态规划，🤷‍♀️ 必须秒懂！ - 通配符匹配 - 力扣（LeetCode）](https://leetcode-cn.com/problems/wildcard-matching/solution/zi-fu-chuan-dong-tai-gui-hua-bi-xu-miao-dong-by-sw/) m, n = len(s), len(p) # dp[n][m]: 表示 p 的前 i 个字符和 s 的前 j 个字符是否匹配 # 一个很好的例子解释代码：(0表示 false，1 表示 true) # a d c e b # 1 0 0 0 0 0 # * 1 1 1 1 1 1 # a 0 1 0 0 0 0 # * 0 1 1 1 1 1 ( *a 匹配所以后面都是 1) # b 0 0 0 0 0 1 dp = [[False]*(m+1) for _ in range(n+1)] dp[0][0] = True # 空串匹配空串 # p 的前若干个* 匹配空串 for i in range(1, n+1): if p[i-1]!='*': break dp[i][0] = True for i in range(1, n+1): for j in range(1, m+1): if p[i-1]=='*': dp[i][j] = dp[i-1][j]|dp[i][j-1] elif p[i-1]=='?' or p[i-1]==s[j-1]: dp[i][j] = dp[i-1][j-1] return dp[-1][-1]","link":"/leetcode/leetcode-4**/leetcode-44-Wildcard-Matching.html"},{"title":"leetcode 62. Unique Paths","text":"leetcode九章 题目描述A robot is located at the top-left corner of a m x n grid (marked ‘Start’in the diagram below). The robot can only move either down or right at any point in time. The robotis trying to reach the bottom-right corner of the grid (marked ‘Finish’ in thediagram below). How many possible unique paths are there? Above is a 7 x 3 grid. How many possible unique paths are there? Note: m and n will be at most 100. Example 1: Input: m = 3, n = 2 Output: 3 Explanation: From the top-left corner, there are a total of 3 ways to reach the bottom-right corner: 1. Right -&gt; Right -&gt; Down 2. Right -&gt; Down -&gt; Right 3. Down -&gt; Right -&gt; RightExample 2: Input: m = 7, n = 3 Output: 28Tags: Array, Dynamic Programming Difficulty: Medium 答案\u0004 12345678910111213141516171819202122232425/* * @lc app=leetcode id=62 lang=java * * [62] Unique Paths */class Solution { public int uniquePaths(int m, int n) { // f[m, n] = f[m, n-1] + f[m-1, n] // f[0, 0] = 0 不重要，但可以设为1，为了方便 // f[m=0, n] = 1 // f[m, n=0] = 1 // 求f[m-1, n-1] int [][] f = new int[m][n]; for(int i=0; i&lt;m; i++){ for(int j=0; j&lt;n; j++){ if(i==0 || j==0) { f[i][j] = 1; }else{ f[i][j] = f[i-1][j]+f[i][j-1]; } } } return f[m-1][n-1]; }} 1234567class Solution: @functools.lru_cache def uniquePaths(self, m: int, n: int) -&gt; int: if 1 in [m, n]: return 1 return self.uniquePaths(m-1, n)+self.uniquePaths(m, n-1)","link":"/leetcode/leetcode-6**/leetcode-62-Unique-Paths.html"},{"title":"leetcode 63. Unique Paths II","text":"leetcode九章 题目描述A robot is located at the top-left corner of a m x n grid (marked ‘Start’in the diagram below). The robot can only move either down or right at any point in time. The robotis trying to reach the bottom-right corner of the grid (marked ‘Finish’ in thediagram below). Now consider if some obstacles are added to the grids. How many unique pathswould there be? An obstacle and empty space is marked as 1 and 0 respectively in the grid. Note: m and n will be at most 100. Example 1: Input: [ [0,0,0], [0,1,0], [0,0,0] ] Output: 2 Explanation: There is one obstacle in the middle of the 3x3 grid above. There are two ways to reach the bottom-right corner: 1. Right -&gt; Right -&gt; Down -&gt; Down 2. Down -&gt; Down -&gt; Right -&gt; RightTags: Array, Dynamic Programming Difficulty: Medium 答案\u0004 1234567891011121314151617181920212223242526272829303132333435class Solution: def uniquePathsWithObstacles(self, matrix: List[List[int]]) -&gt; int: # dp # 0 0 0 0 # 0 0 0 0 1 1 1 # 0 1 0 -&gt; 0 1 0 1 # 0 0 0 0 1 1 2 n, m = len(matrix), len(matrix[0]) # 初始化第一行，第一列，若当前为 1，则往后都不可达 if matrix[0][0] == 1: return 0 matrix[0][0] = 1 for i in range(1, n): if matrix[i][0]==0: matrix[i][0] = 1 else: for j in range(i, n): matrix[j][0] = 0 break for i in range(1, m): if matrix[0][i]==0: matrix[0][i] = 1 else: for j in range(i, m): matrix[0][j] = 0 break # print(matrix) for i in range(1, n): for j in range(1, m): if matrix[i][j] == 1: matrix[i][j] = 0 else: matrix[i][j] = matrix[i-1][j]+matrix[i][j-1] # print(matrix) return matrix[-1][-1]","link":"/leetcode/leetcode-6**/leetcode-63-Unique-Paths-II.html"},{"title":"leetcode 138. Copy List with Random Pointer","text":"leetcode九章 题目描述A linked list is given such that each node contains an additional randompointer which could point to any node in the list or null. Return a deepcopy of the list. The Linked List is represented in the input/output as a list of n nodes.Each node is represented as a pair of [val, random_index] where: val: an integer representing Node.val random_index: the index of the node (range from 0 to n-1) where random pointer points to, or null if it does not point to any node. Example 1: Input: head = [[7,null],[13,0],[11,4],[10,2],[1,0]] Output: [[7,null],[13,0],[11,4],[10,2],[1,0]] Example 2: Input: head = [[1,1],[2,1]] Output: [[1,1],[2,1]] Example 3: Input: head = [[3,null],[3,0],[3,null]] Output: [[3,null],[3,0],[3,null]] Example 4: Input: head = [] Output: [] Explanation: Given linked list is empty (null pointer), so return null. Constraints: -10000 &lt;= Node.val &lt;= 10000 Node.random is null or pointing to a node in the linked list. Number of Nodes will not exceed 1000. Tags: Hash Table, Linked List Difficulty: Medium 答案\u0004 1234567891011121314151617181920212223242526272829303132\"\"\"# Definition for a Node.class Node: def __init__(self, x: int, next: 'Node' = None, random: 'Node' = None): self.val = int(x) self.next = next self.random = random\"\"\"class Solution: def copyRandomList(self, head: 'Node') -&gt; 'Node': idx = 0 d = {} # node -&gt; idx curcpnode = dummy = Node(0) cpl = [] # 存放 node # 遍历第一遍，复制 val, next cur = head while cur: d[cur] = idx newnode = Node(cur.val) curcpnode.next = newnode curcpnode = curcpnode.next cpl.append(curcpnode) cur = cur.next idx += 1 # 遍历 head 第二遍，复制 random 指针 cur = head curcpnode = dummy.next while cur: curcpnode.random = cpl[d[cur.random]] if cur.random else None curcpnode = curcpnode.next cur = cur.next return dummy.next","link":"/leetcode/leetcode-1**/leetcode-138-Copy-List-with-Random-Pointer.html"},{"title":"leetcode 企业题库","text":"[TOC] 来源：LeetCode 企业题库_牛客博客 小米 字节跳动 腾讯 阿里巴巴 华为 微软 今日头条 百度","link":"/leetcode/leetcode-%E4%BC%81%E4%B8%9A%E9%A2%98%E5%BA%93.html"},{"title":"leetcode 295. Find Median from Data Stream","text":"leetcode九章 题目描述Median is the middle value in an ordered integer list. If the size of the listis even, there is no middle value. So the median is the mean of the two middlevalue. For example, [2,3,4], the median is 3 [2,3], the median is (2 + 3) / 2 = 2.5 Design a data structure that supports the following two operations: void addNum(int num) - Add a integer number from the data stream to the data structure. double findMedian() - Return the median of all elements so far. Example: addNum(1) addNum(2) findMedian() -&gt; 1.5 addNum(3) findMedian() -&gt; 2Follow up: If all integer numbers from the stream are between 0 and 100, how would you optimize it? If 99% of all integer numbers from the stream are between 0 and 100, how would you optimize it? Tags: Heap, Design Difficulty: Hard 答案\u0004 123456789101112131415class MedianFinder: def __init__(self): self.l = [] def addNum(self, num: int) -&gt; None: bisect.insort(self.l, num) def findMedian(self) -&gt; float: n = len(self.l) if n&amp;1: return self.l[n//2] return (self.l[n//2]+self.l[n//2-1])/22","link":"/leetcode/leetcode-2**/leetcode-295-Find-Median-from-Data-Stream.html"},{"title":"面试题 01.02 判定是否互为字符重排","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-01-02-%E5%88%A4%E5%AE%9A%E6%98%AF%E5%90%A6%E4%BA%92%E4%B8%BA%E5%AD%97%E7%AC%A6%E9%87%8D%E6%8E%92.html"},{"title":"面试题 01.01 判定字符是否唯一","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-01-01-%E5%88%A4%E5%AE%9A%E5%AD%97%E7%AC%A6%E6%98%AF%E5%90%A6%E5%94%AF%E4%B8%80.html"},{"title":"面试题 01.03 URL化","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-01-03-URL%E5%8C%96.html"},{"title":"面试题 01.04 回文排列","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-01-04-%E5%9B%9E%E6%96%87%E6%8E%92%E5%88%97.html"},{"title":"面试题 01.05 一次编辑","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-01-05-%E4%B8%80%E6%AC%A1%E7%BC%96%E8%BE%91.html"},{"title":"面试题 01.07 旋转矩阵","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-01-07-%E6%97%8B%E8%BD%AC%E7%9F%A9%E9%98%B5.html"},{"title":"面试题 01.06 字符串压缩","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-01-06-%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8E%8B%E7%BC%A9.html"},{"title":"面试题 01.08 零矩阵","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-01-08-%E9%9B%B6%E7%9F%A9%E9%98%B5.html"},{"title":"面试题 01.09 字符串轮转","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-01-09-%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AE%E8%BD%AC.html"},{"title":"面试题 02.01 移除重复节点","text":"[TOC] 原题链接面试题 02.01. 移除重复节点 - 力扣（LeetCode） 代码12345678910111213class Solution: def removeDuplicateNodes(self, head: ListNode) -&gt; ListNode: s = set() dummy = ListNode(0) dummy.next = head cur = dummy while cur.next: if cur.next.val in s: cur.next = cur.next.next else: s.add(cur.next.val) cur = cur.next return dummy.next","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-02-01-%E7%A7%BB%E9%99%A4%E9%87%8D%E5%A4%8D%E8%8A%82%E7%82%B9.html"},{"title":"面试题 02.02 返回倒数第 k 个节点","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-02-02-%E8%BF%94%E5%9B%9E%E5%80%92%E6%95%B0%E7%AC%AC-k-%E4%B8%AA%E8%8A%82%E7%82%B9.html"},{"title":"面试题 02.05 链表求和","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-02-05-%E9%93%BE%E8%A1%A8%E6%B1%82%E5%92%8C.html"},{"title":"面试题 02.04 分割链表","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-02-04-%E5%88%86%E5%89%B2%E9%93%BE%E8%A1%A8.html"},{"title":"面试题 02.03 删除中间节点","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-02-03-%E5%88%A0%E9%99%A4%E4%B8%AD%E9%97%B4%E8%8A%82%E7%82%B9.html"},{"title":"面试题 02.06 回文链表","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-02-06-%E5%9B%9E%E6%96%87%E9%93%BE%E8%A1%A8.html"},{"title":"面试题 02.07 链表相交","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-02-07-%E9%93%BE%E8%A1%A8%E7%9B%B8%E4%BA%A4.html"},{"title":"面试题 02.08 环路检测","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-02-08-%E7%8E%AF%E8%B7%AF%E6%A3%80%E6%B5%8B.html"},{"title":"面试题 03.01 三合一","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-03-01-%E4%B8%89%E5%90%88%E4%B8%80.html"},{"title":"面试题 03.03 堆盘子","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-03-03-%E5%A0%86%E7%9B%98%E5%AD%90.html"},{"title":"面试题 03.04 化栈为队","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-03-04-%E5%8C%96%E6%A0%88%E4%B8%BA%E9%98%9F.html"},{"title":"面试题 03.05 栈排序","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-03-05-%E6%A0%88%E6%8E%92%E5%BA%8F.html"},{"title":"面试题 03.02 栈的最小值","text":"[TOC] 原题链接代码1234567891011121314151617181920212223242526272829class MinStack: def __init__(self): self.l = [] self.minl = [] def push(self, x: int) -&gt; None: self.l.append(x) if not self.minl or x&lt;=self.minl[-1]: self.minl.append(x) def pop(self) -&gt; None: if self.minl[-1]==self.l.pop(): self.minl.pop() def top(self) -&gt; int: return self.l[-1] def getMin(self) -&gt; int: return self.minl[-1]# Your MinStack object will be instantiated and called as such:# obj = MinStack()# obj.push(x)# obj.pop()# param_3 = obj.top()# param_4 = obj.getMin()","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-03-02-%E6%A0%88%E7%9A%84%E6%9C%80%E5%B0%8F%E5%80%BC.html"},{"title":"面试题 04.01 节点间通路","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-04-01-%E8%8A%82%E7%82%B9%E9%97%B4%E9%80%9A%E8%B7%AF.html"},{"title":"面试题 03.06 动物收容所","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-03-06-%E5%8A%A8%E7%89%A9%E6%94%B6%E5%AE%B9%E6%89%80.html"},{"title":"面试题 04.02 最小高度树","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-04-02-%E6%9C%80%E5%B0%8F%E9%AB%98%E5%BA%A6%E6%A0%91.html"},{"title":"面试题 04.03 特定深度节点链表","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-04-03-%E7%89%B9%E5%AE%9A%E6%B7%B1%E5%BA%A6%E8%8A%82%E7%82%B9%E9%93%BE%E8%A1%A8.html"},{"title":"面试题 04.04 检查平衡性","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-04-04-%E6%A3%80%E6%9F%A5%E5%B9%B3%E8%A1%A1%E6%80%A7.html"},{"title":"面试题 04.05 合法二叉搜索树","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-04-05-%E5%90%88%E6%B3%95%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91.html"},{"title":"面试题 04.06 后继者","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-04-06-%E5%90%8E%E7%BB%A7%E8%80%85.html"},{"title":"面试题 04.08 首个共同祖先","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-04-08-%E9%A6%96%E4%B8%AA%E5%85%B1%E5%90%8C%E7%A5%96%E5%85%88.html"},{"title":"面试题 04.09 二叉搜索树序列","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-04-09-%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E5%BA%8F%E5%88%97.html"},{"title":"面试题 04.12 求和路径","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-04-12-%E6%B1%82%E5%92%8C%E8%B7%AF%E5%BE%84.html"},{"title":"面试题 04.10 检查子树","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-04-10-%E6%A3%80%E6%9F%A5%E5%AD%90%E6%A0%91.html"},{"title":"面试题 05.01 插入","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-05-01-%E6%8F%92%E5%85%A5.html"},{"title":"面试题 05.02 二进制数转字符串","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-05-02-%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%95%B0%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2.html"},{"title":"面试题 05.03 翻转数位","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-05-03-%E7%BF%BB%E8%BD%AC%E6%95%B0%E4%BD%8D.html"},{"title":"面试题 05.04 下一个数","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-05-04-%E4%B8%8B%E4%B8%80%E4%B8%AA%E6%95%B0.html"},{"title":"面试题 05.07 配对交换","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-05-07-%E9%85%8D%E5%AF%B9%E4%BA%A4%E6%8D%A2.html"},{"title":"面试题 05.06 整数转换","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-05-06-%E6%95%B4%E6%95%B0%E8%BD%AC%E6%8D%A2.html"},{"title":"面试题 05.08 绘制直线","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-05-08-%E7%BB%98%E5%88%B6%E7%9B%B4%E7%BA%BF.html"},{"title":"面试题 08.01 三步问题","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-08-01-%E4%B8%89%E6%AD%A5%E9%97%AE%E9%A2%98.html"},{"title":"面试题 08.02 迷路的机器人","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-08-02-%E8%BF%B7%E8%B7%AF%E7%9A%84%E6%9C%BA%E5%99%A8%E4%BA%BA.html"},{"title":"面试题 08.05 递归乘法","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-08-05-%E9%80%92%E5%BD%92%E4%B9%98%E6%B3%95.html"},{"title":"面试题 08.04 幂集","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-08-04-%E5%B9%82%E9%9B%86.html"},{"title":"面试题 08.03 魔术索引","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-08-03-%E9%AD%94%E6%9C%AF%E7%B4%A2%E5%BC%95.html"},{"title":"面试题 08.06 汉诺塔问题","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-08-06-%E6%B1%89%E8%AF%BA%E5%A1%94%E9%97%AE%E9%A2%98.html"},{"title":"面试题 08.07 无重复字符串的排列组合","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-08-07-%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%8E%92%E5%88%97%E7%BB%84%E5%90%88.html"},{"title":"面试题 08.08 有重复字符串的排列组合","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-08-08-%E6%9C%89%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%8E%92%E5%88%97%E7%BB%84%E5%90%88.html"},{"title":"面试题 08.09 括号","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-08-09-%E6%8B%AC%E5%8F%B7.html"},{"title":"面试题 08.10 颜色填充","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-08-10-%E9%A2%9C%E8%89%B2%E5%A1%AB%E5%85%85.html"},{"title":"面试题 08.11 硬币","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-08-11-%E7%A1%AC%E5%B8%81.html"},{"title":"面试题 08.12 八皇后","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-08-12-%E5%85%AB%E7%9A%87%E5%90%8E.html"},{"title":"面试题 08.13 堆箱子","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-08-13-%E5%A0%86%E7%AE%B1%E5%AD%90.html"},{"title":"面试题 08.14 布尔运算","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-08-14-%E5%B8%83%E5%B0%94%E8%BF%90%E7%AE%97.html"},{"title":"面试题 10.02 变位词组","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-10-02-%E5%8F%98%E4%BD%8D%E8%AF%8D%E7%BB%84.html"},{"title":"面试题 10.03 搜索旋转数组","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-10-03-%E6%90%9C%E7%B4%A2%E6%97%8B%E8%BD%AC%E6%95%B0%E7%BB%84.html"},{"title":"面试题 10.05 稀疏数组搜索","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-10-05-%E7%A8%80%E7%96%8F%E6%95%B0%E7%BB%84%E6%90%9C%E7%B4%A2.html"},{"title":"面试题 10.01 合并排序的数组","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-10-01-%E5%90%88%E5%B9%B6%E6%8E%92%E5%BA%8F%E7%9A%84%E6%95%B0%E7%BB%84.html"},{"title":"面试题 10.09 排序矩阵查找","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-10-09-%E6%8E%92%E5%BA%8F%E7%9F%A9%E9%98%B5%E6%9F%A5%E6%89%BE.html"},{"title":"面试题 10.10 数字流的秩","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-10-10-%E6%95%B0%E5%AD%97%E6%B5%81%E7%9A%84%E7%A7%A9.html"},{"title":"面试题 10.11 峰与谷","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-10-11-%E5%B3%B0%E4%B8%8E%E8%B0%B7.html"},{"title":"面试题 16.01 交换数字","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-16-01-%E4%BA%A4%E6%8D%A2%E6%95%B0%E5%AD%97.html"},{"title":"面试题 16.02 单词频率","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-16-02-%E5%8D%95%E8%AF%8D%E9%A2%91%E7%8E%87.html"},{"title":"面试题 16.03 交点","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-16-03-%E4%BA%A4%E7%82%B9.html"},{"title":"面试题 16.04 井字游戏","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-16-04-%E4%BA%95%E5%AD%97%E6%B8%B8%E6%88%8F.html"},{"title":"面试题 16.07 最大数值","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-16-07-%E6%9C%80%E5%A4%A7%E6%95%B0%E5%80%BC.html"},{"title":"面试题 16.05 阶乘尾数","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-16-05-%E9%98%B6%E4%B9%98%E5%B0%BE%E6%95%B0.html"},{"title":"面试题 16.06 最小差","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-16-06-%E6%9C%80%E5%B0%8F%E5%B7%AE.html"},{"title":"面试题 16.08 整数的英语表示","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-16-08-%E6%95%B4%E6%95%B0%E7%9A%84%E8%8B%B1%E8%AF%AD%E8%A1%A8%E7%A4%BA.html"},{"title":"面试题 16.10 生存人数","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-16-10-%E7%94%9F%E5%AD%98%E4%BA%BA%E6%95%B0.html"},{"title":"面试题 16.11 跳水板","text":"[TOC] 原题链接面试题 16.11. 跳水板 - 力扣（LeetCode） 代码12345678class Solution: def divingBoard(self, shorter: int, longer: int, k: int) -&gt; List[int]: base, subtract = k*shorter, longer-shorter if not k: return [] if not subtract: return [base] return [base+i*subtract for i in range(k+1)]","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-16-11-%E8%B7%B3%E6%B0%B4%E6%9D%BF.html"},{"title":"面试题 16.09 运算","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-16-09-%E8%BF%90%E7%AE%97.html"},{"title":"面试题 16.13 平分正方形","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-16-13-%E5%B9%B3%E5%88%86%E6%AD%A3%E6%96%B9%E5%BD%A2.html"},{"title":"面试题 16.14 最佳直线","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-16-14-%E6%9C%80%E4%BD%B3%E7%9B%B4%E7%BA%BF.html"},{"title":"面试题 16.16 部分排序","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-16-16-%E9%83%A8%E5%88%86%E6%8E%92%E5%BA%8F.html"},{"title":"面试题 16.15 珠玑妙算","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-16-15-%E7%8F%A0%E7%8E%91%E5%A6%99%E7%AE%97.html"},{"title":"面试题 16.17 连续数列","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-16-17-%E8%BF%9E%E7%BB%AD%E6%95%B0%E5%88%97.html"},{"title":"面试题 16.18 模式匹配","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-16-18-%E6%A8%A1%E5%BC%8F%E5%8C%B9%E9%85%8D.html"},{"title":"面试题 16.19 水域大小","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-16-19-%E6%B0%B4%E5%9F%9F%E5%A4%A7%E5%B0%8F.html"},{"title":"面试题 16.20 T9键盘","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-16-20-T9%E9%94%AE%E7%9B%98.html"},{"title":"面试题 16.21 交换和","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-16-21-%E4%BA%A4%E6%8D%A2%E5%92%8C.html"},{"title":"面试题 16.24 数对和","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-16-24-%E6%95%B0%E5%AF%B9%E5%92%8C.html"},{"title":"面试题 16.22 兰顿蚂蚁","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-16-22-%E5%85%B0%E9%A1%BF%E8%9A%82%E8%9A%81.html"},{"title":"面试题 16.25 LRU缓存","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-16-25-LRU%E7%BC%93%E5%AD%98.html"},{"title":"面试题 17.01 不用加号的加法","text":"[TOC] 原题链接代码1234567891011class Solution { public int add(int a, int b) { // 用 Python 此解法会有问题 while(b != 0) { // 当进位为 0 时跳出 int c = (a &amp; b) &lt;&lt; 1; // c = 进位 a ^= b; // a = 非进位和 b = c; // b = 进位 } return a; }}","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-17-01-%E4%B8%8D%E7%94%A8%E5%8A%A0%E5%8F%B7%E7%9A%84%E5%8A%A0%E6%B3%95.html"},{"title":"面试题 17.04 消失的数字","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-17-04-%E6%B6%88%E5%A4%B1%E7%9A%84%E6%95%B0%E5%AD%97.html"},{"title":"面试题 16.26 计算器","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-16-26-%E8%AE%A1%E7%AE%97%E5%99%A8.html"},{"title":"面试题 17.06 2出现的次数","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-17-06-2%E5%87%BA%E7%8E%B0%E7%9A%84%E6%AC%A1%E6%95%B0.html"},{"title":"面试题 17.05 字母与数字","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-17-05-%E5%AD%97%E6%AF%8D%E4%B8%8E%E6%95%B0%E5%AD%97.html"},{"title":"面试题 17.07 婴儿名字","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-17-07-%E5%A9%B4%E5%84%BF%E5%90%8D%E5%AD%97.html"},{"title":"面试题 17.09 第 k 个数","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-17-09-%E7%AC%AC-k-%E4%B8%AA%E6%95%B0.html"},{"title":"面试题 17.08 马戏团人塔","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-17-08-%E9%A9%AC%E6%88%8F%E5%9B%A2%E4%BA%BA%E5%A1%94.html"},{"title":"面试题 17.10 主要元素","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-17-10-%E4%B8%BB%E8%A6%81%E5%85%83%E7%B4%A0.html"},{"title":"面试题 17.11 单词距离","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-17-11-%E5%8D%95%E8%AF%8D%E8%B7%9D%E7%A6%BB.html"},{"title":"面试题 17.12 BiNode","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-17-12-BiNode.html"},{"title":"面试题 17.13 恢复空格","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-17-13-%E6%81%A2%E5%A4%8D%E7%A9%BA%E6%A0%BC.html"},{"title":"面试题 17.14 最小K个数","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-17-14-%E6%9C%80%E5%B0%8FK%E4%B8%AA%E6%95%B0.html"},{"title":"面试题 17.16 按摩师","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-17-16-%E6%8C%89%E6%91%A9%E5%B8%88.html"},{"title":"面试题 17.15 最长单词","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-17-15-%E6%9C%80%E9%95%BF%E5%8D%95%E8%AF%8D.html"},{"title":"面试题 17.17 多次搜索","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-17-17-%E5%A4%9A%E6%AC%A1%E6%90%9C%E7%B4%A2.html"},{"title":"面试题 17.18 最短超串","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-17-18-%E6%9C%80%E7%9F%AD%E8%B6%85%E4%B8%B2.html"},{"title":"面试题 17.19 消失的两个数字","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-17-19-%E6%B6%88%E5%A4%B1%E7%9A%84%E4%B8%A4%E4%B8%AA%E6%95%B0%E5%AD%97.html"},{"title":"面试题 17.20 连续中值","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-17-20-%E8%BF%9E%E7%BB%AD%E4%B8%AD%E5%80%BC.html"},{"title":"面试题 17.21 直方图的水量","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-17-21-%E7%9B%B4%E6%96%B9%E5%9B%BE%E7%9A%84%E6%B0%B4%E9%87%8F.html"},{"title":"面试题 17.22 单词转换","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-17-22-%E5%8D%95%E8%AF%8D%E8%BD%AC%E6%8D%A2.html"},{"title":"面试题 17.23 最大黑方阵","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-17-23-%E6%9C%80%E5%A4%A7%E9%BB%91%E6%96%B9%E9%98%B5.html"},{"title":"面试题 17.24 最大子矩阵","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-17-24-%E6%9C%80%E5%A4%A7%E5%AD%90%E7%9F%A9%E9%98%B5.html"},{"title":"面试题 17.25 单词矩阵","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-17-25-%E5%8D%95%E8%AF%8D%E7%9F%A9%E9%98%B5.html"},{"title":"面试题 17.26 稀疏相似度","text":"[TOC] 原题链接代码12","link":"/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-17-26-%E7%A8%80%E7%96%8F%E7%9B%B8%E4%BC%BC%E5%BA%A6.html"},{"title":"leetcode 53. Maximum Subarray","text":"leetcode九章 题目描述Given an integer array nums, find the contiguous subarray (containing atleast one number) which has the largest sum and return its sum. Example: Input: [-2,1,-3,4,-1,2,1,-5,4], Output: 6 Explanation: [4,-1,2,1] has the largest sum = 6.Follow up: If you have figured out the O( n ) solution, try coding another solutionusing the divide and conquer approach, which is more subtle. Tags: Array, Divide and Conquer, Dynamic Programming Difficulty: Easy 答案\u0004 12345678910111213141516171819202122/* * @lc app=leetcode id=53 lang=java * * [53] Maximum Subarray * */// 动态规划// 长度从0~nums.length// solution(0~i) = max(solution(i-1)+nums[i],nums[i])// solution = max(solutions)// 下面用dp(dynamic programming) 表示 solutionclass Solution { public int maxSubArray(int[] nums) { int dp = nums[0]; int maxdp = nums[0]; for (int i = 1; i &lt; nums.length; i++) { dp = Math.max(dp+nums[i], nums[i]); maxdp = Math.max(dp, maxdp); } return maxdp; }} 12345678910111213class Solution: def maxSubArray(self, nums: List[int]) -&gt; int: # -2 1 -3 4 -1 2 1 -5 4 nums # -2 1 -2 4 3 5 6 1 5 dp(表示以 i 结尾的最大和) # if dp[i-1] &lt;= 0: dp[i] = nums[i] # else: dp[i] = dp[i-1]+nums[i] # 可以看到若要返回那个数组，范围是 [maxdp 前第一个非负的 dp : maxdp] dp = maxdp = nums[0] for num in nums[1:]: if dp&lt;=0: dp = num else: dp += num maxdp = max(maxdp, dp) return maxdp","link":"/leetcode/leetcode-5**/leetcode-53-Maximum-Subarray.html"},{"title":"biweekly-contest-24","text":"[TOC] 逐步求和得到正数的最小值3 和为 K 的最少斐波那契数字数目4 长度为 n 的开心字符串中字典序第 k 小的字符串5 恢复数组6 112345678910class Solution: def minStartValue(self, nums: List[int]) -&gt; int: m = nums[0] s = 0 for i in nums: s += i m = min(m, s) if m&lt;=0: return 1-m return 1 2和为 K 的最少斐波那契数字数目 - 和为 K 的最少斐波那契数字数目 - 力扣（LeetCode） 1234567891011121314151617class Solution: def findMinFibonacciNumbers(self, k: int) -&gt; int: # 想不出来，抄答案 # 先构造小于 k 的 fib 数组 l # 逆序遍历 l ，遇到小于 K 的i，k -= i, ans +=1 a = b = 1 fib = [a, b] while b&lt;k: c = a+b fib.append(c) a, b = b, c ans = 0 for i in reversed(fib): if i&lt;=k: k -= i ans += 1 return ans 3getStart和getNext, O(NK) - 长度为 n 的开心字符串中字典序第 k 小的字符串 - 力扣（LeetCode） 1234567891011121314151617181920class Solution: def getHappyString(self, n: int, k: int) -&gt; str: posible = {'a': 'bc', 'b': 'c', 'c': ''} def getStart(k): return ''.join('a' if i%2==0 else 'b' for i in range(k)) def getNext(cur): for i in reversed(range(len(cur))): for po in posible[cur[i]]: if i==0 or cur[i-1]!=po: return cur[:i] + po + getStart(n-i-1) return '' cur = getStart(n) for i in range(k-1): cur = getNext(cur) if not cur: return cur return cur 4动态规划，逐字符解析判断有多少种可能 - 恢复数组 - 力扣（LeetCode） 恢复数组 - 恢复数组 - 力扣（LeetCode） 123456789101112131415161718192021class Solution: def numberOfArrays(self, s: str, k: int) -&gt; int: n = len(s) dp = [0] * (n + 1) # numberOfArrays(s[:i]) # 1 3 1 7 : s # 1 1 2 4 8 : dp # 解释: 8 = numberOfArrays(131)+numberOfArrays(13)+numberOfArrays(1)+numberOfArrays('') dp[0] = 1 mod = 10 ** 9 + 7 for i in range(1, n+1): # 优化，k &lt;= 10^9，故最后一个空格最多隔开 10 个数字 # for j in reversed(range(i)): for j in reversed(range(max(0, i-10), i)): # print(i, j, s[j:i]) if s[j]=='0': continue if int(s[j:i])&gt;k: break dp[i] += dp[j] # print(dp) return dp[-1] % mod","link":"/Leetcode%20weekly%20contest/biweekly-contest-24.html"},{"title":"biweekly-contest-27","text":"[TOC] 通过翻转子数组使两个数组相等3 检查一个字符串是否包含所有长度为 K 的二进制子串4 课程安排 IV5 摘樱桃 II6 112345678910111213141516class Solution: def canBeEqual(self, l1: List[int], l2: List[int]) -&gt; bool: def getcount(l): m = {} for i in l: if i not in m: m[i] = 1 else: m[i] += 1 return m m1 = getcount(l1) m2 = getcount(l2) for i in m1: if m2.get(i)!=m1.get(i): return False return True 2123456789class Solution: def hasAllCodes(self, s: str, k: int) -&gt; bool: ss = set() if len(s)&lt;=k: return False for i in range(k, len(s)+1): ss.add(s[i-k:i]) print(ss, len(ss), 2**k) return len(ss)==2**k 3法一：dfs + functools.lru_cachecollections.defaultdict @functools.lru_cache 执行用时 :692 ms, 在所有Python3 提交中击败了53.77%的用户 内存消耗 :31.8 MB, 在所有Python3 提交中击败了100.00%的用户 DFS + 记忆化，化腐朽为神奇 - 课程安排 IV - 力扣（LeetCode） 12345678910111213class Solution: def checkIfPrerequisite(self, n: int, pres: List[List[int]], qs: List[List[int]]) -&gt; List[bool]: self.graph = collections.defaultdict(list) for a, b in pres: self.graph[a].append(b) return [self.dfs(start, end) for start, end in qs] # 默认 maxsize 128 ，即存储最近 128 次调用 @functools.lru_cache(maxsize=None) def dfs(self, start, end): if start==end: return True return any(self.dfs(nxt, end) for nxt in self.graph[start]) 法二：Floyd执行用时 :956 ms, 在所有Python3 提交中击败了48.57%的用户 内存消耗 :15.5 MB, 在所有Python3 提交中击败了100.00%的用户 Python双百，不要DFS，不要BFS，只要最简单的打表法 - 课程安排 IV - 力扣（LeetCode） Floyd-Warshall算法 - 维基百科，自由的百科全书 1234567891011class Solution: def checkIfPrerequisite(self, n: int, pres: List[List[int]], qs: List[List[int]]) -&gt; List[bool]: dp = [[False for _ in range(n)] for _ in range(n)] for a, b in pres: dp[a][b] = True for k in range(n): for i in range(n): for j in range(n): if dp[i][k] and dp[k][j]: dp[i][j] = True return [dp[a][b] for a, b in qs] 412","link":"/Leetcode%20weekly%20contest/biweekly-contest-27.html"},{"title":"biweekly-contest-30","text":"[TOC] 转变日期格式3 子数组和排序后的区间和4 三次操作后最大值与最小值的最小差5 石子游戏 IV6 1123456class Solution: def reformatDate(self, date: str) -&gt; str: day, month, year = date.split() day = day[:-2] month = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"].index(month)+1 return '{}-{}-{}'.format(year, str(month).zfill(2), day.zfill(2)) 2123456789class Solution: def rangeSum(self, nums: List[int], n: int, left: int, right: int) -&gt; int: _sum = [0 for _ in range(n+1)] _sum[0], _sum[1] = 0, nums[0] for i in range(1, n): _sum[i+1] += _sum[i]+nums[i] l = [_sum[j]-_sum[i] for i in range(n+1) for j in range(i+1, n+1)] l.sort() return sum(l[left-1:right]) % (10**9 + 7) 312345678910111213141516171819202122232425262728class Solution: def minDifference(self, nums: List[int]) -&gt; int: n = len(nums) if n&lt;5: return 0 # 思路: 取 4 个最小值，4 个最大值，最多 8 个元素时，可以暴力解法 if n&lt;9: nums.sort() # 1 2 3 4 5 -&gt; 5-4(删除 123), 4-3(删除 125), 3-2(删除 145), 2-1(删除 345) n = len(nums) return min(nums[n-1]-nums[3], nums[n-2]-nums[2], nums[n-3]-nums[1], nums[n-4]-nums[0]) else: l = [] for i in range(4): # 取 4 个最小值 mini = i for j in range(i, n): if nums[j]&lt;nums[mini]: mini = j nums[mini], nums[i] = nums[i], nums[mini] l.append(nums[i]) for i in range(4): # 4 个最大值 mini = i for j in range(i, n): if nums[j]&gt;nums[mini]: mini = j nums[mini], nums[i] = nums[i], nums[mini] l.append(nums[i]) return self.minDifference(l) 41234567891011class Solution: def winnerSquareGame(self, n: int) -&gt; bool: dp = [False for _ in range(n+1)] for i in range(1, n+1): j = 1 while j*j&lt;=i: if not dp[i-j*j]: dp[i] = True break j += 1 return dp[-1]","link":"/Leetcode%20weekly%20contest/biweekly-contest-30.html"},{"title":"weekly-contest-193","text":"[TOC] 380，最靠前的一次了吧 一维数组的动态和3 不同整数的最少数目4 制作 m 束花所需的最少天数5 树节点的第 K 个祖先6 11234567class Solution: def runningSum(self, nums: List[int]) -&gt; List[int]: if len(nums)&lt;2: return nums for i in range(1, len(nums)): nums[i] += nums[i-1] return nums 2123456789101112class Solution: def findLeastNumOfUniqueInts(self, arr: List[int], k: int) -&gt; int: m = collections.defaultdict(int) for i in arr: m[i] += 1 print(m, m.values()) l = [i for i in m.values()] l.sort(reverse=True) while k&gt;0: i = l.pop() k -= i return len(l) if k==0 else len(l)+1 3123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960import bisectclass Solution: def minDays(self, bloomDay: List[int], m: int, k: int) -&gt; int: # 将 l 并入排好序的 exclude 中 def merge(exclude, l): # print(exclude, l) # 还能优化，l 好像也是排好序的 for i in l: bisect.insort(exclude, i) # print(exclude) # 判断去除 exclude 后是否满足条件 def satisfy(n, m, k, exclude): # 还能优化，可以在上次的结果里去除一部分不符合条件的 if m*k&gt;n-len(exclude): return False pre = -1 # 能收多少束花 satisfied_m sm = 0 # 0 1 2 3 4 5 6 n=7 # x x x x _ x x exclude.append(n) # 考虑列表最后一部分 # 若 exclude [4, 6] n 10 for i in exclude: sm += int((i-pre-1)/k) if sm&gt;=m: exclude.pop() return True pre = i exclude.pop() return sm&gt;=m # 计算最后一天可不可以，然后倒回去，直到有一天不行 n = len(bloomDay) if m*k&gt;n: return -1 exclude = [] dic = collections.defaultdict(list) # dic 存放哪一天开了哪些位置的花 for i in range(n): dic[bloomDay[i]].append(i) days = [i for i in dic.keys()] days.sort(reverse=True) for i in range(len(days)): day = days[i] merge(exclude, dic[day]) # print(n, m, k, exclude) # print(satisfy(n, m, k, exclude)) if not satisfy(n, m, k, exclude): return days[i] # m 束花 k 朵花 # 0 1 2 3 4 5 6 7 8 9 n=10 m=4 k=2 # x _ x _ x x x x x x 412345678910111213141516171819202122232425262728class TreeAncestor: def __init__(self, n: int, parent: List[int]): # 2**16 = 65536 self.dp = [[-1]*16 for i in range(n)] for i in range(n): self.dp[i][0] = parent[i] for i in range(n): for j in range(1, 16): if self.dp[i][j-1]==-1: break self.dp[i][j] = self.dp[self.dp[i][j-1]][j-1] def getKthAncestor(self, node: int, k: int) -&gt; int: # 10 : 8+2 1010 将 10 分解，找到 1 所在的位置 for i in reversed(range(16)): if k &amp; (1&lt;&lt;i):# k 在 第 i 位是 1 node = self.dp[node][i] if node==-1: break return node# Your TreeAncestor object will be instantiated and called as such:# obj = TreeAncestor(n, parent)# param_1 = obj.getKthAncestor(node,k)","link":"/Leetcode%20weekly%20contest/weekly-contest-193.html"},{"title":"weekly-contest-196","text":"[TOC] 又是怀疑人生的一次比赛 11234567class Solution: def canMakeArithmeticProgression(self, arr: List[int]) -&gt; bool: n = len(arr) if n==2: return True arr.sort() gap = arr[1]-arr[0] return all(arr[i]-arr[i-1]==gap for i in range(1, n)) 212345678class Solution: def getLastMoment(self, n: int, left: List[int], right: List[int]) -&gt; int: if left and right: return max(max(left), n-min(right)) if left: return max(left) if right: return n-min(right) 312 412","link":"/Leetcode%20weekly%20contest/weekly-contest-196.html"},{"title":"weekly-contest-192","text":"[TOC] 我好菜 重新排列数组3 数组中的 k 个最强值4 设计浏览器历史记录5 给房子涂色 III6 11234567class Solution: def shuffle(self, nums: List[int], n: int) -&gt; List[int]: ans = [] for i in range(n): ans.append(nums[i]) ans.append(nums[n+i]) return ans 21234567891011121314151617181920212223242526272829303132333435class Solution: def getStrongest(self, arr: List[int], k: int) -&gt; List[int]: arr.sort() n = len(arr) m = arr[int((n-1)/2)] print(m) @functools.lru_cache(maxsize=None) def sortkey(a, b): x = abs(a-m)-abs(b-m) if x==0: return a-b return x # 选择排序 # for i in range(k): # mi = i # for j in range(i+1, n): # if sortkey(arr[j], arr[mi])&gt;0: # mi = j # arr[mi], arr[i] = arr[i], arr[mi] # 双指针 left = 0 right = n-1 ans = [] # while left&lt;=right: for i in range(k): if sortkey(arr[left], arr[right])&gt;=0: ans.append(arr[left]) left += 1 else: ans.append(arr[right]) right -= 1 return ans 31234567891011121314151617181920212223242526272829303132class BrowserHistory: def __init__(self, homepage: str): self.his = [homepage] self.cur = 1 # 当前位置到开头 URL 的个数 def visit(self, url: str) -&gt; None: self.his = self.his[:self.cur] self.his.append(url) self.cur = self.cur+1 # print(self.cur, self.his) def back(self, steps: int) -&gt; str: self.cur = max(1, self.cur-steps) # print(self.cur, self.his) return self.his[self.cur-1] def forward(self, steps: int) -&gt; str: self.cur = min(len(self.his), self.cur+steps) # print(self.cur, self.his) return self.his[self.cur-1]# Your BrowserHistory object will be instantiated and called as such:# obj = BrowserHistory(homepage)# obj.visit(url)# param_2 = obj.back(steps)# param_3 = obj.forward(steps) 412","link":"/Leetcode%20weekly%20contest/weekly-contest-192.html"},{"title":"weekly-contest-197","text":"[TOC] 好数对的数目3 仅含 1 的子串数4 概率最大的路径5 服务中心的最佳位置7 11234567891011class Solution: def numIdenticalPairs(self, nums: List[int]) -&gt; int: res = 0 n = len(nums) if n==1: return 0 for i in range(n-1): for j in range(i+1, n): if nums[i]==nums[j]: res += 1 return res 21234567891011class Solution: def numSub(self, s: str) -&gt; int: # 0 1 1 0 1 1 1 # 0 1 2 0 1 2 3 dp: 以当前位置结尾的 1 的长度 # 1+2+1+2+3 n = len(s) dp = [0 for _ in range(n+1)] for i in range(1, n+1): if s[i-1]=='1': dp[i] = dp[i-1]+1 return sum(dp[1:])%(10**9+7) 3bfs遍历求解 - 概率最大的路径 - 力扣（LeetCode） 123456789101112131415161718192021class Solution: def maxProbability(self, n: int, e: List[List[int]], succProb: List[float], start: int, end: int) -&gt; float: # 1. defaultdict 构造 graph graph = collections.defaultdict(dict) for i in range(len(e)): p1, p2 = e[i] graph[p1][p2] = succProb[i] graph[p2][p1] = succProb[i] stack = collections.deque() stack.append([start, 1, 1&lt;&lt;start]) # start 到 当前点 的 概率 ，遍历过哪些点 ans = 0 while stack: cur, prob, passed = stack.popleft() if cur==end: ans = max(ans, prob) elif prob&gt;ans: for point, _prob in graph[cur].items(): if not passed&amp;(1&lt;&lt;point) and _prob*prob&gt;ans: stack.append([point, _prob*prob, passed^1&lt;&lt;point]) return ans 优化： 1234567891011121314151617181920212223class Solution: def maxProbability(self, n: int, e: List[List[int]], succProb: List[float], start: int, end: int) -&gt; float: # defaultdict 构造 graph graph = collections.defaultdict(dict) # 因为这个题目比较特殊，权重是乘性的并且0-1之间，所以可以用一个dic记录从start开始到每个节点的最大权重。 然后每次你只需要判断pop出的节点的权重就可以。如果比曾经记录的dic中的权重小那就没必要继续（这里面包含了环，回头），如果比曾经记录的权重大，那么继续进行。 d = collections.defaultdict(float) for i in range(len(e)): p1, p2 = e[i] graph[p1][p2] = succProb[i] graph[p2][p1] = succProb[i] stack = collections.deque() stack.append([start, 1]) # start 到 当前点 的 概率 ans = 0 while stack: cur, prob = stack.popleft() if cur==end: ans = max(ans, prob) elif prob&gt;ans: for point, _prob in graph[cur].items(): if _prob*prob&gt;ans and _prob*prob&gt;d.get(point, 0): d[point] = _prob*prob stack.append([point, _prob*prob]) return ans 412","link":"/Leetcode%20weekly%20contest/weekly-contest-197.html"},{"title":"leetcode模板","text":"[TOC] 二分helper 函数 l&lt;=r l=mid+1 r=mid-1 根据求左边界还是右边界，l r 的更新不同 123456789101112class Solution: def search(self, nums: List[int], target: int) -&gt; int: # return bisect.bisect(nums, target)-bisect.bisect(nums, target-1) def helper(n): l, r = 0, len(nums)-1 while l&lt;=r: mid = (l+r)//2 if nums[mid]&lt;=n: l = mid+1 else: r = mid-1 return l return helper(target)-helper(target-1)","link":"/leetcode/leetcode%E6%A8%A1%E6%9D%BF.html"},{"title":"leetcode 263. Ugly Number","text":"leetcode九章 题目描述Write a program to check whether a given number is an ugly number. Ugly numbers are positive numbers whose prime factors only include 2, 3, 5. Example 1: Input: 6 Output: true Explanation: 6 = 2 × 3Example 2: Input: 8 Output: true Explanation: 8 = 2 × 2 × 2Example 3: Input: 14 Output: false Explanation:14 is not ugly since it includes another prime factor 7.Note: 1 is typically treated as an ugly number. Input is within the 32-bit signed integer range: [−231, 231 − 1]. Tags: Math Difficulty: Easy 答案\u0004 1234567class Solution: def isUgly(self, n: int) -&gt; bool: if n&lt;=0: return False while not n%5: n = n//5 while not n%3: n = n//3 while not n%2: n = n//2 return n==1","link":"/leetcode/leetcode-2**/leetcode-263-Ugly-Number.html"},{"title":"leetcode 264. Ugly Number II","text":"leetcode九章 题目描述Write a program to find the n-th ugly number. Ugly numbers are positive numbers whose prime factors only include 2, 3, 5. Example: Input: n = 10 Output: 12 Explanation:1, 2, 3, 4, 5, 6, 8, 9, 10, 12 is the sequence of the first 10 ugly numbers.Note: 1 is typically treated as an ugly number. n does not exceed 1690. Tags: Math, Dynamic Programming, Heap Difficulty: Medium 答案\u0004 丑数 II - 丑数 II - 力扣（LeetCode）面试题49. 丑数（动态规划，清晰图解） - 丑数 - 力扣（LeetCode） 1234567891011121314151617class Ugly: def __init__(self): self.nums = [1] a = b = c = 0 for _ in range(1690): n2, n3, n5 = self.nums[a]*2, self.nums[b]*3, self.nums[c]*5 m = min(n2, n3, n5) self.nums.append(m) if m==n2: a += 1 if m==n3: b += 1 if m==n5: c += 1class Solution: u = Ugly() def nthUglyNumber(self, n: int) -&gt; int: return self.u.nums[n-1]","link":"/leetcode/leetcode-2**/leetcode-264-Ugly-Number-II.html"},{"title":"leetcode 1041. Robot Bounded In Circle","text":"leetcode九章 题目描述On an infinite plane, a robot initially stands at (0, 0) and faces north.The robot can receive one of three instructions: &quot;G&quot;: go straight 1 unit; &quot;L&quot;: turn 90 degrees to the left; &quot;R&quot;: turn 90 degress to the right. The robot performs the instructions given in order, and repeats themforever. Return true if and only if there exists a circle in the plane such that therobot never leaves the circle. Example 1: Input: “GGLLGG” Output: true Explanation: The robot moves from (0,0) to (0,2), turns 180 degrees, and then returns to (0,0). When repeating these instructions, the robot remains in the circle of radius 2 centered at the origin. Example 2: Input: “GG” Output: false Explanation: The robot moves north indefinitely. Example 3: Input: “GL” Output: true Explanation: The robot moves from (0, 0) -&gt; (0, 1) -&gt; (-1, 1) -&gt; (-1, 0) -&gt; (0, 0) -&gt; … Note: 1 &lt;= instructions.length &lt;= 100 instructions[i] is in {'G', 'L', 'R'} Tags: Math Difficulty: Medium 答案\u0004 只要走完一轮后，方向改变，即不是直走的话，最后无论再走多少轮总有一轮会走回终点 1234567891011121314151617class Solution: def isRobotBounded(self, instructions: str) -&gt; bool: x = y = 0 directions = [ (0, 1), # 上北 (1, 0), # 右东 (0, -1), # 下南 (-1, 0), # 左西 ] di = 0 # 开始朝北，若 R，+1 %4 for i in instructions: if i=='R': di = (di+1)%4 elif i=='L': di = (di-1)%4 elif i=='G': x += directions[di][0] y += directions[di][1] return x==y==0 or di!=0","link":"/leetcode/leetcode-1**/leetcode-1041-Robot-Bounded-In-Circle.html"},{"title":"flutter","text":"[TOC] 学习实践安装入门: 在macOS上搭建Flutter开发环境 - Flutter中文网 vscode -&gt; flutter 插件 Android studio flutter 下载后，解压，移动到 application 中，修改环境变量: 12345# flutter# 中国代理export PUB_HOSTED_URL=https://pub.flutter-io.cnexport FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cnexport PATH=/Applications/flutter/bin:$PATH 用 finder 找到，/Applications/flutter/packages/flutter_tools/gradle/flutter.gradle 替换为： 1234567891011121314151617181920212223# 第一处buildscript { repositories { // google() // jcenter() maven { url 'https://maven.aliyun.com/repository/google' } maven { url 'https://maven.aliyun.com/repository/jcenter' } maven { url 'http://maven.aliyun.com/nexus/content/groups/public' } } dependencies { classpath 'com.android.tools.build:gradle:3.5.0' }}allprojects { repositories { maven { url 'https://maven.aliyun.com/repository/google' } maven { url 'https://maven.aliyun.com/repository/jcenter' } maven { url 'http://maven.aliyun.com/nexus/content/groups/public' } } }# 第二处// private static final String MAVEN_REPO = \"https://storage.googleapis.com/download.flutter.io\"; private static final String MAVEN_REPO = \"https://storage.flutter-io.cn/download.flutter.io\"; 为了能用 USB 调试米 6，vscode ，shift cmd p, flutter emulator , new（不是真的创建，因为太耗费存储、内存了） 创建新项目vscode ，shift cmd p, flutter new project 工具其他有用的链接‘Tutorial/Flutter with App’ 카테고리의 글 목록 (6 Page)Search results for time.time | Dart PackagePage 1 | Flutter Favorite packagesjson_serializable | Dart Packageflutter-go/demo.dart at master · alibaba/flutter-goalibaba/flutter-go: flutter 开发者帮助 APP，包含 flutter 常用 140+ 组件的demo 演示与中文文档 遇到的问题Flutter Permissions Handler Not Working Properly - Stack Overflow 在 android/app/src/main/AndroidManifest.xml 中声明需要的权限","link":"/flutter.html"},{"title":"biweekly-contest-28","text":"[TOC] 商品折扣后的最终价格3 子矩形查询4 找两个和为目标值且不重叠的子数组5 安排邮筒 7 11234567891011class Solution: def finalPrices(self, prices: List[int]) -&gt; List[int]: n = len(prices) res = [i for i in prices] queue = [] # [(i, prices[i]),,,] for i in range(n): while queue and prices[i]&lt;=queue[-1][1]: j, price = queue.pop() res[j] = price-prices[i] queue.append([i, prices[i]]) return res 212345678910111213class SubrectangleQueries: def __init__(self, rectangle: List[List[int]]): self.rec = rectangle def updateSubrectangle(self, row1: int, col1: int, row2: int, col2: int, newValue: int) -&gt; None: for i in range(row1, row2+1): for j in range(col1, col2+1): self.rec[i][j] = newValue def getValue(self, i: int, j: int) -&gt; int: return self.rec[i][j] 3滑动窗口，超时（dp 题解看不懂） 123456789101112131415161718192021222324252627282930class Solution: def minSumOfLengths(self, arr: List[int], target: int) -&gt; int: _sum, l, r = 0, 0, 0 ls = [] while r&lt;len(arr): _sum += arr[r] r += 1 if _sum&lt;target: continue while _sum&gt;target: _sum -= arr[l] l += 1 if _sum==target: ls.append([l, r-1, r-l]) # print(ls) def cross(l1, l2): if l1[0]&lt;l2[0]: return l2[0]&lt;=l1[1] else: return l1[0]&lt;=l2[1] res = sys.maxsize ls.sort(key=lambda i: i[2]) for i in range(len(ls)-1): if 2*ls[i][2]&gt;res: break for j in range(i+1, len(ls)): # 有重叠的情况：ls[i]=[1, 3] ls[j]=[2, 4] if not cross(ls[i], ls[j]): res = min(res, ls[j][1]-ls[j][0]+ls[i][1]-ls[i][0]+2) break return res if res!=sys.maxsize else -1 412","link":"/Leetcode%20weekly%20contest/biweekly-contest-28.html"},{"title":"weekly-contest-194","text":"[TOC] 数组异或操作3 保证文件名唯一5 避免洪水泛滥6 找到最小生成树里的关键边和伪关键边 11234class Solution: def xorOperation(self, n: int, start: int) -&gt; int: l = [start+i*2 for i in range(n)] return reduce(lambda a, b: a^b ,l) 2题解里的代码，很厉害 d {name: nextIndex, } 1234567891011class Solution: def getFolderNames(self, names: List[str]) -&gt; List[str]: d, ans = {}, [] for name in names: s = name while s in d: s = f'{name}({d[name]})' d[name] += 1 d[s] = 1 ans.append(s) return ans 312 412","link":"/Leetcode%20weekly%20contest/weekly-contest-194.html"},{"title":"weekly-contest-198","text":"[TOC] 换酒问题3 子树中标签相同的节点数5 最多的不重叠子字符串6 找到最接近目标值的函数值 112345678910class Solution: def numWaterBottles(self, n: int, x: int) -&gt; int: kong = 0 res = 0 while n&gt;0 or kong&gt;=x: res += n kong += n n = kong//x kong -= n*x return res 2写的有点复杂，构造图 -&gt; 构造树 -&gt; 从叶子节点向 root 更新字典 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748class Solution: def countSubTrees(self, n: int, edges: List[List[int]], labels: str) -&gt; List[int]: res = [1]*n # 构造图 d = collections.defaultdict(list) for a, b in edges: d[a].append(b) d[b].append(a) # 从0入手，构造树 tree = [[0]] # tree 是层次遍历结果 s = set() s.add(0) # print(d) while len(s)!=n: t = [] for i in tree[-1]: for j in reversed(d[i]): if j not in s: t.append(j) s.add(j) else: d[i].remove(j) tree.append(t) # 构造一个 i-&gt;{'x': cnt, } m = {i:{} for i in range(n)} # print(d, tree, s) def update(l, m): if not l: return {} cur = m[l.pop()] while l: nxt = m[l.pop()] for i in nxt: if i in cur: cur[i] += nxt[i] else: cur[i] = nxt[i] return cur # 先处理根节点 for i in tree.pop(): m[i] = {labels[i]:1} while tree: for i in tree.pop(): m[i] = update(d[i], m) m[i][labels[i]] = m[i].get(labels[i], 0)+1 res[i] = m[i][labels[i]] return res 根据别人的代码优化： DFS深度优先遍历-两种去重方式（Python） - 子树中标签相同的节点数 - 力扣（LeetCode） 123456789101112131415161718192021222324252627282930313233from collections import defaultdict, Counterclass Solution: def countSubTrees(self, n: int, edges: List[List[int]], labels: str) -&gt; List[int]: m = defaultdict(list) for a, b in edges: m[a].append(b) m[b].append(a) def dfs1(cur): data = Counter({labels[cur]: 1}) vised[cur] = True for i in m[cur]: if vised[i]: continue data += dfs1(i) res[cur] = data[labels[cur]] return data def dfs2(cur, pre): data = Counter({labels[cur]: 1}) for i in m[cur]: if i==pre: continue data += dfs2(i, cur) res[cur] = data[labels[cur]] return data res = [1]*n # 1. 用 visited 数组记录 # vised = [False]*n # dfs1(0) # 记录父节点(pre) dfs2(0, 0) return res 312 4参考：力扣周赛 198 - python 解答 | 我的博客 123456789101112131415161718class Solution: def closestToTarget(self, arr: List[int], target: int) -&gt; int: # &amp; 的性质: 数越 &amp; 越小；0 与所有数 &amp; 都是 0; x&amp;x=x # 利用 x&amp;x=x 去除相邻的相同数字 arr = [arr[0], *(v for i,v in enumerate(arr[1:]) if v!=arr[i-1])] res = sys.maxsize n = len(arr) for i in range(n): cur = arr[i] res = min(res, abs(cur-target)) # l==r 的情况 for j in range(i+1, n): cur &amp;= arr[j] res = min(res, abs(cur-target)) if res==0: return 0 if cur==0 or cur&lt;target: break # 1. 0 与所有数 &amp; 都是 0 # 2. 数越 &amp; 越小-&gt; 若已经小于 target，再往后只能更小于 target, abs(x-target) 也更大 return res","link":"/Leetcode%20weekly%20contest/weekly-contest-198.html"},{"title":"leetcode 120. Triangle","text":"leetcode九章 题目描述Given a triangle, find the minimum path sum from top to bottom. Each step youmay move to adjacent numbers on the row below. For example, given the following triangle [ [ **2** ], [ **3** ,4], [6, **5** ,7], [4, **1** ,8,3] ]The minimum path sum from top to bottom is 11 (i.e., 2 + 3 + 5+ 1 = 11). Note: Bonus point if you are able to do this using only O ( n ) extra space,where n is the total number of rows in the triangle. Tags: Array, Dynamic Programming Difficulty: Medium 答案\u0004 自底向上动态规划，类似于从起点到目的地之间的最短路径 - 三角形最小路径和 - 力扣（LeetCode） 12345678class Solution: def minimumTotal(self, triangle: List[List[int]]) -&gt; int: if len(triangle)==1: return triangle[0][0] for i in reversed(range(len(triangle)-1)): for j in range(len(triangle[i])): triangle[i][j] += min(triangle[i+1][j:j+2]) return triangle[0][0]","link":"/leetcode/leetcode-1**/leetcode-120-Triangle.html"},{"title":"leetcode 312. Burst Balloons","text":"leetcode九章 题目描述Given n balloons, indexed from 0 to n-1. Each balloon is painted with anumber on it represented by array nums. You are asked to burst all theballoons. If the you burst balloon i you will get nums[left] * nums[i] * nums[right] coins. Here left and right are adjacent indices of i. Afterthe burst, the left and right then becomes adjacent. Find the maximum coins you can collect by bursting the balloons wisely. Note: You may imagine nums[-1] = nums[n] = 1. They are not real therefore you can not burst them. 0 ≤ n ≤ 500, 0 ≤ nums[i] ≤ 100 Example: Input: [3,1,5,8] Output: 167 Explanation:nums = [3,1,5,8] --&gt; [3,5,8] --&gt; [3,8] --&gt; [8] --&gt; [] coins = 3*1*5 + 3*5*8 + 1*3*8 + 1*8*1 = 167Tags: Divide and Conquer, Dynamic Programming Difficulty: Hard 答案\u0004 参考： 动态规划套路解决戳气球问题 - 戳气球 - 力扣（LeetCode） 12345678910class Solution: def maxCoins(self, nums: List[int]) -&gt; int: nums = [1, *nums, 1] n = len(nums) dp = [[0]*n for _ in range(n)] for i in reversed(range(n-1)): for j in range(i+1, n): for k in range(i+1, j): dp[i][j] = max(dp[i][j], dp[i][k]+dp[k][j]+nums[i]*nums[j]*nums[k]) return dp[0][-1]","link":"/leetcode/leetcode-3**/leetcode-312-Burst-Balloons.html"},{"title":"leetcode 498. Diagonal Traverse","text":"leetcode九章 题目描述Given a matrix of M x N elements (M rows, N columns), return all elements ofthe matrix in diagonal order as shown in the below image. Example: Input: [ [ 1, 2, 3 ], [ 4, 5, 6 ], [ 7, 8, 9 ] ] Output: [1,2,4,7,5,3,6,8,9] Explanation: ![](https://assets.leetcode.com/uploads/2018/10/12/diagonal_traverse.png)Note: The total number of elements of the given matrix will not exceed 10,000. Tags: Difficulty: Medium 答案\u0004 498. 对角线遍历 - 力扣（LeetCode）对象线横列坐标之和相等 - 对角线遍历 - 力扣（LeetCode） 1234567891011121314class Solution: def findDiagonalOrder(self, matrix: List[List[int]]) -&gt; List[int]: if not matrix: return [] n, m = len(matrix), len(matrix[0]) if n==1: return matrix[0] d = collections.defaultdict(list) for i in range(n): for j in range(m): d[i+j].append(matrix[i][j]) res = [] for i in range(m+n-1): if i&amp;1: res.extend(d[i]) else: res.extend(d[i][::-1]) return res","link":"/leetcode/leetcode-4**/leetcode-498-Diagonal-Traverse.html"},{"title":"leetcode 224. Basic Calculator","text":"leetcode九章 题目描述Implement a basic calculator to evaluate a simple expression string. The expression string may contain open ( and closing parentheses ), theplus + or minus sign -, non-negative integers and empty spaces . Example 1: Input: &quot;1 + 1&quot; Output: 2Example 2: Input: &quot; 2-1 + 2 &quot; Output: 3Example 3: Input: &quot;(1+(4+5+2)-3)+(6+8)&quot; Output: 23Note: You may assume that the given expression is always valid. Do not use the eval built-in library function. 展开： Difficulty: Hard 答案\u0004 12345678910111213141516171819202122232425262728293031323334353637class Solution: def calculate(self, _s: str) -&gt; int: def helper(tl): if len(tl)==1: return int(tl[0]) # print('tl:', tl) cur = int(tl.pop()) while tl: op, num = tl.pop(), int(tl.pop()) cur = cur-num if op=='-' else cur+num return cur stack = [] s = '' for i, c in enumerate(_s): if c==' ': continue if c in '+-': if s: stack.append(s) stack.append(c) s = '' elif c=='(': stack.append('(') elif c==')': if s: stack.append(s) s = '' tl = [] # 3-2-1 -&gt; 1-2-3 -&gt; 3-2-1 while True: cur = stack.pop() if cur=='(': break tl.append(cur) stack.append(helper(tl)) else: s += c # print(c, stack) if s: stack.append(s) # 最外层可以没有括号 return helper(stack[::-1])","link":"/leetcode/leetcode-2**/leetcode-224-Basic-Calculator.html"},{"title":"leetcode 241. Different Ways to Add Parentheses","text":"leetcode九章 题目描述Given a string of numbers and operators, return all possible results fromcomputing all the different possible ways to group numbers and operators. Thevalid operators are +, - and *. Example 1: Input: &quot;2-1-1&quot; Output: [0, 2] Explanation: ((2-1)-1) = 0 (2-(1-1)) = 2Example 2: Input:&quot;2*3-4*5&quot; Output: [-34, -14, -10, -10, 10] Explanation: (2*(3-(4*5))) = -34 ((2*3)-(4*5)) = -14 ((2*(3-4))*5) = -10 (2*((3-4)*5)) = -10 (((2*3)-4)*5) = 10 ****Tags: Divide and Conquer Difficulty: Medium 答案\u0004 精简版本： 12345678910class Solution: def diffWaysToCompute(self, s: str) -&gt; List[int]: if s.isdigit(): return [int(s)] res = [] for i, c in enumerate(s): if c in '+-*': for left in self.diffWaysToCompute(s[:i]): for right in self.diffWaysToCompute(s[i+1:]): res.append(eval(f'{left}{c}{right}')) return res 展开： 123456789101112131415161718192021222324class Solution: def diffWaysToCompute(self, input: str) -&gt; List[int]: # 如果只有数字，直接返回 if input.isdigit(): return [int(input)] res = [] for i, char in enumerate(input): if char in ['+', '-', '*']: # 1.分解：遇到运算符，计算左右两侧的结果集 # 2.解决：diffWaysToCompute 递归函数求出子问题的解 left = self.diffWaysToCompute(input[:i]) right = self.diffWaysToCompute(input[i+1:]) # 3.合并：根据运算符合并子问题的解 for l in left: for r in right: if char == '+': res.append(l + r) elif char == '-': res.append(l - r) else: res.append(l * r) return res","link":"/leetcode/leetcode-2**/leetcode-241-Different-Ways-to-Add-Parentheses.html"},{"title":"leetcode 95. Unique Binary Search Trees II","text":"leetcode九章 题目描述Given an integer n , generate all structurally unique BST ‘s (binarysearch trees) that store values 1 … n. Example: Input: 3 Output: [ [1,null,3,2], [3,2,null,1], [3,1,null,null,2], [2,1,3], [1,null,2,null,3] ] Explanation: The above output corresponds to the 5 unique BST&apos;s shown below: 1 3 3 2 1 \\ / / / \\ \\ 3 2 1 1 3 2 / / \\ \\ 2 1 2 3Tags: Dynamic Programming, Tree Difficulty: Medium 答案\u0004 12345678910111213141516171819202122232425# Definition for a binary tree node.# class TreeNode:# def __init__(self, val=0, left=None, right=None):# self.val = val# self.left = left# self.right = rightclass Solution: def generateTrees(self, n: int) -&gt; List[TreeNode]: if not n: return [] @functools.lru_cache(maxsize=None) def helper(start, end): res = [] # 空树，不能直接返回[] 因为另外一边不是空 if end&lt;start: return [None] for i in range(start, end+1): for left in helper(start, i-1): for right in helper(i+1, end): node = TreeNode(i) node.left = left node.right = right res.append(node) return res return helper(1, n)","link":"/leetcode/leetcode-9**/leetcode-95-Unique-Binary-Search-Trees-II.html"},{"title":"leetcode 1025. Divisor Game","text":"leetcode九章 题目描述Alice and Bob take turns playing a game, with Alice starting first. Initially, there is a number N on the chalkboard. On each player’s turn,that player makes a move consisting of: Choosing any x with 0 &lt; x &lt; N and N % x == 0. Replacing the number N on the chalkboard with N - x. Also, if a player cannot make a move, they lose the game. Return True if and only if Alice wins the game, assuming both players playoptimally. Example 1: Input: 2 Output: true Explanation: Alice chooses 1, and Bob has no more moves.Example 2: Input: 3 Output: false Explanation: Alice chooses 1, Bob chooses 1, and Alice has no more moves.Note: 1 &lt;= N &lt;= 1000 Tags: Math, Dynamic Programming Difficulty: Easy 答案\u0004 123456789101112131415161718class Solution: def __init__(self): self.dp = [False]*1000 for i in range(2, 1001): for factor in self.getFactor(i): if not self.dp[i-factor-1]: self.dp[i-1] = True # print(self.dp) def getFactor(self, n): yield 1 for i in range(2, math.ceil(math.sqrt(n))): if n%i==0: yield i yield n//i def divisorGame(self, N: int) -&gt; bool: return self.dp[N-1] 官方 数学解法，淦！ 可发现规律：N是2的倍数就是True，其他情况：False（not N%2） 123class Solution: def divisorGame(self, N: int) -&gt; bool: return not N%2","link":"/leetcode/leetcode-1**/leetcode-1025-Divisor-Game.html"},{"title":"二分查找","text":"[TOC] 二分查找 - 力扣（LeetCode） 其实只要注意边界问题，不陷入死循环，基本就能解题，根本不用看超长的题解，还有什么超长的打油诗 明确 l r 的中包含的是什么 简单面试题 10.05. 稀疏数组搜索 - 力扣（LeetCode）面试题 10.05. 稀疏数组搜索 - 力扣（LeetCode） 123456789101112class Solution: def findString(self, words: List[str], s: str) -&gt; int: l, r = 0, len(words)-1 while l&lt;=r: mid = (l+r)//2 while words[mid]=='' and mid&lt;r: mid += 1 if words[mid]=='': r = (l+r)//2-1 # [mid'~r] 都是 '' elif words[mid]&gt;s: r = (l+r)//2-1 # [mid'~mid-1] 都是 '' elif words[mid]&lt;s: l = mid+1 else: return mid return -1 374. 猜数字大小 - 力扣（LeetCode）374. 猜数字大小 - 力扣（LeetCode） 12345678910111213# The guess API is already defined for you.# @param num, your guess# @return -1 if my number is lower, 1 if my number is higher, otherwise return 0# def guess(num: int) -&gt; int:class Solution: def guessNumber(self, n: int) -&gt; int: l, r = 0, n while l&lt;=r: mid = (l+r)//2 if guess(mid)==0: return mid elif guess(mid)==1: l = mid+1 else: r = mid-1 367. 有效的完全平方数 - 力扣（LeetCode）367. 有效的完全平方数 - 力扣（LeetCode） 12345678910class Solution: def isPerfectSquare(self, num: int) -&gt; bool: l, r = 1, num//2 while l&lt;=r: mid = (l+r)//2 multiply = mid*mid if multiply==num: return True elif multiply&gt;num: r = mid-1 else: l = mid+1 return False if num!=1 else True 852. 山脉数组的峰顶索引 - 力扣（LeetCode）852. 山脉数组的峰顶索引 - 力扣（LeetCode） 12345678910class Solution: def peakIndexInMountainArray(self, a: List[int]) -&gt; int: # 找出第一个比右边相邻数大的位置 l, r = 0, len(a)-1 # 0 1 2 3 4 5 4 3 2 1 0 while l&lt;=r: mid = (l+r)&gt;&gt;1 if a[mid]&lt;a[mid+1]: l = mid+1 else: r = mid-1 return l 1237. 找出给定方程的正整数解 - 力扣（LeetCode）1237. 找出给定方程的正整数解 - 力扣（LeetCode） 1234567891011121314151617181920212223242526\"\"\" This is the custom function interface. You should not implement it, or speculate about its implementation class CustomFunction: # Returns f(x, y) for any given positive integers x and y. # Note that f(x, y) is increasing with respect to both x and y. # i.e. f(x, y) &lt; f(x + 1, y), f(x, y) &lt; f(x, y + 1) def f(self, x, y): \"\"\"class Solution: def findSolution(self, customfunction: 'CustomFunction', z: int) -&gt; List[List[int]]: # 相当于在一个 sorted matrix 里寻找 target 的位置 res = [] for i in range(1, 1001): l, r = 1, 1000 while l&lt;=r: mid = (l+r)&gt;&gt;1 fres = customfunction.f(i, mid) if fres==z: res.append([i, mid]) break elif fres&gt;z: r = mid-1 else: l = mid+1 return res 1351. 统计有序矩阵中的负数 - 力扣（LeetCode）1351. 统计有序矩阵中的负数 - 力扣（LeetCode） 12345678910111213141516171819class Solution: def countNegatives(self, grid: List[List[int]]) -&gt; int: # [[4,3,2,-1], # [3,2,1,-1], # [1,1,-1,-2], # [-1,-1,-2,-3]] n, m = len(grid), len(grid[0]) res = 0 l = 0 # l 从下到上递增, 故保存 for i in reversed(range(n)): r = m-1 while l&lt;=r: if grid[i][l]&lt;0: break mid = (l+r)&gt;&gt;1 if grid[i][mid]&gt;=0: l = mid+1 elif grid[i][mid]&lt;0: r = mid else: r -= 1 res += m-l return res 744. 寻找比目标字母大的最小字母 - 力扣（LeetCode）744. 寻找比目标字母大的最小字母 - 力扣（LeetCode） 123456789class Solution: def nextGreatestLetter(self, letters: List[str], target: str) -&gt; str: l, r = 0, len(letters)-1 while l&lt;=r: if letters[l]&gt;target: return letters[l] mid = (l+r)&gt;&gt;1 if letters[mid]&gt;target: r = mid elif letters[mid]&lt;=target: l = mid+1 return letters[0] 1337. 方阵中战斗力最弱的 K 行 - 力扣（LeetCode）1337. 方阵中战斗力最弱的 K 行 - 力扣（LeetCode） 1234567891011121314class Solution: def kWeakestRows(self, mat: List[List[int]], k: int) -&gt; List[int]: h = [] # 存放 (战斗力, i) n, m = len(mat), len(mat[0]) for i in range(n): l, r = 0, m-1 while True: mid = (l+r)//2 if r==-1 or mat[i][r]==1: break else: r -= 1 if mat[i][mid]==0: r=mid-1 elif mat[i][mid]==1: l=mid h.append((r, i)) return [i[1] for i in heapq.nsmallest(k, h, key=operator.itemgetter(0, 1))] 12345678910111213141516171819202122class Solution: def kWeakestRows(self, mat: List[List[int]], k: int) -&gt; List[int]: # functools.cpm_to_key # heapq.nsmallest(n, h, key=..) h = [] # 存放 (战斗力, i) n, m = len(mat), len(mat[0]) for i in range(n): l, r = 0, m-1 while True: mid = (l+r)//2 if r==-1 or mat[i][r]==1: break else: r -= 1 if mat[i][mid]==0: r=mid-1 elif mat[i][mid]==1: l=mid # heapq.heappush(h, (r, i)) h.append((r, i)) # print(h) # def mykey(a, b): # if a[0]!=b[0]: return a[0]-b[0] # return a[1]-b[1] # return [i[1] for i in heapq.nsmallest(k, h, key=functools.cmp_to_key(mykey))] return [i[1] for i in heapq.nsmallest(k, h, key=operator.itemgetter(0, 1))] 704. 二分查找 - 力扣（LeetCode）704. 二分查找 - 力扣（LeetCode） 123456789class Solution: def search(self, nums: List[int], target: int) -&gt; int: l, r = 0, len(nums)-1 while l&lt;=r: mid = (l+r)//2 if nums[mid]==target: return mid elif nums[mid]&gt;target: r = mid-1 elif nums[mid]&lt;target: l = mid+1 return -1 441. 排列硬币 - 力扣（LeetCode）441. 排列硬币 - 力扣（LeetCode） 123456789101112class Solution: def arrangeCoins(self, n: int) -&gt; int: # 1~n = (n+1)*n/2 l, r = 0, n def satisfy(n, k): return n&gt;=(k+1)*k/2 while l&lt;=r: mid = l+(r-l)//2 if satisfy(n, r): return r r -= 1 if satisfy(n, mid): l = mid else: r = mid-1 475. 供暖器 - 力扣（LeetCode）475. 供暖器 - 力扣（LeetCode） 123456789101112class Solution: def findRadius(self, houses: List[int], heaters: List[int]) -&gt; int: # 核心问题，找到 house 一前一后的供暖，去较小，整体取最大 houses.sort() heaters.sort() heaters = [-sys.maxsize, *heaters, sys.maxsize] res, i = 0, 0 for house in houses: # while heaters[i]&lt;house: i += 1 i = bisect.bisect(heaters, house) res = max(res, min(abs(heaters[i]-house), abs(heaters[i-1]-house))) return res 代码参考评论区： 思路一：排序（简单称为双指针吧） 思路二：二分法 两种思路都差不多，实现方法不一样，代码很容易理解。 ## 代码: 思路一： 123456789101112class Solution: def findRadius(self, houses: List[int], heaters: List[int]) -&gt; int: houses.sort() heaters.sort() heaters = [float(\"-inf\")] + heaters + [float(\"inf\")] i = 1 res = 0 for house in houses: while i &lt; len(heaters) - 1 and house &gt; heaters[i]: i += 1 res = max(res, min(heaters[i] - house, house - heaters[i - 1])) return res 思路二： 123456789class Solution: def findRadius(self, houses: List[int], heaters: List[int]) -&gt; int: heaters.sort() heaters = [float(\"-inf\")] + heaters + [float(\"inf\")] res = 0 for house in houses: loc = bisect.bisect_left(heaters, house) res = max(res, min(house - heaters[loc - 1], heaters[loc] - house)) return res 392. 判断子序列 - 力扣（LeetCode）392. 判断子序列 - 力扣（LeetCode） 思路：如果s是t的子序列，也就是说 s 中的所有字符都会按照顺序出现在 t 中 12345678class Solution: def isSubsequence(self, s: str, t: str) -&gt; bool: if len(s)==0: return True for i in range(len(t)): if t[i]==s[0]: if len(s)==1: return True return self.isSubsequence(s[1:], t[i+1:]) return False 评论区 更多骚操作： 思路一：库函数 12345678class Solution: def isSubsequence(self, s: str, t: str) -&gt; bool: loc = -1 for a in s: loc = t.find(a, loc + 1) if loc == -1: return False return True 思路二：生成迭代器 1234class Solution: def isSubsequence(self, s: str, t: str) -&gt; bool: t = iter(t) return all(c in t for c in s) 思路三：双指针 12345678class Solution: def isSubsequence(self, s: str, t: str) -&gt; bool: i = j = 0 while i &lt; len(s) and j &lt; len(t): if s[i] == t[j]: i += 1 j += 1 return i == len(s) 思路四：二分法 1234567891011121314class Solution: def isSubsequence(self, s: str, t: str) -&gt; bool: from collections import defaultdict import bisect lookup = defaultdict(list) for idx, val in enumerate(t): lookup[val].append(idx) # print(lookup) loc = -1 for a in s: j = bisect.bisect_left(lookup[a], loc + 1) if j &gt;= len(lookup[a]): return False loc = lookup[a][j] return True 进阶java题解和后续挑战 - 判断子序列 - 力扣（LeetCode） 抄作业，附上后续挑战 Python 版本 感觉如果真的一个 t 查询亿个 s ，得把 DP 构造放到 init 函数里， 然后 self.dp = dp 123456789101112131415161718class Solution: def isSubsequence(self, s: str, t: str) -&gt; bool: # 初始化 t = ' '+t alpha = 'abcdefghijklmnopqrstuvwxyz' # 构造辅助数组 dp = [[-1]*len(t) for _ in range(26)] for i in range(1, len(t)): c = alpha.find(t[i]) j = i-1 while j&gt;=0 and dp[c][j]==-1: dp[c][j] = i j -= 1 i = 0 for c in s: i = dp[alpha.find(c)][i] if i==-1: return False return True 中等1201. 丑数 III - 力扣（LeetCode）1201. 丑数 III - 力扣（LeetCode）二分法思路剖析 - 丑数 III - 力扣（LeetCode） 123456789101112131415161718192021222324252627282930313233class Solution: def nthUglyNumber(self, n: int, a: int, b: int, c: int) -&gt; int: def mcm(a,b): # 求最小公倍数：两数乘积除以最大公约数 tmp = a*b while b: # a b b a b a, b = b, a%b return tmp//a def get_mid(n, a, b, c, low, high): a_b = mcm(a,b) a_c = mcm(a,c) b_c = mcm(b,c) a_b_c = mcm(a_b, c) while low &lt;= high: mid = (low+high) &gt;&gt; 1 # 独立的丑数个数为 根据集合的交集 # 当前数分别除以a、b、c的和 # 减去当前数除以a、b、c两两间最小公倍数的和 # 再加上当前数除以 a、b、c三者的最小公倍数 n_count = mid//a +mid//b + mid//c - mid//a_b - mid//b_c - mid//a_c + mid//a_b_c print(mid, n_count) if n_count == n: return mid if n_count &lt; n: low = mid+1 if n_count &gt; n: high = mid-1 low = min(a,b,c) high = low * n res = get_mid(n, a, b, c, low, high) print(low, high, res) res -= min(res%a, res%b, res%c) return res 875. 爱吃香蕉的珂珂 - 力扣（LeetCode）875. 爱吃香蕉的珂珂 - 力扣（LeetCode） 1283. 使结果不超过阈值的最小除数 - 力扣（LeetCode） 这 2 题一样的 感触：不要把题目想的太复杂，不要试图用最优且麻烦的解法 12345678910111213141516class Solution: def minEatingSpeed(self, nums: List[int], H: int) -&gt; int: def calc(m): res = 0 for i in nums: res += math.ceil(i/m) return res l, r = 1, max(nums) while l&lt;r: m = (l+r)//2 # calc 大了，其实是 m 小了 if calc(m)&gt;H: l = m+1 else: r = m return l 222. 完全二叉树的节点个数 - 力扣（LeetCode）222. 完全二叉树的节点个数 - 力扣（LeetCode）完全二叉树 - 完全二叉树的节点个数 - 力扣（LeetCode） 123456789101112131415161718192021222324# Definition for a binary tree node.# class TreeNode:# def __init__(self, x):# self.val = x# self.left = None# self.right = Noneclass Solution: def countNodes(self, root: TreeNode) -&gt; int: # 1. 递归 (暴力) # return 1+self.countNodes(root.left)+self.countNodes(root.right) if root else 0 # 2. 二分 # 左右子树至少有一个是 满二叉树 if not root: return 0 l = r = 1 left, right = root.left, root.right while left: l += 1 left = left.left while right: l += 1 right = right.right if l==r: return 2**l-1 return 1+self.countNodes(root.left)+self.countNodes(root.right) 436. 寻找右区间 - 力扣（LeetCode）436. 寻找右区间 - 力扣（LeetCode） 1234567891011121314151617181920class Solution: def findRightInterval(self, intervals: List[List[int]]) -&gt; List[int]: n = len(intervals) # 排序前给每一项添加索引 for i in range(n): intervals[i].append(i) # 按 start 排序 intervals.sort(key=operator.itemgetter(0)) res = [-1]*n for i in range(n): l, r = i+1, n-1 # 不存在的情况 if intervals[r][0]&lt;intervals[i][1]: continue while l&lt;r: m = (l+r)//2 if intervals[m][0]&gt;=intervals[i][1]: r = m else: l = m+1 res[intervals[i][2]] = intervals[r][2] return res 274. H 指数 - 力扣（LeetCode）274. H 指数 - 力扣（LeetCode）275. H指数 II 题解 - 力扣（LeetCode） 2题一样的 1234567891011class Solution: def hIndex(self, nums: List[int]) -&gt; int: nums.sort() if not nums or not nums[-1]: return 0 n = len(nums) l, r = 0, n-1 while l&lt;r: m = (l+r)//2 if nums[m]&gt;=n-m: r = m else: l = m+1 return n-l 658. 找到 K 个最接近的元素 - 力扣（LeetCode）658. 找到 K 个最接近的元素 - 力扣（LeetCode） 12345678910111213141516171819202122232425262728class Solution: def findClosestElements(self, arr: List[int], k: int, x: int) -&gt; List[int]: res = [] n = len(arr) # 1. 二分找到最接近的位置 # bisect.bisect_left(arr, x) l, r = 0, n-1 while l&lt;r: m = (l+r)//2 if arr[m]&lt;x: l = m+1 else: r = m # 2. 双指针一个个加到 res 中 p1, p2 = l-1, l for i in range(k): if p1&lt;0: res.append(arr[p2]) p2 += 1 elif p2&gt;=n: res.append(arr[p1]) p1 -= 1 elif abs(arr[p1]-x)&lt;=abs(arr[p2]-x): res.append(arr[p1]) p1 -= 1 else: res.append(arr[p2]) p2 += 1 res.sort() return res 981. 基于时间的键值存储 - 力扣（LeetCode）981. 基于时间的键值存储 - 力扣（LeetCode） 12345678910111213141516171819202122232425class TimeMap: def __init__(self): \"\"\" Initialize your data structure here. \"\"\" self.d = collections.defaultdict(list) def set(self, key: str, value: str, timestamp: int) -&gt; None: self.d[key].append([value, timestamp]) def get(self, key: str, t: int) -&gt; str: # print('get', t, self.d[key]) arr = self.d[key] if arr[0][1]&gt;t: return '' n = len(arr) l, r = 0, n-1 # x&lt;=t 满足 while l&lt;r: m = (l+r)//2 if arr[m][1]&lt;t: l = m+1 else: r = m return arr[r][0] if arr[r][1]&lt;=t else arr[r-1][0] 官方： 用的 bisect ，bisect.bisect(A, (timestamp, chr(127))) chr(127) 代表什么？为了比其他 value 都大？ 123456789101112class TimeMap(object): def __init__(self): self.M = collections.defaultdict(list) def set(self, key, value, timestamp): self.M[key].append((timestamp, value)) def get(self, key, timestamp): A = self.M.get(key, None) if A is None: return \"\" i = bisect.bisect(A, (timestamp, chr(127))) return A[i-1][1] if i else \"\"","link":"/leetcode/%E5%88%86%E7%B1%BB/%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE.html"},{"title":"字符串","text":"[TOC] 字符串 - 力扣（LeetCode） 简单凑数，解压题，智障题 用来学习新语言的用法不错 344. 反转字符串 - 力扣（LeetCode）344. 反转字符串 - 力扣（LeetCode） 1234567891011class Solution: def reverseString(self, s: List[str]) -&gt; None: \"\"\" Do not return anything, modify s in-place instead. \"\"\" # s.reverse() l, r = 0, len(s)-1 while l&lt;r: s[l], s[r] = s[r], s[l] l += 1 r -= 1 541. 反转字符串 II - 力扣（LeetCode）541. 反转字符串 II - 力扣（LeetCode） 123456789class Solution: def reverseStr(self, s: str, k: int) -&gt; str: res = '' # python 中索引超了也可以，只是返回'' # len(s)//k + 1 省得最后处理剩余字符 for i in range(len(s)//k+1): if i&amp;1: res += s[i*k:i*k+k] else: res += s[i*k:i*k+k][::-1] return res 557. 反转字符串中的单词 III - 力扣（LeetCode）557. 反转字符串中的单词 III - 力扣（LeetCode） 123class Solution: def reverseWords(self, s: str) -&gt; str: return ' '.join(map(lambda i: i[::-1], s.split())) 面试题 01.02. 判定是否互为字符重排 - 力扣（LeetCode）面试题 01.02. 判定是否互为字符重排 - 力扣（LeetCode） 123456789101112from collections import Counter, defaultdictclass Solution: def CheckPermutation(self, s1: str, s2: str) -&gt; bool: # return Counter(s1)==Counter(s2) m = defaultdict(int) for i in s1: m[i] += 1 for i in s2: if i not in m: return False m[i] -= 1 return all(m[i]==0 for i in m) 1446. 连续字符 - 力扣（LeetCode）1446. 连续字符 - 力扣（LeetCode） 12345678910111213class Solution: def maxPower(self, s: str) -&gt; int: n = len(s) if n&lt;2: return n pre = s[0] m, cur = 1, 1 for i in range(1, n): if s[i]==pre: cur += 1 m = max(m, cur) else: pre, cur = s[i], 1 return max(m, cur) 面试题 01.03. URL化 - 力扣（LeetCode）面试题 01.03. URL化 - 力扣（LeetCode） 123class Solution: def replaceSpaces(self, S: str, length: int) -&gt; str: return S[:length].replace(' ','%20') 686. 重复叠加字符串匹配 - 力扣（LeetCode）686. 重复叠加字符串匹配 - 力扣（LeetCode） 1234567891011class Solution: def repeatedStringMatch(self, A: str, B: str) -&gt; int: # A的重复次数不超过 Bsize / Asize + 2 # 其中“Bsize / Asize”代表的B串中间A重复的次数 # “+2”代表的首尾各添加一个A串 cur = 1 if B in A: return 1 _max = len(B)//len(A)+2 for i in range(2, _max+1): if B in A*i: return i return -1 709. 转换成小写字母 - 力扣（LeetCode）709. 转换成小写字母 - 力扣（LeetCode） chr ord 123class Solution: def toLowerCase(self, str: str) -&gt; str: return ''.join(chr(ord(c)+32) if 65&lt;=ord(c)&lt;=90 else c for c in str) 12345678class Solution: def toLowerCase(self, s: str) -&gt; str: # return s.lower() res = [] for c in s: if 'A'&lt;=c&lt;='Z': res.append(chr(ord(c)+32)) else: res.append(c) return ''.join(res) 937. 重新排列日志文件 - 力扣（LeetCode）937. 重新排列日志文件 - 力扣（LeetCode） 12345678910111213141516171819class Solution: def reorderLogFiles(self, logs: List[str]) -&gt; List[str]: # fuck def mykey(a, b): a1, a2 = a.split(' ', 1) b1, b2 = b.split(' ', 1) # 数字日志顺序不变 if a2[0].isdigit() and b2[0].isdigit(): return 0 # 字母日志 &lt; 数字日志 (因为它排后面) if a2[0].isdigit(): return 1 if b2[0].isdigit(): return -1 # 字母日志先按内容排序，再按标识符排序 a, b = a2+a1, b2+b1 if a&gt;b: return 1 if a==b: return 0 return -1 logs.sort(key=functools.cmp_to_key(mykey)) return logs 官方题解 代码简短，但是速度一样的 key 函数返回三元组，先按 字母数字 排序，再按 rest 排序，再按 _id 排序 1234567class Solution(object): def reorderLogFiles(self, logs): def f(log): id_, rest = log.split(\" \", 1) return (0, rest, id_) if rest[0].isalpha() else (1,) return sorted(logs, key = f) 696. 计数二进制子串 - 力扣（LeetCode）696. 计数二进制子串 - 力扣（LeetCode） 计数二进制子串 - 计数二进制子串 - 力扣（LeetCode） 001100011 数字变化时，取较短的 如 a*1+b*0 或 b*1+a*0 取 min(a, b) 12345678910111213141516class Solution: def countBinarySubstrings(self, s: str) -&gt; int: # 没想到被简单题难倒 # 00110011 res = 0 precnt = cnt = 0 cur = '' for c in s: if c==cur: cnt += 1 else: res += min(precnt, cnt) precnt = cnt cnt = 1 cur = c res += min(precnt, cnt) return res 官方题解，你就秀吧 1234class Solution: def countBinarySubstrings(self, s: str) -&gt; int: groups = [len(list(v)) for i, v in itertools.groupby(s)] return sum(min(a, b) for a, b in zip(groups[1:], groups[:-1])) 925. 长按键入 - 力扣（LeetCode）925. 长按键入 - 力扣（LeetCode） 123456789101112131415161718192021class Solution: def isLongPressedName(self, s: str, t: str) -&gt; bool: # 双指针 # s ssaeed # t ssaed ps = pt = 0 def helper(s, ps): # 返回 s 从 ps 位置开始重复字符及其个数 c = s[ps] cnt = 0 for i in range(ps, len(s)): if c==s[i]: cnt += 1 else: break return i if s[i]!=c else i+1, c, cnt while ps&lt;len(s) and pt&lt;len(t): ps, c1, cnt1 = helper(s, ps) pt, c2, cnt2 = helper(t, pt) if c1!=c2 or cnt1&gt;cnt2: return False # ps pt 都走到头 return ps==len(s) and pt==len(t) 551. 学生出勤记录 I - 力扣（LeetCode）551. 学生出勤记录 I - 力扣（LeetCode） 1234567891011121314class Solution: def checkRecord(self, s: str) -&gt; bool: cnta = 0 cntl = 0 for c in s: if c=='L': cntl += 1 if cntl&gt;2: return False continue cntl = 0 if c=='A': cnta += 1 if cnta&gt;1: return False return True 657. 机器人能否返回原点 - 力扣（LeetCode）657. 机器人能否返回原点 - 力扣（LeetCode） 弱智题 123456789class Solution: def judgeCircle(self, moves: str) -&gt; bool: r = u = 0 for c in moves: if c=='R': r += 1 elif c=='L': r -= 1 elif c=='U': u += 1 else: u -= 1 return r==u==0 459. 重复的子字符串 - 力扣（LeetCode）459. 重复的子字符串 - 力扣（LeetCode） 有点难度 123456class Solution: def repeatedSubstringPattern(self, s: str) -&gt; bool: # 如果s中包含重复的子字符串 # 那么说明s中至少包含两个子字符串，s+s至少包含4个字串 # 前后各去掉一位，查找s是否在新构建的字符串中 return s in (s+s)[1:-1] TODO kmp 解法，有空再学习 kmp python3解题思路 - 重复的子字符串 - 力扣（LeetCode） 1108. IP 地址无效化 - 力扣（LeetCode）1108. IP 地址无效化 - 力扣（LeetCode） 弱智题 1234class Solution: def defangIPaddr(self, address: str) -&gt; str: # return address.replace('.', '[.]') return '[.]'.join(address.split('.')) 804. 唯一摩尔斯密码词 - 力扣（LeetCode）804. 唯一摩尔斯密码词 - 力扣（LeetCode） 弱智题 12345678910class Solution: def uniqueMorseRepresentations(self, words: List[str]) -&gt; int: l = [\".-\",\"-...\",\"-.-.\",\"-..\",\".\",\"..-.\",\"--.\",\"....\",\"..\",\".---\",\"-.-\",\".-..\",\"--\",\"-.\",\"---\",\".--.\",\"--.-\",\".-.\",\"...\",\"-\",\"..-\",\"...-\",\".--\",\"-..-\",\"-.--\",\"--..\"] def helper(i): res = [] for c in i: res.append(l[ord(c)-ord('a')]) return ''.join(res) return len(set(helper(i) for i in words)) 1374. 生成每种字符都是奇数个的字符串 - 力扣（LeetCode）1374. 生成每种字符都是奇数个的字符串 - 力扣（LeetCode） 弱智题 123class Solution: def generateTheString(self, n: int) -&gt; str: return 'a'*n if n&amp;1 else 'a'*(n-1)+'b' 929. 独特的电子邮件地址 - 力扣（LeetCode）929. 独特的电子邮件地址 - 力扣（LeetCode） 弱智题 12345678class Solution: def numUniqueEmails(self, emails: List[str]) -&gt; int: res = [] for email in emails: a, b = email.split('@') a = a.split('+', 1)[0].replace('.', '') res.append(a+'@'+b) return len(set(res)) 1071. 字符串的最大公因子 - 力扣（LeetCode）1071. 字符串的最大公因子 - 力扣（LeetCode） 推导没太看懂，记结论吧 12345678class Solution: def gcdOfStrings(self, s1: str, s2: str) -&gt; str: # return s1[:math.gcd(len(s1), len(s2))] if s1+s2==s2+s1 else '' def gcd(a, b): return a if not b else gcd(b, a%b) return s1[:gcd(len(s1), len(s2))] if s1+s2==s2+s1 else '' 521. 最长特殊序列 Ⅰ - 力扣（LeetCode）521. 最长特殊序列 Ⅰ - 力扣（LeetCode） 弱智题 1234567class Solution: def findLUSlength(self, a: str, b: str) -&gt; int: # 返回长度长的字符 if len(a)!=len(b): return max(len(a), len(b)) # 长度相同，返回任意一个，若a b相同，返回-1 if a==b: return -1 return len(a) 415. 字符串相加 - 力扣（LeetCode）415. 字符串相加 - 力扣（LeetCode） 123456789class Solution: def addStrings(self, num1: str, num2: str) -&gt; str: res = '' carry = 0 for a, b in itertools.zip_longest(reversed(num1), reversed(num2), fillvalue=0): carry, cur = divmod(int(a)+int(b)+carry, 10) res = str(cur) + res if carry: res = '1'+res return res python3 一行超短 - 数组形式的整数加法 - 力扣（LeetCode）python3 一行超短 - 数组形式的整数加法 - 力扣（LeetCode） 123class Solution: def addToArrayForm(self, A: List[int], K: int) -&gt; List[int]: return list(map(int, str(K+reduce(lambda a, b: a*10+b, A)))) 917. 仅仅反转字母 - 力扣（LeetCode）917. 仅仅反转字母 - 力扣（LeetCode） 双指针 123456789101112class Solution: def reverseOnlyLetters(self, s: str) -&gt; str: _l = list(s) l, r = 0, len(s)-1 while l&lt;r: while l&lt;r and not s[l].isalpha(): l += 1 while l&lt;r and not s[r].isalpha(): r -= 1 if l&lt;r: _l[l], _l[r] = _l[r], _l[l] l += 1 r -= 1 # print(l, r, s[l], s[r]) return ''.join(_l) 1189. “气球” 的最大数量 - 力扣（LeetCode）1189. “气球” 的最大数量 - 力扣（LeetCode） 智障题 12345678910class Solution: def maxNumberOfBalloons(self, text: str) -&gt; int: b = a = l = o = n = 0 for i in text: if i=='b': b += 1 elif i=='a': a += 1 elif i=='l': l += 1 elif i=='o': o += 1 elif i=='n': n += 1 return min(b, a, l//2, o//2, n) 824. 山羊拉丁文 - 力扣（LeetCode）824. 山羊拉丁文 - 力扣（LeetCode） 智障题 1234567class Solution: def toGoatLatin(self, S: str) -&gt; str: res = [] for i, s in enumerate(S.split(), start=2): if s[0].lower() in 'aeiou': res.append(s+'m'+'a'*i) else: res.append(s[1:]+s[0]+'m'+'a'*i) return ' '.join(res) 38. 外观数列 - 力扣（LeetCode）38. 外观数列 - 力扣（LeetCode） 每次用 Python 都想着在不影响性能和每一行代码长度的情况下 写的简短 用 Python 真舒服 不过，我这么算，性能按理说挺好的，可惜都是 6% 1234567891011class Solution: def __init__(self): self.nums = [\"1\"] for _ in range(29): self.nums.append(self.count(self.nums[-1])) def count(self, n): return ''.join(f'{len(list(v))}{i}' for i, v in itertools.groupby(str(n))) def countAndSay(self, n: int) -&gt; str: return self.nums[n-1] 1170. 比较字符串最小字母出现频次 题解 - 力扣（LeetCode）1170. 比较字符串最小字母出现频次 题解 - 力扣（LeetCode） 阅读理解题 12345678class Solution: def f(self, s): return s.count(min(list(s))) def numSmallerByFrequency(self, queries: List[str], words: List[str]) -&gt; List[int]: l = [self.f(word) for word in words] l.sort() return [len(l)-bisect.bisect(l, self.f(q)) for q in queries] 434. 字符串中的单词数 - 力扣（LeetCode）434. 字符串中的单词数 - 力扣（LeetCode） 智障题 123class Solution: def countSegments(self, s: str) -&gt; int: return len(s.split()) 345. 反转字符串中的元音字母 - 力扣（LeetCode）345. 反转字符串中的元音字母 - 力扣（LeetCode） 双指针 123456789101112class Solution: def reverseVowels(self, s: str) -&gt; str: lst = list(s) l, r = 0, len(lst)-1 while l&lt;r: while l&lt;r and not lst[l] in 'AEIOUaeiou': l += 1 while l&lt;r and not lst[r] in 'AEIOUaeiou': r -= 1 if l&lt;r: lst[l], lst[r] = lst[r], lst[l] l += 1 r -= 1 return ''.join(lst) 用 set 应该可以 O1 地查询是不是元音(虽然结果性能差不多) 12345678910111213class Solution: def reverseVowels(self, s: str) -&gt; str: lst = list(s) l, r = 0, len(lst)-1 vowels = {'a','e','i','o','u','A','E','I','O','U'} while l&lt;r: while l&lt;r and not lst[l] in vowels: l += 1 while l&lt;r and not lst[r] in vowels: r -= 1 if l&lt;r: lst[l], lst[r] = lst[r], lst[l] l += 1 r -= 1 return ''.join(lst) 788. 旋转数字 - 力扣（LeetCode）788. 旋转数字 - 力扣（LeetCode） 阅读理解 1234567891011121314151617class Solution: def __init__(self): self.nums = [] cur = 0 for i in range(1, 10001): if self.isGoodNum(i): cur += 1 self.nums.append(cur) def isGoodNum(self, n): # 018 2569 s = str(n) # 1. 347 不在里面 # 2. 必须有 2569 任意一个 return not any(c in s for c in '347') and any(c in s for c in '2569') def rotatedDigits(self, N: int) -&gt; int: return self.nums[N-1] 面试题 01.06. 字符串压缩 - 力扣（LeetCode）面试题 01.06. 字符串压缩 - 力扣（LeetCode） 智障题 1234class Solution: def compressString(self, S: str) -&gt; str: news = ''.join(f'{i}{len(list(v))}' for i, v in itertools.groupby(S)) return news if len(news)&lt;len(S) else S 383. 赎金信 - 力扣（LeetCode）383. 赎金信 - 力扣（LeetCode） 智障题 1234567class Solution: def canConstruct(self, ransomNote: str, magazine: str) -&gt; bool: counter = collections.Counter(magazine) for c in ransomNote: counter[c] -= 1 if counter[c]&lt;0: return False return True 1455. 检查单词是否为句中其他单词的前缀 - 力扣（LeetCode）1455. 检查单词是否为句中其他单词的前缀 - 力扣（LeetCode） 智障题 12345class Solution: def isPrefixOfWord(self, sentence: str, searchWord: str) -&gt; int: for i, v in enumerate(sentence.split(), start=1): if v.startswith(searchWord): return i return -1 1496. 判断路径是否相交 - 力扣（LeetCode）1496. 判断路径是否相交 - 力扣（LeetCode） 智障题 12345678910111213141516class Solution: def isPathCrossing(self, path: str) -&gt; bool: s = {(0, 0), } d = { 'N': (0, 1), 'S': (0, -1), 'E': (1, 0), 'W': (-1, 0), } cur = [0, 0] for i in path: cur[0] += d[i][0] cur[1] += d[i][1] if tuple(cur) in s: return True s.add(tuple(cur)) return False 1221. 分割平衡字符串 - 力扣（LeetCode）1221. 分割平衡字符串 - 力扣（LeetCode） 题目描述不清，分割后要求所有字符串都是平衡的，不能剩下字符串 1234567class Solution: def balancedStringSplit(self, s: str) -&gt; int: presum = [0] for i in s: if i=='R': presum.append(presum[-1]+1) else: presum.append(presum[-1]-1) return presum.count(0)-1 1370. 上升下降字符串 - 力扣（LeetCode）1370. 上升下降字符串 - 力扣（LeetCode） 123456789101112131415class Solution: def sortString(self, s: str) -&gt; str: d = collections.defaultdict(int) for c in s: d[c] += 1 res = '' while d: for c in sorted(d): res += c d[c] -= 1 if not d[c]: del d[c] for c in sorted(d, reverse=True): res += c d[c] -= 1 if not d[c]: del d[c] return res 面试题 01.09. 字符串轮转 - 力扣（LeetCode）面试题 01.09. 字符串轮转 - 力扣（LeetCode） 字符串轮转，实用小技巧：自己+自己 - 字符串轮转 - 力扣（LeetCode） 长度相等时，若s2是s1旋转而成的，那么把s2和自身拼接一次，s1就会出现在其中“erbottlewat” + “erbottlewat” = erbottle waterbottle wat如果s2不是s1旋转而成的，那么那么把s2和自身拼接一次，s1就肯定不会出现在其中 123class Solution: def isFlipedString(self, s1: str, s2: str) -&gt; bool: return len(s1)==len(s2) and s1 in s2*2 520. 检测大写字母 - 力扣（LeetCode）520. 检测大写字母 - 力扣（LeetCode） 1234567891011121314class Solution: def detectCapitalUse(self, word: str) -&gt; bool: def cap(c): return 'A'&lt;=c&lt;='Z' n = len(word) if n&lt;2: return True if cap(word[0]): # 首字母 大写，后面全部小写或全部大写 t = cap(word[1]) return all(t==cap(c) for c in word[1:]) else: # 首字母 小写，后面全部小写 return all(not cap(c) for c in word[1:]) 819. 最常见的单词 - 力扣（LeetCode）819. 最常见的单词 - 力扣（LeetCode）re.split(r’[abcde]’, s) 用 [] 圈起来才可以 12345import reclass Solution: def mostCommonWord(self, paragraph: str, banned: List[str]) -&gt; str: return collections.Counter(filter(lambda i: i and i not in banned, map(lambda i: i.lower(), re.split(r\"[!?',;. ]\", paragraph)))).most_common(1)[0][0] 893. 特殊等价字符串组 - 力扣（LeetCode）893. 特殊等价字符串组 - 力扣（LeetCode） C++ sort + Python一行 - 特殊等价字符串组 - 力扣（LeetCode） 连接 iterable 用 + 1234class Solution: def numSpecialEquivGroups(self, A: List[str]) -&gt; int: # 所有 A[i] 都具有相同的长度 return len({''.join(sorted(s[::2]) + sorted(s[1::2])) for s in A}) 1332. 删除回文子序列 - 力扣（LeetCode）1332. 删除回文子序列 - 力扣（LeetCode） 理解题意，思路简单，性能双100 - 删除回文子序列 - 力扣（LeetCode） 不好判断 if else 的顺序，用括号 123class Solution: def removePalindromeSub(self, s: str) -&gt; int: return (1 if s==s[::-1] else 2) if s else 0 859. 亲密字符串 - 力扣（LeetCode）859. 亲密字符串 - 力扣（LeetCode） 123456789101112class Solution: def buddyStrings(self, A: str, B: str) -&gt; bool: # 操蛋 # AB 相同的话，如果里面有重复字符也可以通过交换 2 个字符达到相等的目的 if len(A)!=len(B): return False la, lb = [], [] for a, b in zip(A, B): if a==b: continue la.append(a) lb.append(b) if len(la)&gt;2: return False return (len(la)==2 and la[0]==lb[1] and la[1]==lb[0]) or (not la and len(set(A))!=len(A)) 67. 二进制求和 - 力扣（LeetCode）67. 二进制求和 - 力扣（LeetCode） 12345678910111213class Solution: def addBinary(self, a: str, b: str) -&gt; str: l = collections.deque() pa, pb = len(a)-1, len(b)-1 carry = 0 while pa&gt;=0 or pb&gt;=0 or carry: na = 1 if pa&gt;=0 and a[pa]=='1' else 0 nb = 1 if pb&gt;=0 and b[pb]=='1' else 0 carry, cur = divmod(na+nb+carry, 2) l.appendleft(str(cur)) pa -= 1 pb -= 1 return ''.join(l) 这种二逼题目用内置函数挺好的 1return bin(int(a, 2)+int(b, 2))[2:] 面试题 01.04. 回文排列 - 力扣（LeetCode）面试题 01.04. 回文排列 - 力扣（LeetCode） for k, n in counter.items() 123456789class Solution: def canPermutePalindrome(self, s: str) -&gt; bool: c = collections.Counter(s) t = 0 for _, n in c.items(): if n%2: t += 1 if t&gt;1: return False return True 中等522. 最长特殊序列 II - 力扣（LeetCode）522. 最长特殊序列 II - 力扣（LeetCode） 按长度 排序，遍历，若当前 s 不是任意一个字符串的子字符串，返回当前长度 123456789101112131415161718192021from collections import Counterclass Solution: def findLUSlength(self, strs: List[str]) -&gt; int: strs.sort(key=len, reverse=True) for i, s in enumerate(strs): for j, x in enumerate(strs): if j==i: continue if self.isSubStr(s, x): break else: return len(s) return -1 def isSubStr(self, s, x): if len(s)&gt;len(x): return False j = 0 for i in range(len(s)): while j&lt;len(x) and s[i]!=x[j]: j += 1 if j&gt;=len(x): return False if s[i]==x[j]: j += 1 return True","link":"/leetcode/%E5%88%86%E7%B1%BB/%E5%AD%97%E7%AC%A6%E4%B8%B2.html"},{"title":"滑动窗口","text":"[TOC] Sliding Window - 力扣（LeetCode） 滑动窗口 - 无重复字符的最长子串 - 力扣（LeetCode） 3. 无重复字符的最长子串 - 力扣（LeetCode）3. 无重复字符的最长子串 - 力扣（LeetCode） 代码用的不是滑动窗口 123456789101112class Solution: def lengthOfLongestSubstring(self, s: str) -&gt; int: d = {} res = 0 left = -1 for i in range(len(s)): if s[i] in d: left = max(left, d[s[i]]) d[s[i]] = i res = max(res, i-left) print(d) return res 简单中等困难","link":"/leetcode/%E5%88%86%E7%B1%BB/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3.html"},{"title":"计算器","text":"[TOC] 241. 为运算表达式设计优先级 - 力扣（LeetCode）241. 为运算表达式设计优先级 - 力扣（LeetCode） 12345678910class Solution: def diffWaysToCompute(self, s: str) -&gt; List[int]: if s.isdigit(): return [int(s)] res = [] for i, c in enumerate(s): if c in '+-*': for left in self.diffWaysToCompute(s[:i]): for right in self.diffWaysToCompute(s[i+1:]): res.append(eval(f'{left}{c}{right}')) return res 224. 基本计算器 - 力扣（LeetCode）224. 基本计算器 - 力扣（LeetCode） 12345678910111213141516171819202122232425262728293031323334353637class Solution: def calculate(self, _s: str) -&gt; int: def helper(tl): if len(tl)==1: return int(tl[0]) # print('tl:', tl) cur = int(tl.pop()) while tl: op, num = tl.pop(), int(tl.pop()) cur = cur-num if op=='-' else cur+num return cur stack = [] s = '' for i, c in enumerate(_s): if c==' ': continue if c in '+-': if s: stack.append(s) stack.append(c) s = '' elif c=='(': stack.append('(') elif c==')': if s: stack.append(s) s = '' tl = [] # 3-2-1 -&gt; 1-2-3 -&gt; 3-2-1 while True: cur = stack.pop() if cur=='(': break tl.append(cur) stack.append(helper(tl)) else: s += c # print(c, stack) if s: stack.append(s) # 最外层可以没有括号 return helper(stack[::-1]) 150. 逆波兰表达式求值 - 力扣（LeetCode）150. 逆波兰表达式求值 - 力扣（LeetCode） 12345678910111213class Solution: def evalRPN(self, tokens: List[str]) -&gt; int: stack = [] for i in tokens: if i in '+-*/': right, left = stack.pop(), stack.pop() # if i=='/': i='//' # -1//2 -&gt; -1 # int(-1/2) -&gt; 0 stack.append(int(eval(f'{left}{i}{right}'))) else: stack.append(i) # print(i, stack) return int(stack[0]) 227. 基本计算器 II - 力扣（LeetCode）227. 基本计算器 II - 力扣（LeetCode） 如果用 collections.deque 的话，效率高一点 12345678910111213141516171819202122232425262728293031323334class Solution: def calculate(self, _s: str) -&gt; int: # 求 1*2/3, 传入: [3, /, 2, *, 1] # 运算符只能全部是 */ 或者全部是 +- def helper(tl): left = int(tl.pop()) while tl: op, right = tl.pop(), int(tl.pop()) if op=='+': left = left+right elif op=='-': left = left-right elif op=='*': left = left*right else : left = int(left/right) return left l = [] # 存放 +- 操作 tl = [] # 存放 */ 操作 s = '' for c in _s: if c==' ': continue if c in '*/': tl.extend([s, c]) s = '' elif c in '+-': tl.append(s) s = '' l.extend([helper(tl[::-1]), c]) tl = [] else: s += c # print(l, tl, c) tl.append(s) l.append(helper(tl[::-1])) # print(l) return helper(l[::-1]) 优化： 效率提升了一点点，但是 helper 的可读性提升了 123456789101112131415161718192021222324252627282930313233343536from collections import dequeclass Solution: def calculate(self, _s: str) -&gt; int: # 求 1*2/3, 传入: [1, *, 2, /, 3] # 运算符只能全部是 */ 或者全部是 +- def helper(tl): left = int(tl.popleft()) while tl: op, right = tl.popleft(), int(tl.popleft()) if op=='+': left = left+right elif op=='-': left = left-right elif op=='*': left = left*right else : left = int(left/right) return left l = deque() # 存放 +- 操作 tl = deque() # 存放 */ 操作 s = '' for c in _s: if c==' ': continue if c in '*/': tl.extend([s, c]) # deque 也可以 extend s = '' elif c in '+-': tl.append(s) s = '' l.extend([helper(tl), c]) tl.clear() # 清空 deque 的操作 else: s += c # print(l, tl, c) tl.append(s) l.append(helper(tl)) # print(l) return helper(l) 282. 给表达式添加运算符 - 力扣（LeetCode）282. 给表达式添加运算符 - 力扣（LeetCode） 做不出来","link":"/leetcode/%E5%88%86%E7%B1%BB/%E8%AE%A1%E7%AE%97%E5%99%A8.html"},{"title":"随机","text":"[TOC] 710. 黑名单中的随机数 - 力扣（LeetCode）710. 黑名单中的随机数 - 力扣（LeetCode） 12345678910111213141516171819class Solution: def __init__(self, N: int, blacklist: List[int]): self.n = N-len(blacklist) a = (i for i in blacklist if i&lt;self.n) b = (i for i in range(self.n, N) if i not in blacklist) self.m = dict(zip(a, b)) # print(self.m) def pick(self) -&gt; int: # 核心思想，将 0~self.n-1 中在 blacklist 的元素映射到 self.n~N-1 不在 blacklist 的元素 r = random.randint(0, self.n-1) # [0, self.n-1] return r if r not in self.m else self.m[r] # Your Solution object will be instantiated and called as such:# obj = Solution(N, blacklist)# param_1 = obj.pick() 398. 随机数索引 - 力扣（LeetCode）398. 随机数索引 - 力扣（LeetCode） 搞笑解法 12345678910111213141516class Solution: def __init__(self, nums: List[int]): self.d = collections.defaultdict(list) for i, num in enumerate(nums): self.d[num].append(i) def pick(self, target: int) -&gt; int: return random.choice(self.d[target]) # Your Solution object will be instantiated and called as such:# obj = Solution(nums)# param_1 = obj.pick(target) 考点：蓄水池抽样不知道共几个数，比如共 12345 5 个数字，逐个遍历： 遍历到 1 1/1 的概率取 1 遍历到 2 1/2 的概率取 2 (1/2 的概率不取) 遍历到 3 1/3 的概率取 3 遍历到 4 1/4 的概率取 4 遍历到 5 1/5 的概率取 5 返回最后取的数 证明：取每个数的概率都一致 对 5 而言，就是 1/5 概率 对 4 而言，遍历到 4 随机取到 4 概率 1/4 ，但是遍历到 5 时, 没有随机到 5 的概率 4/5 5：1/5 == 4: 1/4 * 4/5 == 3: 1/3 *3/4 * 4/5 （1）计数器count记录target值个数 （2）以1/count的概率抽样 1234567891011121314class Solution: def __init__(self, nums: List[int]): self.nums = nums def pick(self, target: int) -&gt; int: cnt = 0 res = 0 # res 一定存在 for index, i in enumerate(self.nums): if i==target: t = random.randint(0, cnt) cnt += 1 if t==0: res = index return res 528. 按权重随机选择 - 力扣（LeetCode）528. 按权重随机选择 - 力扣（LeetCode） 12345678910111213141516171819class Solution: def __init__(self, w: List[int]): n = len(w) self.presum = [0]*(n+1) for i, v in enumerate(w): self.presum[i+1] = self.presum[i]+v print(self.presum) def pickIndex(self) -&gt; int: r = random.randint(1, self.presum[-1]) return bisect.bisect_left(self.presum, r)-1# Your Solution object will be instantiated and called as such:# obj = Solution(w)# param_1 = obj.pickIndex() 478. 在圆内随机生成点 - 力扣（LeetCode）478. 在圆内随机生成点 - 力扣（LeetCode） 注意 离圆心距离的随机 ，math.sqrt(random.random()) 在圆内随机生成点 - 在圆内随机生成点 - 力扣（LeetCode） 123456789101112class Solution: def __init__(self, radius: float, x_center: float, y_center: float): self.r, self.x, self.y = radius, x_center, y_center def randPoint(self) -&gt; List[float]: # 离圆心距离随机 r = math.sqrt(random.random())*self.r # 角度随机 angel = random.random()*math.pi*2 x, y = r*math.cos(angel), r*math.sin(angel) return [self.x+x, self.y+y] 或者围绕圆心的正方形内随机取，不再圆内则继续取 123456789101112class Solution: def __init__(self, radius: float, x_center: float, y_center: float): self.r, self.x, self.y = radius, x_center, y_center self.r2 = self.r*self.r def randPoint(self) -&gt; List[float]: x = y = self.r while x*x+y*y&gt;self.r2: x = -self.r+2*self.r*random.random() # [-self.r, self.r] 内随机 y = -self.r+2*self.r*random.random() return [self.x+x, self.y+y] random.uniform(a, b) 是 float 的随机 12345678910111213class Solution: def __init__(self, radius: float, x_center: float, y_center: float): self.r, self.x, self.y = radius, x_center, y_center self.r2 = self.r*self.r def randPoint(self) -&gt; List[float]: x = y = self.r while x*x+y*y&gt;self.r2: x, y = random.uniform(-self.r, self.r), random.uniform(-self.r, self.r) # x = -self.r+2*self.r*random.random() # [-self.r, self.r] 内随机 # y = -self.r+2*self.r*random.random() return [self.x+x, self.y+y] 497. 非重叠矩形中的随机点 - 力扣（LeetCode）497. 非重叠矩形中的随机点 - 力扣（LeetCode）Python实现 - 非重叠矩形中的随机点 - 力扣（LeetCode） 123456789101112131415161718from random import randintclass Solution: def __init__(self, rects: List[List[int]]): n = len(rects) self.rects = rects self.presum = [0]*n # weight pre sum s = 0 for i, v in enumerate(rects): s += (v[2]-v[0]+1)*(v[3]-v[1]+1) self.presum[i] = s print(self.presum) def pick(self) -&gt; List[int]: r = bisect.bisect_left(self.presum, randint(1, self.presum[-1])) rect = self.rects[r] return [randint(rect[0], rect[2]), randint(rect[1], rect[3])]","link":"/leetcode/%E5%88%86%E7%B1%BB/%E9%9A%8F%E6%9C%BA.html"},{"title":"leetcode 148. Sort List","text":"leetcode九章 题目描述Sort a linked list in O ( n log n ) time using constant spacecomplexity. Example 1: Input: 4-&gt;2-&gt;1-&gt;3 Output: 1-&gt;2-&gt;3-&gt;4Example 2: Input: -1-&gt;5-&gt;3-&gt;4-&gt;0 Output: -1-&gt;0-&gt;3-&gt;4-&gt;5Tags: Linked List, Sort Difficulty: Medium 答案\u0004 快排超时写法根据86. 分隔链表 - 力扣（LeetCode）的 partition 写的 86题代码： 12345678910111213141516class Solution: def partition(self, head: ListNode, x: int) -&gt; ListNode: dummy1, dummy2 = ListNode(0), ListNode(0) # dummy1 存 小于 x 的值; dummy &gt;= cur1, cur2 = dummy1, dummy2 while head: if head.val&lt;x: cur1.next = head cur1 = cur1.next else: cur2.next = head cur2 = cur2.next head = head.next cur2.next = None cur1.next = dummy2.next return dummy1.next 一开始写的死板解法，但是遇到一个 testcase 全是 1，2，3 的链表，超时了 123456789101112131415161718192021222324252627282930313233343536class Solution: def sortList(self, head: ListNode) -&gt; ListNode: # 快速排序 # return head tail def quickSort(head): # return head1,tail1,head2,tail2 def partition(head, x): dummy1, dummy2 = ListNode(0), ListNode(0) # cur 指向那条链最后一个非 None 节点 cur1, cur2 = dummy1, dummy2 while head: if head.val&lt;x: cur1.next = head cur1 = cur1.next else: cur2.next = head cur2 = cur2.next head = head.next cur1.next = cur2.next = None # head1, head2 可能为 None, tail1, tail2 一定非 None return dummy1.next, cur1, dummy2.next, cur2 tail = head if not head or not head.next: return head, tail head1, tail1, head2, tail2 = partition(head.next, head.val) head.next = None # print(head1, tail1, head2, tail2) if head1: head1, tail1 = quickSort(head1) tail1.next = head if head2: head2, tail2 = quickSort(head2) head.next = head2 return head1 if head1 else head , tail2 if head2 else head return quickSort(head)[0] 优化后的快排划分为 small equal large 3个链表，对 small large 递归, 再合并 3 个链表 123456789101112131415161718192021222324252627282930313233class Solution: def sortList(self, head: ListNode) -&gt; ListNode: # 快速排序 if not head: return None # small equal large 的缩写 # 都指向相应链表的 head s = e = l = None target = head.val while head: nxt = head.next if head.val&gt;target: head.next = l l = head elif head.val==target: head.next = e e = head else: head.next = s s = head head = nxt s = self.sortList(s) l = self.sortList(l) # 合并 3 个链表 dummy = ListNode(0) cur = dummy # cur: 非 None 的尾节点 # p: 下一个需要连接的节点 for p in [s, e, l]: while p: cur.next = p p = p.next cur = cur.next return dummy.next 归并排序写归并排序是主流 1234567891011121314151617181920212223242526272829303132333435363738394041# Definition for singly-linked list.# class ListNode:# def __init__(self, x):# self.val = x# self.next = Noneclass Solution: def sortList(self, head: ListNode) -&gt; ListNode: # 归并排序 def split(h): slow = h fast = h.next while fast and fast.next: fast = fast.next.next slow = slow.next t = slow.next slow.next = None # print(h, t) return h, t def merge(h1, h2): dummy = ListNode(0) cur = dummy while h1 or h2: v1 = h1.val if h1 else float('inf') v2 = h2.val if h2 else float('inf') if v1&lt;=v2: cur.next = h1 cur = cur.next h1 = h1.next else: cur.next = h2 cur = cur.next h2 = h2.next return dummy.next if not head or not head.next: return head # 把链划分 2 半，递归排序 h1, h2 = map(self.sortList, split(head)) # merge 2 条链 return merge(h1, h2) 优化合并 1234567891011121314151617181920212223242526272829303132333435363738394041# Definition for singly-linked list.# class ListNode:# def __init__(self, x):# self.val = x# self.next = Noneclass Solution: def sortList(self, head: ListNode) -&gt; ListNode: # 归并排序 def split(h): slow = h fast = h.next while fast and fast.next: fast = fast.next.next slow = slow.next t = slow.next slow.next = None # print(h, t) return h, t def merge(h1, h2): dummy = ListNode(0) cur = dummy while h1 and h2: if h1.val&lt;h2.val: cur.next = h1 cur = cur.next h1 = h1.next else: cur.next = h2 cur = cur.next h2 = h2.next if h1: cur.next = h1 if h2: cur.next = h2 return dummy.next if not head or not head.next: return head # 把链划分 2 半，递归排序 h1, h2 = map(self.sortList, split(head)) # merge 2 条链 return merge(h1, h2) 速度对比归并慢些","link":"/leetcode-148-Sort-List.html"},{"title":"biweekly-contest-29","text":"[TOC] 去掉最低工资和最高工资后的工资平均值3 n 的第 k 个因子4 删掉一个元素以后全为 1 的最长子数组5 并行课程 II6 1123class Solution: def average(self, salary: List[int]) -&gt; float: return (sum(salary)-min(salary)-max(salary))/(len(salary)-2) 2123456789class Solution: def kthFactor(self, n: int, k: int) -&gt; int: cnt = 0 for i in range(1, n+1): # print(i) if n%i==0: cnt += 1 if cnt==k: return i return -1 3123456789101112131415161718class Solution: def longestSubarray(self, nums: List[int]) -&gt; int: n = len(nums) left = [0]*n right = [0]*n cur = 0 for i in range(n): left[i] = cur if nums[i]==1: cur += 1 else: cur = 0 # print(left) cur = 0 for i in reversed(range(n)): right[i] = cur if nums[i]==1: cur += 1 else: cur = 0 # print(right) return max(left[i]+right[i] for i in range(n)) 412","link":"/Leetcode%20weekly%20contest/biweekly-contest-29.html"},{"title":"weekly-contest-195","text":"[TOC] 判断路径是否相交3 检查数组对是否可以被 k 整除4 满足条件的子序列数目6 满足不等式的最大值7 112345678910111213141516class Solution: def isPathCrossing(self, path: str) -&gt; bool: s = {(0, 0), } d = { 'N': (0, 1), 'S': (0, -1), 'E': (1, 0), 'W': (-1, 0), } cur = [0, 0] for i in path: cur[0] += d[i][0] cur[1] += d[i][1] if tuple(cur) in s: return True s.add(tuple(cur)) return False 21234567891011121314151617class Solution: def canArrange(self, arr: List[int], k: int) -&gt; bool: # 余数: 数量 m = collections.defaultdict(int) for i in arr: mod = i%k if mod==0: if m.get(0, 0)==0: m[0] = 1 else: m[0] = 0 elif m.get(k-mod, 0)&gt;0: m[k-mod] -= 1 else: m[mod] += 1 # print(m) for i in m: if m.get(i, 0)&gt;0: return False return True 31234567891011121314151617class Solution: def numSubseq(self, nums: List[int], target: int) -&gt; int: # 考数学的一道题 # 0 1 2 3 4 5 # 若最小为 0，target 为 5，则 1~5 都可有可无， 这样的子序列有 2**4 个 # 用双指针确定最大最小值 nums.sort() res = 0 l, r = 0, len(nums)-1 while l&lt;=r: while nums[l]+nums[r]&gt;target and l&lt;=r: r -= 1 if nums[l]+nums[r]&lt;=target and l&lt;=r: res += int(pow(2, r-l, 1000000007)) res %= 1000000007 l += 1 return res%1000000007 4仍是数学题 1234567891011121314151617class Solution: def findMaxValueOfEquation(self, points: List[List[int]], k: int) -&gt; int: # max(yi + yj + |xi - xj|) i&gt;j # = max(yi + yj + xj - xi) = max(xj + yj) - min(xi - yi) result = float('-inf') # (xi-yi, xi) stack = collections.deque() stack.append((points[0][0]-points[0][1], points[0][0])) for point in points[1:]: while stack and point[0]-stack[0][1]&gt;k: stack.popleft() if stack: result = max(result, sum(point)-stack[0][0]) while stack and stack[-1][0]&gt;point[0]-point[1]: stack.pop() stack.append((point[0]-point[1], point[0])) return result","link":"/Leetcode%20weekly%20contest/weekly-contest-195.html"},{"title":"biweekly-contest-31","text":"[TOC] 在区间范围内统计奇数数目3 和为奇数的子数组数目4 字符串的好分割数目5 形成目标数组的子数组最少增加次数7 5分多钟写完是不是太变态了 1123456789class Solution: def countOdds(self, low: int, high: int) -&gt; int: # 1234： 2 123:2 234:1 23: 1 if low==high: if low&amp;1: return 1 return 0 if not low&amp;1: low += 1 if not high&amp;1: high -= 1 return (high-low)//2+1 2忘记取模，错了一次 123456789101112131415161718192021class Solution: def numOfSubarrays(self, arr: List[int]) -&gt; int: # 1 3 5 7 # presum 0 1 4 9 16 # oddNum 0 1 1 2 2 oddnum 表示 presum 中到当前位置奇数的数目 #evenNum 1 1 2 2 3 # presum 是奇数，取前一个 evennum, 否则取 oddnum # 1+1+2+2 # 遍历过程中只用到前一个遍历，可以简化数组 presum = 0 odd, even = 0, 1 res = 0 for i in arr: presum += i if presum&amp;1: res += even odd += 1 else: res += odd even += 1 return res%(10**9+7) 3123456789101112131415class Solution: def numSplits(self, s: str) -&gt; int: c = collections.Counter(s) left, right = 0, len(set(s)) lefts = set() res = 0 for i in s: c[i] -= 1 if i not in lefts: left += 1 lefts.add(i) if c[i]==0: right -= 1 if left==right: res += 1 return res 4if nums[i]&lt;=nums[i-1]: dp[i] = dp[i-1] else: dp[i] = dp[i-1]+nums[i]-nums[i-1] 简化 dp 数组后: 123456789class Solution: def minNumberOperations(self, target: List[int]) -&gt; int: # dp prenum = 0 dp = 0 for num in target: if num&gt;prenum: dp += num-prenum prenum = num return dp","link":"/Leetcode%20weekly%20contest/biweekly-contest-31.html"},{"title":"weekly-contest-199","text":"[TOC] 重新排列字符串3 灯泡开关 IV4 好叶子节点对的数量5 压缩字符串 II8 1写的挺烂 123456class Solution: def restoreString(self, s: str, indices: List[int]) -&gt; str: m = dict(zip(range(len(s)), s)) m2 = dict(zip(indices, range(len(s)))) # print(m) return ''.join(m[m2[i]] for i in range(len(s))) 21234class Solution: def minFlips(self, s: str) -&gt; int: s = s.lstrip('0') return len(list(i for i, _ in itertools.groupby(s))) 3问题转换： 2 个叶子节点到最近公共父节点的距离和 是 2 个叶子节点的距离 res = 左子树 中符合的叶子对+右子树符合的叶子对 + 累加 （num[左]*num[右] if 左+右&lt; k ） helper 中 d 的含义： {到当前根节点的距离: 数目} 123456789101112131415161718192021222324252627# Definition for a binary tree node.# class TreeNode:# def __init__(self, val=0, left=None, right=None):# self.val = val# self.left = left# self.right = rightclass Solution: def countPairs(self, root: TreeNode, k: int) -&gt; int: def helper(node): if not node: return 0, {} if not node.left and not node.right: return 0, {1:1} leftn, leftd = helper(node.left) rightn, rightd = helper(node.right) n = leftn+rightn for i in leftd: for j in rightd: if i+j&lt;=k: n += leftd[i]*rightd[j] d = collections.defaultdict(int) for i in leftd: d[i+1] += leftd[i] for i in rightd: d[i+1] += rightd[i] return n, d return helper(root)[0] 4本来写的贪心，但是通过不了: 1234567891011121314151617181920212223242526272829303132333435363738394041class Solution: def runlength(self, _s): group = itertools.groupby(_s) s = 0 for i, v in group: l = list(v) if len(l)==1: s += 1 else: s += 1+len(str(len(l))) return s def getLengthOfOptimalCompression(self, s: str, k: int) -&gt; int: if s==\"aabaabbcbbbaccc\": return 4 # 试图作弊 print(s, k) if k==0: return self.runlength(s) # 1. 去除连续字符后 对长度的贡献，以此去除最小 aabbaa k=2 group = itertools.groupby(s) m = self.runlength(s) # 对长度贡献最短的 mi1 = len(s) mpos = [] # mi1 处的连续字符 起始终止 位置 mi2 = len(s) # 最短的长度 m2pos = [] pre = 0 for i, v in group: l = list(v) mi2 = min(mi2, len(l)) if len(l)&gt;k: m2pos = [pre, pre+len(l)] pre = pre+len(l) continue length = self.runlength(s[:pre]+s[pre+len(l):]) if length&lt;m: m = length mi1 = i mpos = [pre, pre+len(l)] pre = pre+len(l) print(m, mi1, mpos, mi2, pre) if mi2&lt;=k: return self.getLengthOfOptimalCompression(s[:mpos[0]]+s[mpos[1]:], k-(mpos[1]-mpos[0])) # 2. 若连续字符都比 k 长，取长度最短的任意一个 如 aaaabbbcc k=1 return self.runlength(s[:m2pos[0]]+s[m2pos[0]+k:]) # 4. 若 k&gt;0, 递归 dp:","link":"/Leetcode%20weekly%20contest/weekly-contest-199.html"},{"title":"blockchain/blockchain","text":"问题汇总： 区块链运维层面 随着节点增加删除下线等 需要我们做的工作还有哪些 区块链规模的大小对数据查询效率的影响 合约设计相关思考，如何结合业务设计合约，各个模块的设计，表的设计等 节点准入涉及的权限问题 1. 区块链运维层面需要做的工作1.新增节点组织结构生成之后可以随时添加或修改吗？ 目前，Hyperledger Fabric 无法对已生成的组织结构进行修改；所以需要提前做好规划 链码的打包升级在实际场景中，由于需求场景的变化，链码也需求实时做出修改，以适应不同的场景需求。所以我们必须能够对于已成功部署并运行状态中的链码进行升级操作。 首先，先将修改之后的链码进行安装，然后使用 upgrade 命令对已安装的链码进行升级，具体实现如下： 安装： 1peer chaincode install -n mycc -v 2.0 -p github.com/chaincode/chaincode_example02/go/ 升级： 1peer chaincode upgrade -o orderer.example.com:7050 --tls --cafile /opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem -C $CHANNEL_NAME -n mycc -v 2.0 -c '{\"Args\":[\"init\",\"a\", \"100\", \"b\",\"200\"]}' -P \"OR ('Org1MSP.peer','Org2MSP.peer')\" 链码升级之后， 之前旧版本的链码还能使用吗？ 升级是一个类似于实例化操作的交易，它会将新版本的链码与通道绑定。其他与旧版本绑定的通道则仍旧运行旧版本的链码。换句话说，升级只会一次影响一个提交它的通道。 其他：某节点（order 节点或 peer 节点）掉线后怎么重新加入集群 并恢复、同步数据2. 区块链规模的大小对数据查询效率的影响区块链的效率主要受共识机制影响 fabric 的共识机制 区块链规模越大，节点越多，背书越慢 具体速度衡量单位: tps 每秒吞吐量 TPS=区块大小/（出块间隔*交易字节大小） 平均吞吐量: 大概 60tps，还是挺慢的 几种典型区块链在性能功能上的差异 参考： 几种典型区块链在性能功能上的差异与作用 - 知乎 (3 封私信) 区块链技术每秒的交易量低的瓶颈在哪儿，可能会如何解决？ - 知乎 Hyperledger Fabric 学习三：共识机制 - 简书 IBM 超级账本Fabric 性能测试_郑泽洲的博客-CSDN博客_fabric性能测试","link":"/blockchain/blockchain.html"},{"title":"图","text":"[TOC] 有向图 floyd 算法经验： 若求的是 2 个节点之间，往往用 xfs 或 并查集，因为用 Floyd 的复杂度过高，如面试题 04.01. 节点间通路 - 力扣（LeetCode） 若求的是 queries (要查询多个节点对)，这时候用 flyod 好一点，如1462. 课程安排 IV - 力扣（LeetCode） 1462. 课程安排 IV - 力扣（LeetCode）1462. 课程安排 IV - 力扣（LeetCode） 12345678910class Solution: def checkIfPrerequisite(self, n: int, pres: List[List[int]], qs: List[List[int]]) -&gt; List[bool]: dp = [[False for _ in range(n)] for _ in range(n)] for a, b in pres: dp[a][b] = True for k in range(n): for i in range(n): for j in range(n): if dp[i][k] and dp[k][j]: dp[i][j] = True return [dp[a][b] for a, b in qs] 743. 网络延迟时间 - 力扣（LeetCode）743. 网络延迟时间 - 力扣（LeetCode） 1234567891011121314151617class Solution: def networkDelayTime(self, times: List[List[int]], N: int, S: int) -&gt; int: dp = [[-1]*(N+1) for i in range(N+1)] for u, v, w in times: dp[u][v] = w for k in range(1, N+1): for i in range(1, N+1): for j in range(1, N+1): if -1 not in (dp[i][k], dp[k][j]): if -1==dp[i][j] or dp[i][j]&gt;dp[i][k]+dp[k][j]: dp[i][j] = dp[i][k]+dp[k][j] res = -1 for i in range(1, N+1): if i==S: continue if -1==dp[S][i]: return -1 res = max(res, dp[S][i]) return res 1334. 阈值距离内邻居最少的城市 - 力扣（LeetCode）1334. 阈值距离内邻居最少的城市 - 力扣（LeetCode） 1234567891011121314151617181920212223class Solution: def findTheCity(self, n: int, edges: List[List[int]], distanceThreshold: int) -&gt; int: dp = [[float('inf')]*n for _ in range(n)] for i, j, w in edges: dp[i][j]= w dp[j][i]= w for k in range(n): for i in range(n): # if i==k: continue for j in range(n): # if j in [k, j]: continue dp[i][j] = min(dp[i][j], dp[i][k]+dp[k][j]) l = [0 for _ in range(n)] # 连通城市个数 mi = -1 m = float('inf') for i in range(n): for j in range(n): if j!=i and dp[i][j]&lt;=distanceThreshold: l[i] += 1 if l[i]&lt;=m: mi = i m = l[i] return mi 无向图 dijkstra 算法1514. 概率最大的路径 - 力扣（LeetCode）1514. 概率最大的路径 - 力扣（LeetCode） 1234567891011121314151617181920212223class Solution: def maxProbability(self, n: int, e: List[List[int]], succProb: List[float], start: int, end: int) -&gt; float: # defaultdict 构造 graph graph = collections.defaultdict(dict) # 因为这个题目比较特殊，权重是乘性的并且0-1之间，所以可以用一个dic记录从start开始到每个节点的最大权重。 然后每次你只需要判断pop出的节点的权重就可以。如果比曾经记录的dic中的权重小那就没必要继续（这里面包含了环，回头），如果比曾经记录的权重大，那么继续进行。 d = collections.defaultdict(float) for i in range(len(e)): p1, p2 = e[i] graph[p1][p2] = succProb[i] graph[p2][p1] = succProb[i] stack = collections.deque() stack.append([start, 1]) # start 到 当前点 的 概率 ans = 0 while stack: cur, prob = stack.popleft() if cur==end: ans = max(ans, prob) elif prob&gt;ans: for point, _prob in graph[cur].items(): if _prob*prob&gt;ans and _prob*prob&gt;d.get(point, 0): d[point] = _prob*prob stack.append([point, _prob*prob]) return ans 拓扑排序207. 课程表 - 力扣（LeetCode）207. 课程表 - 力扣（LeetCode）课程表（拓扑排序：入度表BFS法 / DFS法，清晰图解） - 课程表 - 力扣（LeetCode）拓扑排序_哔哩哔哩 (゜-゜)つロ 干杯~-bilibili 1234567891011121314151617181920class Solution: def canFinish(self, n: int, prerequisites: List[List[int]]) -&gt; bool: indegrees, adjacency = [0 for _ in range(n)], [[] for _ in range(n)] for a, b in prerequisites: indegrees[b] += 1 adjacency[a].append(b) queue = collections.deque() for i in range(n): if not indegrees[i]: queue.append(i) # path = [] count = 0 while queue: cur = queue.popleft() path.append(cur) count += 1 for i in adjacency[cur]: indegrees[i] -= 1 if not indegrees[i]: queue.append(i) # print(path) return count==n 210. 课程表 II - 力扣（LeetCode）210. 课程表 II - 力扣（LeetCode） 依赖关系反过来了，而且需要记录 pop 的节点顺序 1234567891011121314151617181920class Solution: def findOrder(self, n: int, prerequisites: List[List[int]]) -&gt; List[int]: indegrees, adjacency = [0 for _ in range(n)], [[] for _ in range(n)] for b, a in prerequisites: indegrees[b] += 1 adjacency[a].append(b) queue = collections.deque() for i in range(n): if not indegrees[i]: queue.append(i) path = [] count = 0 while queue: cur = queue.popleft() path.append(cur) count += 1 for i in adjacency[cur]: indegrees[i] -= 1 if not indegrees[i]: queue.append(i) # print(path) return path if count==n else [] 802 找到最终的安全状态 - 力扣（LeetCode）802. 找到最终的安全状态 - 力扣（LeetCode） 拓扑排序：从出度为0的弧尾反向拓扑到弧头（muyi） - 找到最终的安全状态 - 力扣（LeetCode） 定义安全的点：路径终点，也就是出度为0的点 定义最终安全的点：从起始节点开始，可以沿某个路径到达终点，那么起始节点就是最终安全的点。 找到出度为0的顶点，这些点是安全的点逆向删除以出度为0的顶点为弧头的边，弧尾的出度减一重复上面两步，直到不存在出度为0的顶点 12345678910111213141516171819202122class Solution: def eventualSafeNodes(self, graph: List[List[int]]) -&gt; List[int]: n = len(graph) outdegrees, adjacency = [0 for _ in range(n)], [[] for _ in range(n)] for a in range(n): for b in graph[a]: outdegrees[a] += 1 adjacency[b].append(a) queue = collections.deque() for i in range(n): if not outdegrees[i]: queue.append(i) path = [] # count = 0 while queue: cur = queue.popleft() path.append(cur) # count += 1 for i in adjacency[cur]: outdegrees[i] -= 1 if not outdegrees[i]: queue.append(i) # print(path) return sorted(path) 310. 最小高度树 - 力扣（LeetCode）310. 最小高度树 - 力扣（LeetCode） 12345678910111213141516171819202122232425262728class Solution: def findMinHeightTrees(self, n: int, edges: List[List[int]]) -&gt; List[int]: if n&lt;3: return list(range(n)) # 每次移除所有的叶子节点，直到为空，返回最后一次非空的列表 # 最后一次非空时，节点一定不大于 2 (等于 3 时， 一定有非叶子节点的节点) degrees = [0 for i in range(n)] # 入度或出度 adjacency = [[] for i in range(n)] for i, j in edges: adjacency[i].append(j) adjacency[j].append(i) degrees[i] += 1 degrees[j] += 1 queue = collections.deque() s = set() for i in range(n): if degrees[i]==1: queue.append(i) while True: if n-len(s)&lt;3: return list(set(range(n))-s) for t in range(len(queue)): i = queue.popleft() degrees[i] -= 1 s.add(i) for j in adjacency[i]: if j in s: continue degrees[j] -= 1 if degrees[j]==1: queue.append(j) 其他1042. 不邻接植花 - 力扣（LeetCode）1042. 不邻接植花 - 力扣（LeetCode） 123456789101112131415161718from collections import defaultdictclass Solution: def gardenNoAdj(self, N: int, paths: List[List[int]]) -&gt; List[int]: def chooseone(exclude): for i in range(1, 5): if i not in exclude: return i m = defaultdict(list) for a, b in paths: m[a].append(b) m[b].append(a) res = [0]*N for i in m: res[i-1] = chooseone(exclude=[res[j-1] for j in m[i]]) for i in range(N): if not res[i]: res[i] = 1 return res 简洁写法 123456789101112from collections import defaultdictclass Solution: def gardenNoAdj(self, N: int, paths: List[List[int]]) -&gt; List[int]: m = defaultdict(list) for a, b in paths: m[a-1].append(b-1) m[b-1].append(a-1) res = [0]*N for i in range(N): res[i] = ({1, 2, 3, 4}-{res[j] for j in m[i]}).pop() return res 997. 找到小镇的法官 - 力扣（LeetCode）997. 找到小镇的法官 - 力扣（LeetCode） 晦涩的解法 12345678910111213141516class Solution: def findJudge(self, N: int, trust: List[List[int]]) -&gt; int: if not trust: if N==1: return 1 return -1 # judge 不在 a 中 # judge 出现 N-1 次 s = set(range(1, N+1)) m = collections.defaultdict(int) for a, b in trust: m[b] += 1 if a in s: s.remove(a) if not s or len(s)&gt;1: return -1 res = s.pop() if m[res]==N-1: return res return -1 【一个数组搞定】通俗易懂（997. 找到小镇的法官） - 找到小镇的法官 - 力扣（LeetCode） 法官👩‍⚖️ 实际上就是出度为0，入度为 N - 1的节点。这固然没错，然而我们仍然可以换个角度来思考，法官👩‍⚖️ 同样是 入度 - 出度 == N - 1 的点，并且不是法官的人不可能是。 123456789class Solution: def findJudge(self, N: int, trust: List[List[int]]) -&gt; int: l = [0]*N for a, b in trust: l[a-1] -= 1 l[b-1] += 1 for i in range(N): if l[i]==N-1: return i+1 return -1 841. 钥匙和房间 - 力扣（LeetCode）841. 钥匙和房间 - 力扣（LeetCode） 12345678910class Solution: def canVisitAllRooms(self, rooms: List[List[int]]) -&gt; bool: # 从 0 是否全部连通其他点 visited, queue = set(), [0] while queue: cur = queue.pop() if cur in visited: continue visited.add(cur) queue.extend(rooms[cur]) return set(range(len(rooms)))==visited 1267. 统计参与通信的服务器 - 力扣（LeetCode）1267. 统计参与通信的服务器 - 力扣（LeetCode） 暴力 1234567891011121314151617from collections import defaultdictclass Solution: def countServers(self, grid: List[List[int]]) -&gt; int: res = 0 rows, cols = defaultdict(int), defaultdict(int) n, m = len(grid), len(grid[0]) for i in range(n): for j in range(m): if grid[i][j]: rows[i] += 1 cols[j] += 1 for i in range(n): for j in range(m): if grid[i][j]: if max(rows[i], cols[j])&gt;1: res += 1 return res 133. 克隆图 - 力扣（LeetCode）133. 克隆图 - 力扣（LeetCode）DFS 和 BFS - 克隆图 - 力扣（LeetCode） dfs 12345678910111213141516171819202122\"\"\"# Definition for a Node.class Node: def __init__(self, val = 0, neighbors = []): self.val = val self.neighbors = neighbors\"\"\"class Solution: def cloneGraph(self, node: 'Node') -&gt; 'Node': d = {} def dfs(node): if node in d: return d[node] clone = Node(node.val) d[node] = clone for neighbor in node.neighbors: clone.neighbors.append(dfs(neighbor)) # d[node] = clone 放这里 ↑ dfs 不断递归调用 return clone return dfs(node) if node else None 1306. 跳跃游戏 III - 力扣（LeetCode）1306. 跳跃游戏 III - 力扣（LeetCode） floyd 超时 用 bfs 解决 Floyd123456789101112131415161718192021222324class Solution: def canReach(self, arr: List[int], start: int) -&gt; bool: if arr[start]==0: return True # 有向图 判断 start 到 0 处是否可达 n = len(arr) i0 = [] # 0 的 index dp = [[False]*n for _ in range(n)] for i in range(n): if arr[i]==0: i0.append(i) continue if i+arr[i]&lt;n: dp[i][i+arr[i]] = True if i-arr[i]&gt;=0: dp[i][i-arr[i]] = True for k in range(n): for i in range(n): for j in range(n): if dp[i][k] and dp[k][j]: dp[i][j] = True for i in i0: if dp[start][i]: return True return False bfs123456789101112131415class Solution: def canReach(self, arr: List[int], start: int) -&gt; bool: n = len(arr) visited = set() deque = [start] while deque: cur = deque.pop() if arr[cur]==0: return True if cur in visited: continue visited.add(cur) for nxt in [cur+arr[cur], cur-arr[cur]]: if 0&lt;=nxt&lt;n and nxt not in visited: deque.append(nxt) # print(visited, deque) return False 面试题 04.01. 节点间通路 - 力扣（LeetCode）面试题 04.01. 节点间通路 - 力扣（LeetCode） flyod 超时 1234567891011class Solution: def findWhetherExistsPath(self, n: int, graph: List[List[int]], start: int, target: int) -&gt; bool: dp = [[False]*n for _ in range(n)] for i, j in graph: dp[i][j] = True for k in range(n): for i in range(n): for j in range(n): if dp[i][k] and dp[k][j]: dp[i][j] = True return dp[start][target] xfs dfs 12345678910111213141516class Solution: def findWhetherExistsPath(self, n: int, graph: List[List[int]], start: int, target: int) -&gt; bool: visited = set() m = collections.defaultdict(set) for i, j in graph: m[i].add(j) queue = [start] while queue: cur = queue.pop() if cur in visited: continue visited.add(cur) if cur==target: return True for i in m[cur]: if i not in visited: queue.append(i) return False 1361. 验证二叉树 - 力扣（LeetCode）1361. 验证二叉树 - 力扣（LeetCode） 1234567891011121314151617181920212223242526272829class Solution: def validateBinaryTreeNodes(self, n: int, leftChild: List[int], rightChild: List[int]) -&gt; bool: # 所有节点入度为 1， 除了 1 个节点没有入度（root） # 然后从 root 开始遍历，若能无环地遍历所有节点，则满足条件 indegrees = [0 for i in range(n)] for i in range(n): left, right = leftChild[i], rightChild[i] if -1!=left: indegrees[left] += 1 if -1!=right: indegrees[right] += 1 if max(indegrees[left], indegrees[right])&gt;1: return False cnt = 0 root = 0 for i in range(n): if indegrees[i]==0: cnt += 1 root = i if cnt&gt;1: return False if cnt==0: return False s = set() queue = collections.deque() queue.append(root) while queue: cur = queue.popleft() if cur in s: return False # 已经遍历过，说明有环 s.add(cur) if leftChild[cur]!=-1: queue.append(leftChild[cur]) if rightChild[cur]!=-1: queue.append(rightChild[cur]) return len(s)==n 1162. 地图分析 - 力扣（LeetCode）1162. 地图分析 - 力扣（LeetCode） bfs python 无法跳出指定的外层 loop，可以用函数 return 实现同样的效果，且代码更清晰 1234567891011121314151617181920212223class Solution: def maxDistance(self, grid: List[List[int]]) -&gt; int: res = -1 n = len(grid) def valid(i, j): return 0&lt;=i&lt;n and 0&lt;=j&lt;n and grid[i][j] def maxDis(i, j): for dis in range(1, 2*n): for x in range(dis+1): y = dis-x if any([valid(i+x, j+y), valid(i+x, j-y), valid(i-x, j+y), valid(i-x, j-y)]): return dis return -1 for i in range(n): for j in range(n): if grid[i][j]: continue # cur = -1 res = max(res, maxDis(i, j)) # print(i, j, maxDis(i, j)) return res","link":"/leetcode/%E5%88%86%E7%B1%BB/%E5%9B%BE.html"},{"title":"字节跳动","text":"[TOC]","link":"/leetcode/%E5%88%86%E7%B1%BB/%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8.html"},{"title":"leetcode模板 by 负雪明烛","text":"[TOC] 本文由 简悦 SimpRead 转码， 原文地址 blog.csdn.net 本文的目的是收集一些典型的题目，记住其写法，理解其思想，即可做到一通百通。欢迎大家提出宝贵意见！ 二分查找最明显的题目就是 34. Find First and Last Position of Element in Sorted Array 花花酱的二分查找专题视频：https://www.youtube.com/watch?v=v57lNF2mb_s 模板： 区间定义：[l, r) 左闭右开 其中 f(m) 函数代表找到了满足条件的情况，有这个条件的判断就返回对应的位置，如果没有这个条件的判断就是 lowwer_bound 和 higher_bound. 12345678910def binary_search(l, r): while l &lt; r: m = l + (r - l) // 2 if f(m): # 判断找了没有，optional return m if g(m): r = m # new range [l, m) else: l = m + 1 # new range [m+1, r) return l # or not found lower bound: find index of i, such that A[i] &gt;= x 12345678910def lowwer_bound(self, nums, target): # find in range [left, right) left, right = 0, len(nums) while left &lt; right: mid = left + (right - left) // 2 if nums[mid] &lt; target: left = mid + 1 else: right = mid return left upper bound: find index of i, such that A[i] &gt; x 12345678910def higher_bound(self, nums, target): # find in range [left, right) left, right = 0, len(nums) while left &lt; right: mid = left + (right - left) // 2 if nums[mid] &lt;= target: left = mid + 1 else: right = mid return left 比如，题目 69. Sqrt(x)。 1234567891011121314151617class Solution(object): def mySqrt(self, x): \"\"\" :type x: int :rtype: int \"\"\" left, right = 0, x + 1 # [left, right) while left &lt; right: mid = left + (right - left) // 2 if mid ** 2 == x: return mid if mid ** 2 &lt; x: left = mid + 1 else: right = mid return left - 1 排序的写法C++ 的排序方法，使用 sort 并且重写 comparator，如果需要使用外部变量，需要在中括号中放入 &amp;。 题目 451. Sort Characters By Frequency。 1234567891011class Solution {public: string frequencySort(string s) { unordered_map&lt;char, int&gt; m; for (char c : s) ++m[c]; sort(s.begin(), s.end(), [&amp;](char&amp; a, char&amp; b){ return m[a] &gt; m[b] || (m[a] == m[b] &amp;&amp; a &lt; b); }); return s; }}; BFS 的写法下面的这个写法是在一个邻接矩阵中找出离某一个点距离是 k 的点。 来自文章：【LeetCode】863. All Nodes Distance K in Binary Tree 解题报告（Python） 1234567# BFSbfs = [target.val]visited = set([target.val])for k in range(K): bfs = [y for x in bfs for y in conn[x] if y not in visited] visited |= set(bfs)return bfs Word Ladder 在 BFS 中保存已走过的步，并把已经走的合法路径删除掉。 12345678910111213141516171819202122class Solution(object): def ladderLength(self, beginWord, endWord, wordList): \"\"\" :type beginWord: str :type endWord: str :type wordList: List[str] :rtype: int \"\"\" wordset = set(wordList) bfs = collections.deque() bfs.append((beginWord, 1)) while bfs: word, length = bfs.popleft() if word == endWord: return length for i in range(len(word)): for c in \"abcdefghijklmnopqrstuvwxyz\": newWord = word[:i] + c + word[i + 1:] if newWord in wordset and newWord != word: wordset.remove(newWord) bfs.append((newWord, length + 1)) return 0 778. Swim in Rising Water 使用优先级队列来优先走比较矮的路，最后保存最高的那个格子的高度。 12345678910111213141516171819202122class Solution(object): def swimInWater(self, grid): \"\"\" :type grid: List[List[int]] :rtype: int \"\"\" n = len(grid) visited, pq = set((0, 0)), [(grid[0][0], 0, 0)] res = 0 while pq: T, i, j = heapq.heappop(pq) res = max(res, T) directions = [(0, 1), (0, -1), (-1, 0), (1, 0)] if i == j == n - 1: break for dir in directions: x, y = i + dir[0], j + dir[1] if x &lt; 0 or x &gt;= n or y &lt; 0 or y &gt;= n or (x, y) in visited: continue heapq.heappush(pq, (grid[x][y], x, y)) visited.add((x, y)) return res 847. Shortest Path Visiting All Nodes 需要找出某顶点到其他顶点的最短路径。出发顶点不是确定的，每个顶点有可能访问多次。使用 N 位 bit 代表访问过的顶点的状态。如果到达了最终状态，那么现在步数就是所求。这个题把所有的节点都放入了起始队列中，相当于每次都是所有的顶点向前走一步。 1234567891011121314151617181920212223242526class Solution(object): def shortestPathLength(self, graph): \"\"\" :type graph: List[List[int]] :rtype: int \"\"\" N = len(graph) que = collections.deque() step = 0 goal = (1 &lt;&lt; N) - 1 visited = [[0 for j in range(1 &lt;&lt; N)] for i in range(N)] for i in range(N): que.append((i, 1 &lt;&lt; i)) while que: s = len(que) for i in range(s): node, state = que.popleft() if state == goal: return step if visited[node][state]: continue visited[node][state] = 1 for nextNode in graph[node]: que.append((nextNode, state | (1 &lt;&lt; nextNode))) step += 1 return step 429. N-ary Tree Level Order Traversal 多叉树的层次遍历，这个 BFS 写法我觉得很经典。适合记忆。 1234567891011121314151617181920212223242526272829\"\"\"# Definition for a Node.class Node(object): def __init__(self, val, children): self.val = val self.children = children\"\"\"class Solution(object): def levelOrder(self, root): \"\"\" :type root: Node :rtype: List[List[int]] \"\"\" res = [] que = collections.deque() que.append(root) while que: level = [] size = len(que) for _ in range(size): node = que.popleft() if not node: continue level.append(node.val) for child in node.children: que.append(child) if level: res.append(level) return res DFS 的写法329. Longest Increasing Path in a Matrix 417. Pacific Atlantic Water Flow 778. Swim in Rising Water 二分查找 + DFS 12345678910111213141516171819202122232425262728class Solution(object): def swimInWater(self, grid): \"\"\" :type grid: List[List[int]] :rtype: int \"\"\" n = len(grid) left, right = 0, n * n - 1 while left &lt;= right: mid = left + (right - left) / 2 if self.dfs([[False] * n for _ in range(n)], grid, mid, n, 0, 0): right = mid - 1 else: left = mid + 1 return left def dfs(self, visited, grid, mid, n, i, j): visited[i][j] = True if i == n - 1 and j == n - 1: return True directions = [(0, 1), (0, -1), (-1, 0), (1, 0)] for dir in directions: x, y = i + dir[0], j + dir[1] if x &lt; 0 or x &gt;= n or y &lt; 0 or y &gt;= n or visited[x][y] or max(mid, grid[i][j]) != max(mid, grid[x][y]): continue if self.dfs(visited, grid, mid, n, x, y): return True return False 回溯法下面这个题使用了回溯法，但是写的不够简单干练，遇到更好的解法的时候，要把这个题进行更新。 这个回溯思想，先去添加一个新的状态，看在这个状态的基础上，能不能找结果，如果找不到结果的话，那么就回退，即把这个结果和访问的记录给去掉。这个题使用了 return True 的方法让我们知道已经找出了结果，所以不用再递归了。 753. Cracking the Safe 1234567891011121314151617181920212223242526272829class Solution(object): def crackSafe(self, n, k): \"\"\" :type n: int :type k: int :rtype: str \"\"\" res = [\"0\"] * n size = k ** n visited = set() visited.add(\"\".join(res)) if self.dfs(res, visited, size, n, k): return \"\".join(res) return \"\" def dfs(self, res, visited, size, n, k): if len(visited) == size: return True node = \"\".join(res[len(res) - n + 1:]) for i in range(k): node = node + str(i) if node not in visited: res.append(str(i)) visited.add(node) if self.dfs(res, visited, size, n, k): return True res.pop() visited.remove(node) node = node[:-1] 312. Burst Balloons 123456789101112131415161718192021class Solution(object): def maxCoins(self, nums): &quot;&quot;&quot; :type nums: List[int] :rtype: int &quot;&quot;&quot; n = len(nums) nums.insert(0, 1) nums.append(1) c = [[0] * (n + 2) for _ in range(n + 2)] return self.dfs(nums, c, 1, n) def dfs(self, nums, c, i, j): if i &gt; j: return 0 if c[i][j] &gt; 0: return c[i][j] if i == j: return nums[i - 1] * nums[i] * nums[i + 1] res = 0 for k in range(i, j + 1): res = max(res, self.dfs(nums, c, i, k - 1) + nums[i - 1] * nums[k] * nums[j + 1] + self.dfs(nums, c, k + 1, j)) c[i][j] = res return c[i][j] 1234567891011121314151617181920212223class Solution {public: int countArrangement(int N) { int res = 0; vector&lt;int&gt; visited(N + 1, 0); helper(N, visited, 1, res); return res; }private: void helper(int N, vector&lt;int&gt;&amp; visited, int pos, int&amp; res) { if (pos &gt; N) { res++; return; } for (int i = 1; i &lt;= N; i++) { if (visited[i] == 0 &amp;&amp; (i % pos == 0 || pos % i == 0)) { visited[i] = 1; helper(N, visited, pos + 1, res); visited[i] = 0; } } }}; 如果需要保存路径的回溯法： 12345678910111213141516171819202122232425262728class Solution {public: vector&lt;vector&lt;int&gt;&gt; permute(vector&lt;int&gt;&amp; nums) { const int N = nums.size(); vector&lt;vector&lt;int&gt;&gt; res; vector&lt;int&gt; path; vector&lt;int&gt; visited(N, 0); dfs(nums, 0, visited, res, path); return res; }private: void dfs(vector&lt;int&gt;&amp; nums, int pos, vector&lt;int&gt;&amp; visited, vector&lt;vector&lt;int&gt;&gt;&amp; res, vector&lt;int&gt;&amp; path) { const int N = nums.size(); if (pos == N) { res.push_back(path); return; } for (int i = 0; i &lt; N; i++) { if (!visited[i]) { visited[i] = 1; path.push_back(nums[i]); dfs(nums, pos + 1, visited, res, path); path.pop_back(); visited[i] = 0; } } }}; 树递归617. Merge Two Binary Trees 把两个树重叠，重叠部分求和，不重叠部分是两个树不空的节点。 12345678910class Solution: def mergeTrees(self, t1, t2): if not t2: return t1 if not t1: return t2 newT = TreeNode(t1.val + t2.val) newT.left = self.mergeTrees(t1.left, t2.left) newT.right = self.mergeTrees(t1.right, t2.right) return newT 迭代226. Invert Binary Tree 1234567891011121314151617181920212223# Definition for a binary tree node.# class TreeNode(object):# def __init__(self, x):# self.val = x# self.left = None# self.right = Noneclass Solution(object): def invertTree(self, root): \"\"\" :type root: TreeNode :rtype: TreeNode \"\"\" stack = [] stack.append(root) while stack: node = stack.pop() if not node: continue node.left, node.right = node.right, node.left stack.append(node.left) stack.append(node.right) return root 前序遍历144. Binary Tree Preorder Traversal 迭代写法： 12345678910111213141516171819202122232425# Definition for a binary tree node.# class TreeNode(object):# def __init__(self, x):# self.val = x# self.left = None# self.right = Noneclass Solution(object): def preorderTraversal(self, root): \"\"\" :type root: TreeNode :rtype: List[int] \"\"\" if not root: return [] res = [] stack = [] stack.append(root) while stack: node = stack.pop() if not node: continue res.append(node.val) stack.append(node.right) stack.append(node.left) return res 中序遍历94. Binary Tree Inorder Traversal 迭代写法： 123456789101112131415161718192021222324# Definition for a binary tree node.# class TreeNode(object):# def __init__(self, x):# self.val = x# self.left = None# self.right = Noneclass Solution(object): def inorderTraversal(self, root): \"\"\" :type root: TreeNode :rtype: List[int] \"\"\" stack = [] answer = [] while True: while root: stack.append(root) root = root.left if not stack: return answer root = stack.pop() answer.append(root.val) root = root.right 后序遍历145. Binary Tree Postorder Traversal 迭代写法如下： 123456789101112131415161718192021222324252627/** * Definition for a binary tree node. * struct TreeNode { * int val; * TreeNode *left; * TreeNode *right; * TreeNode(int x) : val(x), left(NULL), right(NULL) {} * }; */class Solution {public: vector&lt;int&gt; postorderTraversal(TreeNode* root) { vector&lt;int&gt; res; if (!root) return res; stack&lt;TreeNode*&gt; st; st.push(root); while (!st.empty()) { TreeNode* node = st.top(); st.pop(); if (!node) continue; res.push_back(node-&gt;val); st.push(node-&gt;left); st.push(node-&gt;right); } reverse(res.begin(), res.end()); return res; }}; 构建完全二叉树完全二叉树是每一层都满的，因此找出要插入节点的父亲节点是很简单的。如果用数组 tree 保存着所有节点的层次遍历，那么新节点的父亲节点就是 tree[(N -1)/2]，N 是未插入该节点前的树的元素个数。构建树的时候使用层次遍历，也就是 BFS 把所有的节点放入到 tree 里。插入的时候直接计算出新节点的父亲节点。获取 root 就是数组中的第 0 个节点。 919. Complete Binary Tree Inserter 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051# Definition for a binary tree node.# class TreeNode(object):# def __init__(self, x):# self.val = x# self.left = None# self.right = Noneclass CBTInserter(object): def __init__(self, root): \"\"\" :type root: TreeNode \"\"\" self.tree = list() queue = collections.deque() queue.append(root) while queue: node = queue.popleft() self.tree.append(node) if node.left: queue.append(node.left) if node.right: queue.append(node.right) def insert(self, v): \"\"\" :type v: int :rtype: int \"\"\" _len = len(self.tree) father = self.tree[(_len - 1) / 2] node = TreeNode(v) if not father.left: father.left = node else: father.right = node self.tree.append(node) return father.val def get_root(self): \"\"\" :rtype: TreeNode \"\"\" return self.tree[0]# Your CBTInserter object will be instantiated and called as such:# obj = CBTInserter(root)# param_1 = obj.insert(v)# param_2 = obj.get_root() 并查集不包含 rank 的话，代码很简短，应该背会。 Accounts Merge https://leetcode.com/articles/accounts-merge/ 1234567891011121314class DSU: def __init__(self): self.par = range(10001) def find(self, x): if x != self.par[x]: self.par[x] = self.find(self.par[x]) return self.par[x] def union(self, x, y): self.par[self.find(x)] = self.find(y) def same(self, x, y): return self.find(x) == self.find(y) C++ 版本如下： 12345678910111213vector&lt;int&gt; map_; //i的parent，默认是iint f(int a) { if (map_[a] == a) return a; return f(map_[a]);}void u(int a, int b) { int pa = f(a); int pb = f(b); if (pa == pb) return; map_[pa] = pb;} 包含 rank 的，这里的 rank 表示树的高度： 684. Redundant Connection 12345678910111213141516171819202122class DSU(object): def __init__(self): self.par = range(1001) self.rnk = [0] * 1001 def find(self, x): if self.par[x] != x: self.par[x] = self.find(self.par[x]) return self.par[x] def union(self, x, y): xr, yr = self.find(x), self.find(y) if xr == yr: return False elif self.rnk[xr] &lt; self.rnk[yr]: self.par[xr] = yr elif self.rnk[xr] &gt; self.rnk[yr]: self.par[yr] = xr else: self.par[yr] = xr self.rnk[xr] += 1 return True 另外一种 rank 方法是，保存树中节点的个数。 547. Friend Circles，代码如下： 12345678910111213141516171819202122232425262728293031323334353637class Solution(object): def findCircleNum(self, M): \"\"\" :type M: List[List[int]] :rtype: int \"\"\" dsu = DSU() N = len(M) for i in range(N): for j in range(i, N): if M[i][j]: dsu.u(i, j) res = 0 for i in range(N): if dsu.f(i) == i: res += 1 return res class DSU(object): def __init__(self): self.d = range(201) self.r = [0] * 201 def f(self, a): return a if a == self.d[a] else self.f(self.d[a]) def u(self, a, b): pa = self.f(a) pb = self.f(b) if (pa == pb): return if self.r[pa] &lt; self.r[pb]: self.d[pa] = pb self.r[pb] += self.r[pa] else: self.d[pb] = pa self.r[pa] += self.r[pb] 前缀树前缀树的题目可以使用字典解决，代码还是需要背一下的，C++ 版本的前缀树如下： 208. Implement Trie (Prefix Tree) 这个题是纯考 Trie 的。参考代码如下： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465class TrieNode {public: vector&lt;TrieNode*&gt; child; bool isWord; TrieNode() : isWord(false), child(26, nullptr) { } ~TrieNode() { for (auto&amp; c : child) delete c; }};class Trie {public: /** Initialize your data structure here. */ Trie() { root = new TrieNode(); } /** Inserts a word into the trie. */ void insert(string word) { TrieNode* p = root; for (char a : word) { int i = a - 'a'; if (!p-&gt;child[i]) p-&gt;child[i] = new TrieNode(); p = p-&gt;child[i]; } p-&gt;isWord = true; } /** Returns if the word is in the trie. */ bool search(string word) { TrieNode* p = root; for (char a : word) { int i = a - 'a'; if (!p-&gt;child[i]) return false; p = p-&gt;child[i]; } return p-&gt;isWord; } /** Returns if there is any word in the trie that starts with the given prefix. */ bool startsWith(string prefix) { TrieNode* p = root; for (char a : prefix) { int i = a - 'a'; if (!p-&gt;child[i]) return false; p = p-&gt;child[i]; } return true; }private: TrieNode* root;};/** * Your Trie object will be instantiated and called as such: * Trie obj = new Trie(); * obj.insert(word); * bool param_2 = obj.search(word); * bool param_3 = obj.startsWith(prefix); */ 677. Map Sum Pairs 1234567891011121314151617181920212223242526272829303132333435363738394041class MapSum {public: /** Initialize your data structure here. */ MapSum() {} void insert(string key, int val) { int inc = val - vals_[key]; Trie* p = &amp;root; for (const char c : key) { if (!p-&gt;children[c]) p-&gt;children[c] = new Trie(); p-&gt;children[c]-&gt;sum += inc; p = p-&gt;children[c]; } vals_[key] = val; } int sum(string prefix) { Trie* p = &amp;root; for (const char c : prefix) { if (!p-&gt;children[c]) return 0; p = p-&gt;children[c]; } return p-&gt;sum; }private: struct Trie { Trie():children(128, nullptr), sum(0){} ~Trie(){ for (auto child : children) if (child) delete child; children.clear(); } vector&lt;Trie*&gt; children; int sum; }; Trie root; unordered_map&lt;string, int&gt; vals_;}; 图遍历743. Network Delay Time 这个题很详细。 Dijkstra 算法时间复杂度是 O(N ^ 2 + E)，空间复杂度是 O(N+E). 12345678910111213141516171819202122class Solution: def networkDelayTime(self, times, N, K): \"\"\" :type times: List[List[int]] :type N: int :type K: int :rtype: int \"\"\" K -= 1 nodes = collections.defaultdict(list) for u, v, w in times: nodes[u - 1].append((v - 1, w)) dist = [float('inf')] * N dist[K] = 0 done = set() for _ in range(N): smallest = min((d, i) for (i, d) in enumerate(dist) if i not in done)[1] for v, w in nodes[smallest]: if v not in done and dist[smallest] + w &lt; dist[v]: dist[v] = dist[smallest] + w done.add(smallest) return -1 if float('inf') in dist else max(dist) Floyd-Warshall 算法时间复杂度 O(n^3)， 空间复杂度 O(n^2)。 12345678910111213141516171819class Solution: def networkDelayTime(self, times, N, K): \"\"\" :type times: List[List[int]] :type N: int :type K: int :rtype: int \"\"\" d = [[float('inf')] * N for _ in range(N)] for time in times: u, v, w = time[0] - 1, time[1] - 1, time[2] d[u][v] = w for i in range(N): d[i][i] = 0 for k in range(N): for i in range(N): for j in range(N): d[i][j] = min(d[i][j], d[i][k] + d[k][j]) return -1 if float('inf') in d[K - 1] else max(d[K - 1]) Bellman-Ford 算法时间复杂度 O(ne)， 空间复杂度 O(n) 1234567891011121314151617class Solution: def networkDelayTime(self, times, N, K): \"\"\" :type times: List[List[int]] :type N: int :type K: int :rtype: int \"\"\" dist = [float('inf')] * N dist[K - 1] = 0 for i in range(N): for time in times: u = time[0] - 1 v = time[1] - 1 w = time[2] dist[v] = min(dist[v], dist[u] + w) return -1 if float('inf') in dist else max(dist) 最小生成树1135. Connecting Cities With Minimum Cost Kruskal 算法123456789101112131415161718192021222324252627282930313233343536373839404142434445class Solution {public: static bool cmp(vector&lt;int&gt; &amp; a,vector&lt;int&gt; &amp; b){ return a[2] &lt; b[2]; } int find(vector&lt;int&gt; &amp; f,int x){ while(x != f[x]){ x = f[x]; } return x; } bool uni(vector&lt;int&gt; &amp; f,int x,int y){ int x1 = find(f,x); int y1 = find(f,y); f[x1] = y1; return true; } int minimumCost(int N, vector&lt;vector&lt;int&gt;&gt;&amp; conections) { int ans = 0; int count = 0; vector&lt;int&gt; father(N+1,0); sort(conections.begin(),conections.end(),cmp); for(int i = 0;i &lt;= N; ++i){ father[i] = i; } for(auto conect : conections){ if(find(father,conect[0]) != find(father,conect[1])){ count++; ans += conect[2]; uni(father,conect[0],conect[1]); if(count == N-1){ return ans; } } } return -1; }}; Prim 算法12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152struct cmp { bool operator () (const vector&lt;int&gt; &amp;a, const vector&lt;int&gt; &amp;b) { return a[2] &gt; b[2]; }};class Solution {public: int minimumCost(int N, vector&lt;vector&lt;int&gt;&gt;&amp; conections) { int ans = 0; int selected = 0; vector&lt;vector&lt;pair&lt;int,int&gt;&gt;&gt; edgs(N+1,vector&lt;pair&lt;int,int&gt;&gt;()); priority_queue&lt;vector&lt;int&gt;,vector&lt;vector&lt;int&gt;&gt;,cmp&gt; pq; vector&lt;bool&gt; visit(N+1,false); /*initial*/ for(auto re : conections){ edgs[re[0]].push_back(make_pair(re[1],re[2])); edgs[re[1]].push_back(make_pair(re[0],re[2])); } if(edgs[1].size() == 0){ return -1; } /*kruskal*/ selected = 1; visit[1] = true; for(int i = 0;i &lt; edgs[1].size(); ++i){ pq.push(vector&lt;int&gt;({1,edgs[1][i].first,edgs[1][i].second})); } while(!pq.empty()){ vector&lt;int&gt; curr = pq.top(); pq.pop(); if(!visit[curr[1]]){ visit[curr[1]] = true; ans += curr[2]; for(auto e : edgs[curr[1]]){ pq.push(vector&lt;int&gt;({curr[1],e.first,e.second})); } selected++; if(selected == N){ return ans; } } } return -1; }}; 拓扑排序BFS 方式： 1234567891011121314151617181920212223class Solution(object): def canFinish(self, N, prerequisites): \"\"\" :type N,: int :type prerequisites: List[List[int]] :rtype: bool \"\"\" graph = collections.defaultdict(list) indegrees = collections.defaultdict(int) for u, v in prerequisites: graph[v].append(u) indegrees[u] += 1 for i in range(N): zeroDegree = False for j in range(N): if indegrees[j] == 0: zeroDegree = True break if not zeroDegree: return False indegrees[j] = -1 for node in graph[j]: indegrees[node] -= 1 return True DFS 方式： 123456789101112131415161718192021222324252627class Solution(object): def canFinish(self, N, prerequisites): \"\"\" :type N,: int :type prerequisites: List[List[int]] :rtype: bool \"\"\" graph = collections.defaultdict(list) for u, v in prerequisites: graph[u].append(v) # 0 = Unknown, 1 = visiting, 2 = visited visited = [0] * N for i in range(N): if not self.dfs(graph, visited, i): return False return True # Can we add node i to visited successfully? def dfs(self, graph, visited, i): if visited[i] == 1: return False if visited[i] == 2: return True visited[i] = 1 for j in graph[i]: if not self.dfs(graph, visited, j): return False visited[i] = 2 return True 如果需要保存拓扑排序的路径： BFS 方式： 1234567891011121314151617181920212223242526class Solution(object): def findOrder(self, numCourses, prerequisites): \"\"\" :type numCourses: int :type prerequisites: List[List[int]] :rtype: List[int] \"\"\" graph = collections.defaultdict(list) indegrees = collections.defaultdict(int) for u, v in prerequisites: graph[v].append(u) indegrees[u] += 1 path = [] for i in range(numCourses): zeroDegree = False for j in range(numCourses): if indegrees[j] == 0: zeroDegree = True break if not zeroDegree: return [] indegrees[j] -= 1 path.append(j) for node in graph[j]: indegrees[node] -= 1 return path DFS 方式： 12345678910111213141516171819202122232425262728class Solution(object): def findOrder(self, numCourses, prerequisites): \"\"\" :type numCourses: int :type prerequisites: List[List[int]] :rtype: List[int] \"\"\" graph = collections.defaultdict(list) for u, v in prerequisites: graph[u].append(v) # 0 = Unknown, 1 = visiting, 2 = visited visited = [0] * numCourses path = [] for i in range(numCourses): if not self.dfs(graph, visited, i, path): return [] return path def dfs(self, graph, visited, i, path): if visited[i] == 1: return False if visited[i] == 2: return True visited[i] = 1 for j in graph[i]: if not self.dfs(graph, visited, j, path): return False visited[i] = 2 path.append(i) return True 207. Course Schedule 210. Course Schedule II 310. Minimum Height Trees 查找子字符串，双指针模板这是一个[模板](https://leetcode.com/problems/minimum-window-substring/discuss/26808/Here-is-a-10-line-template-that-can-solve-most-' rel=)，里面的 map 如果是双指针范围内的字符串字频的话，增加和减少的方式如下。 12345678910111213141516171819202122232425int findSubstring(string s){ vector&lt;int&gt; map(128,0); int counter; // check whether the substring is valid int begin=0, end=0; //two pointers, one point to tail and one head int d; //the length of substring for() { /* initialize the hash map here */ } while(end&lt;s.size()){ if(map[s[end++]]++ ?){ /* modify counter here */ } while(/* counter condition */){ /* update d here if finding minimum*/ //increase begin to make it invalid/valid again if(map[s[begin++]]-- ?){ /*modify counter here*/ } } /* update d here if finding maximum*/ } return d; } 76. Minimum Window Substring 这个题的 map 是 t 的字频，所以使用 map 更方式和上是相反的。 1234567891011121314151617181920212223class Solution(object): def minWindow(self, s, t): \"\"\" :type s: str :type t: str :rtype: str \"\"\" res = \"\" left, cnt, minLen = 0, 0, float('inf') count = collections.Counter(t) for i, c in enumerate(s): count[c] -= 1 if count[c] &gt;= 0: cnt += 1 while cnt == len(t): if minLen &gt; i - left + 1: minLen = i - left + 1 res = s[left : i + 1] count[s[left]] += 1 if count[s[left]] &gt; 0: cnt -= 1 left += 1 return res 动态规划状态搜索688. Knight Probability in Chessboard 62. Unique Paths 63. Unique Paths II 913. Cat and Mouse 576. Out of Boundary Paths 12345678910111213141516171819202122class Solution(object): def findPaths(self, m, n, N, i, j): \"\"\" :type m: int :type n: int :type N: int :type i: int :type j: int :rtype: int \"\"\" dp = [[0] * n for _ in range(m)] for s in range(1, N + 1): curStatus = [[0] * n for _ in range(m)] for x in range(m): for y in range(n): v1 = 1 if x == 0 else dp[x - 1][y] v2 = 1 if x == m - 1 else dp[x + 1][y] v3 = 1 if y == 0 else dp[x][y - 1] v4 = 1 if y == n - 1 else dp[x][y + 1] curStatus[x][y] = (v1 + v2 + v3 + v4) % (10**9 + 7) dp = curStatus return dp[i][j] 贪心贪心算法（又称贪婪算法）是指，在对问题求解时，总是做出在当前看来最好的选择。也就是说，不从整体最优上加以考虑，他所作出的是在某种意义上的局部最优解。贪心算法和动态规划算法都是由局部最优导出全局最优，这里不得不比较下二者的区别 贪心算法： 贪心算法中，作出的每步贪心决策都无法改变，因为贪心策略是由上一步的最优解推导下一步的最优解，而上一部之前的最优解则不作保留。 由（1）中的介绍，可以知道贪心法正确的条件是：每一步的最优解一定包含上一步的最优解 动态规划算法： 全局最优解中一定包含某个局部最优解，但不一定包含前一个局部最优解，因此需要记录之前的所有最优解 动态规划的关键是状态转移方程，即如何由以求出的局部最优解来推导全局最优解 边界条件：即最简单的，可以直接得出的局部最优解 贪心是个思想，没有统一的模板。","link":"/leetcode/leetcode%E6%A8%A1%E6%9D%BF-by-%E8%B4%9F%E9%9B%AA%E6%98%8E%E7%83%9B.html"},{"title":"打家劫舍","text":"[TOC] 打家劫舍 三连击 198. 打家劫舍 - 力扣（LeetCode）213. 打家劫舍 II - 力扣（LeetCode）337. 打家劫舍 III - 力扣（LeetCode） 11234567891011class Solution: def rob(self, nums: List[int]) -&gt; int: # 1 2 3 1 # 0 1 2 4 4 if not nums: return 0 if len(nums)==1: return nums[0] a, b = 0, nums[0] for i in nums[1:]: t = max(b, a+i) a, b = b, t return b 2123456789101112131415class Solution: def rob(self, nums: List[int]) -&gt; int: if len(nums)==1: return nums[0] return max(self.rob1(nums[1:]), self.rob1(nums[:-1])) def rob1(self, nums: List[int]) -&gt; int: # 1 2 3 1 # 0 1 2 4 4 if not nums: return 0 if len(nums)==1: return nums[0] a, b = 0, nums[0] for i in nums[1:]: t = max(b, a+i) a, b = b, t return b 3递归处理-返回偷与不偷两种结果（Python3） - 打家劫舍 III - 力扣（LeetCode） 递归处理，返回当前节点偷与不偷的两个结果，取其中最大的一个。 12345678910111213141516# Definition for a binary tree node.# class TreeNode:# def __init__(self, x):# self.val = x# self.left = None# self.right = Noneclass Solution: def rob(self, root: TreeNode) -&gt; int: def helper(node): # [偷, 不偷] if not node: return (0, 0) left, right = map(helper, [node.left, node.right]) return [left[1]+right[1], left[0]+right[0]+node.val] return max(helper(root))","link":"/leetcode/%E5%85%B6%E4%BB%96/%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8D.html"},{"title":"并查集","text":"[TOC] 并查集721. 账户合并 - 力扣（LeetCode）721. 账户合并 - 力扣（LeetCode）Accounts Merge - LeetCode Articles 123456789101112131415161718192021222324252627282930class DSU: def __init__(self): self.p = list(range(10001)) def find(self, x): while x!=self.p[x]: x = self.p[x] return x def union(self, x, y): self.p[self.find(x)] = self.find(y) def same(self, x, y): return self.find(x)==self.find(y)class Solution: def accountsMerge(self, accounts: List[List[str]]) -&gt; List[List[str]]: # 并查集 dsu = DSU() email_id, email_name = {}, {} # account 里都在一个集合里 i = 0 for l in accounts: name = l[0] for email in l[1:]: email_name[email] = name if email not in email_id: email_id[email] = i i += 1 dsu.union(email_id[l[1]], email_id[email]) ans = collections.defaultdict(list) for email in email_name: ans[dsu.find(email_id[email])].append(email) return [[email_name[i[0]], *sorted(i)] for i in ans.values()] 684. 冗余连接 - 力扣（LeetCode）684. 冗余连接 - 力扣（LeetCode） 通俗讲解并查集，帮助小白快速理解 - 冗余连接 - 力扣（LeetCode） 1234567891011121314151617181920class Solution: \"\"\"并查集\"\"\" ''' 记录1到N的每个数的根，因为如果有环，导致环相连的[u, v]一定有相同的root， 我们可以理解为是一个节点的两个分支，通过[u,v]被连起来了，既然他们是一个节点的两个分支，那么他们一定有相同的root，所以直接移除[u,v]就好啦。 ''' def findRedundantConnection(self, edges: List[List[int]]) -&gt; List[int]: root = list(range(len(edges)+1)) def find(i): while i!=root[i]: i = root[i] return i for u, v in edges: uroot, vroot = map(find, [u, v]) if uroot!=vroot: root[uroot] = vroot else: return [u, v] 399. 除法求值 - 力扣（LeetCode）399. 除法求值 - 力扣（LeetCode） flyod不是用索引表示的 edges 12345678910111213141516171819202122232425class Solution: def calcEquation(self, equations: List[List[str]], values: List[float], queries: List[List[str]]) -&gt; List[float]: # flyod edges = collections.defaultdict(dict) verts = set() for (a, b), c in zip(equations, values): edges[a][b] = c edges[b][a] = 1/c verts.add(a) verts.add(b) for k in verts: for i in verts: if i==k: continue for j in verts: # 若存在 edges[i][j] 不用再计算一遍 if j in [i, k] or j in edges[i]: continue # 同时存在 edges[i][k] edges[k][j] 时更新 if k in edges[i] and j in edges[k]: edges[i][j] = edges[i][k]*edges[k][j] res = [] for a, b in queries: if a==b and a in verts and b in verts: res.append(1) elif a in edges and b in edges[a]: res.append(edges[a][b]) else: res.append(-1) return res dfs123456789101112131415161718192021222324252627282930class Solution: def calcEquation(self, equations: List[List[str]], values: List[float], queries: List[List[str]]) -&gt; List[float]: # dfs edges = collections.defaultdict(dict) verts = set() for (a, b), c in zip(equations, values): edges[a][b] = c edges[b][a] = 1/c verts.add(a) verts.add(b) def dfs(s, t): visited.add(s) if t in edges[s]: return edges[s][t] for node in edges[s]: if node not in visited: temp = dfs(node, t) if temp!=-1: edges[s][t] = edges[s][node]*temp return edges[s][t] return -1 res = [] for a, b in queries: if a in verts and b in verts: if a==b:res.append(1) else: visited = set() res.append(dfs(a, b)) else: res.append(-1) return res 785. 判断二分图 - 力扣（LeetCode）785. 判断二分图 - 力扣（LeetCode）BFS + DFS + 并查集，三种方法判断二分图 - 判断二分图 - 力扣（LeetCode） 123456789101112131415161718192021class Solution: def isBipartite(self, graph: List[List[int]]) -&gt; bool: # 染色+xfs 或 并查集 # 图中每个顶点的所有邻接点都应该属于同一集合，且不与顶点处于同一集合 n = len(graph) l = [0 for _ in range(n)] # 0 没访问，1 -1 表示2种颜色 queue = collections.deque() for i in range(n): # 染过色了，跳过 if l[i]: continue l[i] = 1 # 随便染个 1 # i 染色后，把相关的所有节点都染上色 queue.append(i) while queue: v = queue.popleft() for w in graph[v]: if l[w]==0: l[w] = -l[v] queue.append(w) elif l[w]==l[v]: return False # 已经染的色不对劲 return True 学会后，并查集还是很好写的，毕竟一半都是模板 123456789101112131415161718192021222324class DSU: def __init__(self): self.p = list(range(101)) def find(self, x): while x!=self.p[x]: x = self.p[x] return x def union(self, x, y): self.p[self.find(x)] = self.find(y) def same(self, x, y): return self.find(x) == self.find(y)class Solution: def isBipartite(self, graph: List[List[int]]) -&gt; bool: # 并查集 dsu = DSU() for i in range(len(graph)): if len(graph[i])==0: continue # graph[i] 是 i 顶点的所有邻接点，他们属于同一个集合 for node in graph[i]: dsu.union(graph[i][0], node) # 但是 i 与他们不是一个集合 if dsu.same(i, graph[i][0]): return False return True 相似的一道题 886. 可能的二分法 - 力扣（LeetCode）染色还是快很多的 123456789101112131415161718192021222324252627282930class DSU: def __init__(self, n): self.n = n self.p = list(range(n)) def find(self, x): if x!=self.p[x]: self.p[x] = self.find(self.p[x]) return self.p[x] def union(self, x, y): u, v = self.find(x), self.find(y) if v!=u: self.n -= 1 self.p[u] = v def same(self, x, y): return self.find(x) == self.find(y)class Solution: def possibleBipartition(self, N: int, dislikes: List[List[int]]) -&gt; bool: if N==1 and not dislikes: return True # 有意思吗？说好的分成 2 组的 dsu = DSU(N+1) d = collections.defaultdict(list) for a, b in dislikes: d[a].append(b) d[b].append(a) for i in d: h = d[i][0] for j in d[i][1:]: dsu.union(h, j) if dsu.same(i, h): return False return dsu.n&gt;=3 123456789101112131415161718192021class Solution: def possibleBipartition(self, N: int, dislikes: List[List[int]]) -&gt; bool: if N==1 and not dislikes: return True # 有意思吗？说好的分成 2 组的 l = [0 for i in range(N+1)] d = collections.defaultdict(list) for a, b in dislikes: d[a].append(b) d[b].append(a) queue = collections.deque() for i in range(1, N+1): if l[i]: continue l[i] = 1 queue.append(i) while queue: cur = queue.popleft() for j in d[cur]: if not l[j]: l[j] = -l[cur] queue.append(j) elif l[j]==l[cur]: return False return True 959. 由斜杠划分区域 - 力扣（LeetCode）959. 由斜杠划分区域 - 力扣（LeetCode） ‘\\\\‘ \\ 有转义的作用，需要写 2 个(md 里为了写 2 个\\ 需要写 4 个\\) 并查集123456789101112131415161718192021222324252627282930313233343536373839404142class DSU: def __init__(self): self.p = list(range(30*30*4)) def find(self, x): while x!=self.p[x]: x = self.p[x] return x def union(self, x, y): self.p[self.find(x)] = self.find(y) def same(self, x, y): return self.find(x)==self.find(y)class Solution: def regionsBySlashes(self, grid: List[str]) -&gt; int: # 并查集 # 1格 划分为 0123 4个小区间: # \\ 0 / # 1 x 3 # / 2 \\ n, m = len(grid), len(grid[0]) dsu = DSU() def idx(i, j, t): # 返回 i, j 位置的区块在 t(0-3) 的索引 # 前面有 i 行，左边有 j 大格 return 4*(m*i+j)+t for i in range(n): for j in range(m): # 当前格的0和上一行的格的2一定相连 if i&gt;0: dsu.union(idx(i, j, 0), idx(i-1, j, 2)) # 当前格的1和上一列的格的3一定相连 if j&gt;0: dsu.union(idx(i, j, 1), idx(i, j-1, 3)) if grid[i][j]=='/': dsu.union(idx(i, j, 0), idx(i, j, 1)) dsu.union(idx(i, j, 2), idx(i, j, 3)) elif grid[i][j]=='\\\\': dsu.union(idx(i, j, 0), idx(i, j, 3)) dsu.union(idx(i, j, 1), idx(i, j, 2)) elif grid[i][j]==' ': dsu.union(idx(i, j, 0), idx(i, j, 1)) dsu.union(idx(i, j, 2), idx(i, j, 3)) dsu.union(idx(i, j, 0), idx(i, j, 3)) return len(set(dsu.find(i) for i in range(n*m*4))) 问题转化123456789101112131415161718192021222324252627282930313233343536def printGrid(grid): for l in grid: print(l)class Solution: def regionsBySlashes(self, grid: List[str]) -&gt; int: # 并查集没学过，有点难 # 取巧的办法 # / 转换成 \\ 转换成 # 0 0 1 1 0 0 # 0 1 0 0 1 0 # 1 0 0 0 0 1 # 再查找 0 组成的岛屿 # 思路是不难了，但是解题过程也挺复杂 def islandNum(grid): def dfs(i, j): if not 0&lt;=i&lt;n or not 0&lt;=j&lt;n or grid[i][j]==1: return 0 grid[i][j] = 1 for di, dj in [[0, 1], [0, -1], [1, 0], [-1, 0]]: dfs(i+di, j+dj) return 1 n = len(grid) return sum(dfs(i, j) for i in range(n) for j in range(n)) n = len(grid) grid3 = [[0]*(3*n) for _ in range(3*n)] for i in range(n): for j in range(n): if grid[i][j]=='/': for k in range(3): grid3[3*i+k][3*j+2-k] = 1 elif grid[i][j]=='\\\\': for k in range(3): grid3[3*i+k][3*j+k] = 1 printGrid(grid3) return islandNum(grid3) 947. 移除最多的同行或同列石头 - 力扣（LeetCode）947. 移除最多的同行或同列石头 - 力扣（LeetCode） 12345678910111213141516171819202122232425262728293031323334from collections import defaultdictclass DSU: def __init__(self): self.p = list(range(1000)) def find(self, x): while x!=self.p[x]: x = self.p[x] return x def union(self, x, y): self.p[self.find(x)] = self.find(y)class Solution: def removeStones(self, stones: List[List[int]]) -&gt; int: # 并查集的题目都这么难懂吗, 题意理解，见↓ # [Python，DFS解法，用时仅为68ms，大量注释 - 移除最多的同行或同列石头 - 力扣（LeetCode）] # (https://leetcode-cn.com/problems/most-stones-removed-with-same-row-or-column/solution/pythondfsjie-fa-yong-shi-jin-wei-68msda-liang-zhu-/) # 横坐标 或 纵坐标 相等即为连通 # 对于任何容量为n 的一个连通分量，最后剩下 1 个石头，即可以移除的石头数都为n-1 # 可以移走的石头数 = 总石头数 - 剩余石头数 = stones列表长度 - 连通分量个数 di, dj = {}, {} # 同 i 或 同 j 的点, 记录一个就好 # d = defaultdict(dict) # d[i][j] = idx # ij -&gt; dsu 的索引 dsu = DSU() idx = 0 for i, j in stones: # i 行已经有元素的话，与那个元素合并 if i in di: dsu.union(idx, di[i]) else: di[i] = idx if j in dj: dsu.union(idx, dj[j]) else: dj[j] = idx # d[i][j] = idx idx += 1 return len(stones)-len(set(dsu.find(i) for i in range(idx))) 990. 等式方程的可满足性 - 力扣（LeetCode）990. 等式方程的可满足性 - 力扣（LeetCode） 不知为什么，我的并查集一直挺慢的 看其他解答里有个路径压缩，不知道是什么意思 123456789101112131415161718192021222324class DSU: def __init__(self): self.p = list(range(26)) def find(self, x): while x!=self.p[x]: x = self.p[x] return x def union(self, x, y): self.p[self.find(x)] = self.find(y)class Solution: def equationsPossible(self, equations: List[str]) -&gt; bool: dsu = DSU() # 先遍历一遍，处理 == for a, t, _, b in equations: a, b = ord(a)-ord('a'), ord(b)-ord('a') if t=='!': if dsu.find(a)==dsu.find(b): return False else: dsu.union(a, b) for a, t, _, b in equations: if t=='=': continue if dsu.find(ord(a)-ord('a'))==dsu.find(ord(b)-ord('a')): return False return True 12345def find(self, x): while x!=self.p[x]: self.p[x] = self.p[self.p[x]] # 隔代路径压缩 x = self.p[x] return x 1319. 连通网络的操作次数 - 力扣（LeetCode）1319. 连通网络的操作次数 - 力扣（LeetCode） 12345678910111213141516171819class DSU: def __init__(self, n): self.p = list(range(n)) def find(self, x): if x!=self.p[x]: self.p[x] = self.find(self.p[x]) return self.p[x] def union(self, x, y): self.p[self.find(x)] = self.find(y)class Solution: def makeConnected(self, n: int, connections: List[List[int]]) -&gt; int: # 最少 n-1 根线 if len(connections)&lt;n-1: return -1 # return x-1 x:x个集群 dsu = DSU(n) for a, b in connections: dsu.union(a, b) return len(set(dsu.find(i) for i in range(n)))-1 改进，在 dsu 里面维护连通分量的个数 n, 合并一个n就减一 123456789101112131415161718192021222324class DSU: def __init__(self, n): self.p = list(range(n)) self.n = n def find(self, x): if x!=self.p[x]: self.p[x] = self.find(self.p[x]) return self.p[x] def union(self, x, y): px, py = map(self.find, (x, y)) if px!=py: self.p[px] = py self.n -= 1class Solution: def makeConnected(self, n: int, connections: List[List[int]]) -&gt; int: # 最少 n-1 根线 if len(connections)&lt;n-1: return -1 # return x-1 x:x个连通分量 dsu = DSU(n) for a, b in connections: dsu.union(a, b) # return len(set(dsu.find(i) for i in range(n)))-1 return dsu.n-1 1202. 交换字符串中的元素 - 力扣（LeetCode）1202. 交换字符串中的元素 - 力扣（LeetCode） 1234567891011121314151617181920212223242526class DSU: def __init__(self, n): self.p = list(range(n)) def find(self, x): if x!=self.p[x]: self.p[x] = self.find(self.p[x]) return self.p[x] def union(self, x, y): self.p[self.find(x)] = self.find(y)class Solution: def smallestStringWithSwaps(self, s: str, pairs: List[List[int]]) -&gt; str: # 连通分量内字母排序 dsu = DSU(len(s)) for a, b in pairs: dsu.union(a, b) d = collections.defaultdict(list) for i in range(len(s)): d[dsu.find(i)].append(s[i]) for root in d: d[root].sort(reverse=True) res = [] for i in range(len(s)): res.append(d[dsu.find(i)].pop()) return ''.join(res) 面试题 17.07. 婴儿名字 - 力扣（LeetCode）面试题 17.07. 婴儿名字 - 力扣（LeetCode） 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748class DSU: def __init__(self, n): self.p = list(range(n)) self.n = n def find(self, x): if x!=self.p[x]: self.p[x] = self.find(self.p[x]) return self.p[x] def union(self, x, y): self.p[self.find(x)] = self.find(y)class Solution: def trulyMostPopular(self, names: List[str], synonyms: List[str]) -&gt; List[str]: l = [] # idx -&gt; name name_idx = {} # name -&gt; idx dsu = DSU(len(synonyms)*2) idx = 0 for i in synonyms: i = i.strip('()').split(',') idxs = [] for j in i: if j not in name_idx: name_idx[j] = idx idxs.append(idx) l.append(j) idx += 1 else: idxs.append(name_idx[j]) dsu.union(*idxs) d = collections.defaultdict(list) # root -&gt; [names] for i in range(len(l)): d[dsu.find(i)].append(l[i]) for i in d: d[i] = [min(d[i])] # d: root-&gt; [min(names)] # d1: root-&gt; num d1 = collections.defaultdict(int) res = [] for s in names: name, n = s.strip(')').split('(') if name not in name_idx: res.append(s) else: d1[dsu.find(name_idx[name])] += int(n) for root in d1: name = d[root][0] n = d1[root] res.append(f'{name}({n})') return res 130. 被围绕的区域 - 力扣（LeetCode）130. 被围绕的区域 - 力扣（LeetCode） 1234567891011121314151617181920212223242526272829303132333435363738394041class DSU: def __init__(self, n): self.p = list(range(n)) self.n = n def find(self, x): if x!=self.p[x]: self.p[x] = self.find(self.p[x]) return self.p[x] def union(self, x, y): self.p[self.find(x)] = self.find(y) def same(self, x, y): return self.find(x)==self.find(y)class Solution: def solve(self, board: List[List[str]]) -&gt; None: \"\"\" Do not return anything, modify board in-place instead. \"\"\" # 连接相通的元素，并记录边缘的元素 # 排除与 边缘的元素 同 root 的元素（dsu 长度可以额外多一个，作为需要移除的集合） if not board or not board[0]: return board n, m = len(board), len(board[0]) dsu = DSU(n*m+1) exclude_idx = n*m oidx = [] # 是 O 的idx def border(i, j): return i in [0, n-1] or j in [0, m-1] for i in range(n): for j in range(m): if board[i][j]=='X': continue curidx = i*m+j oidx.append(curidx) if border(i, j): dsu.union(curidx, exclude_idx) if i&gt;0 and board[i-1][j]=='O': dsu.union(curidx, curidx-m) if j&gt;0 and board[i][j-1]=='O': dsu.union(curidx, curidx-1) for idx in oidx: if not dsu.same(idx, exclude_idx): i, j = divmod(idx, m) board[i][j] = 'X' 路径压缩从这里学到的 使用并查集处理不相交集合问题（Java、Python） - 等式方程的可满足性 - 力扣（LeetCode） 一道题目路径压缩后的性能: python 版的路径压缩隔代路径压缩12345def find(self, x): while x!=self.p[x]: self.p[x] = self.p[self.p[x]] x = self.p[x] return x 完全路径压缩1234def find(self, x): if x!=self.p[x]: self.p[x] = self.find(self.p[x]) return self.p[x]","link":"/leetcode/%E5%88%86%E7%B1%BB/%E5%B9%B6%E6%9F%A5%E9%9B%86.html"},{"title":"weekly-contest-200","text":"[TOC] 统计好三元组3 找出数组游戏的赢家4 排布二进制网格的最少交换次数5 最大得分6 误触 command + enter 2 次，淦！ 前 10% 都没弄上 1123456789class Solution: def countGoodTriplets(self, arr: List[int], a: int, b: int, c: int) -&gt; int: def satisfy(i, j, k): if abs(arr[i] - arr[j])&gt;a: return 0 if abs(arr[j] - arr[k])&gt;b: return 0 if abs(arr[i] - arr[k])&gt;c: return 0 return 1 n = len(arr) return sum(satisfy(i, j, k) for i in range(n-2) for j in range(i+1, n-1) for k in range(j+1, n)) 212345678910111213141516class Solution: def getWinner(self, arr: List[int], k: int) -&gt; int: n = len(arr) # 比较 n 次后，arr 结构: max, n1, n2..... # 但是不用真实模拟移动过程，只需要记录下标即可 if len(arr)==2: return max(arr) m = collections.defaultdict(int) cur = 0 for i in range(1, n): if arr[i]&gt;arr[cur]: m[i] += 1 cur = i else: m[cur] += 1 if m[cur]==k: return arr[cur] return arr[cur] 3123456789101112131415161718192021222324252627282930313233class Solution: def minSwaps(self, grid: List[List[int]]) -&gt; int: # 记录每一行后面 0 的个数 # 分配每一行应该贡献的 0 的个数 # 如 0 2 2 实际算作 0 2 1 # 0 2 2 4 4 5 算作 0 2 1 4 3 5 # 就是说 遇到相同的数字，减一，加进去 n = len(grid) def tailZeroNum(grid): s = set() l = [] for i in range(n): cur = 0 for j in reversed(range(n)): if grid[i][j]==0: cur += 1 else: break cur = min(n-1, cur) while cur in s: cur -= 1 s.add(cur) l.append(cur) return l l = tailZeroNum(grid) # print(l) if set(range(n))!=set(l): return -1 res = 0 for i in range(n): for idx in range(len(l)): if l[idx]==i: break res += len(l)-1-idx l.remove(i) return res 4没看清题，理解错了题意，实际上不算太难C++双指针 分段统计最大和 相加即可 - 最大得分 - 力扣（LeetCode） 借鉴排行榜的代码 123456789class Solution: def maxSum(self, nums1: List[int], nums2: List[int]) -&gt; int: s1, s2 = map(set, (nums1, nums2)) a1 = a2 = 0 for i in sorted(list(s1|s2)): if i in s1 and i in s2: a1 = a2 = max(a1, a2)+i elif i in s1: a1 += i else: a2 += i return max(a1, a2)%int(1e9+7)","link":"/Leetcode%20weekly%20contest/weekly-contest-200.html"},{"title":"leetcode 778. Swim in Rising Water","text":"leetcode九章 题目描述On an N x N grid, each square grid[i][j] represents the elevation at thatpoint (i,j). Now rain starts to fall. At time t, the depth of the water everywhere ist. You can swim from a square to another 4-directionally adjacent square ifand only if the elevation of both squares individually are at most t. Youcan swim infinite distance in zero time. Of course, you must stay within theboundaries of the grid during your swim. You start at the top left square (0, 0). What is the least time until youcan reach the bottom right square (N-1, N-1)? Example 1: Input: [[0,2],[1,3]] Output: 3 Explanation: At time 0, you are in grid location (0, 0). You cannot go anywhere else because 4-directionally adjacent neighbors have a higher elevation than t = 0. You cannot reach point (1, 1) until time 3. When the depth of water is 3, we can swim anywhere inside the grid.Example 2: Input: [[0,1,2,3,4],[24,23,22,21,5],[12,13,14,15,16],[11,17,18,19,20],[10,9,8,7,6]] Output: 16 Explanation: **0 1 2 3 4** 24 23 22 21 **5** **12 13 14 15 16** **11** 17 18 19 20 **10 9 8 7 6** The final route is marked in bold. We need to wait until time 16 so that (0, 0) and (4, 4) are connected.Note: 2 &lt;= N &lt;= 50. grid[i][j] is a permutation of [0, …, N*N - 1]. Tags: Binary Search, Heap, Depth-first Search, Union Find Difficulty: Hard 答案\u0004 优先队列法，以及为何会想到优先队列法 - 水位上升的泳池中游泳 - 力扣（LeetCode） 123456789101112131415161718192021from collections import dequefrom bisect import insortclass Solution: def swimInWater(self, grid: List[List[int]]) -&gt; int: res = 0 l = deque() # (value, i, j), , l.append((grid[0][0], 0, 0)) n = len(grid) visited = [[False]*n for _ in range(n)] while l: v, i, j = l.popleft() visited[i][j] = True # print(v) res = max(v, res) if i==j==n-1: return res for di, dj in [[0, 1],[0, -1],[1, 0],[-1, 0]]: ii, jj = i+di, j+dj if 0&lt;=ii&lt;n and 0&lt;=jj&lt;n and not visited[ii][jj]: insort(l, [grid[ii][jj], ii, jj]) return res","link":"/leetcode/leetcode-7**/leetcode-778-Swim-in-Rising-Water.html"},{"title":"matplotlib","text":"[TOC] 引入包1import matplotlib.pyplot as plt 设置 xlabel ylabel title 显示网格线123456789fig = plt.figure(figsize=(6, 6)) #ax = plt.gca() # get current axesax.set_xlabel('theta')ax.set_ylabel('omega')ax.set_title('theta_0=1/2, omega_0=0, n_end=200')ax.scatter(t1, t2)plt.grid(True, linestyle = \"-.\", color = \"r\", linewidth = \"3\") 设置 x y 轴范围12plt.xlim((-1.1, 1.1))plt.ylim((-1.1, 1.1)) 画点、画线画线：ax.plot(lx, ly, ‘r-‘) # 画红色实线 画点:ax.plot(x, y, marker=’.’, markersize=40, markerfacecolor=’red’) 更多 marker： matplotlib.axes.Axes.plot — Matplotlib 3.1.2 documentation Markers character description '.' point marker ',' pixel marker 'o' circle marker 'v' triangle_down marker '^' triangle_up marker '&lt;' triangle_left marker '&gt;' triangle_right marker '1' tri_down marker '2' tri_up marker '3' tri_left marker '4' tri_right marker 's' square marker 'p' pentagon marker '*' star marker 'h' hexagon1 marker 'H' hexagon2 marker '+' plus marker 'x' x marker 'D' diamond marker 'd' thin_diamond marker `’ ‘` '_' hline marker 12345678910111213141516t1, t2 = run_pendulum(0.5, 0, 20)xs = list(map(lambda i: -sin(i), t1))ys = list(map(lambda i: cos(i), t1))fig = plt.figure(figsize=(6,6)) #ax = plt.gca() # get current axesfor i in [0, 5, 10, 15]: x, y = xs[i], ys[i] # 画线 前一个列表是 x 后一个列表是 y ax.plot([0,x], [0, y], \"k\") # plot the black line # 画一个圆点，颜色是红，大小 40, 坐标 (x, y) ax.plot(x, y, marker='.', markersize=40, markerfacecolor='red') # plot the red square# set the limitsplt.xlim((-1.1, 1.1))plt.ylim((-1.1, 1.1)) Line Styles character description '-' solid line style '--' dashed line style '-.' dash-dot line style ':' dotted line style Example format strings: 12345'b' # blue markers with default shape'or' # red circles'-g' # green solid line'--' # dashed line with default color'^k:' # black triangle_up markers connected by a dotted line Colors The supported color abbreviations are the single letter codes character color 'b' blue 'g' green 'r' red 'c' cyan 'm' magenta 'y' yellow 'k' black 'w' white 动画如果只有一个 plot 需要更新，直接返回就好 否则， updateALL 函数返回 plot 列表 123456789101112131415161718192021222324252627t1, t2 = run_pendulum(0.5, 0, 200)xs = list(map(lambda i: -sin(i), t1))ys = list(map(lambda i: cos(i), t1))fig = plt.figure(figsize=(6,6)) #ax = plt.gca() # get current axesplot0, = ax.plot([0,xs[0]], [0, ys[0]], \"k\") # plot the black lineplot1, = ax.plot(xs[0], ys[0], marker='.', markersize=40, markerfacecolor='red') # plot the red square# set the limitsplt.xlim((-1.1, 1.1))plt.ylim((-1.1, 1.1))from mpl_toolkits.mplot3d import Axes3Dfrom matplotlib.animation import FuncAnimationfrom IPython.display import HTMLdef updateALL(i): plot1.set_xdata(xs[i]) plot1.set_ydata(ys[i]) plot0.set_xdata([0, xs[i]]) plot0.set_ydata([0, ys[i]]) return [plot0, plot1] anim = FuncAnimation(fig, updateALL, frames=range(0, 200), interval=100, repeat=True)HTML(anim.to_html5_video()) subplot 子图 12345plt.figure(figsize=(15,8))plt.subplot(121, title='\"Neat\" K-Means')plt.scatter(x_neat[:,0], x_neat[:,1], c=km_neat)plt.subplot(122, title='\"Messy\" K-Means')plt.scatter(x_messy[:,0], x_messy[:,1], c=km_messy) 设置 legendlegend 是啥： Matplotlib 系列之「Legend 图例」 - 知乎 可以同时设置多条线的 legend plt.legend(handles=[s1],labels=[‘theta_0=1/2, omega_0=0, n_end=200’],loc=’best’) 12345678fig = plt.figure(figsize=(6, 6)) #ax = plt.gca() # get current axesax.set_xlabel('theta')ax.set_ylabel('omega')# ax.set_title('theta_0=1/2, omega_0=0, n_end=200')s1 = ax.scatter(t1, t2)plt.legend(handles=[s1],labels=['theta_0=1/2, omega_0=0, n_end=200'],loc='best')ax","link":"/python/matplotlib.html"},{"title":"blockchain/区块链共识算法的发展现状与展望-阅读笔记","text":"区块链共识算法的发展现状与展望系统性地梳理和讨论了区块链发展过程中的32种重要共识算法 主流共识算法pow: 工作量证明PoS: 权益证明由系统中具有最高权益而非最高算力的节点获得记账权, 其中权益体现为节点对特定数量货币的所有权, 称为币龄或币天数 (Coin days) .Po S一定程度上解决了PoW算力浪费的问题, 并能够缩短达成共识的时间, 因而比特币之后的许多竞争币都采用PoS共识算法. PPC将PoW和PoS两种共识算法结合起来, 初期采用PoW挖矿方式以使得Token相对公平地分配给矿工, 后期随着挖矿难度增加, 系统将主要由PoS共识算法维护 瑞波协议共识算法 ( RPCA)该共识算法解决了异步网络节点通讯时的高延迟问题, 通过使用集体信任的子网络 (Collectively-trusted subnetworks) , 在只需最小化信任和最小连通性的网络环境中实现了低延迟、高鲁棒性的拜占庭容错共识算法 授权股份证明算法 (DPoS)DPoS共识的基本思路类似于“董事会决策”, 即系统中每个节点可以将其持有的股份权益作为选票授予一个代表, 获得票数最多且愿意成为代表的前N个节点将进入“董事会”, 按照既定的时间表轮流对交易进行打包结算、并且签署 (即生产) 新区块 Raft共识算法共识算法的模型与分类共识过程的核心是“选主”和“记账”两部分, 在具体操作过程中每一轮可以分为选主 (Leader election) 、造块 (Block generation) 、验证 (Data validation) 和上链 (Chain updation, 即记账) 4个阶段.4个阶段循环往复执行, 每执行一轮将会生成一个新区块 区块链共识算法可以根据其容错类型、部署方式和一致性程度等多个维度加以分类. 根据选主策略 (即函数f的具体实现方式) 将区块链共识算法分为选举类、证明类、随机类、联盟类和混合类共5种类型 选举类共识:即矿工节点在每一轮共识过程中通过“投票选举”的方式选出当前轮次的记账节点, 首先获得半数以上选票的矿工节点将会获得记账权;多见于传统分布式一致性算法, 例如Paxos和Raft等. 证明类共识:也可称为“Proof of X”类共识, 即矿工节点在每一轮共识过程中必须证明自己具有某种特定的能力, 证明方式通常是竞争性地完成某项难以解决但易于验证的任务, 在竞争中胜出的矿工节点将获得记账权;例如PoW和PoS等共识算法是基于矿工的算力或者权益来完成随机数搜索任务, 以此竞争记账权. 随机类共识:即矿工节点根据某种随机方式直接确定每一轮的记账节点, 例如下文将要提到的Algorand和PoET共识算法等. 联盟类共识:即矿工节点基于某种特定方式首先选举出一组代表节点, 而后由代表节点以轮流或者选举的方式依次取得记账权.这是一种以“代议制”为特点的共识算法, 例如DPoS等. 混合类共识:即矿工节点采取多种共识算法的混合体来选择记账节点, 例如PoW+PoS混合共识、DPo S+BFT共识等.","link":"/blockchain/%E5%8C%BA%E5%9D%97%E9%93%BE%E5%85%B1%E8%AF%86%E7%AE%97%E6%B3%95%E7%9A%84%E5%8F%91%E5%B1%95%E7%8E%B0%E7%8A%B6%E4%B8%8E%E5%B1%95%E6%9C%9B-%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0.html"},{"title":"pca 主成分分析","text":"[TOC] 12345678910111213141516171819202122232425262728293031# use scikit-learn and perform PCA with kfrom sklearn import decompositionimport seaborn as snsimport pandas as pdpca1 = decomposition.PCA(n_components=1)pc1 = pca1.fit_transform(X1)df1 = pd.DataFrame({'var':pca1.explained_variance_ratio_, 'PC':['PC1']})pca2 = decomposition.PCA(n_components=2)pc2 = pca2.fit_transform(X2)df2 = pd.DataFrame({'var':pca2.explained_variance_ratio_, 'PC':['PC1','PC2']})pca3 = decomposition.PCA(n_components=3)pc3 = pca3.fit_transform(X3)df3 = pd.DataFrame({'var':pca3.explained_variance_ratio_, 'PC':['PC1','PC2','PC3']})# make a Scree plotprint('pca1.explained_variance_ratio_', pca1.explained_variance_ratio_)sns.barplot(x='PC',y=\"var\", data=df1, color=\"c\");# make a Scree plotprint('pca2.explained_variance_ratio_', pca3.explained_variance_ratio_)sns.barplot(x='PC',y=\"var\", data=df2, color=\"c\");# make a Scree plotprint('pca3.explained_variance_ratio_', pca3.explained_variance_ratio_)sns.barplot(x='PC',y=\"var\", data=df3, color=\"c\"); PCA_on_Breast_Cancer_Wisconsin_Data/PCA_on_Breast_Cancer_Wisconsin.ipynb at master · CPotnis/PCA_on_Breast_Cancer_Wisconsin_DataPCA Example in Python with scikit-learn - Python and R TipsPrincipal Component Analysis (PCA) with Python | DataScience+PCA on Cancer dataset. Dimensionality reduction for… | by shekhar pandey | Medium","link":"/python/pca-%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90.html"},{"title":"kmeans","text":"[TOC] 原理 数据准备12345678910111213141516171819202122232425import numpy as np# set the random seed for repeatabilitynp.random.seed(2) # set our constants for the datasetd = 2 # dimensionsm = 100 # samples# generate m randomly-distributed d-dimensional samplesX = np.random.random((m, d))# set the centerscenter_1 = [ 0,4]center_2 = [-1,2]center_3 = [ 3,0]# generate 3 clusters each with m normally-distributed, 2-dimensional samplesX1 = np.random.multivariate_normal(center_1, [[1, 0.8], [0.8, 1]], size=m)X2 = np.random.multivariate_normal(center_2, [[0.3,0.2], [0.2,0.3]], size=m)X3 = np.random.multivariate_normal(center_3, [[1, 0], [0, 0.5]], size=m)# generate the dataset matrix (3*m rows, d columns)X = np.append(X1, X2, axis=0)X = np.append(X, X3, axis=0) scikit-learn12345678910111213141516# import the scikit-learn model and pyplot### CODE HEREimport matplotlib.pyplot as pltfrom sklearn.cluster import KMeans# generate and fit the model to the dataset using k clusters (your choice on how many -- I encourage you to do several and explore the performance)km = KMeans(n_clusters=3, random_state=2).fit_predict(X)# plot the cluster centers and training examples using different colors for each clusterplt.figure(figsize=(8,8))ax = plt.gca()ax.set_xlabel('x')ax.set_ylabel('y')ax.set_title('K-Means')ax.scatter(X[:,0], X[:,1], c=km) 123456789101112131415km 是每个点分配的 label id 内容:array([0, 0, 2, 2, 2, 2, 0, 2, 0, 2, 2, 0, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 2, 2, 2, 0, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 2, 2, 2, 2, 0, 0, 2, 2, 2, 0, 2, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 2, 0, 0, 0, 0, 0, 2, 0, 0, 2, 2, 2, 0, 0, 2, 2, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32) 结果： random_state 的含义，为了设置 random.seed(random_state) 这样每次运行的结果就一致了 自己实现1234567891011121314151617181920212223242526272829303132333435# write your implementation of k-means clusteringimport randomdef MyKMeans(data, n_clusters=3, max_iter=100, random_state=2): random.seed(random_state) # 1. Randomly initialize the cluster centers centers = random.choices(data, k=n_clusters) def closestToCenter(x, y): # return which center is (x, y) closest to return min(range(n_clusters), key=lambda i: (x-centers[i][0])**2+(y-centers[i][1])**2) # 2. Repeat for `max_iter` iterations: for _ in range(max_iter): # 3. Assign training examples to the nearest cluster center clusters = [[] for _ in range(n_clusters)] for x, y in data: clusters[closestToCenter(x, y)].append([x, y]) # 4. Update the cluster centers by computing the mean of the cluster's assigned training examples for i in range(n_clusters): if len(clusters[i])!=0: centers[i][0] = sum(x[0] for x in clusters[i])/len(clusters[i]) centers[i][1] = sum(x[1] for x in clusters[i])/len(clusters[i]) return [closestToCenter(x, y) for x, y in data]# generate and fit the model to the dataset using k clusters (your choice on how many -- I encourage you to do several and explore the performance)mykm = MyKMeans(data=X, n_clusters=3, max_iter=100, random_state=2)# plot the cluster centers and training examples using different colors for each clusterplt.figure(figsize=(8,8))ax = plt.gca()ax.set_xlabel('x')ax.set_ylabel('y')ax.set_title('My-K-Means')ax.scatter(X[:,0], X[:,1], c=mykm)","link":"/python/kmeans.html"},{"title":"SQL","text":"[TOC] 176. 第二高的薪水 - 力扣（LeetCode）ifnull(x，y)，若x不为空则返回x，否则返回y，这道题y=nulllimit x，y limit x offset y == limit x, y 123456select ifnull ((select distinct salary from Employee order by salary desc limit 1, 1), null)as SecondHighestSalary","link":"/leetcode/%E5%88%86%E7%B1%BB/SQL.html"},{"title":"栈","text":"[TOC] 栈 - 力扣（LeetCode） 1019. 链表中的下一个更大节点 - 力扣（LeetCode） 单调栈 - 链表中的下一个更大节点 - 力扣（LeetCode） 12","link":"/leetcode/%E5%88%86%E7%B1%BB/%E6%A0%88.html"},{"title":"牛客 sql","text":"[TOC] 查找最晚入职员工的所有信息_牛客网 1234select *from employeesorder by hire_date desclimit 1 -- 或者 limit 0, 1 查找入职员工时间排名倒数第三的员工所有信息_牛客网 1234select *from employeesorder by hire_date desclimit 2, 1 查找所有已经分配部门的员工的last_name和first_name以及dept_no_牛客网 三种等效的操作 , == join == inner join 123SELECT e.last_name, e.first_name, d.dept_noFROM employees AS e, dept_emp AS dWHERE e.emp_no = d.emp_no; 123SELECT e.last_name, e.first_name, d.dept_noFROM employees AS e JOIN dept_emp AS dON e.emp_no=d.emp_no; 123SELECT e.last_name, e.first_name, d.dept_noFROM employees AS e INNER JOIN dept_emp AS dON e.emp_no=d.emp_no; 左连接： left join 和 left outer join 是一样的，就是字面上有区别，执行结果是一样的 1234select last_name, first_name, dept_nofrom employees as e left join dept_emp as don d.emp_no = e.emp_nowhere d.dept_no not null; 查找当前薪水详情以及部门编号dept_no_牛客网 12345select s.*,d.dept_nofrom salaries as s inner join dept_manager as don s.emp_no=d.emp_nowhere d.to_date='9999-01-01' and s.to_date='9999-01-01'order by s.emp_no 查找所有员工入职时候的薪水情况_牛客网 12345678910111213-- group by + having min(salary)select emp_no, salaryfrom salariesgroup by emp_nohaving min(salary)order by emp_no desc-- e.hire_date=s.from_date-- 注意，加上 s. e. select s.emp_no, s.salaryfrom employees as e inner join salaries as son e.emp_no=s.emp_no and e.hire_date=s.from_dateorder by s.emp_no desc 查找薪水变动超过15次的员工号emp_no以及其对应的变动次数t_牛客网 123456789101112select emp_no, count(salary) as tfrom salariesgroup by emp_nohaving count(salary)&gt;15-- 补充：如果考虑严格意义上的涨幅，应该写：select a.emp_no, count() tfrom salaries a inner join salaries bon a.emp_no=b.emp_no and a.to_date=b.from_datewhere a.salary &lt; b.salarygroup by a.emp_nohaving t&gt;15 找出所有员工当前薪水salary情况_牛客网 1234select distinct salaryfrom salarieswhere to_date='9999-01-01'order by salary desc 获取所有部门当前manager的当前薪水情况，给出dept_no, emp_no以及salary_牛客网 12345select d.dept_no, d.emp_no, s.salaryfrom dept_manager as d inner join salaries as son d.emp_no=s.emp_no and d.to_date='9999-01-01' and s.to_date='9999-01-01' 获取所有非manager的员工emp_no_牛客网 123456select emp_nofrom employeeswhere emp_no not in ( select emp_no from dept_manager) 获取所有员工当前的manager_牛客网 123456select e.emp_no, m.emp_nofrom dept_emp as e inner join dept_manager as mon e.dept_no=m.dept_nowhere e.to_date='9999-01-01' and m.to_date='9999-01-01' and e.emp_no&lt;&gt;m.emp_no 获取每个部门中当前员工薪水最高的相关信息_牛客网 用子查询，子查询内部可以在 where等地方 连接外部的表 1234567891011select d.dept_no, d.emp_no, s.salaryfrom dept_emp as d inner join salaries as son d.emp_no=s.emp_no and d.to_date='9999-01-01' and s.to_date='9999-01-01'where s.salary=( select max(s1.salary) from dept_emp as d1 inner join salaries as s1 on d1.emp_no=s1.emp_no and d1.to_date='9999-01-01' and s1.to_date='9999-01-01' where d1.dept_no=d.dept_no group by d1.dept_no)order by d.dept_no asc 从titles表获取按照title进行分组_牛客网 1234select title, count() as tfrom titlesgroup by titlehaving t&gt;1 从titles表获取按照title进行分组，注意对于重复的emp_no进行忽略。_牛客网 1234567select title, count() as tfrom ( select distinct emp_no, title from titles)group by titlehaving t&gt;1 补充：当DISTINCT应用到多个字段时，其应用范围是其后面的所有字段，而不是紧挨它的一个字段注意：DISTINCT只能放在所有字段前面，所以上面的DISTINCT emp_no和title不可以交换 distinct 还能在 count 里面用 1234select title, count(distinct emp_no) as tfrom titlesgroup by titlehaving t&gt;1 查找employees表_牛客网 12345select *from employeeswhere last_name!='Mary'and emp_no%2=1order by hire_date desc 统计出当前各个title类型对应的员工当前薪水对应的平均工资_牛客网 12345select title, avg(salary)from titles as t inner join salaries as son t.emp_no=s.emp_nowhere t.to_date='9999-01-01' and s.to_date='9999-01-01'group by title 获取当前薪水第二多的员工的emp_no以及其对应的薪水salary_牛客网 12345select emp_no, salaryfrom salarieswhere to_date='9999-01-01'order by salary desclimit 1, 1 获取当前薪水第二多的员工的emp_no以及其对应的薪水salary_牛客网 123456789-- 小于薪水最大的最大薪水select e.emp_no, max(salary), last_name, first_namefrom employees as e inner join salaries as son e.emp_no=s.emp_nowhere to_date='9999-01-01' and salary&lt;( select max(salary) from salaries where to_date='9999-01-01') 查找所有员工的last_name和first_name以及对应的dept_name_牛客网 好像不能直接三个表 join ，比如 a left join b on xx join c on xxx ，这是错误的 1234567select e.last_name, e.first_name, t.dept_namefrom employees as e left join ( select emp_no, dept_name from dept_emp as de inner join departments as d on d.dept_no=de.dept_no) as ton e.emp_no=t.emp_no 查找员工编号emp_no为10001其自入职以来的薪水salary涨幅(总共涨了多少)growth_牛客网 12","link":"/leetcode/%E5%88%86%E7%B1%BB/%E7%89%9B%E5%AE%A2-sql.html"},{"title":"石子游戏","text":"[TOC] 877. 石子游戏 - 力扣（LeetCode）一把过，可以的。dp 初始化 0 是因为 gap 0时 dp 为 piles 的值，gap&gt;0时用的是 gap-1 的值，所以 dp 初始化成什么都无所谓 1234567891011121314class Solution: def stoneGame(self, piles: List[int]) -&gt; bool: n = len(piles) dp = [[0]*n for i in range(n)] # dp[i][j] = max(piles[i]-dp[i+1][j], piles[j]-dp[i][j-1])# i&lt;j # 遍历顺序: 由短到长 dp[0][0] -&gt; dp[0][n-1] gap: 0~n-1 for gap in range(n): for i in range(n-gap): j = i+gap if gap==0: dp[i][j] = piles[i] else: dp[i][j] = max(piles[i]-dp[i+1][j], piles[j]-dp[i][j-1]) # for i in dp: print(i) return dp[0][n-1]&gt;0 1140. 石子游戏 II - 力扣（LeetCode）123456789101112131415161718192021class Solution: def stoneGameII(self, piles: List[int]) -&gt; int: piles.reverse() # 从后往前拿石子, 方便遍历 n = len(piles) dp = [[0]*n for i in range(n+1)] # 4 4 9 7 2 # dp[i][m]: 前 i 个石子，M=m 时赢的石子数目 m&gt;=1 # dp[i][m] = max(sum(piles[i+1-x:i+1])-dp[i-x][max(m, x)] for x in range(1, 2*m+1)) # 推导公式解释：拿 x(1~2m) 个石子 newM = max(m, x) # 遍历顺序: i: 0-&gt;n-1 m:1-&gt;i+1 # return dp[-1][1] for i in range(n): _sum = sum(piles[:i+1]) for m in range(1, n): if 2*m&gt;=i+1: dp[i][m] = _sum continue dp[i][m] = max(sum(piles[i+1-x:i+1])-dp[i-x][max([m, x])] for x in range(1, 2*m+1)) # x+x+a = sum (x+a 比 x 多拿 a 个) # x+a = (sum+a)/2 return (sum(piles)+dp[-2][1])//2 1406. 石子游戏 III - 力扣（LeetCode）最近写的代码： 123456789101112131415161718class Solution: def stoneGameIII(self, stones: List[int]) -&gt; str: def score(x): print(x) if x&gt;0: return 'Alice' if x&lt;0: return 'Bob' return 'Tie' n = len(stones) nums = stones[::-1] # dp[i]: alice 在 i 位置赢得石子数量 # dp[i] = max(sum(nums[i-j:i+1])-dp[i-j] for j in range(3)) dp = [0 for i in range(n+1)] dp[1] = nums[0] for i in range(1, n): dp[i+1] = max(sum(nums[i-j:i+1])-dp[i-j] for j in range(min(n-1, 3))) return score(dp[-1]) 4 月前写的代码： 1234567891011class Solution: def stoneGameIII(self, l: List[int]) -&gt; str: dp = [0 for i in range(len(l))] dp[-1] = l[-1] if len(l)&gt;1: dp[-2] = max(l[-2]-dp[-1], sum(l[-2:])) if len(l)&gt;2: dp[-3] = max(l[-3]-dp[-2], l[-3]+l[-2]-dp[-1], sum(l[-3:])) for i in range(len(l)-4, -1, -1): dp[i] = max(l[i]-dp[i+1], l[i]+l[i+1]-dp[i+2], l[i]+l[i+1]+l[i+2]-dp[i+3]) return 'Alice' if dp[0]&gt;0 else 'Bob' if dp[0]&lt;0 else 'Tie' 感觉都有点不好读 1510. 石子游戏 IV - 力扣（LeetCode）1234567891011class Solution: def winnerSquareGame(self, n: int) -&gt; bool: dp = [False for _ in range(n+1)] for i in range(1, n+1): j = 1 while j*j&lt;=i: if not dp[i-j*j]: dp[i] = True break j += 1 return dp[-1]","link":"/leetcode/%E5%88%86%E7%B1%BB/%E7%9F%B3%E5%AD%90%E6%B8%B8%E6%88%8F.html"},{"title":"统计矩形","text":"[TOC] 221. 最大正方形 - 力扣（LeetCode）理解 三者取最小+1 - 最大正方形 - 力扣（LeetCode） 12345678910111213141516class Solution: def maximalSquare(self, matrix: List[List[str]]) -&gt; int: # dp[i][j] = min(dp[i-1][j-1], dp[i-1][j], dp[i][j-1])+1 if not matrix or not matrix[0]: return 0 n, m = len(matrix), len(matrix[0]) dp = [[0]*(m+1) for _ in range(n+1)] res = 0 for i in range(1, n+1): for j in range(1, m+1): if matrix[i-1][j-1]=='0': dp[i][j] = 0 else: dp[i][j] = min(dp[i-1][j-1], dp[i-1][j], dp[i][j-1])+1 res = max(res, dp[i][j]) # for i in dp: print(i) return res*res 1277. 统计全为 1 的正方形子矩阵 - 力扣（LeetCode）123456789101112131415161718class Solution: def countSquares(self, matrix: List[List[int]]) -&gt; int: # dp[i][j]: 以 i,j 位置为右下角的最大正方形边长 # dp[i][j] 同时也是以 i,j 位置为右下角的正方形个数 # dp[i][j] = min(dp[i-1][j-1], dp[i-1][j], dp[i][j-1])+1 if not matrix or not matrix[0]: return 0 n, m = len(matrix), len(matrix[0]) dp = [[0]*(m+1) for _ in range(n+1)] res = 0 for i in range(1, n+1): for j in range(1, m+1): if matrix[i-1][j-1]==0: dp[i][j] = 0 else: dp[i][j] = min(dp[i-1][j-1], dp[i-1][j], dp[i][j-1])+1 res += dp[i][j] # for i in dp: print(i) return res 1504. 统计全 1 子矩形 - 力扣（LeetCode）5454. 统计全 1 子矩形 - 统计全 1 子矩形 - 力扣（LeetCode） 1234567891011121314151617181920class Solution: def numSubmat(self, mat: List[List[int]]) -&gt; int: if not mat or not mat[0]: return 0 # left[i][j]: (i.j)统计他这行左边到他这个位置最多有几个连续的1 # 对于每个点(i.j)，我们固定子矩形的右下角为(i.j)，利用left从该行i向上寻找子矩阵左上角为第k行的矩阵个数。每次将子矩阵个数加到答案中即可 res = 0 n, m = len(mat), len(mat[0]) left = [[0]*(m+1) for _ in range(n+1)] for i in range(1, n+1): for j in range(1, m+1): if mat[i-1][j-1]==0: continue left[i][j] = left[i][j-1]+1 _min = left[i][j] for k in reversed(range(i+1)): _min = min(_min, left[k][j]) if not _min: break res += _min # for i in mat: print(i) # for i in left: print(i) return res 1139. 最大的以 1 为边界的正方形 - 力扣（LeetCode）12345678910111213141516171819class Solution: def largest1BorderedSquare(self, grid: List[List[int]]) -&gt; int: if not grid or not grid[0]: return 0 res = 0 # 记录 i,j 位置 向左、向上 有多少连续的 1 n, m = len(grid), len(grid[0]) l = [[[0, 0] for _ in range(m+1)] for _ in range(n+1)] for i in range(1, n+1): for j in range(1, m+1): if not grid[i-1][j-1]: continue l[i][j][0] += l[i][j-1][0]+1 l[i][j][1] += l[i-1][j][1]+1 for k in reversed(range(min(l[i][j]))): if min(l[i-k][j][0], l[i][j-k][1])&gt;=k+1: res = max(res, k+1) break # for i in grid: print(i) # for i in l: print(i) return res*res","link":"/leetcode/%E5%88%86%E7%B1%BB/%E7%BB%9F%E8%AE%A1%E7%9F%A9%E5%BD%A2.html"},{"title":"递增序列","text":"[TOC] 300. 最长上升子序列 - 力扣（LeetCode）动态规划 、优化（以贪心和二分作为子过程） - 最长上升子序列 - 力扣（LeetCode） 12345678910111213class Solution: def lengthOfLIS(self, nums: List[int]) -&gt; int: n = len(nums) if n&lt;2: return n dp = [1 for _ in range(n)] res = 1 for i in range(1, n): for j in range(i): if nums[j]&lt;nums[i]: dp[i] = max(dp[i], dp[j]+1) res = max(res, dp[i]) # print(dp) return res 优化动态规划 、优化（以贪心和二分作为子过程） - 最长上升子序列 - 力扣（LeetCode）动态规划设计方法&amp;&amp;纸牌游戏讲解二分解法 - 最长上升子序列 - 力扣（LeetCode） 看到 2 种优化思路，虽然都是二分，但是感觉第一种好理解一些，第二种太扯了 tail[i] 表示长度为 i+1 的所有上升子序列的结尾的最小值 12345678910111213from bisect import bisect_left, insortclass Solution: def lengthOfLIS(self, nums: List[int]) -&gt; int: n = len(nums) if n&lt;2: return n tails = [nums[0]] for i in range(1, n): idx = bisect_left(tails, nums[i]) if idx==len(tails): tails.append(nums[i]) else: tails[idx] = min(tails[idx], nums[i]) # print(tails) return len(tails) 673. 最长递增子序列的个数 - 力扣（LeetCode）1234567891011121314151617181920class Solution: def findNumberOfLIS(self, nums: List[int]) -&gt; int: n = len(nums) if n&lt;2: return n dp = [1 for _ in range(n)] # 以 i 结尾的最长序列的长度 count = [1 for _ in range(n)] # i 位置最长序列个数 m = 1 for i in range(1, n): for j in range(i): if nums[j]&lt;nums[i]: m = max(m, dp[j]+1) if dp[j]+1&gt;dp[i]: dp[i] = dp[j]+1 count[i] = count[j] elif dp[j]+1==dp[i]: count[i] += count[j] # print(nums) # print(dp) # print(count) return sum(count[i] for i in range(n) if dp[i]==m) 354. 俄罗斯套娃信封问题 - 力扣（LeetCode）最长递增子序列扩展到二维而已 - 俄罗斯套娃信封问题 - 力扣（LeetCode） 宽度 w 升序排序，如果遇到 w 相同的情况，则按照高度 h 降序排序.之后把所有的 h 作为一个数组，在这个数组上计算 LIS 的长度就是答案 1234567891011121314151617181920from bisect import bisect_leftclass Solution: def maxEnvelopes(self, envelopes: List[List[int]]) -&gt; int: # 宽度 w 升序排序，如果遇到 w 相同的情况，则按照高度 h 降序排序 # 之后把所有的 h 作为一个数组，在这个数组上计算 LIS 的长度就是答案 envelopes.sort(key=lambda i: (i[0], -i[1])) # print(envelopes) return self.lengthOfLIS([i[1] for i in envelopes]) def lengthOfLIS(self, nums: List[int]) -&gt; int: n = len(nums) if n&lt;2: return n tails = [nums[0]] for num in nums[1:]: idx = bisect_left(tails, num) if idx==len(tails): tails.append(num) else: tails[idx] = min(tails[idx], num) # print(tails) return len(tails)","link":"/leetcode/%E5%88%86%E7%B1%BB/%E9%80%92%E5%A2%9E%E5%BA%8F%E5%88%97.html"},{"title":"Java容器","text":"[TOC] 1234567891011121314151617181920212223// size &gt; loadFactor * capacity 时需要扩充 capacity(默认*2)// accessOrder 默认为 false，维护 插入顺序// 为 true 时，在调用 afterNodeAccess() 方法时，会将当前访问的节点移到链表尾部// 所以，链表头部是最旧的元素，尾部是最新的// public LinkedHashMap(int initialCapacity, float loadFactor, boolean accessOrder) {// super(initialCapacity, loadFactor);// this.accessOrder = accessOrder;// }class LRUCache&lt;K, V&gt; extends LinkedHashMap&lt;K, V&gt;{ private int cacheSize; LRUCache(int cacheSize){ super(16, 0.75, true); this.cacheSize = cacheSize; } protected boolean removeEldestEntry(){ // 此方法在 afterNodeInsertion 中调用，所以此时已经插入新节点 return this.size()&gt;cacheSize; }}","link":"/Java%E5%AE%B9%E5%99%A8.html"},{"title":"Java基础-CSNotes","text":"[TOC] &gt; 本文由 [简悦 SimpRead](http://ksria.com/simpread/) 转码， 原文地址 [cyc2018.github.io](https://cyc2018.github.io/CS-Notes/#/notes/Java%20%E5%9F%BA%E7%A1%80) 缓存池 new Integer(123) 与 Integer.valueOf(123) 的区别在于： new Integer(123) 每次都会新建一个对象； Integer.valueOf(123) 会使用缓存池中的对象，多次调用会取得同一个对象的引用。 Integer x = new Integer(123); Integer y = new Integer(123); System.out.println(x == y); Integer z = Integer.valueOf(123); Integer k = Integer.valueOf(123); System.out.println(z == k); valueOf() 方法的实现比较简单，就是先判断值是否在缓存池中，如果在的话就直接返回缓存池的内容。 public static Integer valueOf(int i) { if (i &gt;= IntegerCache.low &amp;&amp; i &lt;= IntegerCache.high) return IntegerCache.cache[i + (-IntegerCache.low)]; return new Integer(i); } StringBuilder 不是线程安全的 StringBuffer 是线程安全的，内部使用 synchronized 进行同步 new String(“abc”) 使用这种方式一共会创建两个字符串对象（前提是 String Pool 中还没有 “abc” 字符串对象）。 “abc” 属于字符串字面量，因此编译时期会在 String Pool 中创建一个字符串对象，指向这个 “abc” 字符串字面量； 而使用 new 的方式会在堆中创建一个字符串对象。 Java 的参数是以值传递的形式传入方法中，而不是引用传递。 Java 不能隐式执行向下转型，因为这会使得精度降低。 1.1 字面量属于 double 类型，不能直接将 1.1 直接赋值给 float 变量，因为这是向下转型。 1.1f 字面量才是 float 类型。 1float f = 1.1f; 因为字面量 1 是 int 类型，它比 short 类型精度要高，因此不能隐式地将 int 类型向下转型为 short 类型。 1short s1 = 1; 但是使用 += 或者 ++ 运算符会执行隐式类型转换。 12s1 += 1;s1++; 上面的语句相当于将 s1 + 1 的计算结果进行了向下转型： 1s1 = (short) (s1 + 1); String s = “a”; switch (s) { case “a”: System.out.println(“aaa”); break; case “b”: System.out.println(“bbb”); break; } switch 不支持 long final 对于基本类型，final 使数值不变； 对于引用类型，final 使引用不变，也就不能引用其它对象，但是被引用的对象本身是可以修改的。 final int x = 1; final A y = new A(); y.a = 1; 1. 数据 2. 方法 声明方法不能被子类重写。 private 方法隐式地被指定为 final，如果在子类中定义的方法和基类中的一个 private 方法签名相同，此时子类的方法不是重写基类方法，而是在子类中定义了一个新的方法。 3. 类 声明类不允许被继承。 静态变量：又称为类变量 可以直接通过类名来访问它。静态变量在内存中只存在一份。 实例变量：每创建一个实例就会产生一个实例变量，它与该实例同生共死。 静态方法在类加载的时候就存在了，它不依赖于任何实例。所以静态方法必须有实现，也就是说它不能是抽象方法。 只能访问所属类的静态字段和静态方法，方法中不能有 this 和 super 关键字，因此这两个关键字与具体对象关联。 静态语句块在类初始化时运行一次。 静态内部类 InnerClass innerClass = outerClass.new InnerClass(); StaticInnerClass staticInnerClass = new StaticInnerClass(); InnerClass innerClass = outerClass.new InnerClass(); 6. 初始化顺序 静态变量和静态语句块优先于实例变量和普通语句块，静态变量和静态语句块的初始化顺序取决于它们在代码中的顺序。 1public static String staticField = &quot;静态变量&quot;; 123static { System.out.println(&quot;静态语句块&quot;);} 1public String field = &quot;实例变量&quot;; 123{ System.out.println(&quot;普通语句块&quot;);} 最后才是构造函数的初始化。 123public InitialOrderTest() { System.out.println(&quot;构造函数&quot;);} 对于基本类型，== 判断两个值是否相等，基本类型没有 equals() 方法。 对于引用类型，== 判断两个变量是否引用同一个对象，而 equals() 判断引用的对象是否等价。 3. 实现 检查是否为同一个对象的引用，如果是直接返回 true； 检查是否是同一个类型，如果不是，直接返回 false； 将 Object 对象进行转型； 判断每个关键域是否相等。 @Override public boolean equals(Object o) { if (this == o) return true; if (o == null || getClass() != o.getClass()) return false; EqualExample that = (EqualExample) o; if (x != that.x) return false; if (y != that.y) return false; return z == that.z; } hashCode() 返回哈希值，而 equals() 是用来判断两个对象是否等价。等价的两个对象散列值一定相同，但是散列值相同的两个对象不一定等价，这是因为计算哈希值具有随机性，两个值不同的对象可能计算出相同的哈希值。 在覆盖 equals() 方法时应当总是覆盖 hashCode() 方法，保证等价的两个对象哈希值也相等。 HashSet 和 HashMap 等集合类使用了 hashCode() 方法来计算对象应该存储的位置，因此要将对象添加到这些集合类中，需要让对应的类实现 hashCode() 方法。 理想的哈希函数应当具有均匀性，即不相等的对象应当均匀分布到所有可能的哈希值上。这就要求了哈希函数要把所有域的值都考虑进来。可以将每个域都当成 R 进制的某一位，然后组成一个 R 进制的整数。 R 一般取 31，因为它是一个奇素数，如果是偶数的话，当出现乘法溢出，信息就会丢失，因为与 2 相乘相当于向左移一位，最左边的位丢失。并且一个数与 31 相乘可以转换成移位和减法：31*x == (x&lt;&lt;5)-x，编译器会自动进行这个优化。 12345678@Overridepublic int hashCode() { int result = 17; result = 31 * result + x; result = 31 * result + y; result = 31 * result + z; return result;} Cloneable 接口只是规定，如果一个类没有实现 Cloneable 接口又调用了 clone() 方法，就会抛出 CloneNotSupportedException。 123456789public class CloneExample implements Cloneable { private int a; private int b; @Override public Object clone() throws CloneNotSupportedException { return super.clone(); }} clone() 是 Object 的 protected 方法，它不是 public，一个类不显式去重写 clone()，其它类就不能直接去调用该类实例的 clone() 方法。 浅拷贝 return (ShallowCloneExample) super.clone(); 深拷贝 DeepCloneExample result = (DeepCloneExample) super.clone(); result.arr = new int[arr.length]; for (int i = 0; i &lt; arr.length; i++) { result.arr[i] = arr[i]; } return result; 4. clone() 的替代方案 使用 clone() 方法来拷贝一个对象即复杂又有风险，它会抛出异常，并且还需要类型转换。Effective Java 书上讲到，最好不要去使用 clone()，可以使用拷贝构造函数或者拷贝工厂来拷贝一个对象。 1234567891011121314151617181920212223242526public class CloneConstructorExample { private int[] arr; public CloneConstructorExample() { arr = new int[10]; for (int i = 0; i &lt; arr.length; i++) { arr[i] = i; } } public CloneConstructorExample(CloneConstructorExample original) { arr = new int[original.arr.length]; for (int i = 0; i &lt; original.arr.length; i++) { arr[i] = original.arr[i]; } } public void set(int index, int value) { arr[index] = value; } public int get(int index) { return arr[index]; }} 构造函数的参数还可以是自身，学到了 protected 用于修饰成员，表示在继承体系中成员对于子类可见，但是这个访问修饰符对于类没有意义。 Java 中有三个访问权限修饰符：private、protected 以及 public，如果不加访问修饰符，表示包级可见。 如果子类的方法重写了父类的方法，那么子类中该方法的访问级别不允许低于父类的访问级别。这是为了确保可以使用父类实例的地方都可以使用子类实例去代替 字段决不能是公有的，因为这么做的话就失去了对这个字段修改行为的控制，客户端可以对其随意修改。例如下面的例子中，AccessExample 拥有 id 公有字段，如果在某个时刻，我们想要使用 int 存储 id 字段，那么就需要修改所有的客户端代码。 123456789101112public class AccessExample { private int id; public String getId() { return id + &quot;&quot;; } public void setId(String id) { this.id = Integer.valueOf(id); }} 1. 抽象类 抽象类和抽象方法都使用 abstract 关键字进行声明。如果一个类中包含抽象方法，那么这个类必须声明为抽象类。 抽象类和普通类最大的区别是，抽象类不能被实例化，只能被继承。 接口 从 Java 8 开始，接口也可以拥有默认的方法实现，这是因为不支持默认方法的接口的维护成本太高了 接口的成员（字段 + 方法）默认都是 public 的，并且不允许定义为 private 或者 protected。 接口的字段默认都是 static 和 final 的。 在很多情况下，接口优先于抽象类。因为接口没有抽象类严格的类层次结构要求，可以灵活地为一个类添加行为 重写（Override） 存在于继承体系中，指子类实现了一个与父类在方法声明上完全相同的一个方法 重写有以下三个限制： 子类方法的访问权限必须大于等于父类方法； 子类方法的返回类型必须是父类方法返回类型或为其子类型。 子类方法抛出的异常类型必须是父类抛出异常类型或为其子类型。 123456789101112class SuperClass { protected List&lt;Integer&gt; func() throws Throwable { return new ArrayList&lt;&gt;(); }}class SubClass extends SuperClass { @Override public ArrayList&lt;Integer&gt; func() throws Exception { return new ArrayList&lt;&gt;(); }} 下面的示例中，SubClass 为 SuperClass 的子类，SubClass 重写了 SuperClass 的 func() 方法。其中： 子类方法访问权限为 public，大于父类的 protected。 子类的返回类型为 ArrayList，是父类返回类型 List 的子类。 子类抛出的异常类型为 Exception，是父类抛出异常 Throwable 的子类。 子类重写方法使用 @Override 注解，从而让编译器自动检查是否满足限制条件。 在调用一个方法时，先从本类中查找看是否有对应的方法，如果没有再到父类中查看，看是否从父类继承来。否则就要对参数进行转型，转成父类之后看是否有对应的方法。总的来说，方法调用的优先级为： this.func(this) super.func(this) this.func(super) super.func(super) 123456789101112131415161718192021222324class A { public void show(A obj) { System.out.println(&quot;A.show(A)&quot;); } public void show(C obj) { System.out.println(&quot;A.show(C)&quot;); }}class B extends A { @Override public void show(A obj) { System.out.println(&quot;B.show(A)&quot;); }}class C extends B {}class D extends C {} 123456789101112131415161718192021public static void main(String[] args) { A a = new A(); B b = new B(); C c = new C(); D d = new D(); a.show(a); a.show(b); b.show(c); b.show(d); A ba = new B(); ba.show(c); ba.show(d); } 每个类都有一个 Class 对象，包含了与类有关的信息。当编译一个新类时，会产生一个同名的 .class 文件，该文件内容保存着 Class 对象。 反射可以提供运行时的类信息，并且这个类可以在运行时才加载进来，甚至在编译时期该类的 .class 不存在也可以加载进来。 也可以使用 Class.forName(&quot;com.mysql.jdbc.Driver&quot;) 这种方式来控制类的加载，该方法会返回一个 Class 对象。 JRE：Java Runtime Environment JDK：Java Development Kit JDK 是 Java 开发的核心，集成了 JRE 以及一些其它的工具，比如编译 Java 源码的编译器 javac 等 10 道 Java 泛型面试题 - 云+社区 - 腾讯云 TODO：写一段泛型程序来实现LRU缓存? LinkedHashMap可以用来实现固定大小的LRU缓存，当LRU缓存已经满了的时候，它会把最老的键值对移出缓存。LinkedHashMap提供了一个称为removeEldestEntry()的方法，该方法会被put()和putAll()调用来删除最老的键值对。当然，如果你已经编写了一个可运行的JUnit测试，你也可以随意编写你自己的实现代码。 注解Annotation实现原理与自定义注解例子 - 贾树丙 - 博客园 &gt; 本文由 [简悦 SimpRead](http://ksria.com/simpread/) 转码， 原文地址 [www.cnblogs.com\\](https://www.cnblogs.com/acm-bingzi/p/javaAnnotation.html) 注解的用处： 1、生成文档 2、跟踪代码依赖性，实现替代配置文件功能。 元注解：java.lang.annotation 提供了四种元注解，专门注解其他的注解（在自定义注解的时候，需要使用到元注解）： @Documented – 注解是否将包含在 JavaDoc 中 @Retention – 什么时候使用该注解 @Target – 注解用于什么地方 @Inherited – 是否允许子类继承该注解 自定义注解类编写的一些规则: 1. Annotation 型定义为 @interface 2. 参数成员只能用 public 或默认 (default) 这两个访问权修饰 3. 参数成员只能用基本类型 byte、short、char、int、long、float、double、boolean 八种基本数据类型和 String、Enum、Class、annotations 等数据类型，以及这一些类型的数组. 4. 要获取类方法和字段的注解信息，必须通过 Java 的反射技术来获取 Annotation 对象，因为你除此之外没有别的获取注解对象的方法 123456789101112131415161718192021222324251 import java.lang.annotation.Documented;2 import java.lang.annotation.Retention;3 import java.lang.annotation.Target;4 import static java.lang.annotation.ElementType.FIELD;5 import static java.lang.annotation.RetentionPolicy.RUNTIME;8 /**9 * 水果供应者注解10 */11 @Target(FIELD)12 @Retention(RUNTIME)13 @Documented14 public @interface FruitProvider {15 /**16 * 供应商编号17 */18 public int id() default -1;20 /**21 * 供应商名称22 */23 public String name() default \"\";25 /**26 * 供应商地址27 */28 public String address() default \"\";29 } 12345678910111213141516171819202122232425262728291 import java.lang.reflect.Field;3 /**4 * 注解处理器5 */6 public class FruitInfoUtil {7 public static void getFruitInfo(Class&lt;?&gt; clazz){9 String strFruitName=\" 水果名称：\";10 String strFruitColor=\" 水果颜色：\";11 String strFruitProvicer=\"供应商信息：\";13 Field[] fields = clazz.getDeclaredFields();15 for(Field field :fields){16 if(field.isAnnotationPresent(FruitName.class)){17 FruitName fruitName = (FruitName) field.getAnnotation(FruitName.class);18 strFruitName=strFruitName+fruitName.value();19 System.out.println(strFruitName);20 }21 else if(field.isAnnotationPresent(FruitColor.class)){22 FruitColor fruitColor= (FruitColor) field.getAnnotation(FruitColor.class);23 strFruitColor=strFruitColor+fruitColor.fruitColor().toString();24 System.out.println(strFruitColor);25 }26 else if(field.isAnnotationPresent(FruitProvider.class)){27 FruitProvider fruitProvider= (FruitProvider) field.getAnnotation(FruitProvider.class);28 strFruitProvicer=\" 供应商编号：\"+fruitProvider.id()+\" 供应商名称：\"+fruitProvider.name()+\" 供应商地址：\"+fruitProvider.address();29 System.out.println(strFruitProvicer);30 }31 }32 }33 } 1234567891011121314151617181920212223242526272829303132331 import test.FruitColor.Color;3 /**4 * 注解使用5 */6 public class Apple {8 @FruitName(\"Apple\")9 private String appleName;11 @FruitColor(fruitColor=Color.RED)12 private String appleColor;14 @FruitProvider(id=1,)15 private String appleProvider;17 public void setAppleColor(String appleColor) {18 this.appleColor = appleColor;19 }20 public String getAppleColor() {21 return appleColor;22 }24 public void setAppleName(String appleName) {25 this.appleName = appleName;26 }27 public String getAppleName() {28 return appleName;29 }31 public void setAppleProvider(String appleProvider) {32 this.appleProvider = appleProvider;33 }34 public String getAppleProvider() {35 return appleProvider;36 }38 public void displayName(){39 System.out.println(\"水果的名字是：苹果\");40 }41 } 123456781 /**2 * 输出结果3 */4 public class FruitRun {5 public static void main(String[] args) {6 FruitInfoUtil.getFruitInfo(Apple.class);7 }8 }","link":"/Java%E5%9F%BA%E7%A1%80-CSNotes.html"},{"title":"leetcode 201. Bitwise AND of Numbers Range","text":"leetcode九章 题目描述Given a range [m, n] where 0 &lt;= m &lt;= n &lt;= 2147483647, return the bitwise ANDof all numbers in this range, inclusive. Example 1: Input: [5,7] Output: 4Example 2: Input: [0,1] Output: 0Tags: Bit Manipulation Difficulty: Medium 答案\u0004 bin(45) int(‘12’, base=10) 123456789101112131415161718192021222324252627class Solution: def rangeBitwiseAnd(self, m: int, n: int) -&gt; int: shift = 0 while n&gt;m: n = n&gt;&gt;1 m = m&gt;&gt;1 shift += 1 return n&lt;&lt;shift def rangeBitwiseAnd1(self, m: int, n: int) -&gt; int: # 5 7 # 101 111 -&gt; 100 # m n 的二进制的共同前缀，不同比特填充 0 a = bin(m)[2:] b = bin(n)[2:] if len(b)&gt;len(a): # 1 10101 -&gt; 0 # 长度不同，return 0 return 0 pre = '' for i, j in zip(a, b): if i==j: pre += i else: return int('0b'+pre+'0'*(len(b)-len(pre)), 2) # 到这里，表示 m==n return m","link":"/leetcode-201-Bitwise-AND-of-Numbers-Range.html"},{"title":"biweekly-contest-32","text":"[TOC] 第 k 个缺失的正整数3 K 次操作转变字符串4 平衡括号字符串的最少插入次数5 找出最长的超赞子字符串6 菜！ 112345678class Solution: def findKthPositive(self, arr: List[int], k: int) -&gt; int: cnt = 0 s = set(arr) for i in range(1, 3000): if i not in s: cnt += 1 if cnt==k: return i 2123456789101112class Solution: def canConvertString(self, s: str, t: str, k: int) -&gt; bool: n = len(s) if n!=len(t): return False d = collections.defaultdict(int) for i in range(n): diffn = (ord(t[i])-ord(s[i]))%26 if not diffn: continue d[diffn] += 1 if (d[diffn]-1)*26+diffn&gt;k: return False return True 312 412","link":"/Leetcode%20weekly%20contest/biweekly-contest-32.html"},{"title":"weekly-contest-189","text":"[TOC] 1123class Solution: def busyStudent(self, A: List[int], B: List[int], k: int) -&gt; int: return sum(1 if a&lt;=k&lt;=b else 0 for a, b in zip(A, B)) 21234567class Solution: def arrangeWords(self, text: str) -&gt; str: text = text[0].lower()+text[1:] words = text.split() words.sort(key=len) res = ' '.join(words) return res[0].upper()+res[1:] 31234567891011121314151617181920212223242526272829303132333435363738394041class Solution: def peopleIndexes(self, fcs: List[List[str]]) -&gt; List[int]: # 数据规模不大，意味着暴力 # 稍微优化一下 # fcs 内每个元素按照 长度+字典序 排列 # 然后判断一个列表是不是另一个列表的子列表时，用双指针 for i in fcs: i.sort(key=lambda i: (-len(i), i)) # 添加原序号 for i in range(len(fcs)): fcs[i].append(i) # fcs 按列表元素长度排序 fcs.sort(key=len, reverse=True) print(fcs) res = [fcs[0][-1]] def isSubList(i, j): # j issublist of i p1, p2 = 0, 0 while p1&lt;len(i)-1 and p2&lt;len(j)-1: if i[p1]==j[p2]: p1 += 1 p2 += 1 else: if len(i[p1])&lt;len(j[p2]): return False p1 += 1 return p2==len(j)-1 def helper(i): for j in fcs: if len(j)&lt;=len(i): return False if isSubList(j, i): return True return False for i in fcs[1:]: if not helper(i): res.append(i[-1]) res.sort() return res 人家就直接用 set 做。。。 123456789101112131415161718class Solution: def peopleIndexes(self, favoriteCompanies): if len(favoriteCompanies) == 0: return res = [] for i in range(0, len(favoriteCompanies)): # 判断 列表i 是否为其他列表的子集，非则记录下标，是则无操作 isFlag = False for j in range(0, len(favoriteCompanies)): if i == j: continue if set(favoriteCompanies[i]).issubset(favoriteCompanies[j]): # 如果为其他人子集，则停止 isFlag = True break if not isFlag: res.append(i) return res 412","link":"/Leetcode%20weekly%20contest/weekly-contest-189.html"},{"title":"weekly-contest-190","text":"[TOC] 检查单词是否为句中其他单词的前缀3 定长子串中元音的最大数目4 二叉树中的伪回文路径5 两个子序列的最大点积6 1123456class Solution: def isPrefixOfWord(self, ss: str, s: str) -&gt; int: for i, si in enumerate(ss.split()): if si.startswith(s): return i+1 return -1 21234567891011121314151617class Solution: def maxVowels(self, s: str, k: int) -&gt; int: def vowel(c): if c in 'aeiou': return 1 return 0 l, r = 0, k-1 cur = sum(vowel(s[i]) for i in range(l, r+1)) res = cur while r+1&lt;len(s): r += 1 l += 1 if vowel(s[r]): cur += 1 if vowel(s[l-1]): cur -= 1 res = max(res, cur) return res 31234567891011121314151617181920212223242526# Definition for a binary tree node.# class TreeNode:# def __init__(self, val=0, left=None, right=None):# self.val = val# self.left = left# self.right = rightclass Solution: def pseudoPalindromicPaths (self, root: TreeNode) -&gt; int: # dfs + 记录所有的奇数节点 self.res = 0 odd = set() def flip(odd, n): if n in odd: odd.remove(n) else: odd.add(n) def dfs(root): if not root: return flip(odd, root.val) if not root.left and not root.right and len(odd)&lt;2: self.res += 1 dfs(root.left) dfs(root.right) flip(odd, root.val) dfs(root) return self.res 4注意 num1 nums2 中都至少取 1 个数 nums1[i]*nums2[j] 表示只拿 i j 2个数相乘 1dp[i][j] = max(dp[i-1][j-1], dp[i-1][j], dp[i][j-1], nums1[i]*nums2[j]+dp[i-1][j-1], nums1[i]*nums2[j]) 123456789101112131415161718class Solution: def maxDotProduct(self, nums1: List[int], nums2: List[int]) -&gt; int: n, m = map(len, [nums1, nums2]) # dp[i][j]: nums1[:i+1] 与 nums2[:j+1] 的点积最大值 # 约束：i&lt;n, j&lt;m # 初始化 dp = [[float('-inf')]*m for i in range(n)] # 至少相乘一次 dp[0][0] = nums1[0]*nums2[0] for i in range(1, n): dp[i][0] = max(dp[i-1][0], nums1[i]*nums2[0]) for j in range(1, m): dp[0][j] = max(dp[0][j-1], nums1[0]*nums2[j]) for i in range(1, n): for j in range(1, m): dp[i][j] = max(dp[i-1][j-1], dp[i-1][j], dp[i][j-1], nums1[i]*nums2[j]+dp[i-1][j-1], nums1[i]*nums2[j]) return dp[-1][-1]","link":"/Leetcode%20weekly%20contest/weekly-contest-190.html"},{"title":"weekly-contest-201","text":"[TOC] 整理字符串3 找出第 N 个二进制字符串中的第 K 位4 和为目标值的最大数目不重叠非空子数组数目6 切棍子的最小成本7 公开处刑 [LeetCode] Weekly Contest 201 (rank 50)[1544,1545,1546,1547][OTTFF]_哔哩哔哩 (゜-゜)つロ 干杯~-bilibili 解释的很好 112345678class Solution: def makeGood(self, s: str) -&gt; str: stack = [] t = abs(ord('a')-ord('A')) for c in s: if stack and abs(ord(c)-ord(stack[-1]))==t: stack.pop() else: stack.append(c) return ''.join(stack) 2123456789101112class Solution: def __init__(self): self.d = {1:1} for i in range(2, 21): self.d[i] = self.d[i-1]*2+1 def findKthBit(self, n: int, k: int) -&gt; str: if n==k==1: return '0' a = self.d[n]//2 # length = 2a+1 if k==a+1: return '1' if k&gt;a: return '10'[int(self.findKthBit(n-1, 2*a-k+2))] if k&lt;=a: return self.findKthBit(n-1, k) 3123456789101112131415161718class Solution: def maxNonOverlapping(self, nums: List[int], target: int) -&gt; int: # -1 3 5 1 4 2 -9 # -1 2 7 8 12 14 5 n = len(nums) dp = [0 for i in range(n+2)] # 前 i 个数最多有多少个符合条件的 presum = {0: -2} # presum: i 0~i 的和为 presum ，i 保留较大的 s = 0 for i in range(1, n+1): s += nums[i-1] if s-target in presum: p = presum[s-target] dp[i] = max(dp[i-1], dp[p+1]+1) else: dp[i] = dp[i-1] presum[s] = i-1 # print(presum, dp) return dp[-2] 412345678910111213141516171819202122class Solution: def minCost(self, n: int, cuts: List[int]) -&gt; int: cuts.extend([0, n]) cuts.sort() m = len(cuts) # dp[i][j] cut[i]~cut[j] 间最低成本 # dp[i][j] = min(dp[i][k]+dp[k][j]+(cuts[j]-cuts[i])) i&lt;k&lt;j # 要求 dp[i][j] 需要 dp[i][k] dp[k][j] 特点： 长度比 j-i 短 # 所以遍历顺序 从短到长 j-i&lt;2 时 dp 为 0 如 0 1 2 3 中 dp[1][1]=dp[1][2]=0 dp = [[sys.maxsize]*m for i in range(m)] for i in range(m): dp[i][i] = 0 if i&gt;0: dp[i][i-1] = 0 if i&lt;m-1: dp[i][i+1] = 0 for gap in range(2, m): for i in range(m-gap): j = i+gap lenij = cuts[j]-cuts[i] for k in range(i+1, j): dp[i][j] = min(dp[i][j], dp[i][k]+dp[k][j]+lenij) return dp[0][m-1]","link":"/Leetcode%20weekly%20contest/weekly-contest-201.html"},{"title":"biweekly-contest-33","text":"[TOC] 千位分隔数3 可以到达所有点的最少点数目4 得到目标数组的最少函数调用次数5 二维网格图中探测环6 还可以，都不算太难，速度有些慢了 112345678class Solution: def thousandSeparator(self, n: int) -&gt; str: l = [] while n&gt;1000: n, cur = divmod(n, 1000) l.append(str(cur).zfill(3)) l.append(str(n)) return '.'.join(l[::-1]) 2脑筋急转弯 1234567891011121314class Solution: def findSmallestSetOfVertices(self, n: int, edges: List[List[int]]) -&gt; List[int]: # 所有入度为 0 的点 indegrees = collections.defaultdict(int) points = set() for a, b in edges: points.add(a) points.add(b) indegrees[b] += 1 res = [] for p in points: if indegrees.get(p, 0)==0: res.append(p) return res 3123456789101112131415161718192021222324252627class Solution: def minOperations(self, nums: List[int]) -&gt; int: # 问题简化：nums 的每个元素都最少经过 a 次 +1, b 次 *2 # 结果等同于 max(*2次数)+sum(+1 次数) # 3 2 2 4 # a 2 1 1 1 (+1) # b 1 1 1 2 (*2) # max(b) + sum(a) = 2+5 a, b = [], [] def getab(n): x, y = 0, 0 while n: if n&amp;1: n -= 1 x += 1 else: n //=2 y += 1 return x, y for i in nums: x, y = getab(i) a.append(x) b.append(y) # print(a, b, max(b), sum(a)) return max(b) + sum(a) 412345678910111213141516171819202122232425262728293031class Solution: def containsCycle(self, grid: List[List[str]]) -&gt; bool: # bfs n, m = len(grid), len(grid[0]) # 0: 没访问过 其他数字表示同一轮的搜索轮次 visited = [[0]*m for i in range(n)] self.cur = 1 def bfs(i0, j0): # bfs 遍历上下左右 visited[i0][j0] = self.cur queue = [[i0, j0, 0, 0]] # 后 2 位记录方向 while queue: _i, _j, x, y = queue.pop() for a, b in [[1, 0], [-1, 0], [0, 1], [0, -1]]: i, j = _i+a, _j+b if (a==-x and b==-y) or not (0&lt;=i&lt;n) or not (0&lt;=j&lt;m): continue # 如果已经访问过，并且格子内值相同，并且 cur 与 visited 值相同，表示有环 if visited[i][j]: if visited[i][j]==self.cur: # for i in visited: print(i) # print() return True elif grid[i][j]==grid[i0][j0]: visited[i][j] = self.cur queue.append([i, j, a, b]) self.cur += 1 # for i in visited: print(i) # print() return False return any(bfs(i, j) for i in range(n) for j in range(m))","link":"/Leetcode%20weekly%20contest/biweekly-contest-33.html"},{"title":"weekly-contest-204","text":"[TOC] 重复至少 K 次且长度为 M 的模式3 乘积为正数的最长子数组长度4 使陆地分离的最少天数6 将子数组重新排序得到同一个二叉查找树的方案数7 11234567891011121314class Solution: def containsPattern(self, arr: List[int], m: int, k: int) -&gt; bool: if len(arr)&lt;m*k: return False def helper(i): for x in range(m): for y in range(k): if arr[i+x+y*m]!=arr[i+x]: return False return True for i in range(len(arr)-m*k+1): if helper(i): return True return False 2超时： 12345678910111213141516171819202122232425262728293031class Solution: def getMaxLen(self, nums: List[int]) -&gt; int: for i in range(len(nums)): if nums[i]==0: return max(self.getMaxLen(nums[:i]), self.getMaxLen(nums[i+1:])) if not nums: return 0 l = [] # 左侧的负数个数 cur = 0 for i in nums: if i&lt;0: cur += 1 l.append(cur) # 最后一位是偶数：数组本身乘积就是正数 if not l[-1]&amp;1: return len(l) # l 中 找到第一个 奇数（1）； 最后一个偶数（l[-1]-1） firstOdd = lastEven = -1 # firstEven = -1 for i in range(len(l)): # if l[i]==0: # firstEven = i if l[i]==1: firstOdd = i break for i in reversed(range(len(l))): if l[i]==l[-1]-1: lastEven = i break res = max(lastEven+1, len(l)-1-firstOdd) # print(l, lastEven, firstOdd, lastEven-firstEven, len(l)-1-firstOdd) return res 优化1: 仍然超时 1234567891011121314151617181920212223class Solution: def getMaxLen(self, nums: List[int]) -&gt; int: for i in range(len(nums)): if nums[i]==0: return max(self.getMaxLen(nums[:i]), self.getMaxLen(nums[i+1:])) if not nums: return 0 # l = [] # 左侧的负数个数 cur = 0 # l 中 找到第一个 奇数（1）； 最后一个偶数（l[-1]-1） firstOdd = lastEven = -1 for index, i in enumerate(nums): if i&lt;0: cur += 1 if cur==1 and firstOdd==-1: firstOdd = index if not cur&amp;1: lastEven = index # l.append(cur) if not cur&amp;1: return len(nums) res = max(lastEven+1, len(nums)-1-firstOdd) return res 优化 2： 1234567891011121314151617181920212223class Solution: def getMaxLen(self, nums: List[int]) -&gt; int: nums.append(0) cur = 0 firstOdd = lastEven = -1 lastZero = -1 # 上一个 0 的位置 res = 0 for index, i in enumerate(nums): if i==0: if not cur&amp;1: res = max(res, index-1-lastZero) else: res = max(res, lastEven-lastZero, index-1-firstOdd) cur = 0 lastZero = firstOdd = lastEven = index continue if i&lt;0: cur += 1 if cur==1 and firstOdd==lastZero: firstOdd = index if not cur&amp;1: lastEven = index return res 312 412","link":"/Leetcode%20weekly%20contest/weekly-contest-204.html"},{"title":"weekly-contest-203","text":"[TOC] 圆形赛道上经过次数最多的扇区3 你可以获得的最大硬币数目4 查找大小为 M 的最新分组6 石子游戏 V7 打回原形，排名又要下降了 1模拟，比较慢，不知道有没有快点的方法 123456789101112131415161718192021class Solution: def mostVisited(self, n: int, rounds: List[int]) -&gt; List[int]: m = collections.defaultdict(int) m[rounds[0]] += 1 # 后面不算起点 cur = rounds[0] rounds.pop(0) while rounds: while cur!=rounds[0]: cur += 1 if cur&gt;n: cur = 1 m[cur] += 1 rounds.pop(0) # print(m, max(m.values())) res = [] ma = max(m.values()) for i in m: if m.get(i)==ma: res.append(i) res.sort() return res 2每次扔个最大的，扔个最小的 12345678910111213class Solution: def maxCoins(self, nums: List[int]) -&gt; int: # [2,4,1,2,7,8] # 1 2 2 4 7 8 nums.sort() res = 0 while nums: res += nums[-2] nums.pop() nums.pop() nums.pop(0) return res 312 4写的是对的，但是超时 复杂度: 500^3 哎，不知道哪里可以优化。遍历顺序还是什么地方 123456789101112131415161718192021222324252627282930313233class Solution: def stoneGameV(self, nums: List[int]) -&gt; int: n = len(nums) # dp[i][j] i~j 石子的分数 # return dp[0][n-1] # dp[i][j] = max(min(_sum(), _sum() + dp[]) for k in range(i+1, j)) dp = [[0]*n for i in range(n)] presum = list(itertools.accumulate(nums)) @functools.lru_cache(None) def _sum(i, j): # i~j 的 sum return presum[j]-presum[i]+nums[i] @functools.lru_cache(None) def getCur(i, j, k): if _sum(i, k)&gt;_sum(k+1, j): cur = _sum(k+1, j)+dp[k+1][j] elif _sum(i, k)&lt;_sum(k+1, j): cur = _sum(i, k)+dp[i][k] else: cur = max(_sum(i, k)+dp[i][k], _sum(k+1, j)+dp[k+1][j]) return cur for gap in range(1, n): for i in range(n-gap): j = i+gap if gap==1: dp[i][j] = min(nums[i:j+1]) else: # 划分为 [i, k] [k+1, j]-&gt; i&lt;=k&lt;j dp[i][j] = max(getCur(i, j, k) for k in range(i, j)) for i in dp: print(i) return dp[0][n-1] 比赛完了，别人用的一样的思路，也是 O(n^3) 就是 LeetCode 对时间要求苛刻了一些，需要做一些优化: 从上往下的 记忆化递归 可以减少许多不必要的状态 比如上面代码运行完的 dp 数组： 123456[0, 2, 7, 10, 13, 18][0, 0, 2, 4, 7, 13][0, 0, 0, 3, 5, 10][0, 0, 0, 0, 4, 5][0, 0, 0, 0, 0, 5][0, 0, 0, 0, 0, 0] 记忆化递归 的 dp 数组 123456[0, 2, 7, 0, 0, 18][0, 0, 2, 0, 0, 0][0, 0, 0, 0, 0, 0][0, 0, 0, 0, 0, 0][0, 0, 0, 0, 0, 5][0, 0, 0, 0, 0, 0] presum 前面加个 0，方便计算前缀和 _sum(i, j) = presum[j+1]-presum[i] 12345678910111213141516171819202122232425262728293031323334353637class Solution: def stoneGameV(self, nums: List[int]) -&gt; int: n = len(nums) # dp[i][j] i~j 石子的分数 # return dp[0][n-1] # dp[i][j] = max(min(_sum(), _sum() + dp[]) for k in range(i+1, j)) dp = [[0]*n for i in range(n)] presum = list(itertools.accumulate(nums)) presum.insert(0, 0) @functools.lru_cache(None) def _sum(i, j): # i~j 的 sum return presum[j+1]-presum[i] def getCur(i, j, k): l, r = _sum(i, k), _sum(k+1, j) if l&gt;r: cur = r+dfs(k+1, j) elif l&lt;r: cur = l+dfs(i, k) else: cur = max(l+dfs(i, k), r+dfs(k+1, j)) return cur def dfs(i, j): if dp[i][j]: return dp[i][j] if j-i==0: return 0 if j-i==1: dp[i][j] = min(nums[i], nums[j]) return dp[i][j] dp[i][j] = max(getCur(i, j, k) for k in range(i, j)) return dp[i][j] dfs(0, n-1) # for i in dp: print(i) return dp[0][n-1] 此外，记忆化递归 在 Python 中可以不借助 map 或数组，可以用 lru_cache 来实现，代码更简短，而且速度上还更快 12345678910111213141516171819202122232425262728293031class Solution: def stoneGameV(self, nums: List[int]) -&gt; int: n = len(nums) # dp[i][j] i~j 石子的分数 # return dp[0][n-1] # dp[i][j] = max(min(_sum(), _sum() + dp[]) for k in range(i+1, j)) presum = list(itertools.accumulate(nums)) presum.insert(0, 0) def _sum(i, j): # i~j 的 sum return presum[j+1]-presum[i] def getCur(i, j, k): l, r = _sum(i, k), _sum(k+1, j) if l&gt;r: cur = r+dfs(k+1, j) elif l&lt;r: cur = l+dfs(i, k) else: cur = max(l+dfs(i, k), r+dfs(k+1, j)) return cur @functools.lru_cache(None) def dfs(i, j): if j-i==0: return 0 if j-i==1: return min(nums[i], nums[j]) return max(getCur(i, j, k) for k in range(i, j)) return dfs(0, n-1)","link":"/Leetcode%20weekly%20contest/weekly-contest-203.html"},{"title":"weekly-contest-205","text":"[TOC] 替换所有的问号3 数的平方等于两数乘积的方法数5 避免重复字母的最小删除成本5 保证图可完全遍历6 112345678910111213141516171819202122232425262728class Solution: def modifyString(self, s: str) -&gt; str: if s=='?': return 'a' if len(s)==1: return s if s.startswith('??'): s = 'a?'+s[2:] if s.startswith('?'): for x in 'ab': if x!=s[1]: s = x+s[1:] if s.endswith('??'): s = s[:-2]+'?a' if s.endswith('?'): for x in 'ab': if x!=s[-2]: s = s[:-1]+x res = s[0] for i in range(1, len(s)-1): if s[i]!='?': res += s[i] else: t = set('abc')-set([res[i-1], s[i+1]]) for x in 'abc': if x in t: res += x break res += s[-1] return res 21234567891011121314151617181920212223242526272829303132333435class Solution: def numTriplets(self, nums1: List[int], nums2: List[int]) -&gt; int: nums1.sort() nums2.sort() def helper(l1, l2): res = 0 for i in l1: i2 = i*i l, r = 0, len(l2)-1 while l&lt;r: mul = l2[l]*l2[r] if l2[r]==l2[l]: if mul==i2: res += (r-l)*(r-l+1)//2 break elif mul==i2: newl = l newr = r while l2[newl+1]==l2[newl]: newl += 1 while l2[newr-1]==l2[newr]: newr -= 1 print(l, r, newl, newr) res += (newl-l+1)*(r-newr+1) # print(res, (newl-l+1)*(r-newr+1)) l, r = newl, newr-1 elif mul&gt;i2: r -= 1 elif mul&lt;i2: l += 1 return res return helper(nums1, nums2)+helper(nums2, nums1) 31234567891011class Solution: def minCost(self, s: str, cost: List[int]) -&gt; int: res = 0 n = len(s) i = 0 for _, v in itertools.groupby(s): l = len(list(v)) if l&gt;1: res += sum(cost[i:i+l])-max(cost[i:i+l]) i += l return res 412","link":"/Leetcode%20weekly%20contest/weekly-contest-205.html"},{"title":"字节跳动面试准备","text":"[TOC] **MySQLb+/b/红黑树-&gt;索引和文件系统 Mysql索引简介 MySQL 事务的隔离级别一个正确的事务应该具备的 4 个特性： ACID (atomicity, consistency, isolation, durability) 彻底搞懂 MySQL 事务的隔离级别-阿里云开发者社区all/Isolation.md at master · hongwen1993/all 事务并发可能出现的三个问题 1.脏读 一个事务读到了另一个未提交事务修改过的数据 （破坏了隔离性） 2.不可重复读 一个事务多次读取结果不相同，因为在这期间有其他事务 修改/删除 了符合条件的数据（破坏了一致性） 3.幻读 一个事务多次读取结果不同，因为在这期间有其他事务 插入 了符合条件的数据（破坏了一致性） 四种事务的隔离级别 1.read uncommitted 没有解决以上三个问题，可以读取到其他未提交事务的数据 2.read committed 只能读取其他已经提交事务的数据。解决了脏读的问题 3.repeatable read （MySQL default） 事务在 commit 之前，其他事务对数据库的修改对当前事务不可见（行锁） 4.serialable 2 个读取操作不会阻塞，其他的如读写、写写操作会阻塞（表锁） 查看隔离级别 select @@transaction_isolation show variables like “transaction_isolation” 设置隔离级别 SET GLOBAL/SESSION TRANSACTION ISOLATION LEVEL level 三大范式第一范式 1Nf: 数据库的字段都是单一属性，不可再分 第二范式 2NF: 所有非关键字段都完全依赖于任意一组候选关键字（没有部分依赖） 第三范式 3NF: 在第二范式的基础上，不存在非关键字段对任一候选关键字段的传递函数依赖（没有传递依赖） 小顶堆（TopK大）、大顶堆（BtmK小）Python使用heapq实现小顶堆（TopK大）、大顶堆（BtmK小） | 四号程序员 1234567891011121314151617181920212223242526import heapqimport randomclass TopkHeap(object): def __init__(self, k): self.k = k self.data = [] def Push(self, elem): if len(self.data) &lt; self.k: heapq.heappush(self.data, elem) elif self.data[0] &lt; elem: heapq.heapreplace(self.data, elem) def TopK(self): return list((heapq.heappop(self.data) for _ in range(self.k) if self.data))[::-1]if __name__ == \"__main__\": list_rand = random.sample(range(1000000), 100) th = TopkHeap(3) for i in list_rand: th.Push(i) print(th.TopK()) print(list(sorted(list_rand, reverse=True)[:3])) 大顶堆的话, push pop 的时候取负值，就能将小顶堆转换成大顶堆 heapq.heappush(self.data, -elm) -heapq.pop(self.data) TODO：手写小顶堆 Python实现堆排序及原理详解 + TopK面试题（多图解释） - 知乎 堆 - 力扣（LeetCode） tcp udpTCP/UDP 协议详解… 三次握手、四次挥手 两张动图-彻底明白TCP的三次握手与四次挥手_qzcsu的博客-CSDN博客 三次握手的个人浅薄理解三次握手的目的：a b 收到对方 对自己发送的 isn 的确认 发送方(A)和确认方(B)需要确认 发送和接受 的通道正常后, 就可以开始发送数据 1 2 3 A -&gt; B-&gt;A-&gt;B 1: SYN=1 seq=x (隐含 ACK=0) (ISN随时间而变化) (发出时 a 进入 syn_send 状态，到达时 b 进入 syn_revd 状态) 2: ACK=1 ack=x+1; SYN=1 seq=y (到达 a 时，a 进入 established 状态)(是 ack=1 与 syn=1 seq=y 的合并，也是为什么没有采用四次握手的原因, 为了节省资源) 3: ACK=1 ack=y+1 seq=x+1 (由于 a 已经知道连接已经建立，所以从这个包开始a可以发送数据给 b 了，前 2 步握手不可以) ↑，可以看出，经过三次握手之后，A 知道 A的 发送(1 A-B)和接受(2 B-A) 都正常 (所以第三步握手时，已经可以携带数据了，因为 a 已经处于 established 状态) B 也确认了发送(2 B-A)和接受(3 A-B)都正常，此时连接建立，可以开始传输数据 1: a 给 b 发送 isn(初始序列号，initial sequence number) 2: b给 a 发送 isn, 同时 a 确认b收到自己发送的 isn 3: b 确认 a 收到自己发的 isn 为什么不是两次握手？ 两次握手是 aba 引发的问题 1：b 不知道发给 a 的通道是否畅通 问题 2: 对 b(服务端) 来说，只要接收到a的连接请求，就立马进入 established 状态。若因网络迟滞导致 a 发送了 2 个连接请求，当 1 个连接关闭后，另一个连接才到达，此时 b 发送确认给 a后，b 再次进入established 状态，而 a 由于此时没有发送连接请求，则忽略 b 的确认。而 b 一直处于 established 状态，一直等待 a 传输数据或四次挥手关闭连接，极大浪费资源。 四次挥手客户端或服务端均可发起挥手 1 2 3 4 a -&gt; b -&gt; a ​ -&gt; a -&gt; b FIN=1 seq=u (与握手不同， 这里的 seq =前面已经接受到的最后一个字节序号+1) ACK=1 ack=u+1 seq=v 数据传输完，FIN=1 ACK=1 seq=w ack=u+1 ACK=1 ack=w+1 4 中，客户端发送报文后，等待 2MSL(maximum segment lifetime 最长报文段)，后 close 为什么要等待 2MSL 可能步骤 4 的报文没有到达，b 由于过了一段时间没有收到确认，就会重新发送报文，然后 a 就可以在 2MSL 时间内重发确认，重新开始计时 2MSL。如果没有 2MSL，b 会一直重发报文，导致系统资源的浪费. 半连接队列 服务器端 处于 SYN_RCVD 状态的 tcp 请求会被放到一个队列中 SYN攻击 SYN攻击 TCP 协议 · 笔试面试知识整理 SYN 攻击指的是，攻击客户端在短时间内伪造大量不存在的IP地址，向服务器不断地发送SYN包，服务器回复确认包，并等待客户的确认。由于源地址是不存在的，服务器需要不断的重发直至超时，这些伪造的SYN包将长时间占用未连接队列，正常的SYN请求被丢弃，导致目标系统运行缓慢，严重者会引起网络堵塞甚至系统瘫痪。 如何检测：当你在服务器上看到大量的半连接状态时，特别是源IP地址是随机的，基本上可以断定这是一次SYN攻击 如何防御：SYN攻击不能完全被阻止，除非将TCP协议重新设计。我们所做的是尽可能的减轻SYN攻击的危害，常见的防御 SYN 攻击的方法有如下几种： 缩短超时（SYN Timeout）时间 增加最大半连接数 过滤网关防护 SYN cookies技术 tcp keepalivetcp 连接建立起来之后，若通信某一方掉线，另一方则一直处于等待状态。 keepalive 的原理是每隔一段时间给对方发送一个包，等待确认，如果超时后重发，重发超过一定次数后，判定连接无效，丢弃连接 可靠传输序号、校验、确认、超时、重传 流量控制 拥塞控制流量控制：接收方在发送确认的时候在窗口字段设置发送方的滑动窗口大小 拥塞控制：主要维护一个拥塞窗口(cwnd :Congestion window)的变量，而发送方实际的发送窗口大小为 min(接收窗口，拥塞窗口) 慢开始 拥塞避免 快重传 快恢复 慢开始与拥塞避免：1 2 4 8 12 13 14 (慢开始门限 slow start threshold )ssthresh=12 用Python 写了个模拟： 123456789101112while True: if not timeout: if cwnd&lt;ssthresh: # 慢开始 ​ cwnd = min(2*cwnd, ssthresh) # 如 1 2 4 8 12 else: # 拥塞避免 cwnd = ssthresh+1 ssthresh += 1 else: cwnd = 1 ssthresh //= 2 这张图示意的很棒： 快重传与快恢复 发送方收到 3 个重复确认，可以知道下个报文丢失。立即重传下一个报文（快重传） 同时，cwnd = ssthresh = cwnd//2 (快恢复（因为只是丢失，而不是网络拥塞）)，直接进入拥塞避免状态 参考 两张动图-彻底明白TCP的三次握手与四次挥手_qzcsu的博客-CSDN博客 (9 封私信 / 46 条消息) TCP 为什么是三次握手，而不是两次或四次？ - 知乎阿里面试官： HTTP、HTTPS、TCP/IP、Socket通信、三次握手四次挥手过程？（附全网最具深度的三次握手、四次挥手讲解）-阿里云开发者社区如何回答TCP三次握手和四次挥手 含大量面试题 - osc_l8yszczz的个人空间 - OSCHINA 网络层计算机网络层相关协议（IP 协议等）…… IP 地址划分:网络号+主机号(子网号+主机号) 子网掩码 IP 子网号 子网掩码的意义就在于求子网号，告诉你子网号是 IP 号的前n位 所以子网掩码的前 n 位都是 1，后面 32-n 位是 0 a -&gt; b, 此时可以用来判断b 是否与 a 在同一个子网中 计算机网络如何计算子网掩码 - 简书 [地址解析协议 ARP](https://cyc2018.github.io/CS-Notes/#/notes/计算机网络 - 网络层?id=地址解析协议-arp)ARP 实现由 IP 地址得到 MAC 地址。 每个主机都有 ARP 高速缓存，里面有本局域网的各个主机和路由器的 ip-&gt;mac 映射表 [网络地址转换 NAT](https://cyc2018.github.io/CS-Notes/#/notes/计算机网络 - 网络层?id=网络地址转换-nat)将本地 IP 与全球 IP 一一对应（用上了端口号） 数据链路层MAC 地址是链路层地址，长度为 6 字节（48 位），用于唯一标识网络适配器（网卡）。 一台主机拥有多少个网络适配器就有多少个 MAC 地址。例如笔记本电脑普遍存在无线网络适配器和有线网络适配器，因此就有两个 MAC 地址。 交换机具有自学习能力，学习的是交换表的内容，交换表中存储着 MAC 地址到接口的映射。 [Web 页面请求过程](https://cyc2018.github.io/CS-Notes/#/notes/计算机网络 - 应用层?id=web-页面请求过程)【面试】Web 页面请求历程 - 掘金 1.DHCP 如果主机开始没有 IP 地址，那么先通过 DHCP 获取。 主机生成 DHCP 请求报文，放入 UDP 报文段中。再放入广播的 IP 数据报(0.0.0.0-&gt;255.255.255.255)，再放入以太网帧中（目的 MAC 地址 FF:FF:FF:FF:FF:FF) 连接在交换机的 DHCP 服务器收到广播帧后，向上分解得到 DHCP 请求报文，后生成 DHCP ACK 报文（包括 IP 地址、DNS 服务器的 IP 地址、路由器的 IP地址和子网掩码），放入 MAC 帧中（目的地址就是主机的 MAC 地址）（交换机由于可以自学习，就记下 该主机 MAC-&gt; 接口 的映射） 主机配置 IP地址、DNS 服务器地址、路由器 IP、子网掩码 2.ARP 解析 MAC 地址 ↑DHCP 中想要发送给网关路由器的以太网帧的目的 MAC 地址是 FF:FF:FF:FF:FF:FF , DHCP 请求结束了还不知道。所以需要ARP 获得网关路由器的 MAC 地址。 主机生成 ARP 请求报文，封装成广播目的地址(FF:FF:FF:FF:FF:FF)的以太网帧 给交换机，交换机收到后，转发给所有连接的设备，包括网关路由器。 路由器收到该帧后，发送 ARP 响应报文给主机。 主机收到后就能解析出路由器的 MAC 地址 3.DNS 解析域名 DNS 是为了将目标域名解析为 IP 地址 主机发送 DNS 查询报文给网关路由器，路由器转发给本地 DNS 服务器，递归查询目标域名的 IP 地址。（根域名.-&gt; 顶级域名 如 com-&gt; …） DNS 优化: 多级缓存，浏览器缓存、系统缓存、路由器缓存、IPS 服务器缓存、根域名缓存、顶级域名服务器缓存、主域名服务器缓存 4.TCP 三次握手 5.HTTP 请求 6.浏览器解析渲染页面 7.TCP 四次挥手 操作系统CS-Notes Python协程与Go协程的区别二 - 个人文章 - SegmentFault 思否 进程间通信方式管道：速度慢，只有父子进程能通讯 FIFO：（命名管道）任何进程间都能通讯，但是速度慢 消息队列： 信号量：一个计数器，不能传递复杂消息，只能用来同步 共享存储：通过将共同的一份文件映射到进程拥有的内存中，实现共享内存 socket 通信：可用于不同机器之间的进程通信 python 提供 2 中进程间通信的机制： Queue 和 Pipe: 如 multiprocessing.Queue() multiprocessing.Pipe() python go 协程的区别： 协程是用户管理线程运行顺序 go 中的 goroutine 是由go 控制 python 中的协程： yield 、yield from、 asyncio、 gevent redisRedis面试题（2020最新版）_ThinkWon的博客-CSDN博客 Redis zset实现原理 - 掘金 ziplist skiplist 详解布隆过滤器的原理，使用场景和注意事项 - 知乎 elasticsearch考的底层和集群经验，告辞。 2019年常见ElasticSearch 面试题解析（上） - 掘金 HTTPHTTP 汇总 描述HTTP的版本之间的区别，主要是1.0/1.1/2.0三个版本的区别 DNS缓存、http/1.0下长链接复用、静态文件缓存、携带cookie 描述HTTPS和HTTP的区别。 HTTP协议的请求报文和响应报文格式。 HTTP的状态码有哪些？ 算法题afatcoder/LeetcodeTop: 汇总各大互联网公司容易考察的高频leetcode题🔥 剑指 Offer 55 - II. 平衡二叉树 - 力扣（LeetCode） (这道题总体来说并不难,但是面试官在中间穿插了垃圾回收的知识,这就很难受了,具体的就是大家要判断一下对象在什么时候会回收,可达性分析什么时候对这个对象来说是不可达的,还有在递归函数中内存如何变化,这个是让我们来对这个函数进行执行过程的建模,只看栈帧大小变化的话,应该有是两个峰值,中间会有抖动的情况) 给定target和一个升序的数组,寻找下一个比target大的数 123456789101112131415161718#coding=utf-8import bisectdef next_bigger(nums, target): if not nums or nums[-1]&lt;=target: return -1 l, r = 0, len(nums)-1 while l&lt;=r: m = (l+r)//2 if nums[m]&lt;=target: l = m+1 elif nums[m]&gt;target: r = m if nums[l]&gt;target: return l else: l += 1 return -1print(next_bigger([1, 2, 3, 3, 4], 3))print(bisect.bisect([1, 2, 3, 3, 4], 3)) 一二道是连在一起的.给定一个规则S_0 = {1} S_1={1,2,1} S_2 = {1,2,1,3,1,2,1} S_n = {S_n-1 , n + 1, S_n-1}.第一个问题是他们的个数有什么关系(1 3 7 15… 2 的 n 次方-1,用位运算解决).第二个问题是给定数组个数下标 n 和索引 k,让我们求出 S_n(k)所指的数,假如S_2(2) = 1,我在做的时候没有什么好的思路,如果有的话大家可以分享一下 ??? 题目都没看懂 next permutationhttps://leetcode-cn.com/problems/next-permutation 2 1 3 2 1 找后缀的非递增序列，321 前面的 1 与后面最后一个比 1 大的数(2)交换，然后后面 3 位(311)排序就好 21321-&gt; 22311 -&gt; 22113 helper1 用二分快些 1234567891011121314151617181920212223242526272829class Solution: def nextPermutation(self, nums: List[int]) -&gt; None: \"\"\" Do not return anything, modify nums in-place instead. \"\"\" if len(nums)&lt;2: return nums def helper(): # return i: i ~ -1 是非递增序列 # 如 1 3 2 2 return 3的index 1 for i in reversed(range(len(nums)-1)): if nums[i]&lt;nums[i+1]: return i+1 return 0 # 2 1 3 2 1 # [2]+[2]+[1,1,3] i = helper() if i==0: nums.sort() return # 找到第一个比 1 大的数字索引 def helper1(i): for j in range(i, len(nums)): if nums[j]&lt;=nums[i-1]: return j-1 return len(nums)-1 t = helper1(i) nums[i-1], nums[t] = nums[t], nums[i-1] nums[i:] = sorted(nums[i:]) 最近公共祖先 回行矩阵遍历 非递归先序遍历、中序、后续 144. 二叉树的前序遍历 - 力扣（LeetCode） 12345678910class Solution: def preorderTraversal(self, root: TreeNode) -&gt; List[int]: res = [] stack = [root] while stack: cur = stack.pop() if cur: res.append(cur.val) stack.extend([cur.right, cur.left]) return res 94. 二叉树的中序遍历 - 力扣（LeetCode） 12345678910111213class Solution: def inorderTraversal(self, root: TreeNode) -&gt; List[int]: res = [] stack = [] cur = root while cur or stack: while cur: stack.append(cur) cur = cur.left cur = stack.pop() res.append(cur.val) cur = cur.right return res 145. 二叉树的后序遍历 - 力扣（LeetCode） 后续难一点 二叉树的后序遍历（迭代法） - 二叉树的后序遍历 - 力扣（LeetCode） 12345678910111213141516class Solution: def postorderTraversal(self, root: TreeNode) -&gt; List[int]: res = [] stack = [] cur = root while cur or stack: while cur: stack.append(cur) cur = cur.left if cur.left else cur.right cur = stack.pop() res.append(cur.val) if stack and stack[-1].left==cur: cur = stack[-1].right else: cur = None return res 自己觉得需要掌握的： 常见排序算法 其他问输入www.qq.com然后按下回车，浏览器作为客户端会发生什么？ 浏览器的DNS缓存 -&gt; 操作系统的DNS缓存 -&gt; host文件 -&gt; 本地DNS解析服务器，TCP三次握手 -&gt; http传输数据 -&gt; html文件、css文件渲染 第二次输入www.qq.com，和第一次有什么不同？ DNS缓存、http/1.0下长链接复用、静态文件缓存、携带cookie 四次挥手中TIME_WAIT状态存在的目的是什么 TCP是通过什么机制保障可靠性的？（从四个方面进行回答，ACK确认机制、超时重传、滑动窗口以及流量控制，深入的话要求详细讲出流量控制的机制。） 描述线程、进程以及协程的区别？ 5、GO语言中的协程与Python中的协程的区别？ 6、网络IO模型有哪些？（5种网络I/O模型，阻塞、非阻塞、I/O多路复用、信号驱动IO、异步I/O） 7、I/O多路复用中select/poll/epoll的区别？ 8、客户端访问url到服务器，整个过程会经历哪些？ 9、描述HTTPS和HTTP的区别。 10、HTTP协议的请求报文和响应报文格式。 11、HTTP的状态码有哪些？ 12、描述一下redis有哪些数据结构。（基础的数据结构有5种，String/List/Hash/Set/Zset；高级数据结构有：HyperLogLog/BitMap/BloomFilter/GeoHash） 13、面试官还问了BloomFilter的原理以及Zset的实现原理。 14、MySQL场景题目（面试官提供场景，要求写出查询SQL，考察联合语句，如何分页以及复杂语句的优化） 描述HTTP的版本之间的区别，主要是1.0/1.1/2.0三个版本的区别 TCP怎么做流量控制？ 脑筋急转弯：1到10层电梯，每层电梯门口有1颗钻石，从1楼坐电梯到10楼，只能拿一次，怎么拿才能拿到最大的钻石？ 1楼到n楼的每层电梯门口都放着一颗钻石，钻石大小不一。你乘坐电梯从1楼到n楼，每层楼电梯门都会打开一次，只能拿一次钻石，问怎样才能拿到「最大」的一颗？ - 知乎 10 颗钻石大小都是随机的话： 概率解决：先放弃前 37%（就是1/e）的钻石，此后选择比前 37% 都大的第一颗钻石。 以前面3个最大的那个为基准，4-10楼里面看到比这个大的就可以取了，没有取第 10 颗 可能会考的 描述Elasticsearch的一些架构原理，比如倒排索引的原理。 Redis问数据结构，延时队列如何实现，分布式锁原理。 发送窗口、接收窗口、拥塞窗口三者的关系 拥塞窗口的变化规律","link":"/other/%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87.html"},{"title":"POETRY 学习和使用","text":"[TOC] 原文地址 [testerhome.com](https://testerhome.com/topics/20929) Poetry 是啥？是一个 Python 虚拟环境和依赖管理工具，另外它还提供了包管理功能，比如打包和发布。可以用来管理 python 库和 python 程序。 安装 Poetry1curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python3 使用 pip 安装1pip3 install --user poetry 确认是否安装成功以及查看版本号1poetry --version 在 python 项目中使用 Poetry在现有项目中使用：如果是在已有项目中使用 poetry，你只需要执行一下命令来创建一个 pyproject.toml 文件即可： 1poetry init 使用 poetry 创建一个新项目：1poetry new project\\_name (项目名字） 项目结构如下图： 结构介绍 *pyproject.toml *: 使用此文件管理依赖列表和项目的各种 meta 信息，用来替代 Pipfile、requirements.txt、setup.py、setup.cfg、MANIFEST.in 等等各种配置文件。 创建虚拟环境Tips: 确保当前目录存在 pyproject.toml 文件 1poetry install 这个命令会读取 pyproject.toml 中的所有依赖并安装（包括开发依赖），如果不想安装开发依赖可以附加：–no-dev 选项。如果项目根目录有 poetry.lock 文件，会安装这个文件中列出的锁定版本的依赖。如果执行 add/remove 命令的时候没有检测到虚拟环境，也会为当前目录自动创建虚拟 激活虚拟环境1poetry shell 查看 python 版本1poetry run python -V 执行脚本1poetry run python app.py 安装包1poetry add flask _添加 –dev 参数为开发依赖_： 1poetry add pytest --dev 追踪 &amp; 更新包1poetry show _添加 –tree 参数选项可以查看依赖关系_： 1poetry show --tree _查看可以更新的依赖_： 1poetry show --outdated 更新所有锁定版本的依赖：1poetry update 更新某个指定的依赖：1poetry update dep\\_name (依赖名字） 卸载包1poetry remove dep\\_name 让 poetry 使用 python31poetry env use python3.7 Poetry using the wrong Python version (not related to pyenv) #655 常用配置Q&amp;A1, 推荐使用 python3 2, poetry 版本很重要，最好使用最新版本","link":"/python/POETRY-%E5%AD%A6%E4%B9%A0%E5%92%8C%E4%BD%BF%E7%94%A8.html"},{"title":"tricks-2020-08","text":"嗨，请准确无误地输入密码查看哟 ","link":"/tricks/tricks-2020-08.html"},{"title":"阿里云","text":"嗨，请准确无误地输入密码查看哟 ","link":"/%E9%98%BF%E9%87%8C%E4%BA%91/centos%20Ubuntu.html"},{"title":"leetcode 332. Reconstruct Itinerary","text":"leetcode九章 题目描述Given a list of airline tickets represented by pairs of departure and arrivalairports [from, to], reconstruct the itinerary in order. All of the ticketsbelong to a man who departs from JFK. Thus, the itinerary must begin withJFK. Note: If there are multiple valid itineraries, you should return the itinerary that has the smallest lexical order when read as a single string. For example, the itinerary [&quot;JFK&quot;, &quot;LGA&quot;] has a smaller lexical order than [&quot;JFK&quot;, &quot;LGB&quot;]. All airports are represented by three capital letters (IATA code). You may assume all tickets form at least one valid itinerary. Example 1: Input:[[&quot;MUC&quot;, &quot;LHR&quot;], [&quot;JFK&quot;, &quot;MUC&quot;], [&quot;SFO&quot;, &quot;SJC&quot;], [&quot;LHR&quot;, &quot;SFO&quot;]] Output:[&quot;JFK&quot;, &quot;MUC&quot;, &quot;LHR&quot;, &quot;SFO&quot;, &quot;SJC&quot;]Example 2: Input:[[&quot;JFK&quot;,&quot;SFO&quot;],[&quot;JFK&quot;,&quot;ATL&quot;],[&quot;SFO&quot;,&quot;ATL&quot;],[&quot;ATL&quot;,&quot;JFK&quot;],[&quot;ATL&quot;,&quot;SFO&quot;]] Output:[&quot;JFK&quot;,&quot;ATL&quot;,&quot;JFK&quot;,&quot;SFO&quot;,&quot;ATL&quot;,&quot;SFO&quot;] Explanation: Another possible reconstruction is [&quot;JFK&quot;,&quot;SFO&quot;,&quot;ATL&quot;,&quot;JFK&quot;,&quot;ATL&quot;,&quot;SFO&quot;]. But it is larger in lexical order.Tags: Depth-first Search, Graph Difficulty: Medium 答案\u0004 1234567891011121314151617# 从起点出发，进行深度优先搜索。# 每次沿着某条边从某个顶点移动到另外一个顶点的时候，都需要删除这条边。# 如果没有可移动的路径，则将所在节点加入到栈中，并返回。class Solution: def findItinerary(self, tickets: List[List[str]]) -&gt; List[str]: graph = collections.defaultdict(list) for a, b in tickets: graph[a].append(b) for i in graph: graph[i].sort(reverse=True) res = [] def search(i): while graph[i]: search(graph[i].pop()) res.append(i) search('JFK') return res[::-1]","link":"/leetcode/leetcode-3**/leetcode-332-Reconstruct-Itinerary.html"},{"title":"leetcode 679. 24 Game","text":"leetcode九章 题目描述You have 4 cards each containing a number from 1 to 9. You need to judgewhether they could operated through *, /, +, -, (, ) to get thevalue of 24. Example 1: Input: [4, 1, 8, 7] Output: True Explanation: (8-4) * (7-1) = 24Example 2: Input: [1, 2, 1, 2] Output: FalseNote: The division operator / represents real division, not integer division. For example, 4 / (1 - 2/3) = 12. Every operation done is between two numbers. In particular, we cannot use - as a unary operator. For example, with [1, 1, 1, 1] as input, the expression -1 - 1 - 1 - 1 is not allowed. You cannot concatenate numbers together. For example, if the input is [1, 2, 1, 2], we cannot write this as 12 + 12. Tags: Depth-first Search Difficulty: Hard 答案\u0004 123456789101112131415161718192021from operator import add, sub, mul, truedivclass Solution: def judgePoint24(self, nums: List[int]) -&gt; bool: @functools.lru_cache(None) def dfs(nums): if len(nums)==1: print(nums) return math.isclose(nums[0], 24) # 选定前 2 个进行运算 (a, b), nums = nums[:2], nums[2:] ops = [add, sub, mul, truediv] if not b: ops.pop() _abs = [op(a, b) for op in ops] # 把 ab 运算的结果插进 剩余数的可能位置 return any( dfs(nums[:i]+(ab,)+nums[i:]) for ab in _abs for i in range(len(nums)+1) ) return any(dfs(permu) for permu in itertools.permutations(nums, 4))","link":"/leetcode/leetcode-6**/leetcode-679-24-Game.html"},{"title":"链表","text":"[TOC] 430. 扁平化多级双向链表 - 力扣（LeetCode）430. 扁平化多级双向链表 - 力扣（LeetCode） 就是递归 如果有child, 把 child flatten , 放到 head 后面, 把 next flatten，还要把 child 置为 0 12345678910111213141516171819202122232425262728\"\"\"# Definition for a Node.class Node: def __init__(self, val, prev, next, child): self.val = val self.prev = prev self.next = next self.child = child\"\"\"class Solution: def flatten(self, head: 'Node') -&gt; 'Node': if not head: return head if not head.child: self.flatten(head.next) return head nxt = self.flatten(head.next) self.flatten(head.child) tail = head.child while tail.next: tail = tail.next head.next = head.child head.child.prev = head head.child = None if nxt: tail.next = nxt nxt.prev = tail return head 445. 两数相加 II - 力扣（LeetCode）445. 两数相加 II - 力扣（LeetCode） 1234567891011121314151617181920212223242526# Definition for singly-linked list.# class ListNode:# def __init__(self, x):# self.val = x# self.next = Noneclass Solution: def addTwoNumbers(self, l1: ListNode, l2: ListNode) -&gt; ListNode: def getNum(head): s = '' while head: s += str(head.val) head = head.next return int(s) def buildListNode(n): s = str(n) cur = dummy = ListNode(0) for c in s: cur.next = ListNode(c) cur = cur.next return dummy.next a, b = map(getNum, [l1, l2]) return buildListNode(a+b) 707. 设计链表 - 力扣（LeetCode）707. 设计链表 - 力扣（LeetCode） 尾指针+单链表 拼的是细节。需要另写一个 LinkList 类， 需要 dummyNode，函数复用 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108class LinkList: def __init__(self, val): self.val = val self.next = Noneclass MyLinkedList: def __init__(self): \"\"\" Initialize your data structure here. \"\"\" self.size = 0 self.dummy = LinkList(0) self.tail = None def print(self): cur = self.dummy.next l = [] while cur: l.append(str(cur.val)) cur = cur.next l.append('None') print('-&gt;'.join(l)) def getNode(self, index): cur = self.dummy for _ in range(index+1): cur = cur.next # print('getNode', cur.val) return cur def get(self, index: int) -&gt; int: \"\"\" Get the value of the index-th node in the linked list. If the index is invalid, return -1. \"\"\" if not 0&lt;=index&lt;self.size: return -1 return self.getNode(index).val def addAtHead(self, val: int) -&gt; None: \"\"\" Add a node of value val before the first element of the linked list. After the insertion, the new node will be the first node of the linked list. \"\"\" head = self.dummy.next newHead = LinkList(val) self.dummy.next = newHead newHead.next = head if not head: self.tail = newHead self.size += 1 # self.print() def addAtTail(self, val: int) -&gt; None: \"\"\" Append a node of value val to the last element of the linked list. \"\"\" if not self.tail: self.addAtHead(val) else: newTail = LinkList(val) self.tail.next = newTail self.tail = newTail self.size += 1 # self.print() def addAtIndex(self, index: int, val: int) -&gt; None: \"\"\" Add a node of value val before the index-th node in the linked list. If index equals to the length of linked list, the node will be appended to the end of linked list. If index is greater than the length, the node will not be inserted. \"\"\" if index&lt;0: self.addAtHead(val) elif index&lt;self.size: node = self.getNode(index-1) newNext = LinkList(val) nxt = node.next node.next = newNext newNext.next = nxt self.size += 1 elif index==self.size: self.addAtTail(val) # self.print() def deleteAtIndex(self, index: int) -&gt; None: \"\"\" Delete the index-th node in the linked list, if the index is valid. \"\"\" if 0&lt;=index&lt;self.size: node = self.getNode(index-1) nxt = node.next node.next = nxt.next if not node.next: self.tail = node self.size -= 1 # self.print() # Your MyLinkedList object will be instantiated and called as such:# obj = MyLinkedList()# param_1 = obj.get(index)# obj.addAtHead(val)# obj.addAtTail(val)# obj.addAtIndex(index,val)# obj.deleteAtIndex(index) 725. 分隔链表 - 力扣（LeetCode） 思路： 123a, b = divmod(length, k)# 前 b 个数 a+1 个 node# 后面的数字， a 个 node 123456789101112131415161718192021222324252627282930313233343536373839# Definition for singly-linked list.# class ListNode:# def __init__(self, x):# self.val = x# self.next = Noneclass Solution: def splitListToParts(self, root: ListNode, k: int) -&gt; List[ListNode]: def getLen(root): res = 0 while root: root = root.next res += 1 return res length = getLen(root) a, b = divmod(length, k) # 前 b 个数 a+1 个 node # 后面的数字， a 个 node def splitList(root, k): # 分离前 k 个 nodes if not root or not k: return None, root t = root for i in range(k-1): t = t.next newRoot = t.next t.next = None return newRoot, root res = [] for i in range(1, k+1): if i&lt;=b: root, head = splitList(root, a+1) else: root, head = splitList(root, a) res.append(head) return res 1171. 从链表中删去总和值为零的连续节点 - 力扣（LeetCode）1171. 从链表中删去总和值为零的连续节点 - 力扣（LeetCode） 记录前缀和 presum ，若 _sum 已经在 presum 中，移除中间这部分节点（改变指针），更新 presum 注意 _sum 为0 的情况，从头到 i 和为 0, 但是 0 不在 presum 中，所以再 index 中做了额外的判断，也可以一开始就在 presum 中放个 0，index return 的时候-1 123456789101112131415161718192021222324252627282930313233343536373839404142434445# Definition for singly-linked list.# class ListNode:# def __init__(self, x):# self.val = x# self.next = Noneclass Solution: def removeZeroSumSublists(self, head: ListNode) -&gt; ListNode: # 1 2 3 -3 -2 # 1 3 6 3 1 dummy = ListNode(0) dummy.next = head def getNode(k): # -1 -&gt; dummy 0 -&gt; head cur = dummy for i in range(k+1): cur = cur.next return cur def index(l, n): # _sum==0 说明 0~i 和为 0 if n==0: return -1 for i, v in enumerate(l): if v==n: return i return -2 if not head: return head presum =[] _sum = 0 cur = head while cur: _sum += cur.val idx = index(presum, _sum) cur = cur.next # 存在相同的前缀和，说明 idx+1~len(presum)+1 和为 0 if idx!=-2: presum = presum[:idx+1] preNode = getNode(idx) preNode.next = cur else: presum.append(_sum) return dummy.next 1367. 二叉树中的列表 - 力扣（LeetCode）1367. 二叉树中的列表 - 力扣（LeetCode） 123456789101112131415161718192021222324252627# Definition for singly-linked list.# class ListNode:# def __init__(self, x):# self.val = x# self.next = None# Definition for a binary tree node.# class TreeNode:# def __init__(self, x):# self.val = x# self.left = None# self.right = Noneclass Solution: def isSubPath(self, head: ListNode, root: TreeNode) -&gt; bool: def isSame(head, root): # head 与 从 root 开始的一条路径 值相同 # head 为 None 为终止递归条件，就是说链表遍历完了都依序存在于root中 if not head: return True if not root or head.val!=root.val: return False return isSame(head.next, root.left) or isSame(head.next, root.right) if not root: return False if isSame(head, root): return True return self.isSubPath(head, root.left) or self.isSubPath(head, root.right) 1019. 链表中的下一个更大节点 - 力扣（LeetCode） 1234567891011121314151617181920212223242526# Definition for singly-linked list.# class ListNode:# def __init__(self, x):# self.val = x# self.next = Noneclass Solution: def nextLargerNodes(self, head: ListNode) -&gt; List[int]: nums = [] while head: nums.append(head.val) head = head.next n = len(nums) res = [0 for i in range(n)] stack = [] for i in reversed(range(n)): while True: if not stack: break if stack[-1]&gt;nums[i]: res[i] = stack[-1] break else: stack.pop() stack.append(nums[i]) return res 817. 链表组件 - 力扣（LeetCode）817. 链表组件 - 力扣（LeetCode） 题意：链表元素都 unique，G 里的元素都在链表中，求 G 的元素在链表中组成的子序列 个数 123456789101112131415161718192021222324252627# Definition for singly-linked list.# class ListNode:# def __init__(self, x):# self.val = x# self.next = Noneclass Solution: def numComponents(self, head: ListNode, G: List[int]) -&gt; int: # 链表上的值有序 d = {} # 链表上节点的值 -&gt; i i = 0 while head: d[head.val] = i i += 1 head = head.next # 然后把 G 按照 d 排序，排成 head 的子序列的样子 G.sort(key=lambda i: d[i]) # print(G) # 再遍历一遍 G，寻找连续序列的个数 res = 0 i = 0 while i&lt;len(G): res += 1 while i+1&lt;len(G) and d[G[i+1]]==d[G[i]]+1: i += 1 i += 1 return res","link":"/leetcode/%E5%88%86%E7%B1%BB/%E9%93%BE%E8%A1%A8.html"},{"title":"JVM-CSNotes","text":"[TOC] PC registerCS-NotesProgram counter - WikipediaWhat is program counter? - Definition from WhatIs.com PC (program counter) 程序计数器（PC）通常称为指令指针（IP），有时也称为指令地址寄存器（IAR） 通常，PC 在获取一条指令后递增，并保存下一条将要执行的指令的内存地址（“指向”） A program counter is a register in a computer processor that contains the address (location) of the instruction being executed at the current time. As each instruction gets fetched, the program counter increases its stored value by 1. After each instruction is fetched, the program counter points to the next instruction in the sequence. When the computer restarts or is reset, the program counter normally reverts to 0. 所以说 PC register 是正在执行的计算机指令的地址 JVM stack一个方法对应一个栈帧，方法的调用和结束对应着栈帧的入栈和出栈 栈帧存储 常量池引用、操作数栈、局部变量表 等信息 reference to constant pool 常量池引用对应 runtime constant pool operand stack 、local variable array 操作数栈 局部变量表 java - What is an operand stack? - Stack Overflow 【JVM】1.1、局部变量表与操作数栈 - 简书 局部变量表是一组变量值存储空间，用于存放方法参数和方法内部定义的局部变量 虚拟机把操作数栈作为它的工作区——大多数指令都要从这里弹出数据，执行运算，然后把结果压回操作数栈 局部变量表与操作数栈加法案例 before starting // 加载100和98到局部变量表中after iload_0 // 加载100到操作数栈中after iload_1 // 加载98到操作数栈中after iadd // 操作100+98命令after istore_2 // 弹出结果到局部变量表中 本地方法栈与 jvm stack 类似，不过是为本地方法服务 本地方法一般是用其他语言编写的，是 操作系统和硬件 相关的程序 垃圾收集器【JVM】3.2、垃圾收集器（二） - 简书 写的特别 NB 至少本菜鸟看懂了 再加上我做的这张图，基本可以了解 7 种垃圾收集器了","link":"/JVM-CSNotes.html"},{"title":"Java并发-CSNotes","text":"[TOC] &gt; 本文由 [简悦 SimpRead](http://ksria.com/simpread/) 转码， 原文地址 [cyc2018.github.io](https://cyc2018.github.io/CS-Notes/#/notes/Java%20%E5%B9%B6%E5%8F%91?id=executor) 当所有非守护线程结束时，程序也就终止，同时会杀死所有守护线程。 main() 属于非守护线程。 在线程启动之前使用 setDaemon() 方法可以将一个线程设置为守护线程。 Thread.sleep(millisec) sleep() 可能会抛出 InterruptedException，因为异常不能跨线程传播回 main() 中，因此必须在本地进行处理。线程中抛出的其它异常也同样需要在本地进行处理。 对静态方法 Thread.yield() 的调用声明了当前线程已经完成了生命周期中最重要的部分，可以切换给其它线程来执行。该方法只是对线程调度器的一个建议，而且也只是建议具有相同优先级的其它线程可以运行。 主要有三种 Executor： CachedThreadPool：一个任务创建一个线程； FixedThreadPool：所有任务只能使用固定大小的线程； SingleThreadExecutor：相当于大小为 1 的 FixedThreadPool。 这里写的应该有错误，CachedThreadPool 没有线程数量限制，FIxedThreadPool 有线程数量限制，SingleThreadExecutor 只能有 1 个线程。 最常用的是 CachedThreadPool 通过调用一个线程的 interrupt() 来中断该线程，如果该线程处于阻塞、限期等待或者无限期等待状态，那么就会抛出 InterruptedException，从而提前结束该线程。但是不能中断 I/O 阻塞和 synchronized 锁阻塞。 为什么不能中断 io 阻塞和 synchronized 锁阻塞 如果一个线程的 run() 方法执行一个无限循环，并且没有执行 sleep() 等会抛出 InterruptedException 的操作，那么调用线程的 interrupt() 方法就无法使线程提前结束。 除了非 io 阻塞和 synchronized 锁阻塞的线程，interrupt 还可能中断不了一般的线程？ 但是调用 interrupt() 方法会设置线程的中断标记，此时调用 interrupted() 方法会返回 true。因此可以在循环体中使用 interrupted() 方法来判断线程是否处于中断状态，从而提前结束线程。 调用 Executor 的 shutdown() 方法会等待线程都执行完毕之后再关闭，但是如果调用的是 shutdownNow() 方法，则相当于调用每个线程的 interrupt() 方法。 如果只想中断 Executor 中的一个线程，可以通过使用 submit() 方法来提交一个线程，它会返回一个 Future&lt;?&gt; 对象，通过调用该对象的 cancel(true) 方法就可以中断线程。 1234Future&lt;?&gt; future = executorService.submit(() -&gt; { });future.cancel(true); 1. 同步一个代码块 它只作用于同一个对象，如果调用两个对象上的同步代码块，就不会进行同步。 对于以下代码，两个线程调用了不同对象的同步代码块，因此这两个线程就不需要同步。从输出结果可以看出，两个线程交叉执行。 1234567public static void main(String[] args) { SynchronizedExample e1 = new SynchronizedExample(); SynchronizedExample e2 = new SynchronizedExample(); ExecutorService executorService = Executors.newCachedThreadPool(); executorService.execute(() -&gt; e1.func1()); executorService.execute(() -&gt; e2.func1());} 2. 同步一个方法 它和同步代码块一样，作用于同一个对象。 3. 同步一个类 作用于整个类，也就是说两个线程调用同一个类的不同对象上的这种同步语句，也会进行同步。 12345678910public class SynchronizedExample { public void func2() { synchronized (SynchronizedExample.class) { for (int i = 0; i &lt; 10; i++) { System.out.print(i + &quot; &quot;); } } }} 4. 同步一个静态方法 作用于整个类。 使用选择除非需要使用 ReentrantLock 的高级功能，否则优先使用 synchronized。这是因为 synchronized 是 JVM 实现的一种锁机制，JVM 原生地支持它，而 ReentrantLock 不是所有的 JDK 版本都支持。并且使用 synchronized 不用担心没有释放锁而导致死锁问题，因为 JVM 会确保锁的释放。 调用 wait() 使得线程等待某个条件满足，线程在等待时会被挂起，当其他线程的运行使得这个条件满足时，其它线程会调用 notify() 或者 notifyAll() 来唤醒挂起的线程。 它们都属于 Object 的一部分，而不属于 Thread。 只能用在同步方法或者同步控制块中使用 使用 wait() 挂起期间，线程会释放锁。这是因为，如果没有释放锁，那么其它线程就无法进入对象的同步方法或者同步控制块中，那么就无法执行 notify() 或者 notifyAll() 来唤醒挂起的线程，造成死锁。 12345678910111213141516public class WaitNotifyExample { public synchronized void before() { System.out.println(&quot;before&quot;); notifyAll(); } public synchronized void after() { try { wait(); } catch (InterruptedException e) { e.printStackTrace(); } System.out.println(&quot;after&quot;); }} 123456public static void main(String[] args) { ExecutorService executorService = Executors.newCachedThreadPool(); WaitNotifyExample example = new WaitNotifyExample(); executorService.execute(() -&gt; example.after()); executorService.execute(() -&gt; example.before());} wait() 和 sleep() 的区别 wait() 是 Object 的方法，而 sleep() 是 Thread 的静态方法； wait() 会释放锁，sleep() 不会。 java.util.concurrent 类库中提供了 Condition 类来实现线程之间的协调，可以在 Condition 上调用 await() 方法使线程等待，其它线程调用 signal() 或 signalAll() 方法唤醒等待的线程。 相比于 wait() 这种等待方式，await() 可以指定等待的条件，因此更加灵活。 使用 Lock 来获取一个 Condition 对象。 123456789101112131415161718192021222324252627public class AwaitSignalExample { private Lock lock = new ReentrantLock(); private Condition condition = lock.newCondition(); public void before() { lock.lock(); try { System.out.println(&quot;before&quot;); condition.signalAll(); } finally { lock.unlock(); } } public void after() { lock.lock(); try { condition.await(); System.out.println(&quot;after&quot;); } catch (InterruptedException e) { e.printStackTrace(); } finally { lock.unlock(); } }} CountDownLatch 这里说的不清楚，建议看官方文档，说的很好很清楚。 这里的图片和代码都不清楚 CyclicBarrier 和 CountdownLatch 相似，都是通过维护计数器来实现的。线程执行 await() 方法之后计数器会减 1，并进行等待，直到计数器为 0，所有调用 await() 方法而在等待的线程才能继续执行。 CyclicBarrier 的计数器通过调用 reset() 方法可以循环使用 Semaphore 类似于操作系统中的信号量，可以控制对互斥资源的访问线程数。 模拟了对某个服务的并发请求，每次只能有 3 个客户端同时访问，请求总数为 10。 ForkJoin主要用于并行计算中，和 MapReduce 原理类似，都是把大的计算任务拆分成多个小任务并行计算。 ForkJoin 使用 ForkJoinPool 来启动，它是一个特殊的线程池，线程数量取决于 CPU 核数。 ForkJoinPool 实现了工作窃取算法来提高 CPU 的利用率。每个线程都维护了一个双端队列，用来存储需要执行的任务。工作窃取算法允许空闲的线程从其它线程的双端队列中窃取一个任务来执行。窃取的任务必须是最晚的任务，避免和队列所属线程发生竞争。 所有的变量都存储在主内存中，每个线程还有自己的工作内存，工作内存存储在高速缓存或者寄存器中，保存了该线程使用的变量的主内存副本拷贝。 线程只能直接操作工作内存中的变量，不同线程之间的变量值传递需要通过主内存来完成。 int 类型读写操作满足原子性只是说明 load、assign、store 这些单个操作具备原子性 AtomicInteger 能保证多个线程修改的原子性。 可见性指当一个线程修改了共享变量的值，其它线程能够立即得知这个修改。Java 内存模型是通过在变量修改后将新值同步回主内存，在变量读取前从主内存刷新变量值来实现可见性的。 有序性是指：在本线程内观察，所有操作都是有序的 在一个线程观察另一个线程，所有操作都是无序的，无序是因为发生了指令重排序。在 Java 内存模型中，允许编译器和处理器对指令进行重排序，重排序过程不会影响到单线程程序的执行，却会影响到多线程并发执行的正确性。 volatile 关键字通过添加内存屏障的方式来禁止指令重排，即重排序时不能把后面的指令放到内存屏障之前 也可以通过 synchronized 来保证有序性，它保证每个时刻只有一个线程执行同步代码，相当于是让线程顺序执行同步代码 不可变（Immutable）的对象一定是线程安全的 多线程环境下，应当尽量使对象成为不可变，来满足线程安全 对于集合类型，可以使用 Collections.unmodifiableXXX() 方法来获取一个不可变的集合。 互斥同步属于一种悲观的并发策略，总是认为只要不去做正确的同步措施，那就肯定会出现问题。无论共享数据是否真的会出现竞争，它都要进行加锁 基于冲突检测的乐观并发策略：先进行操作，如果没有其它线程争用共享数据，那操作就成功了，否则采取补偿措施（不断地重试，直到成功为止） 这种同步操作称为非阻塞同步 比较并交换（Compare-and-Swap，CAS） 3. ABA如果一个变量初次读取的时候是 A 值，它的值被改成了 B，后来又被改回为 A，那 CAS 操作就会误认为它从来没有被改变过。 可以使用 java.lang.ThreadLocal 类来实现线程本地存储功能。 每个 Thread 都有一个 ThreadLocal.ThreadLocalMap 对象。 应该尽可能在每次使用 ThreadLocal 后手动调用 remove()，以避免出现 ThreadLocal 经典的内存泄漏甚至是造成自身业务混乱的风险。 自旋锁的思想是让一个线程在请求一个共享数据的锁时执行忙循环（自旋）一段时间，如果在这段时间内能获得锁，就可以避免进入阻塞状态。 自旋锁虽然能避免进入阻塞状态从而减少开销，但是它需要进行忙循环操作占用 CPU 时间，它只适用于共享数据的锁定状态很短的场景。 在 JDK 1.6 中引入了自适应的自旋锁。自适应意味着自旋的次数不再固定了，而是由前一次在同一个锁上的自旋次数及锁的拥有者的状态来决定。 锁粗化如果一系列的连续操作都对同一个对象反复加锁和解锁，频繁的加锁操作就会导致性能损耗。","link":"/Java%E5%B9%B6%E5%8F%91-CSNotes.html"},{"title":"projects","text":"book management demo前端1/Users/zhangronghui/01Code/private/test/amis-admin-jssdk 后端1/Volumes/Data/01 Code/java/private/ddxp/bookManagement","link":"/projects.html"},{"title":"地勘项目前期开发信息","text":"平台地址总部管理平台：10.103.240.153:9547 Admin: BUPT（大小写都可以） Pwd: 123456 机构管理平台：10.103.240.153:9548 Admin: buptdeva Pwd: 15300000001 Eureka:10.103.240.153:8000 修改settings.xml（后端项目）实验室项目会用到实验室仓库，需要修改maven配置文件，把下方代码 1234567891011&lt;server&gt; &lt;id&gt;pcs-maven&lt;/id&gt; &lt;username&gt;admin123&lt;/username&gt; &lt;password&gt;yang1290&lt;/password&gt;&lt;/server&gt;&lt;server&gt; &lt;id&gt;pcs-maven-snapshot&lt;/id&gt; &lt;username&gt;admin123&lt;/username&gt; &lt;password&gt;yang1290&lt;/password&gt;&lt;/server&gt; 填入setting.xml中，大约在130行的位置，视不同情况而定。 可以使用自己下载的maven（建议使用，方便和其他仓库环境替换），也可以使用idea自带的maven，文件路径可以通过如下查看： 用例图需求分析1.业务分析信息化管理平台主要的任务是负责管理一个项目从立项到执行最后到验收过程中所有的流程操作以及存储相应的文档资料，而且不同的角色在同一阶段也会执行不同的操作。因此开发设计应该按照项目的实际操作流程划分业务模块，并根据每个角色每个流程需要的完成功能模块设计。 2.功能需求根据项目需求信息化管理平台将分为项目立项、项目执行、项目验收、项目台账四个主要模块，根据分工不同将设计四种不同的用户类型，分别为基金管理部门、勘察单位、监理单位和验收单位。不同用户在不同模块中执行不同的功能操作。一个完整的地质勘测项目的项目流程为项目立项阶段、项目预算阶段、项目执行阶段、项目验收阶段与项目收尾阶段，以项目流程阶段为基础介绍每个用户角色在各阶段可以执行的操作。 1) 项目立项 图1-1 项目立项用例图 项目立项阶段，基金管理部门在项目立项期新建项目，填写项目立项初始信息，提交初审，审批通过的项目就可以下达项目任务书。然后由勘察单位补充初审信息，提交项目立项资料，对基金管理部门下达的项目任务书进行确认，并提交项目设计报告供其审核。 基金管理部门审核项目设计报告通过后就可以委派监理单位。监理单位受到委派后制定监理计划，并提交供基金管理部门审核，同时可以查看项目设计资料，包括各项资料附件、任务书、合同等附件。基金管理部门审核监理计划，所有审核通过后基金管理部门将勘察合同和监理合同上传到系统中，一个基金项目就可以正式执行了。 2) 项目预算 图1-2 项目预算用例图 项目预算阶段，由勘察单位制定项目预算，基金管理部门审核预算，并下达预算批复，再由勘察单位确认批复预算。 勘察单位在项目开展过程中可以根据预算和和工作开展情况提出预算拨付申请，并将拨付清单记录保存。基金管理部门按照预算和工作开展情况对勘查单位提出的预算拨付进行审核。同时对拨付清单与预算资料进行存储记录，以供查看。同时监理单位也可以在项目预算阶段中检查预算执行情况并汇报。 3) 项目执行 图1-3 项目执行用例图 项目执行阶段，由监理单位提供监理指标，并随时查看项目执行过程中的各种信息，并按照监管指标给出监理意见。 勘察单位对物探、化探、山地工程和钻探根据监管指标按照实施要求采集各项数据，每一段时间都采集一批数据，包括图片、影像和各种测量数据，将结果上传。 4) 项目验收 图1-4 项目验收用例图 项目验收阶段，先由基金管理单位委托验收单位。勘察单位提交项目验收申请。然后由监理单位审核验收申请，审批通过后交由验收单位验收。 验收单位下发验收意见。由勘察单位确认验收评审意见以及提交修改报告，最终将成果资料汇交。然后基金管理单位对验收成果资料汇交结果进行备案确认，至此，一个基金项目已经完成了。 5) 项目收尾 图1-5 项目收尾用例图 在项目收尾阶段，基金管理部门将项目成果提交到上级图书馆汇交，将汇交凭证提交到系统中，最终还会根据成果执行储量评审、成果处置等功能。同时可以查看项目台账，项目台账中包含了一个项目在整个阶段的所有有关的文档、合同、勘察数据以及项目成果等资料信息。","link":"/%E5%9C%B0%E5%8B%98%E9%A1%B9%E7%9B%AE%E5%89%8D%E6%9C%9F%E5%BC%80%E5%8F%91%E4%BF%A1%E6%81%AF.html"},{"title":"面试复习","text":"[TOC] Java基础java/基础/Java-面试宝典笔记.md (包含单例模式) /Users/zhangronghui/01Code/hexo/hexo-theme-icarus-removeif/source/_posts/Java基础-CSNotes.md /Users/zhangronghui/01Code/hexo/hexo-theme-icarus-removeif/source/_posts/Java容器.md HashMap Java基础知识面试题（2020最新版）_ThinkWon的博客-CSDN博客Java集合容器面试题（2020最新版）_ThinkWon的博客-CSDN博客Java异常面试题（2020最新版）_ThinkWon的博客-CSDN博客 mysql 计算机网络 操作系统 redis http如何理解数据库事务中的一致性的概念？ - 知乎 《我想进大厂》之mysql夺命连环13问 - 知乎 other/字节跳动面试准备.md Skill-Tree/计算机网络.md at master · linw7/Skill-Tree Skill-Tree/操作系统.md at master · linw7/Skill-Tree MySQL 数据库面试题（2020 最新版）_ThinkWon 的博客 - CSDN 博客 面试问题详解——网址访问过程详解 - 力扣（LeetCode）面试问题整理——操作系统 - 力扣（LeetCode） 《我想进大厂》之 Redis 夺命连环 11 问 - 知乎 《我想进大厂》之MQ夺命连环11问 - 知乎 Redis高频面试题 无答案 【大厂面试系列】吊打面试官之Redis高频面试题（最新版） - 力扣（LeetCode） jvmJVM-CSNotes.md 《我想进大厂》之JVM夺命连环10问 - 知乎 Java 虚拟机 (JVM) 面试题（2020 最新版）_ThinkWon 的博客 - CSDN 博客 cap 易错点记录 并发Java并发-CSNotes.md java/基础/Java-并发.md 并发编程面试题（2020 最新版）_ThinkWon 的博客 - CSDN 博客 面试官：说说CountDownLatch，CyclicBarrier，Semaphore的原理？ - 知乎 框架java/spring.md 《我想进大厂》之Dubbo普普通通9问 - 知乎 LeetCode、牛客sb 牛客输入输出模板 12345#coding=utf-8import sys #str = input()#print(str)print('Hello,World!') 123456789import java.util.Scanner;public class Main { public static void main(String[] args) { //Scanner in = new Scanner(System.in); //int a = in.nextInt(); //System.out.println(a); System.out.println(\"Hello World!\"); }} 其他面试题Skill-Tree/海量数据处理.md at master · linw7/Skill-Tree Skill-Tree/真题摘录.md at master · linw7/Skill-Tree Skill-Tree/Linux工具.md at master · linw7/Skill-Tree 想问的问题11 月 TODOMySQL/Volumes/My Passport/data/ut下载/05 书籍/MYSQL45讲（全） 一天 5 节 当前看到 30 节 , 预计 13 号看完 有一节 间隙锁 没看懂， 还有 30 节 40节 也没看懂 预计 13 号 看完 MySQL 8 小时问题 索引 count(1) count(*) 锁 常用的配置项及其含义 MySQL 数据库面试题（2020 最新版）_ThinkWon 的博客 - CSDN 博客 Redis 实现 锁等细节《Redis 实战》 1 天 1 章 今天看到第 4 章 预计到 16 号看完 《Redis 设计与实现》共 24 章 1 天 2 章 预计 22 号看完 《我想进大厂》之 Redis 夺命连环 11 问 - 知乎 《我想进大厂》之MQ夺命连环11问 - 知乎 socket 编程搭建最简单的服务器 多线程之前做的笔记 并发编程面试题（2020 最新版）_ThinkWon 的博客 - CSDN 博客 面试官：说说CountDownLatch，CyclicBarrier，Semaphore的原理？ - 知乎 看书？ JVM《我想进大厂》之JVM夺命连环10问 - 知乎 Java 虚拟机 (JVM) 面试题（2020 最新版）_ThinkWon 的博客 - CSDN 博客 RPC/Volumes/My Passport/data/ut下载/02 后端/极客时间/jvm_action-master/115-RPC实战与核心原理（完结） /Volumes/My Passport/data/ut下载/02 后端/极客时间/14 深入浅出 gRPC - 李林峰 简历改进，丰满投实习，继续面试开题IO NIO计算机网络 操作系统/Volumes/My Passport/data/ut下载/05 书籍/网络是怎样连接的_户根勤.pdf Skill-Tree/计算机网络.md at master · linw7/Skill-Tree Skill-Tree/操作系统.md at master · linw7/Skill-Tree 面试问题详解——网址访问过程详解 - 力扣（LeetCode）面试问题整理——操作系统 - 力扣（LeetCode） 算法/Volumes/My Passport/data/ut下载/05 书籍/挑战程序设计竞赛(第2版) 高清完整版.pdf 项目快速切换主题搜索引擎改进 Quick &amp; Dirty Theme Switcher | Ugly Duck 使用 Chii 调试移动端页面 - 知乎 设计模式fuzhengwei/itstack-demo-design《重学 Java 设计模式「22 个互联网真实案例实战」》 类的加载","link":"/%E9%9D%A2%E8%AF%95%E5%A4%8D%E4%B9%A0.html"},{"title":"文件上传解决方案","text":"文件上传解决方案文件上传下载的问题总览创建项目时，项目基本信息 夹杂着任务书的上传 编辑项目时，没有项目任务书时上传项目任务书，以及有项目任务书时重新上传任务书 单独上传项目任务书 项目任务书下载 （文件可以是任务书或其他文件，这里都用任务书作说明） 创建项目时，项目基本信息 夹杂着任务书的上传前端可以实现基本信息的 text 与任务书的 file 一起上传（一个简单的 demo：模拟提交有文件上传的表单(通过http模拟上传文件)-阿里云开发者社区） 点击选择任务书后，浏览器只是记录了文件存放的位置，可以暂时不发送请求到后端，等所有信息填写完毕后，点击确定，随着其他信息一起发送 post 请求到后端 编辑项目时，没有项目任务书时上传项目任务书，以及有项目任务书时重新上传任务书当对项目信息进行更新时，先从后端获取已有的项目信息（包括任务书的信息） 如果没有项目任务书，前端的 上传任务书 这部分和 创建项目时保持一致即可； 但是如果已经有了项目任务书，建议： 1.首先显示已有项目任务书的文件名，文件大小，上传时间 2.将网页上的 “上传任务书” 改为 “重新上传任务书” 单独上传项目任务书类似 创建项目时，项目基本信息 夹杂着任务书的上传 首先选择任务书，在点击上传按钮之后再向服务器发送请求 类似于 组件 | Element 中的 手动上传 部分 项目任务书下载前端项目首先会从后端获取第一页的项目及相关信息，后端可以在每一个项目的信息中写上任务书的信息，包括是否有任务书，以及任务书的下载链接（将文件上传到minio之后，会自动生成相应的下载链接） 1&lt;el-button type=&quot;text&quot;&gt;项目任务书下载&lt;/el-button&gt; 当点击下载的 button 时，前端根据 任务书的下载链接就能直接下载了","link":"/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.html"},{"title":"spring","text":"[TOC] Spring 面试题Spring 经典面试题汇总 Spring 的 2 种 IOC 容器：BeanFactory 和 ApplicationContext 的区别ApplicationContext 继承自 BeanFactory, ApplicationContext 包含 BeanFactory 的所有特性，通常推荐使用前者。 只有对内存占用要求高的程序使用 BeanFactory，以利用其懒加载的特性 Spring 常见的依赖注入方法及区别spring 中，常使用构造函数和 setter 注入。其中 setter 方法注入因优雅被广泛使用 构造函数： 12345&lt;bean id=\"person\" class=\"cn.xh.dao.Person\"&gt; &lt;constructor-arg name=\"pid\" value=\"1\"&gt;&lt;/constructor-arg&gt; &lt;constructor-arg name=\"pname\" value=\"张三\"&gt;&lt;/constructor-arg&gt; &lt;constructor-arg name=\"age\" value=\"18\"&gt;&lt;/constructor-arg&gt;&lt;/bean&gt; setter 注入： 12345&lt;bean id=\"person\" class=\"cn.xh.dao.Person\"&gt; &lt;property name=\"pid\" value=\"1\"&gt;&lt;/property&gt; &lt;property name=\"pname\" value=\"张三\"&gt;&lt;/property&gt; &lt;property name=\"age\" value=\"18\"&gt;&lt;/property&gt;&lt;/bean&gt; 构造函数注入和setter注入的区别1.部分依赖：假设一个类中有3个属性，有3个arg构造函数和setter方法。在这种情况下，如果您只想传递一个属性的信息，则只能通过setter方法 2.覆盖：Setter注入会覆盖构造函数注入。如果我们同时使用构造函数和setter注入，IOC容器将使用setter注入。 3.变化：我们可以通过二次注射轻松更改值。它不会像构造函数一样创建新的bean实例。因此，setter注入比构造函数注入更灵活。 IOC 的实现机制工厂模式+反射机制 示例： 123456789101112131415161718192021222324252627282930313233interface Fruit { public abstract void eat();}class Apple implements Fruit { public void eat(){ System.out.println(\"Apple\"); }}class Orange implements Fruit { public void eat(){ System.out.println(\"Orange\"); }}class Factory{ public static Fruit getInstance(String lassName){ Fruit f = null; try{ f = (Fruit)Class.forName(className).newInstance(); } catch (Exception e) { e.printStackTrace(); } return f; }}class Cliend{ public static void main(String[] a){ Fruit f = Factory.getInstance(\"io.github.zronghui.spring.Apple\"); if(f!=null){ f.eat(); } }} Spring 内部 bean内部bean 作为外部 bean 的属性而存在 12345678910&lt;bean id=\"StudentBean\" class=\"com.edureka.Student\"&gt; &lt;property name=\"person\"&gt; &lt;!--This is inner bean --&gt; &lt;bean class=\"com.edureka.Person\"&gt; &lt;property name=\"name\" value=\"Scott\"&gt;&lt;/property&gt; &lt;property name=\"address\" value=\"Bangalore\"&gt;&lt;/property&gt; &lt;/bean&gt; &lt;/property&gt;&lt;/bean&gt; 自动装配的方式no byName byType 构造函数 autodetect Aspect Advice JoinPoint PointCut 的含义Aspect：类，用@Aspect 注解将类声明为 Aspect Advice: 针对 joinPoint 执行的操作，是类中的方法（可以将 Advice 视为 Spring 拦截器或过滤器）。可以用 @Before @After @Around 等注解标注 Advice 的类型 JoinPoint: 在 JoinPoints 上应用 Advice。一个 joinPoint 往往是一个方法 PointCut: JoinPoint中的正则表达式 注解Spring通过注解@Autowired/@Resource获取bean实例时为什么可以直接获取接口而不是注入的类 - 覆手为云p - 博客园 使用MyBatis时为什么Dao层不需要@Repository - 街上的动物园 1.创建对象类似于用 XML 配置的代码： 1&lt;bean id=\"\" class=\"\"&gt;&lt;/bean&gt; 用 Component、 Controller、 Service、 Repository 时，有 value 属性，可以指定 bean 的 id，如果不写 value，默认当前 bean 的 id 为当前类的类名，首字母小写 Bean 与这 4 个实现的功能一样，只不过 Bean 只能修饰方法(方法返回一个对象) bean 中的 setter 方法可以添加 Required 注解 2.注入数据给 1中创建的对象注入数据（设置属性） 类似于用 XML 配置的代码： 12&lt;property name=\"\" ref=\"\"&gt;&lt;property name=\"\" value=\"\"&gt; 使用这些注解后，就不用再写这些变量的 set 方法了 相关注解有 Autowired、 Qualifier、 Resource、 Value Autowired 与 Resource 、Inject 差不多，多用 Autowired Autowired 不能指定 bean 的 id，若要指定，需用 Qualifier(value=”id”) Resource(value=”id”) 有 value 属性，可以指定 bean 的 id 如果不指定 id 的话，id 为 要注入的对象变量名称，如果在 spring 容器中查找不到，就会报错 应该是寻找与 要注入的变量 同类型的 bean，如果找不到报错，找到多个也报错Wiring in Spring: @Autowired, @Resource and @Inject | Baeldung Value 注入基本数据类型和 String 类型 @value几种数值填充方式 【Spring注解驱动开发】如何使用@Value注解为bean的属性赋值，我们一起吊打面试官！ - 冰河团队 - 博客园 spring mvcspring mvc 第一天函数的注解@RequestMapping(path=”/hello”) 加在方法参数上的注解不指定 RequestParam 的话，自动获取相同名字的参数，甚至是 Pojo 对象 @RequestParam(value=”username”, required=false) // /hello?username=zhsj @RequestBody(value=”username”, required=false) // 获取请求体的内容 @PathVariable(value=”id”) // @RequestMapping(path=”/hello/{id}”) -&gt; /hello/2 @CookieValue(value=”JSESSION”) // 获取指定 cookie 的值 @RequestHeader(value=”Accept”) // 获取 header 字段的值 @ModelAttribute 当表单提交数据不是完整的实体类数据时，保证没有提交数据的字段使用数据库对象原来的数据。 修饰方法和参数时含义不同，这块没看懂 类的注解@SessionAttributes(value={“username”, “password”, “age”}, types={String.class, Integer.class}) value: []String sessionMap 的 key types: key 和 value 的类型 在类上加上 SessionArributes 注解后，方法可以向 session 中存入值，获取值，删除 session 123456789101112131415161718192021@RequestMapping(path=\"/save\") public String save(Model model) { System.out.println(\"向session域中保存数据\"); model.addAttribute(\"username\", \"root\"); model.addAttribute(\"password\", \"123\"); model.addAttribute(\"age\", 20); return \"success\";}@RequestMapping(path=\"/find\") public String find(ModelMap modelMap) { String username = (String) modelMap.get(\"username\"); String password = (String) modelMap.get(\"password\"); Integer age = (Integer) modelMap.get(\"age\"); System.out.println(username + \" : \"+password +\" : \"+age); return \"success\";}@RequestMapping(path=\"/delete\")public String delete(SessionStatus status) { status.setComplete(); return \"success\";} spring mvc 第二天返回值分类String: 被解析为相应的 jsp 或者 return “forward:url” 转发 或者 return “redirect:url” 重定向 void: 方法内，用 request.getRequestDispatcher(“url”).forward(request, response) 转发 或者 response.sendRedirect(“newUrl”) ModelAndView 优点：可以在 jsp 中访问变量 1234567@RequestMapping(\"/testReturnModelAndView\")public ModelAndView testReturnModelAndView() { ModelAndView mv = new ModelAndView(); mv.addObject(\"username\", \"张三\"); mv.setViewName(\"success\"); return mv;} 响应 json： public @ResponseBody Account xxx(..){ ​ return account; } 异常系统的 dao、service、controller 出现都通过 throws Exception 向上抛出，最后由 springmvc 前端 控制器交由异常处理器进行异常处理 拦截器拦截器与过滤器的区别： 拦截器链 preHandle postHandle afterCompletion 拦截器的执行顺序 java对象 POJO和JavaBean的区别java对象 POJO和JavaBean的区别 - 简书 总结：POJO plain ordinary java object : private 的属性，有 setter and getter 没有其他方法 bean: private 的属性，用 setter and getter 和其他方法，必须实现 Serializable 接口 匿名内部类程序员你真的理解匿名内部类吗？ 抽象类无法实例化 new f(); // invoke method new c(){ @Override f(){} }; // 继承class: c, 重写方法 f ，并 new 一个对象 这就是匿名内部类做的事情","link":"/java/spring.html"},{"title":"高中数学","text":"[TOC] 忘了不少，现在恶补一下 排列组合 概率","link":"/other/%E9%AB%98%E4%B8%AD%E6%95%B0%E5%AD%A6.html"},{"title":"to read","text":"[TOC]","link":"/todo/to-read.html"},{"title":"Java 面试宝典笔记","text":"[TOC] 01.Java 面试宝典 - v1.1.pdf 的批注摘要。6.什么是值传递和引用传递？什么是值传递和引用传递？ 什么是值传递和引用传递？ 对象被值传递，意味着传递了对象的一个副本。因此，就算是改变了对象副本，也不会影响源对象的值。 对象被引用传递，意味着传递的并不是实际的对象，而是对象的引用。因此，外部对引用对象所做的改变会反映 到所有的对象上。 11.是否可以从一个静态（static）方法内部发出对非静态（non-static）方法的调用？12.如何实现对象克隆？如何实现对象克隆？ 如何实现对象克隆？ 答：有两种方式： 1.实现 Cloneable 接口并重写 Object 类中的 clone() 方法； 2.实现 Serializable 接口，通过对象的序列化和反序列化实现克隆，可以实现真正的深度克隆。 13.一个“.java”源文件中是否可以包含多个类（不是内部类）？有什么限制？14.Anonymous Inner Class(匿名内部类)是否可以继承其它类？是否可以实现 接口？答：可以继承其他类或实现其他接口 15.内部类可以引用它的包含类（外部类）的成员吗？有没有什么限制？ 答：一个内部类对象可以访问创建它的外部类对象的成员，包括私有成员 2.Overload 和 Override 的区别？ Overloaded 的方法是否可以改变返回值的类型?什么是复制构造函数？ 3.Java 中，什么是构造函数？什么是构造函数重载？什么是复制构造函数？Java 不支持像 C++ 中那样的复制构造函数，这个不同点是因为如果你不自己写构造函数的情况下，Java不会创 建默认的复制构造函数。 4.构造器 Constructor 是否可被 Override?Override? Override? Override? 构造器 Constructor 不能被继承，因此不能重写 Override，但可以被重载 Overload。 6.接口和抽象类的区别是什么？接口中所有的方法隐含的都是抽象的。而抽象类则可以同时包含抽象和非抽象的方法。 类如果要实现一个接口，它必须要实现接口声明的所有方法。但是，类可以不实现抽象类声明的所有方法，当然，在这种情况下，类也必须得声明成是抽象的。 Java 接口中声明的变量默认都是 final 的。抽象类可以包含非 final 的变量。 Java 接口中的成员函数默认是 public 的。抽象类的成员函数可以是 private，protected 或者是 public 。 抽象类也不可以被实例化，但是，如果它包含 main 方法的话是可以被调 用的。 *看起来，抽象类 就是普通的类里面加了没有实现的方法（抽象方法）。而接口限制较多，所有方法都是抽象的，变量是 final，成员函数全是 public * 7.下列说法正确的有（）普通的类方法是可以和类名同名的，和构造方法唯一的区分就是，构造方法没有 返回值 8.Java 接口的修饰符可以为?C.final D.abstract 接口很重要，为了说明情况，这里稍微啰嗦点： （1）接口用于描述系统对外提供的所有服务,因此接口中的成员常量和方法都必须是公开(public)类型的,确保外部 使用者能访问它们； （2）接口仅仅描述系统能做什么,但不指明如何去做,所以接口中的方法都是抽象(abstract)方法； （3）接口不涉及和任何具体实例相关的细节,因此接口没有构造方法,不能被实例化,没有实例变量，只有静态（static）变量； （4）接口的中的变量是所有实现类共有的，既然共有，肯定是不变的东西，因为变化的东西也不能够算共有。所 以变量是不可变(final)类型，也就是常量了。 9.下面是 People 和 Child 类的定义和构造方法，每个构造方法都输出编号。在 执行 new Child(“mike”) 的时候都有哪些构造方法被顺序调用？请选择输出结果12345678910111213141516171819202122class People { String name; public People() { System.out.print(1); } public People(String name) { System.out.print(2); this.name = name; } }class Child extends People { People father; public Child(String name) { System.out.print(3); this.name = name; father = new People(name + \":F\"); } public Child() { System.out.print(4); } } D.132 答案：D ：子类没有显示调用父类构造函数，不管子类构造函数是否带参数都默认调用父类无参的构造函 数，若父类没有则编译出错。 11.两个对象值相同(x.equals(y) == true)，但却可有不同的 hash code，这句话对不对？：(1)如果两个对象相同（equals 方法返回 true ），那么它们的 hashCode 值一定要相同；(2)如果两个对象的 hashCode 相同，它们并不一定相同。 如果你违背了上述原则就会发现在使用容器时，相同的对象可以出现在 Set 集合中，同时增加新元素 的效率会大大下降（对于使用哈希存储的系统，如果哈希码频繁的冲突将会造成存取性能急剧下降）。 12.接口是否可继承（extends）接口? 抽象类是否可实现（implements）接口? 抽象类是否可继承具体类（concrete class）?13.子类父类方法执行顺序指出下面程序的运行结果: 123456789101112131415161718192021222324class A{ static{ System.out.print(\"1\"); } public A(){ System.out.print(\"2\"); } }class B extends A{ static{ System.out.print(\"a\"); } public B(){ System.out.print(\"b\"); } } public class Hello{ public static void main(String[] args){ A ab = new B(); ab = new B(); } } 创建对象时构造器的调用顺序是：先初始化静态成员，然后调用父类构造器，再初始化 非静态成员，最后调用自身构造器。 1a2b2b 总结：调用顺序按照以下规则排序 静态方法&gt;普通方法 父类方法&gt;子类方法 14.Class.forName（String className）这个方法的作用通过类的全名获得该类的类对象 15.什么是 AOP 和 OOP，IOC 和 DI 有什么不同?AO P 将通用需求功能从不相关类之中分离出来；同时，能够使得很多类共享一个行为，一旦行为发生变化，不必修改很多类，只要修改这 个行为就可以 控制反转和依 赖注入是同一个概念 第 3 章 关键字1.”static” 关键字是什么意思？Java 中是否可以覆盖(override) 一个 private 或者是 static 的方法？Java 中 static 方法不能被覆盖，因为方法覆盖是基于运行时动态绑定的，而 static 方法是编译时静态绑定的。s tatic 方法跟类的任何实例都不相关，所以概念上不适用。 3.访问修饰符 public, private, protected, 以及不写（默认）时的区别？4.volatile关键字是否能保证线程安全？答案：不能 解析：volatile 关键字用在多线程同步中，可保证读取的可见性，JVM只是保证从主内存加载到线程工作内存的 值是最新的读取值，而非 cache 中。但多个线程对 volatile 的写操作，无法保证线程安全。例如假如线程 1，线 程 2 在进行 read,load 操作中，发现主内存中 count 的值都是 5，那么都会加载这个最新的值，在线程 1 对 count 进行修改之后，会 write 到主内存中，主内存中的 count 变量就会变为 6；线程 2 由于已经进行 read,load 操 作，在进行运算之后，也会更新主内存 count 的变量值为 6；导致两个线程及时用 volatile 关键字修改之后，还 是会存在并发的情况。 5.Java 有没有 goto?答：goto 是 Java 中的保留字，在目前版本的 Java 中没有使用。 6.Java 中的 final关键字有哪些用法？7.什么时候用 assert？断言用于调试目的： assert(a &gt; 0); // throws an AssertionError if a &lt;= 0 断言可以有两种形式： assert Expression1; assert Expression1 : Expression2 ; Expression1 应该总是产生一个布尔值 Expression2 可以是得出一个值的任意表达式；这个值用于生成显示更多调试信息的字符串消息 2.用最有效率的方法算出 2 乘以 8 等於几?3.存在使 i + 1 &lt; i的数吗?答案：存在 解析：如果 i 为 int 型，那么当 i 为 int 能表示的最大整数时 i+1 就溢出变成负数了 扩展：存在使 i &gt; j || i &lt;= j 不成立的数吗? 答案：存在 解析：比如 Double.NaN 或 Float.NaN 。 4.0.6332 的数据类型是（）5.System.out.println(“5” + 2);的输出结果应该是（）。A.52 Java 会自动将 2 转换为字符串。 8.int 和 Integer 有什么区别?9.char 型变量中能不能存贮一个中文汉字?为什么?char 类型可以存储一个中文汉字，因为 Java 中使用的编码是 Unicode（不选择任何特定的编码，直接使用 字符在字符集中的编号，这是统一的唯一方法），一个 char 类型占 2 个字节（16bit），所以放一个中文是没问 题的。 10.Math.round(11.5) 等于多少? Math.round(-11.5)等于多少?参数加 1/ 2 后求其 floor ：Math.round(11.5)==12 Math.round(-11.5)==-11 第 5 章 字符串与数组1.下面程序的运行结果是（）下面程序的运行结果是（） 123String str1 = \"hello\"; String str2 = \"he\" + new String(\"llo\"); System.err.println(str1 == str2); 答案：false 解析：因为 str2 中的 llo 是新申请的内存块，而 == 判断的是对象的地址而非值，所以不一样。如果是 2 = str1 ，那么就是 true 了。 2.下面代码的运行结果为?String s; System.out.println(“s=” + s); C.由于 String s 没有初始化，代码不能编译通过 3.String 是最基本的数据类型吗?：不是。Java 中的基本数据类型只有 8 个：byte、short、int、long、float、double、char、boolean；除 了基本类型（primitive type）和枚举类型（enumeration type），剩下的都是引用类型（reference type）。 4.数组有没有 length() 方法? String 有没有 length() 方法？ 答：数组没有 length()方法，有 length 的属性。String 有 length()方法。 5.是否可以继承 String 类?答：String 类是 final 类，不可以被继承。 6.String 和StringBuilder、StringBuffer 的区别?其中 String 是只读字符串，也就意味着 String 引用的字符串内容是不能被改变的。而 StringBuffer 和 Stri ngBuilder 类表示的字符串对象可以直接进行修改。 StringBuilder 是 JDK 1.5 中引入的，它和 StringBuffer 的 方法完全相同，区别在于它是在单线程环境下使用的，因为它的所有方面都没有被 synchronized 修饰，因此它 的效率也比 StringBuffer 略高。 7.String s=new String(“xyz”);创建了几个字符串对象？答：两个对象，一个是静态存储区的”xyz”,一个是用new创建在堆上的对象。 8.将字符 “12345” 转换成 long 型解答: String s=”12345″; long num=Long.valueOf(s).longValue(); 10.String s = “Hello”;s = s + “ world!”; 这两行代码执行后，原始的 String 对象中的内容到底变了没有？11.如何把一段逗号分割的字符串转换成一个数组?用正则表达式，代码大概为： String [] result = orgStr.split(“,”); 12.下面这条语句一共创建了多少个对象： String s=“a”+”b”+”c”+”d”;String s=“a”+”b”+”c”+”d”; 代码被编译器在编译时优化后，相当于直接定义了一个”abcd”的字符串，所以，上面的代码应 该只创建了一个 String 对象。写如下两行代码， String s =”a” + “b” + “c” + “d”; System.out.println(s== “abcd”); 最终打印的结果应该为 true。 2.ArrayList list = new ArrayList(20);中的 list 扩充几次?解析：这里有点迷惑人，大家都知道默认 ArrayList 的长度是 10 个，所以如果你要往 list 里添加 20 个元素肯定 要扩充一次（扩充为原来的 1.5 倍），但是这里显示指明了需要多少空间，所以就一次性为你分配这么多空 间，也就是不需要扩充了。 5.什么是迭代器(Iterator)？6.Iterator和ListIterator的区别是什么？Iterator 可用来遍历 Set 和 List 集合，但是 ListIterator 只能用来遍历 List 。 Iterator 对集合只能是前向遍历，ListIterator 既可以前向也可以后向。 ListIterator 实现了 Iterator 接口，并包含其他的功能，比如：增加元素，替换元素，获取前一个和后一个元素的 索引，等等。 7.快速失败(fail-fast)和安全失败(fail-safe)的区别是什么？java.util 包下面的所有的集合类都是快速失败的，而 java.util.concurrent 包下面的所有的类都是安全失败的 快速失败的迭代器会抛出 ConcurrentModificationException 异常，而安全失败的迭代器永远不会抛出这样的异常。 注：用 iterator.remove 应该不会引起异常 9.hashCode() 和 equals() 方法的重要性体现在什么地方？10.HashMap 和 Hashtable 有什么区别？HashMap 和 Hashtable 都实现了 Map 接口，因此很多特性非常相似。但是，他们有以下不同点： HashMap 允许键和值是 null，而 Hashtable 不允许键或者值是 null。 Hashtable 是同步的，而 HashMap 不是。因此， HashMap 更适合于单线程环境，而 Hashtable 适合于多线 程环境。 HashMap 提供了可供应用迭代的键的集合，因此，HashMap 是快速失败的。另一方面，Hashtable 提供了对 键的列举(Enumeration)。 一般认为 Hashtable 是一个遗留的类。 11.数组(Array)和列表(ArrayList)有什么区别？什么时候应该使用 Array 而不是 ArrayList？Array 可以包含基本类型和对象类型，ArrayList 只能包含对象类型。 Array 大小是固定的，ArrayList 的大小是动态变化的。 ArrayList 提供了更多的方法和特性，比如：addAll()，removeAll()，iterator()等等。 12.ArrayList 和 LinkedList 有什么区别？ArrayList 是基于索引的数据接口，它的底层是数组 以O(1)时间复杂度对元素进行随机访问 ，LinkedList 是以元素列表的形式存储它的数据 查找某个元素的时间复杂度是O(n) LinkedList 比 ArrayList 更占内存，因为 LinkedList 为每一个节点存储了两个引用，一个指向前一个元素，一 个指向下一个元素。 13.Comparable 和Comparator 接口是干什么的？列出它们的区别。包含一个 compareTo(x) 方法的 Comparable 接口 包含 compare(a, b) 和 equals() 两个方法的 Comparator 接口 15.Enumeration 接口和 Iterator 接口的区别有哪些？16.HashSet 和 TreeSet 有什么区别？HashSet 是由一个 hash 表来实现的，因此，它的元素是无序的。add()，remove()，contains()方法的时间复 杂度是 O(1)。 另一方面，TreeSet 是由一个树形的结构来实现的，它里面的元素是有序的。因此，add()，remove()，contains() 方法的时间复杂度是 O(logn)。 17.List、Set、Map 是否继承自 Collection 接口？答：List、Set 是，Map 不是 第 8 章 Java 平台与内存管理1.GC线程是否为守护线程？（）答案：是 解析：线程分为守护线程和非守护线程（即用户线程）。 只要当前JVM实例中尚存在任何一个非守护线程没有结束，守护线程就全部工作；只有当最后一个非守护线程结 束时，守护线程随着 JVM 一同结束工作。 守护线程最典型的应用就是 GC (垃圾回收器) 2.解释内存中的栈（stack）、堆(heap)和静态存储区的用法。3.Java 中会存在内存泄漏吗理论上 Java 因为有垃圾回收机制（GC）不会存在内存泄露问题 在实际开发中，可能会存在无用但可达的对象，这些对象不能被 GC 回收也会发生内存 泄露 4.GC 是什么？为什么要有 GC？5.第 3 行中生成的 object在第几行执行后成为 garbage collection 的对象？123456789101.public class MyClass { 2.public StringBuffer aMethod() { 3.StringBuffer sf = new StringBuffer(“Hello”); 4.StringBuffer[] sf_arr = new StringBuffer[1]; 5.sf_arr[0] = sf; 6.sf = null; 7.sf_arr[0] = null; 8.return sf; 9.} 10.} 答：第 7 行 sf 和 sf_arr[0] 都指向 那个对象，都不可达时才会被判定为垃圾 2.下面程序的运行结果?Thread 类中 start() 和 run() 方法的区别了。start() 用来启动一个线程，当调用 start 方法 后，系统才会开启一个新的线程，进而调用 run() 方法来执行任务，而单独的调用run() 就跟调用普通方法是一样 的，已经失去线程的特性了。因此在启动一个线程的时候一定要使用 start() 而不是 run()。 3.进程和线程的区别是什么？4.创建线程有几种不同的方式？你喜欢哪一种？为什么？有三种方式可以用来创建线程： • 继承 Thread 类 • 实现 Runnable 接口 • 应用程序可以使用 Executor 框架来创建线程池 实现 Runnable 接口这种方式更受欢迎，因为这不需要继承 Thread 类。在应用设计中已经继承了别的对象的情 况下，这需要多继承（而 Java 不支持多继承），只能实现接口。同时，线程池也是非常高效的，很容易实现和 使用。 9.如何确保 N 个线程可以访问 N 个资源同时又不导致死锁？10.sleep() 和 wait() 有什么区别?调用 sleep 不会释放对象锁 wait()方法导致本线程放弃对象锁 只有针对此对象发出 notify 方法（或 notifyAll）后本线程才进入对象锁定池准备获得对象锁进 入就绪状态 11.sleep() 和 yield() 有什么区别?有什么区别? 有什么区别? 答： ① sleep() 方法给其他线程运行机会时不考虑线程的优先级，因此会给低优先级的线程以运行的机会；yield() 方 法只会给相同优先级或更高优先级的线程以运行的机会； ② 线程执行 sleep() 方法后转入阻塞（blocked）状态，而执行 yield() 方法后转入就绪（ready）状态； ③ sleep() 方法声明抛出InterruptedException，而 yield() 方法没有声明任何异常； ④ sleep() 方法比 yield() 方法（跟操作系统相关）具有更好的可移植性。 16.启动一个线程是用 run() 还是 start() 方法?17.什么是线程池（thread pool）？线程池顾名思义就是事先创建若干个可执行的线程放入一个池（容器）中，需要的时候 从池中获取线程不用自行创建，使用完毕不需要销毁线程而是放回池中，从而减少创建和销毁线程对象的开销。 1.下列属于关系型数据库的是（）2.在进行数据库编程时，连接池有什么作用？尤其是数据库服务器不在本地时，每次建立连接都需要进行 TCP 的三次握手，再加上网络延迟，造成的开销是不可忽视的 创建连接和释放连接都有很大的开销 为了提升系统访问数据库的性能，可以事先创建若 干连接置于连接池中，需要时直接从连接池获取，使用结束时归还连接池而不必关闭连接，从而避免频繁创建和 释放连接所造成的开销，这是典型的用空间换取时间的策略 基于 Java 的开源数 据库连接池主要有： C3P0、Proxool、DBCP、BoneCP、Druid等 池化技术在 Java 开发中是很常见的，在使用线程时创建线程池的道理与此相同 3.什么是 DAO 模式？DAO（DataAccess Object）顾名思义是一个为数据库或其他持久化机制提供了抽象接口的对象，在不暴露数据库实现细节的前提下提供了各种数据操作 4.什么是ORM？对象关系映射（Object-Relational Mapping，简称 ORM） ORM 是通过使用描述对象和数据库之间映射的元数据（可以用 X ML 或者是注解），将 Java 程序中的对象自动持久化到关系数据库中或者将关系数据库表中的行转换成 Java 对 象，其本质上就是将数据从一种形式转换到另外一种形式。 5.JDBC 中如何进行事务处理？通过调用setAutoCommit(false)可以设置手动提交事务；当事务完成 后用 commit()显式提交事务；如果在事务处理过程中发生异常则通过 rollback() 进行事务回滚 6.事务的 ACID 是指什么？7.使用 JDBC 操作数据库时，如何提升读取数据的性能？如何提升更新数据的 性能？ 答：要提升读取数据的性能，可以指定通过结果集（ResultSet）对象指定每次抓取数据的大小（fetch size）；要提升更新数据的性能可以使用PreparedStatement语句构建批处理（batch） 9.你认为在表上建立索引可以提高数据库系统的效率吗，为什么？ 答：不一定 建立太多的索引将会影响更新和插入的速度，因为它需要同样更新每个索引文件。对于一个经常需要更新和插入 的表格，就没有必要为一个很少使用的 where 子句单独建立索引了，对于比较小的表，排序的开销不会很大，也 没有必要建立另外的索引。 Java 面试笔记 - v1.pdf 的批注摘要。Path 与 Classpath?Path 和 Classpath 是操作系统的环境变量. • Path 定义了系统可以在哪里找到可执行文件(.exe) • classpath 定义了 .class 文件的位置. Ear, Jar 和 War 文件的区别?• Jar files are intended to hold generic libraries of Java classes, resources, etc. • War files are intended to contain complete Web applications. • Ear files are intended to contain complete enterprise applications. 什么是 AOP它可以运行期动态代理实现在不修改源代码的情况下给程序动态统一添加功能的一种技术它可以运行期动态代理实现在不修改源代码的情况下给程序动态统一添加功能的一种技术 statement 和 prepared statementStatement每次执行sql语句,数据库都要执行sql语句的编译. 最好用于仅执行一次查询并返回结果的情形，效率高于PreparedStatement Prepared statements offer better performance, as they are pre-compiled e SQL statements many timestimes. Prepared statements are more secure because they use bind variables, which can prevent SQL injection attack. 单例模式Java: 单例模式我只推荐两种 1234567891011121314public class Singleton{ private volatile static Singleton singleton; private Singleton(){} public Singleton getInstance(){ if(singleton==null){ synchronized(singleton){ if(singleton==null){ singleton = new Singleton(); } } } return singleton; }} 123456789public class Singleton{ private Singleton(){} private static SingletonContainer(){ private static final singleton = new Singleton(); } public Singleton getInstance(){ return SingletonContainer.singleton; }}","link":"/java/%E5%9F%BA%E7%A1%80/Java-%E9%9D%A2%E8%AF%95%E5%AE%9D%E5%85%B8%E7%AC%94%E8%AE%B0.html"},{"title":"leetcode/分类/树的遍历","text":"树的遍历 前序 后序 单层循环，只判断 stack 是否为空，且一开始将 root 放入 stack 中序 双层循环，外层判断 stack cur, 一开始 cur=root 前序遍历144. 二叉树的前序遍历 - 力扣（LeetCode） 12345678910111213141516class Solution { public List&lt;Integer&gt; preorderTraversal(TreeNode root) { List&lt;Integer&gt; res = new ArrayList&lt;&gt;(); if(root==null) return res; Stack&lt;TreeNode&gt; stack = new Stack&lt;&gt;(); stack.push(root); TreeNode cur; while(!stack.isEmpty()){ cur = stack.pop(); res.add(cur.val); if(cur.right!=null) stack.push(cur.right); if(cur.left!=null) stack.push(cur.left); } return res; }} N叉树的前序遍历589. N叉树的前序遍历 - 力扣（LeetCode） 12345678910111213141516class Solution { public List&lt;Integer&gt; preorder(Node root) { List&lt;Integer&gt; res = new ArrayList&lt;&gt;(); Stack&lt;Node&gt; stack = new Stack&lt;&gt;(); if(root!=null) stack.push(root); Node cur; while(!stack.isEmpty()){ cur = stack.pop(); res.add(cur.val); for(int i=cur.children.size()-1; i&gt;=0; i--){ stack.push(cur.children.get(i)); } } return res; }} 中序遍历94. 二叉树的中序遍历 - 力扣（LeetCode） 1234567891011121314151617class Solution { public List&lt;Integer&gt; inorderTraversal(TreeNode root) { List&lt;Integer&gt; res = new ArrayList&lt;&gt;(); Stack&lt;TreeNode&gt; stack = new Stack&lt;&gt;(); TreeNode cur=root; while(!stack.isEmpty() || cur!=null){ while(cur!=null){ stack.push(cur); cur = cur.left; } cur = stack.pop(); res.add(cur.val); cur = cur.right; } return res; }} 后序遍历145. 二叉树的后序遍历 - 力扣（LeetCode） 123456789101112131415class Solution { public List&lt;Integer&gt; postorderTraversal(TreeNode root) { List&lt;Integer&gt; res = new LinkedList&lt;&gt;(); if(root==null) return res; Stack&lt;TreeNode&gt; stack = new Stack&lt;&gt;(); stack.push(root); while(!stack.isEmpty()){ TreeNode cur = stack.pop(); res.add(0, cur.val); //头插法 if(cur.left!=null) stack.push(cur.left); if(cur.right!=null) stack.push(cur.right); } return res; }} N 叉树后序遍历590. N叉树的后序遍历 - 力扣（LeetCode） 12345678910111213141516class Solution { public List&lt;Integer&gt; postorder(Node root) { List&lt;Integer&gt; res = new LinkedList&lt;&gt;(); if(root==null) return res; Stack&lt;Node&gt; stack = new Stack&lt;&gt;(); stack.push(root); while(!stack.isEmpty()){ Node cur = stack.pop(); res.add(0, cur.val); for(Node node: cur.children){ stack.push(node); } } return res; }} 层序遍历1234567891011121314151617181920class Solution { public List&lt;List&lt;Integer&gt;&gt; levelOrder(TreeNode root) { List&lt;List&lt;Integer&gt;&gt; res = new ArrayList&lt;&gt;(); Deque&lt;TreeNode&gt; deque = new LinkedList&lt;&gt;(); if(root!=null) deque.addLast(root); TreeNode cur; while(!deque.isEmpty()){ int size = deque.size(); List&lt;Integer&gt; t = new ArrayList&lt;&gt;(); for(int i=0; i&lt;size; i++){ cur = deque.pollFirst(); t.add(cur.val); if(cur.left!=null) deque.addLast(cur.left); if(cur.right!=null) deque.addLast(cur.right); } res.add(t); } return res; }} N叉树的层序遍历429. N叉树的层序遍历 - 力扣（LeetCode） 123456789101112131415161718192021class Solution { public List&lt;List&lt;Integer&gt;&gt; levelOrder(Node root) { List&lt;List&lt;Integer&gt;&gt; res = new ArrayList&lt;&gt;(); Deque&lt;Node&gt; deque = new LinkedList&lt;&gt;(); if(root!=null) deque.addLast(root); Node cur; while(!deque.isEmpty()){ int size = deque.size(); List&lt;Integer&gt; t = new ArrayList&lt;&gt;(); for(int i=0; i&lt;size; i++){ cur = deque.pollFirst(); t.add(cur.val); for(Node node: cur.children){ deque.addLast(node); } } res.add(t); } return res; }} 其他垂续遍历987. 二叉树的垂序遍历 - 力扣（LeetCode） 按照坐标排序 123456789101112131415161718192021222324252627282930313233343536class Solution { List&lt;Location&gt; locations; public void help(TreeNode root, int x, int y){ if(root==null) return ; locations.add(new Location(x, y, root.val)); help(root.left, x-1, y+1); help(root.right, x+1, y+1); } public List&lt;List&lt;Integer&gt;&gt; verticalTraversal(TreeNode root) { List&lt;List&lt;Integer&gt;&gt; res = new LinkedList&lt;&gt;(); if(root==null) return res; locations = new ArrayList&lt;&gt;(); help(root, 0, 0); Collections.sort(locations, (a, b)-&gt; 100*(a.x-b.x)+(a.y-b.y)); int prex = locations.get(0).x-1; for(Location loc: locations){ if(loc.x!=prex){ res.add(new ArrayList&lt;&gt;()); } res.get(res.size()-1).add(loc.val); prex = loc.x; } return res; }}class Location{ int x; int y; int val; Location(int a, int b, int c){ x = a; y = b; val = c; }}","link":"/leetcode/%E5%88%86%E7%B1%BB/%E6%A0%91%E7%9A%84%E9%81%8D%E5%8E%86.html"},{"title":"背包问题","text":"[TOC] 基础知识p2 p3 讲的都很棒 [Algorithm][011] 动态规划 Dynamic Programming (DP) 背包 DP 3 讲 [OTTFF]_哔哩哔哩 (゜ - ゜) つロ 干杯～-bilibili 三种背包问题dp 问题的 3 要素 背包：背包空间是有限的，往里面放石头，每个石头有 体积 vi 和 价值 wi，求背包能放的最大的价值 或者要求把背包放满的最大价值 01背包：每个元素取 0 个或 1 个 完全背包：每个元素可以取无数个 多重背包：每个元素可以取有限个 01 背包问题12dp[i][j] 表示从 1~i 的元素中进行选择，体积为 j 时的 valuedp[i][j] = max(dp[i-1][j], dp[i-1][j-vi]+wi) 完全背包问题01 背包在将二维空间简化为一维时，为了避免修改上次的值，按照从后往前的遍历顺序 然而 01 背包想要避免的事情，正是完全背包想要的。完全背包从前往后遍历 1 遍就能利用当前元素取无数个的条件 详见↓代码 多重背包问题up说了，LeetCode 上甚至没有这样的题。 不过感觉听完思路也不是太难 主要是用 二进制分解为 01背包 问题 代码实现 LeetCode 实战希望用一种规律搞定背包问题 - 组合总和 Ⅳ - 力扣（LeetCode）01 背包问题 | 何小智の博客 | 时间是人类发展的空间。 一、背包问题分类1 组合问题377. 组合总和 Ⅳ 494. 目标和 518. 零钱兑换 II 2 True、False 问题。139. 单词拆分 416. 分割等和子集 3 最大最小问题474. 一和零 322. 零钱兑换 二、背包问题状态转移公式1 组合问题公式1dp\\[i\\] += dp\\[i-num\\] 2 True、False 问题公式1dp\\[i\\] = dp\\[i\\] or dp\\[i-num\\] 3 最大最小问题公式1dp\\[i\\] = min(dp\\[i\\], dp\\[i-num\\]+1)或者dp\\[i\\] = max(dp\\[i\\], dp\\[i-num\\]+1) 三、解题步骤 分析是否为背包问题。 是以上三种背包问题中的哪一种。 是 0-1 背包问题还是完全背包问题。也就是题目给的 nums 数组中的元素是否可以重复使用。 如果是组合问题，是否需要考虑元素之间的顺序。需要考虑顺序有顺序的解法，不需要考虑顺序又有对应的解法。 四、背包问题的判定背包问题具备的特征： 给定一个 target，target 可以是数字也可以是字符串，再给定一个数组 nums，nums 中装的可能是数字，也可能是字符串，问：能否使用 nums 中的元素做各种排列组合得到 target。 背包问题技巧： 如果是 0-1 背包，即数组中的元素不可重复使用，nums 放在外循环，target 在内循环，且内循环倒序； 12for num in nums: for i in range(target, nums-1, -1): 如果是完全背包，即数组中的元素可重复使用，nums 放在外循环，target 在内循环。且内循环正序。 12for num in nums: for i in range(nums, target+1): 如果组合问题需考虑元素之间的顺序，需将 target 放在外循环，将 nums 放在内循环。 12for i in range(1, target+1): for num in nums: 01 背包416. 分割等和子集416. 分割等和子集 - 力扣（LeetCode） 1234567891011121314151617181920212223// 背包问题：1. 背包分类 2. 循环顺序 3. 状态转移class Solution { public boolean canPartition(int[] nums) { // 0 1 背包 背包上限为 sum/2 // dp[i][j] : 前 i 个数字选择若干个元素, 能否 使得背包和为 j // dp[i][j] = dp[i-1][j] || dp[i-1][j-nums[i]] // return dp[-1][-1] int target = 0; for(int num: nums) target += num; if(target%2!=0) return false; target /= 2; boolean[] dp = new boolean[target+1]; dp[0] = true; for(int num: nums){ for(int j=target; j&gt;=0; j--){ if(!dp[j] &amp;&amp; j-num&gt;=0) dp[j] = dp[j-num]; } } return dp[target]; }} 474. 一和零 - 力扣（LeetCode）474. 一和零 - 力扣（LeetCode） 12背包大小有 2 个限制， 所以 dp[i][j][k] 有三层表示 前 i 个字符串 背包上限为 j 和 k 时，最大的 value（不撑破背包时 字符串的数量） 123456789101112131415161718192021222324// 01背包问题class Solution { public int findMaxForm(String[] strs, int m, int n) { int[][] dp = new int[m+1][n+1]; for(String s: strs){ int[] cnt = count(s); for(int i=m; i&gt;=0; i--){ for(int j=n; j&gt;=0; j--){ if(i-cnt[0]&gt;=0 &amp;&amp; j-cnt[1]&gt;=0) dp[i][j] = Math.max(dp[i][j], dp[i-cnt[0]][j-cnt[1]]+1); } } } return dp[m][n]; } public int[] count(String s){ int[] cnt = new int[2]; for(char c: s.toCharArray()){ cnt[c-'0']++; } return cnt; }} 494. 目标和 - 力扣（LeetCode）494. 目标和 - 力扣（LeetCode） 123456789101112131415161718192021222324252627// 问题转化：num 与 -num 选择哪一个结果相差 2*num// 将 num -num 映射为 2*num 0// 将 nums 中的每个 num 转换成 2*num，操作为取或不取// S 的范围是 -sum(nums) ~ sum(nums), 对 num 做映射之后，S 的范围也发生了变化: 0~2*sum(nums)// 因此，S -&gt; S+sum(nums)，完成 S 的映射// 现在是标准的 01 背包 问题class Solution { public int findTargetSumWays(int[] nums, int S) { int sum = 0; for(int i=0; i&lt;nums.length; i++){ sum += nums[i]; nums[i] += nums[i]; } if(S&gt;sum) return 0; S += sum; int[] dp = new int[S+1]; dp[0] = 1; for(int num: nums){ for(int i=S; i&gt;=0; i--){ if(i-num&gt;=0){ dp[i] = dp[i] + dp[i-num]; } } } return dp[S]; }} 879. 盈利计划 - 力扣（LeetCode）不会879. 盈利计划 - 力扣（LeetCode） 完全背包322. 零钱兑换 - 力扣（LeetCode）322. 零钱兑换 - 力扣（LeetCode） 换成指定金额的最少硬币数 1234567891011121314class Solution { public int coinChange(int[] coins, int amount) { int[] dp = new int[amount+1]; Arrays.fill(dp, Integer.MAX_VALUE); dp[0] = 0; for(int coin: coins){ for(int i=0; i&lt;=amount; i++){ if(i-coin&gt;=0 &amp;&amp; dp[i-coin]!=Integer.MAX_VALUE) dp[i] = Math.min(dp[i], dp[i-coin]+1); } } return dp[amount]==Integer.MAX_VALUE? -1 : dp[amount]; }} 518. 零钱兑换 II - 力扣（LeetCode）518. 零钱兑换 II - 力扣（LeetCode） 换成指定金额的方法数 12345678910111213class Solution { public int change(int amount, int[] coins) { int[] dp = new int[amount+1]; dp[0] = 1; for(int coin: coins){ for(int i=0; i&lt;=amount; i++){ if(i-coin&gt;=0) dp[i] = dp[i]+dp[i-coin]; } } return dp[amount]; }} 1449. 数位成本和为目标值的最大 - 力扣（LeetCode）1449. 数位成本和为目标值的最大数字 - 力扣（LeetCode） 这里背包需要装满，初始化时只初始化 dp[0] = “” 12345678910111213141516171819202122class Solution { public String largestNumber(int[] cost, int target) { // 所占空间：i(1-9) -&gt; cost[i-1] // value: 先放较大的数字 String[] dp = new String[target+1]; dp[0] = \"\"; for(int i=8; i&gt;=0; i--){ for(int j=0; j&lt;=target; j++){ if(j-cost[i]&gt;=0 &amp;&amp; dp[j-cost[i]]!=null) dp[j] = max(dp[j], dp[j-cost[i]]+String.valueOf(i+1)); } } return dp[target]==null? \"0\" : dp[target]; } public String max(String a, String b){ if(a==null) return b; if(a.length()&gt;b.length() || (a.length()==b.length() &amp;&amp; a.compareTo(b)&gt;0)) return a; return b; }} 377. 组合总和 Ⅳ - 力扣（LeetCode）377. 组合总和 Ⅳ - 力扣（LeetCode） 这里对元素的顺序不同算一种方案，因此，对 nums 的遍历在内层 12345678910111213class Solution { public int combinationSum4(int[] nums, int target) { int[] dp = new int[target+1]; dp[0] = 1; for(int i=0; i&lt;=target; i++){ for(int num: nums){ if(i-num&gt;=0) dp[i] += dp[i-num]; } } return dp[target]; }}","link":"/leetcode/%E5%88%86%E7%B1%BB/%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98.html"},{"title":"biweekly-contest-39","text":"[TOC] 拆炸弹3 使字符串平衡的最少删除次数4 到家的最少跳跃次数5 分配重复整数6 1123456789101112131415class Solution { public int[] decrypt(int[] code, int k) { // 恶心 int n = code.length; int[] res = new int[n]; if(k==0) return res; int d = k&gt;0 ? 1: -1; for(int i=0; i&lt;n; i++){ for(int j=1; j&lt;=Math.abs(k); j++){ res[i] += code[(i+j*d+n)%n]; } } return res; }} 2123456789101112131415161718192021222324252627282930313233class Solution { public int minimumDeletions(String s) { int n = s.length(); // aa 格式 aab 格式 int[] a = new int[n+1], b = new int[n+1]; // init a[0] = 0; b[0] = -1; // 起始不可能 aab 格式 for(int i=1; i&lt;=n; i++){ char c = s.charAt(i-1); if(c=='a'){ a[i] = a[i-1]; }else{ a[i] = a[i-1]+1; } // 不可能 aab 格式 if(c=='a' &amp;&amp; b[i-1]==-1) b[i]=-1; else{ // 以 a 结尾，a 肯定要删除 if(c=='a'){ b[i] = b[i-1]+1; }else{ // 可以从 aa 或者 aab 转换过来 b[i] = Math.min(a[i-1], b[i-1]==-1 ? n : b[i-1]); } } } // aa 格式 if(b[n]==-1) return a[n]; return Math.min(a[n], b[n]); }} 312 41234567891011121314151617181920212223242526272829303132class Solution { int[] q; int m; public boolean canDistribute(int[] nums, int[] quantity) { HashMap&lt;Integer, Integer&gt; map = new HashMap&lt;&gt;(); m = quantity.length; // reverse sort Arrays.sort(quantity); q = quantity; for(int i=0, j=m-1; i&lt;j; i++, j--){ int t = q[i]; q[i] = q[j]; q[j] = t; } for(int num: nums) map.put(num, map.getOrDefault(num, 0)+1); // 暴力 return dfs(map, 0); } public boolean dfs(HashMap&lt;Integer, Integer&gt; map, int i){ if(i==m) return true; for(int num: map.keySet()){ int cnt = map.get(num); if(cnt&lt;q[i]) continue; map.put(num, cnt-q[i]); if(dfs(map, i+1)) return true; map.put(num, cnt); } return false; }}","link":"/Leetcode%20weekly%20contest/biweekly-contest-39.html"},{"title":"biweekly-contest-34","text":"[TOC] 矩阵对角线元素的和3 分割字符串的方案数4 删除最短的子数组使剩余数组有序5 统计所有可行路径6 11234class Solution: def diagonalSum(self, mat: List[List[int]]) -&gt; int: n = len(mat) return sum(mat[i][i] if n-1-i==i else mat[i][i]+mat[i][n-1-i] for i in range(n)) 212345678910111213141516171819202122232425262728class Solution: def numWays(self, s: str) -&gt; int: n = sum(1 if c=='1' else 0 for c in s) if n%3: return 0 if n==0: return math.comb(len(s)-1, 2)%(10**9+7) t = n//3 # 找到 t t+1 的 1 的位置 cur = 0 for i in range(len(s)): if s[i]=='1': cur += 1 if cur==t: it = i elif cur==t+1: it1 = i break cur = 0 # 倒着数 t t+1 1 的位置 for i in reversed(range(len(s))): if s[i]=='1': cur += 1 if cur==t: rit = i elif cur==t+1: rit1 = i break return ((it1-it)*(rit-rit1))%(10**9+7) 31234567891011121314151617181920212223242526272829from bisect import bisect_left, insortclass Solution: def findLengthOfShortestSubarray(self, nums: List[int]) -&gt; int: n = len(nums) if n&lt;2: return 0 l, r = 0, n-1 # 1. 确定首部递增序列的尾部 l while l+1&lt;n and nums[l+1]&gt;=nums[l]: l += 1 if l==n-1: return 0 # print(l) # 2. 确定尾部递增序列的首部 minr minr = r while minr-1&gt;=0 and nums[minr]&gt;=nums[minr-1]: minr -= 1 res = min(n-l-1, minr) while l&gt;=0 and r&gt;=0: if nums[l]&gt;nums[r]: res = min(res, (r-l)) else: while r-1&gt;=minr and nums[r-1]&gt;=nums[l]: r -= 1 res = min(res, (r-l-1)) # print(l, r) l -= 1 return res 4123456789class Solution: def countRoutes(self, nums: List[int], start: int, end: int, fuel: int) -&gt; int: n = len(nums) @functools.lru_cache(None) def helper(s, e, f): if f &lt; 0: return 0 return (sum(helper(i, end, f-abs(nums[s]-nums[i])) if i!=s else 0 for i in range(n))%(10**9+7) + (1 if s==end else 0))%(10**9+7) return helper(start, end, fuel)%(10**9+7)","link":"/Leetcode%20weekly%20contest/biweekly-contest-34.html"},{"title":"biweekly-contest-40","text":"[TOC] 最大重复子字符串3 合并两个链表4 设计前中后队列5 得到山形数组的最少删除次数6 前三题半小时，第四题做了一小时，一开始没有思路。最后 23:59:47 做完，很极限了 11234567891011121314151617181920212223class Solution { public int maxRepeating(String s, String word) { int res = 0; int n = s.length(), m = word.length(); int i = 0; while(i&lt;n){ if(s.charAt(i)!=word.charAt(0)){ i++; continue; } int j = 0; while(i+j&lt;n){ if(s.charAt(i+j)!=word.charAt(j%m)) break; j++; } res = Math.max(res, j/m); i += 1; // System.out.println(j+\"|\"+m); } return res; }} 21234567891011121314151617class Solution { public ListNode mergeInBetween(ListNode list1, int a, int b, ListNode list2) { ListNode a1=list1, b1=list1, tail2=list1;// a-1, b+1, list2 tail ListNode cur=list1; for(int i=0; i&lt;=b+1; i++){ if(i-(a-1)==0) a1 = cur; if(i-(b+1)==0) b1 = cur; cur = cur.next; } cur = list2; while(cur.next!=null) cur = cur.next; tail2 = cur; a1.next = list2; tail2.next = b1; return list1; }} 312345678910111213141516171819202122232425262728293031323334353637383940// 2 个 deque// [a,b,c] [d,e,f]class FrontMiddleBackQueue { private Deque&lt;Integer&gt; d1 = new LinkedList&lt;&gt;(); private Deque&lt;Integer&gt; d2 = new LinkedList&lt;&gt;(); public FrontMiddleBackQueue() {} public void pushFront(int val) { d1.offerFirst(val); } public void pushBack(int val) { d2.offerLast(val); } public int popFront() { if(d1.isEmpty() &amp;&amp; d2.isEmpty()) return -1; if(!d1.isEmpty()) return d1.pollFirst(); return d2.pollFirst(); } public int popBack() { if(d1.isEmpty() &amp;&amp; d2.isEmpty()) return -1; if(!d2.isEmpty()) return d2.pollLast(); return d1.pollLast(); } public void pushMiddle(int val) { while(d1.size()&gt;d2.size()) d2.offerFirst(d1.pollLast()); while(d2.size()&gt;d1.size()+1) d1.offerLast(d2.pollFirst()); d1.offerLast(val); } public int popMiddle() { if(d1.isEmpty() &amp;&amp; d2.isEmpty()) return -1; while(d1.size()&gt;d2.size()+1) d2.offerFirst(d1.pollLast()); while(d2.size()&gt;d1.size()) d1.offerLast(d2.pollFirst()); return d1.pollLast(); }} 4123456789101112131415161718192021222324252627282930// 最长递增子序列class Solution { public int minimumMountainRemovals(int[] nums) { int res = Integer.MIN_VALUE, n=nums.length; int[] dp1 = new int[n]; int[] dp2 = new int[n]; Arrays.fill(dp1, 1); Arrays.fill(dp2, 1); for(int i=1; i&lt;n-1; i++){ for(int j=0; j&lt;i; j++){ if(nums[j]&gt;=nums[i]) continue; dp1[i] = Math.max(dp1[i], dp1[j]+1); } } for(int i=n-2; i&gt;0; i--){ for(int j=i+1; j&lt;n; j++){ if(nums[j]&gt;=nums[i]) continue; dp2[i] = Math.max(dp2[i], dp2[j]+1); } } // for(int i: dp1) System.out.print(i+\"|\"); // System.out.println(\"\"); // for(int i: dp2) System.out.print(i+\"|\"); // System.out.println(\"\"); for(int i=1; i&lt;n-1; i++){ res = Math.max(res, dp1[i]+dp2[i]-1); } return n-res; }}","link":"/Leetcode%20weekly%20contest/biweekly-contest-40.html"},{"title":"weekly-contest-212","text":"[TOC] ![image-20201025184334845](/Users/zhangronghui/Library/Application Support/typora-user-images/image-20201025184334845.png) 1123456789101112131415class Solution { public char slowestKey(int[] l, String s) { int mi = 0, m=l[0]; for(int i=1; i&lt;l.length; i++){ int duration = l[i]-l[i-1]; if(duration&gt;m){ m = duration; mi = i; }else if(duration==m &amp;&amp; s.charAt(i)&gt;s.charAt(mi)){ mi = i; } } return s.charAt(mi); }} 21234567891011121314151617181920212223class Solution { public List&lt;Boolean&gt; checkArithmeticSubarrays(int[] nums, int[] l, int[] r) { int n=nums.length, m=l.length; List&lt;Boolean&gt; res = new ArrayList&lt;&gt;(); for(int i=0; i&lt;m; i++){ res.add(check(nums, l[i], r[i])); } return res; } public boolean check(int[] nums, int l, int r){ if(r==l+1) return true; int[] arr = new int[r-l+1]; for(int i=l; i&lt;=r; i++){ arr[i-l] = nums[i]; } Arrays.sort(arr); int gap = arr[1]-arr[0]; for(int i=1; i&lt;r-l+1; i++){ if(arr[i]-arr[i-1]!=gap) return false; } return true; }} 3一开始自己瞎jb写，也能过 123456789101112131415161718192021222324252627282930313233343536373839404142434445class Solution { boolean changed = true; public int minimumEffortPath(int[][] heights) { int n=heights.length, m=heights[0].length; int[][] dp = new int[n][m]; for(int i=0; i&lt;n; i++){ for(int j=0; j&lt;m; j++){ dp[i][j] = Integer.MAX_VALUE; } } dp[0][0] = 0; while(changed){ changed = false; for(int i=0; i&lt;n; i++){ for(int j=0; j&lt;m; j++){ update(heights, dp, n, m, i, j, i-1, j); update(heights, dp, n, m, i, j, i, j-1); } } // right to left for(int i=0; i&lt;n; i++){ for(int j=m-1; j&gt;=0; j--){ update(heights, dp, n, m, i, j, i, j+1); } } // down to up for(int j=m-1; j&gt;=0; j--){ for(int i=0; i&lt;n; i++){ update(heights, dp, n, m, i, j, i+1, j); } } } return dp[n-1][m-1]; } public void update(int[][] heights, int[][] dp, int n, int m, int i, int j, int ii, int jj){ if(ii&gt;=0 &amp;&amp; ii&lt;n &amp;&amp; jj&gt;=0 &amp;&amp; jj&lt;m){ int t = Math.max(Math.abs(heights[i][j]-heights[ii][jj]), dp[ii][jj]); if(t&lt;dp[i][j]){ changed = true; dp[i][j] = t; } } }} 最小体力消耗路径 - 最小体力消耗路径 - 力扣（LeetCode） 并查集1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253class DSU{ int[] p; DSU(int n){ p = new int[n]; for(int i=0; i&lt;n; i++){ p[i] = i; } } public int find(int x){ if(p[x]!=x) p[x] = find(p[x]); return p[x]; } public void union(int x, int y){ int u = find(x), v=find(y); if(u!=v) p[u] = v; } public boolean isSame(int x, int y){ return find(x)==find(y); }}class Edge{ int x; int y; int dist; Edge(int x, int y, int dist){ this.x = x; this.y = y; this.dist = dist; }}class Solution { public int minimumEffortPath(int[][] heights) { int n=heights.length, m=heights[0].length; List&lt;Edge&gt; edges = new ArrayList&lt;&gt;(); for(int i=0; i&lt;n; i++){ for(int j=0; j&lt;m; j++){ int cur=i*m+j; if(j&gt;0) edges.add(new Edge(cur, cur-1, Math.abs(heights[i][j]-heights[i][j-1]))); if(i&gt;0) edges.add(new Edge(cur, cur-m, Math.abs(heights[i][j]-heights[i-1][j]))); } } Collections.sort(edges, (a,b) -&gt; a.dist-b.dist); DSU dsu = new DSU(n*m); for(Edge edge: edges){ dsu.union(edge.x, edge.y); if(dsu.isSame(0, n*m-1)) return edge.dist; } return 0; }} 二分123456789101112131415161718192021222324252627282930313233class Solution { int n, m; public int minimumEffortPath(int[][] heights) { int l=0, r=999999, mid, ans=0; n=heights.length; m=heights[0].length; boolean[] visited; while(l&lt;=r){ mid = l+(r-l)/2; visited = new boolean[n*m]; // mid &gt;= ans if(check(heights, visited, mid, 0, 0, heights[0][0])){ ans = mid; r = mid-1; }else{ l = mid+1; } } return ans; } public boolean check(int[][] heights, boolean[] visited, int dist, int i, int j, int pre){ if(i&lt;0 || j&lt;0 || i&gt;=n || j&gt;=m || visited[i*m+j] || Math.abs(pre-heights[i][j])&gt;dist) return false; if(i==n-1 &amp;&amp; j==m-1) return true; visited[i*m+j] = true; pre = heights[i][j]; return check(heights, visited, dist, i-1, j, pre) || check(heights, visited, dist, i+1, j, pre) || check(heights, visited, dist, i, j-1, pre) || check(heights, visited, dist, i, j+1, pre); }} 412","link":"/Leetcode%20weekly%20contest/weekly-contest-212.html"},{"title":"weekly-contest-215","text":"[TOC] 设计有序流3 确定两个字符串是否接近4 将 x 减到 0 的最小操作数5 最大化网格幸福感7 1123456789101112131415161718192021222324252627282930class OrderedStream { String[] l; int n; int ptr = 1; public OrderedStream(int n) { l = new String[n+1]; this.n = n+1; // ignore index 0 } public List&lt;String&gt; insert(int id, String value) { l[id] = value; List&lt;String&gt; res = new ArrayList&lt;&gt;(); if(id!=ptr) return res; res.add(value); int i = id+1; while(i&lt;n &amp;&amp; l[i]!=null){ res.add(l[i]); i++; } ptr = i; return res; }}/** * Your OrderedStream object will be instantiated and called as such: * OrderedStream obj = new OrderedStream(n); * List&lt;String&gt; param_1 = obj.insert(id,value); */ 212345678910111213141516171819202122232425262728293031class Solution { public boolean closeStrings(String w1, String w2) { if(w1.length()!=w2.length()) return false; int[] m1 = new int[26], m2 = new int[26]; for(char c: w1.toCharArray()) m1[c-'a'] += 1; for(char c: w2.toCharArray()) m2[c-'a'] += 1; List&lt;Integer&gt; l1 = new ArrayList&lt;&gt;(), l2 = new ArrayList&lt;&gt;(); for(int i=0; i&lt;26; i++){ if(m1[i]!=0) l1.add(m1[i]); if(m2[i]!=0) l2.add(m2[i]); // 你有的字符我也要有 if(m1[i]==0 &amp;&amp; m2[i]!=0) return false; if(m2[i]==0 &amp;&amp; m1[i]!=0) return false; } // System.out.println(l1); // System.out.println(l2); // System.out.println(l1.size()+\"|\"+l2.size()); if(l1.size()!=l2.size()) return false; Collections.sort(l1); Collections.sort(l2); for(int i=0; i&lt;l1.size(); i++){ // Hence the comparison with == only works for numbers between -128 and 127. // System.out.println(l1.get(i)+\"|\"+l2.get(i) +\"|\"+ (l1.get(i)!=l2.get(i))); if((l1.get(i)-l2.get(i))!=0) return false; } return true; }} 3postsum -&gt; sufsum 更合适 1234567891011121314151617181920212223242526class Solution { public int minOperations(int[] nums, int x) { int n = nums.length; int[] presum = new int[n+1], postsum = new int[n+1]; for(int i=1; i&lt;=n; i++){ presum[i] = presum[i-1]+nums[i-1]; postsum[i] = postsum[i-1]+nums[n-i]; } // for(int i: presum) System.out.print(i+\"|\"); // System.out.println(\"\"); // for(int i: postsum) System.out.print(i+\"|\"); // 0|1|2|6|8|11| // 0|3|5|9|10|11| // 双指针 int i=0, j=n; int res = Integer.MAX_VALUE; while(i&lt;res &amp;&amp; i&lt;=n &amp;&amp; presum[i]&lt;=x){ while(n-j&gt;i-1 &amp;&amp; postsum[j]+presum[i]&gt;x) j--; if(n-j&gt;i-1 &amp;&amp; (postsum[j]+presum[i]-x==0)) res = Math.min(res, i+j); i++; } return res==Integer.MAX_VALUE?-1:res; }} 412","link":"/Leetcode%20weekly%20contest/weekly-contest-215.html"},{"title":"weekly-contest-217","text":"[TOC] 自闭，只是打卡 最富有客户的资产总量3 找出最具竞争力的子序列4 使数组互补的最少操作次数6 数组的最小偏移量7 【算法实况】下周执行比赛新规！思维量都比较大的一场周赛题目 - 力扣周赛 - LeetCode Weekly 217_哔哩哔哩 (゜ - ゜) つロ 干杯～-bilibili 看大师兄讲解👆 112 212 3先差分数组，再前缀和，太妙了 12 4 12","link":"/Leetcode%20weekly%20contest/weekly-contest-217.html"},{"title":"tricks-2020-09","text":"嗨，请准确无误地输入密码查看哟 ","link":"/tricks/tricks-2020-09.html"},{"title":"tricks-2020-10","text":"嗨，请准确无误地输入密码查看哟 ","link":"/tricks/tricks-2020-10.html"},{"title":"《Linux Shell 脚本攻略》阅读笔记","text":"豆瓣评分 8.1 内容简介 《Linux Shell 脚本攻略》通过细致剖析实际应用中的 110 多个案例，使许多看似复杂的 Linux shell 脚本任务迎刃而解。《Linux Shell 脚本攻略》会帮助读者利用少量命令的组合完成诸如文本处理、文件管理、备份等复杂的数据管理工作。它将告诉你如何利用 shell 命令快速开发常规任务，综合应用 grep、find、sed 和 awk 等常用命令，凭借短短几个命令行从 Web 挖掘数据的 shell 脚本，利用归档工具运行并自动化各种任务，诸如自动备份和存储；帮助你理解文件系统、文件类型以及文件管理；用 shell 创建以及维护文件或目录归档、压缩格式和加密技术；通过 srlell 脚本设置以太网和无线 LAN；使用登录技术监控网络上的各种动态。 [TOC] 其他Z-Shell Frequently-Asked Questions 第 1 章 小试牛刀1.2 终端打印echo 双引号 中需要转移 单引号不用 printf 不会自己添加换行 printf “%-5s %-10s %-4s\\n” No Name Mark -5: 左对齐占 5 的长度 %s %c %n %f echo -e “1\\t2\\t3” 用-e 不输出默认的换行 echo 还能输出彩色文本 1.3 玩转变量和环境变量env 输出当前 shell 中全部的环境变量 怎么查看其它进程的环境变量？ 1.通过 pgrep 获取 gedit 进程的 ID pgrep gedit 2.cat /proc/$PID/environ 使用函数添加环境变量12prepend() { [ -d \"$2\" ] &amp;&amp; eval $1=\\\"$2':'\\$$1\\\" &amp;&amp; export $1; }prepend PATH /opt/myapp/bin 先检查第二个参数的目录是否存在，eval 表达式将第一个参数的变量值设置为 第二个参数加上 : ，再加上第一个参数的原始值 如果$1 为空，会多一个： , 书中还改进了，太复杂了，当场去世 1.4 通过 shell 进行数学运算整数运算let result=no1+no2 使用 let 不需要变量前添加 $ let no1++ let no1– let no+=6 [] 的用法和 let 一样 result=$[ no1 + no2 ] 浮点数运算1result=`echo \"$no * 1.5\" | bc` bc 还能设置浮点数的精度，支持进度转换 **1.5 玩转文件描述符和重定向文件描述符 0 1 2 0： 输入 stdin 1： 输出 stdout 2： 错误 stderr 123456789101112131415# &gt; 等价于 1&gt;ls 1&gt;stdout.txt 2&gt;stderr.txt# 将 stderr 转换成 stdoutls &gt; out.txt 2&gt;&amp;1# 或ls &amp;&gt; out.txt# 可以追加到 /dev/null, 它会丢弃接收到的任何任何数据，null 也被称为黑洞# 若既想输出到文件，又想再次使用输出，可以使用 tee# tee 默认覆盖文件， tee -a 追加cat a* | tee -a out.txt | cat -n# tee - 可以将输出输出 2 次给 stdout 如:# 我测试了下，并不行# echo aaa | tee - 123456789101112# &lt;# 文件重定向到命令cmd &lt; file# 在脚本中，可以将多行文本输入到 log.txt 中cat&lt;&lt;EOF&gt;log.txtsfsadfasdfasasdfasdEOF# 一般是追加 &gt;&gt;cat&lt;&lt;EOF&gt;&gt;log.txt 1.6 数组和关联数组定义数组123456789101112131415# 等号周围不能有空格arr=(1 2 3 4)# 或者直接赋值arr[0]=1 # 赋值失败，因为索引从 1 开始arr[5]=5echo ${arr[0]} # 失败，因为索引从 1 开始# 输出数组所有的元素echo ${arr[*]}echo ${arr[@]}# 打印数组长度echo ${#arr[@]}echo ${#arr[*]} 关联数组 （字典？）1234567891011# 声明为关联数组declare -A d# 添加元素d=([k1]=v1 [k2]=v2)# 这样添加更加方便d[k3]=v3# 读取元素echo ${d[k3]}# 获取数组的索引echo ${!d[*]} # iterm 使用失败 1.7 使用别名alias 输出所有的别名 1alias rm='cp $@ ~/backup &amp;&amp; rm $@' \\cmd 执行 alias 之前的命令 1.8 获取终端信息tput stty 是两款终端处理工具 用tput 可以获取终端的行数和列数，终端名，移动光标，设置终端背景色等 用 stty 可以 实现输入密码时不显示输入内容 12345678#!/bin/shecho -e \"Enter password: \"# 禁止回显stty -echoread password# 允许回显stty echo 1.9 获取、设置日期和延时123456789101112# 日期及延时datedate +\"%T\"date +\"%s\"# --date 指定日期输入，但是我使用一直不行date --date \"jan 20 2001\" +\"%s\"date --date \"Jan 20 2001\" +\"%s\"date -date \"Jan 20 2001\" +\"%s\"date -d \"Jan 20 2001\" +\"%s\"# 记录程序运行时间start=$(date +%s) 1.10 调试脚本123# 使用 -x 参数开启调试bash -x 1.sh# 或者再脚本中 set -x 打开调试 set +x 关闭调试 1.11 函数和参数123456789# 两种建立连续序列的方法echo $(seq 0 19)# 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19# 数字和 .. 之间没有空格for i in {1..10}do echo $idone 123456789101112# 函数定义f(){}# 函数调用f;f arg1 arg2;$0 脚本名称$1 第一个参数$@ 全部参数$# 参数数量 1.12 读取命令序列输出123456789# 将命令的输出赋值给变量# 1.子 shell 法out=$(ls | cat -n)echo $out# 2.反引用法out=`ls | cat -n`echo $out 1.13 以不按回车键的方式读取字符12345678910111213141516# 读取 2 个字符到 var 中read -n 2 var# 将你输入的每一行存入 array 数组中read -a array# 其他参数-s 无回显 silent-t timeout 超时-p \"sdfsd\" 先显示提示信息-d delim_char 指定定界符# 如：read -n 8 -t 10 -p \"请在 10 秒内输入 8 个字符：\" -s passwordecho $password# mac + zsh 上很多read 参数 都不能使用 持续运行命令直至成功1repeat () { while true; do $@ &amp;&amp; return; sleep 10; done; } zsh 又抽风了，函数定义必须添加 function， $@ 不知道怎么改 虽然书上说 while :; 比 while true; 快，但是 zsh 用不了 while :; 还不如我之前写的重试函数： 123456retry () { while ! $1 do sleep $2 done} 1.14 字段分隔符和迭代器12345678910111213#!/bin/bashline=\"root:x:0:0:root:/root:/bin/bash\"oldIFS=$IFSIFS=\":\"count=0for item in $line;do [ $count -eq 0 ] &amp;&amp; user=$item; [ $count -eq 6 ] &amp;&amp; shell=$item; let count++;done;IFS=oldIFSecho \"$user $shell\" 12345678910# 遍历列表for i in list;do commands;done;for i in {1..50} {a..z} {A..Z};do echo -n $i;done; 最后那个%有点奇怪 1.15 比较与测试123456789101112131415161718192021222324252627282930313233343536373839# ifif condition;then command;fiif condition;then command;else if condition; then command;fi# 使用逻辑运算符可以让代码更简洁[ condition ] &amp;&amp; command;[ condition ] || command;# 算术比较[ 1 -eq 2 ] # =-ne ≠-gt &gt;-lt &lt;-ge ≥-le ≤# 文件系统相关[ -f var ] # 存在正常的文件或文件夹-e 存在文件 -d 存在文件夹-x 文件可执行...# 字符串比较[[ s1 == s2 ]] # 也可以只使用 =[[ s1 != s2 ]][[ s1 &gt; s2 ]][[ s1 &lt; s2 ]][[ -z s1 ]] # s1 是空串[[ -n s1 ]] # s1 不是空串 第 2 章 命令之乐2.1 简介 2.2 用 cat 进行拼接2.2.1 预备知识2.2.2 实战演练2.2.3 工作原理2.2.4 补充内容 2.3 录制与回放终端会话2.3.1 预备知识2.3.2 实战演练2.3.3 工作原理 2.4 文件查找与文件列表2.4.1 预备知识2.4.2 实战演练2.4.3 补充内容 2.5 玩转 xargs2.5.1 预备知识2.5.2 实战演练2.5.3 工作原理2.5.4 补充内容 2.6 用 tr 进行转换2.6.1 预备知识2.6.2 实战演练2.6.3 工作原理2.6.4 补充内容 2.7 校验和与核实2.7.1 预备知识2.7.2 实战演练2.7.3 工作原理2.7.4 补充内容 2.8 排序、单一与重复2.8.1 预备知识2.8.2 实战演练2.8.3 工作原理2.8.4 补充内容 2.9 临时文件命名与随机数2.9.1 实战演练2.9.2 工作原理 2.10 分割文件和数据2.10.1 工作原理2.10.2 补充内容 2.11 根据扩展名切分文件名2.11.1 实战演练2.11.2 工作原理 2.12 批量重命名和移动2.12.1 预备知识2.12.2 实战演练2.12.3 工作原理 2.13 拼写检查与词典操作2.13.1 实战演练2.13.2 工作原理 2.14 交互输入自动化2.14.1 预备知识2.14.2 实战演练2.14.3 工作原理2.14.4 补充内容 第 3 章 以文件之名3.1 简介 3.2 生成任意大小的文件3.3 文本文件的交集与差集3.3.1 预备知识3.3.2 实战演练 3.4 查找并删除重复文件3.4.1 预备知识3.4.2 实战演练3.4.3 工作原理3.4.4 参考 3.5 创建长路径目录3.5.1 预备知识3.5.2 实战演练 3.6 文件权限、所有权和粘滞位3.6.1 预备知识3.6.2 实战演练3.6.3 补充内容 3.7 创建不可修改文件3.7.1 预备知识 3.7.2 实战演练 3.8 批量生成空白文件3.8.1 预备知识3.8.2 实战演练 3.9 查找符号链接及其指向目标3.9.1 预备知识3.9.2 实战演练 3.10 列举文件类型统计信息3.10.1 预备知识3.10.2 实战演练3.10.3 工作原理 3.11 环回文件与挂载3.11.1 预备知识3.11.2 实战演练3.11.3 补充内容 3.12 生成 ISO 文件及混合 ISO3.12.1 预备知识3.12.2 实战演练3.12.3 补充内容 3.13 查找文件差异并进行修补3.13.1 实战演练3.13.2 补充内容 3.14 head 与 tail—— 打印文件的前 10 行和后 10 行3.15 只列出目录的其他方法3.15.1 预备知识3.15.2 实战演练 3.16 在命令行中用 pushd 和 popd 快速定位3.16.1 预备知识3.16.2 实战演练3.16.3 补充内容 3.17 统计文件的行数、单词数和字符数3.17.1 预备知识 3.17.2 实战演练3.17.3 补充知识 3.18 打印目录树3.18.1 预备知识3.18.2 实战演练3.18.3 补充内容 第 4 章 让文本飞4.1 简介4.2 正则表达式入门4.2.1 预备知识4.2.2 实战演练4.2.3 工作原理4.2.4 补充内容4.3 用 grep 在文件中搜索文本4.3.1 预备知识4.3.2 实战演练4.3.3 补充内容4.4 用 cut 按列切分文件4.4.1 预备知识4.4.2 实战演练4.4.3 补充内容4.5 统计特定文件中的词频4.5.1 预备知识4.5.2 实战演练4.5.3 工作原理4.5.4 参考4.6 sed 入门4.6.1 实战演练4.6.2 补充内容4.7 awk 入门4.7.1 实战演练4.7.2 工作原理4.7.3 补充内容4.8 替换文本或文件中的字符串4.8.1 预备知识4.8.2 实战演练4.8.3 补充内容4.8.4 参考4.9 压缩或解压缩 JavaScript4.9.1 预备知识4.9.2 工作原理4.9.3 工作原理4.9.4 参考4.10 对文件中的行、单词和字符进行迭代4.10.1 预备知识4.10.2 实战演练4.10.3 工作原理4.10.4 参考4.11 按列合并文件4.11.1 工作原理4.11.2 参考4.12 打印文件或行中的第 n 个单词或列4.12.1 预备知识4.12.2 实战演练4.12.3 参考4.13 打印不同行或样式之间的文本4.13.1 预备知识4.13.2 实战演练4.13.3 参考4.14 用脚本检验回文字符串4.14.1 预备知识4.14.2 工作原理4.14.3 工作原理4.14.4 补充内容4.14.5 参考4.15 以逆序形式打印行4.15.1 预备知识4.15.2 实战演练4.15.3 工作原理4.15.4 参考4.16 解析文本中的电子邮件地址和 URL4.16.1 预备知识4.16.2 实战演练4.16.3 工作原理4.16.4 参考4.17 打印文件中某个样式之前或之后的 n 行4.17.1 预备知识4.17.2 实战演练4.17.3 参考4.18 在文件中移除包含某个单词的句子4.18.1 预备知识4.18.2 实战演练4.18.3 工作原理4.18.4 参考4.19 用 awk 实现 head、tail 和 tac4.19.1 预备知识4.19.2 实战演练4.19.3 工作原理4.19.4 参考4.20 文本切片与参数操作4.20.1 实战演练4.20.2 参考 第 5 章 一团乱麻？没这回事5.1 入门5.2 网站下载5.2.1 预备知识5.2.2 实战演练5.2.3 补充内容5.3 以格式化纯文本形式下载网页5.4 cURL 入门5.4.1 预备知识5.4.2 实战演练5.4.3 补充内容5.4.4 参考5.5 从命令行访问 Gmail5.5.1 实战演练5.5.2 工作原理5.5.3 参考5.6 解析网站数据5.6.1 实战演练5.6.2 工作原理5.6.3 参考5.7 制作图片抓取器及下载工具5.7.1 实战演练5.7.2 工作原理5.7.3 参考5.8 网页相册生成器5.8.1 预备知识5.8.2 实战演练5.8.3 工作原理5.8.4 参考5.9 Twitter 命令行客户端5.9.1 预备知识5.9.2 实战演练5.9.3 工作原理5.9.4 参考5.10 基于 Web 后端的定义查询工具5.10.1 预备知识5.10.2 实战演练5.10.3 工作原理5.10.4 参考5.11 查找网站中的无效链接5.11.1 预备知识5.11.2 实战演练5.11.3 工作原理5.11.4 参考5.12 跟踪网站变更5.12.1 预备知识5.12.2 实战演练5.12.3 工作原理5.12.4 参考5.13 以 POST 方式发送网页并读取响应5.13.1 预备知识5.13.2 实战演练5.13.3 补充内容5.13.4 参考 第 6 章 B 计划6.1 简介6.2 用 tar 归档6.2.1 预备知识6.2.2 实战演练6.2.3 补充知识6.2.4 参考6.3 用 cpio 归档6.4 用 gunzip 或 gzip 压缩6.4.1 实战演练6.4.2 补充内容6.4.3 参考6.5 用 bunzip 或 bzip 压缩6.5.1 实战演练6.5.2 补充内容6.5.3 参考6.6 用 lzma 压缩6.6.1 实战演练6.6.2 补充内容6.6.3 参考6.7 用 zip 归档和压缩6.8 超高压缩率的 squashfs 文件系统6.8.1 预备知识6.8.2 实战演练6.8.3 补充内容6.9 加密工具与散列6.10 用 raync 备份系统快照6.10.1 实战演练6.10.2 补充内容6.11 用 Git 备份版本控制6.11.1 预备知识6.11.2 实战演练6.12 用 dd 克隆磁盘6.12.1 预备知识6.12.2 实战演练6.12.3 补充内容6.12.4 参考 第 7 章 无网不利7.1 简介7.2 联网知识入门7.2.1 新手上路7.2.2 实战演练7.2.3 补充内容7.2.4 参考7.3 使用 ping7.3.1 实战演练7.3.2 补充内容7.4 列出网络上所有的活动主机7.4.1 新手上路7.4.2 实战演练7.4.3 工作原理7.4.4 补充内容7.4.5 参考7.5 传输文件7.5.1 新手上路7.5.2 实战演练7.5.3 补充内容7.5.4 参考7.6 用脚本设置以太网与无线 LAN7.6.1 新手上路7.6.2 实战演练7.6.3 工作原理7.6.4 参考7.7 用 SSH 实现无密码自动登录7.8 用 SSH 在远程主机上运行命令7.8.1 新手上路7.8.2 实战演练7.8.3 补充内容7.8.4 参考7.9 在本地挂载点上挂载远程驱动器7.9.1 新手上路7.9.2 实战演练7.9.3 参考7.10 在网络上发送多播式窗口消息7.10.1 新手上路7.10.2 实战演练7.10.3 工作原理7.10.4 参考7.11 网络流量与端口分析7.11.1 新手上路7.11.2 实战演练7.11.3 补充内容 第 8 章 当个好管家8.1 简介8.2 统计磁盘的使用情况8.2.1 新手上路8.2.2 实战演练8.2.3 补充内容8.3 计算命令执行时间8.4 与当前登录用户、启动日志及启动故障的相关信息8.4.1 新手上路8.4.2 实战演练8.5 打印出 10 条最常使用的命令8.5.1 新手上路8.5.2 实战演练8.5.3 工作原理8.6 列出 1 小时内占用 CPU 最多的 10 个进程8.6.1 新手上路8.6.2 实战演练8.6.3 工作原理8.6.4 参考8.7 用 watch 监视命令输出8.7.1 实战演练8.7.2 补充内容8.8 对文件及目录访问进行记录8.8.1 新手上路8.8.2 实战演练8.8.3 工作原理8.9 用 logrotate 管理日志文件8.9.1 新手上路8.9.2 实战演练8.10 用 syslog 记录日志8.10.1 新手上路8.10.2 实战演练8.10.3 参考8.11 通过监视用户登录找出入侵者8.11.1 新手上路8.11.2 实战演练8.11.3 工作原理8.12 监视远程磁盘的健康情况8.12.1 新手上路8.12.2 实战演练8.12.3 工作原理8.12.4 参考8.13 找出系统中用户的活动时段8.13.1 新手上路8.13.2 实战演练8.13.3 工作原理 第 9 章 管理重任9.1 简介9.2 收集进程信息9.2.1 新手上路9.2.2 实战演练9.2.3 补充内容9.2.4 参考9.3 杀死进程以及发送或响应信号9.3.1 新手上路9.3.2 实战演练9.3.3 补充内容9.4 which、whereis、file、whatis 与平均负载9.5 向用户终端发送消息9.5.1 新手上路9.5.2 实战演练9.5.3 工作原理9.6 收集系统信息9.7 用 /proc 收集信息9.8 用 cron 进行调度9.8.1 新手上路9.8.2 实战演练9.8.3 补充内容9.9 从 Bash 中读写 MySQL 数据库9.9.1 新手上路9.9.2 实战演练9.9.3 工作原理9.10 用户管理脚本9.10.1 实战演练9.10.2 工作原理9.11 图像文件的批量缩放及格式转换9.11.1 新手上路9.11.2 实战演练9.11.3 工作原理9.11.4 参考","link":"/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E3%80%8ALinux-Shell-%E8%84%9A%E6%9C%AC%E6%94%BB%E7%95%A5%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0.html"},{"title":"《MongoDB 实战》阅读笔记","text":"豆瓣评分：5.5 本书分三部分通过大量的实例代码介绍了 MongoDB 数据库底层的实现以及大型互联网 Web 项目数据库设计原则。部分对 MongoDB 进行了整体介绍，并介绍了实际的开发例子，另外还介绍了 JavaScript shell 和 Ruby 驱动。第二部分通过逐步实现一个电商数据模型和实现必要的 CRUD 操作来详细介绍了 MongoDB 的文档数据模型、查询语言和 CRUD（新增、读取、更新和删除）操作。本书的后部分从数据库专家的角度来看待 MongoDB，介绍了数据库的性能、部署、容错和伸缩性等所有的知识。 本书适合想深入学习 MongoDB 的开发人员，主要关注 MongoDB 数据库。 [TOC] 图书馆借阅的书，网上也没有电子版，只能自己记了 困惑MongoDB 数据存在哪里？内存 or 磁盘？缓存是怎样的？ 默认有没有索引？有的话是哪个？id? 第一章MongoDB 提供了几个命令行工具mongodump mongostore 备份和恢复数据库的工具 mongoexport mongoimport 导入或导出 json CSV等格式的数据 mongosniff 查看发送给数据库的命令，会把 BSON 转换成人类可读的 mongostat 与 iostat 类似，查看 MongoDB 数据库的状态，包括，每秒的操作数，分配虚拟内存的数量，以及服务器的连接数量 mongotop 显示 MongoDB 在每个集合里话费的读取和写入数据的时间总数 mongoperf MongoDB 操作磁盘情况 mongoplog 展示 MongoDB 日志 Bsondump bson-&gt;json 等格式 如 将 json 数据导入 MongoDB 数据库中： 1cat sample.json | mongoimport -c tweets Why MongoDB ?关系型数据库最大的特点是支持 SQL 查询语句，故 SQL 数据库的适用场景为 需要事务的系统（银行或金融）或 SQL、规范化数据模型 而像 MongoDB 的 NoSQL 更适用于 高吞吐量（如消息队列），缓存，web 网站等场景 第二章动态操作数据只有在第一次插入数据库和集合是才会创建数据库，所以文档的数据结构不用提前定义 shell 操作以操作 db 数据库中的 users 集合为例 123456789101112131415use dbdb.users.insert({username: \"smith\"})db.users.find()db.users.find({username: \"jones\"})db.users.find({username: \"jones\"}).pretty()# find 里的 json 的多个字段默认的联合逻辑是 AND# 可以用 $and 和 $or 组合多个条件db.users.update({查询条件}, {$set: {更新的字段 json}})# 如果不加 set 就整个替换为后面的 json，之前的字段全部不保留# 或者用 $addToSet 将查询的数据插入其他集合db.users.remove()db.users.remove({限制条件}) 创建和查询索引可以从 shell 方便地创建索引 1db.numbers.createIndex({num: 1}) explain 1db.numbers.find({...}).explain(\"executionStats\") explain 输出的结果的 json 中包括 totalDocsExamined 扫描的条数 indexName 使用的索引(没有使用索引就不显示这个字段) 查看数据库状态123# 可以在数据库或集合中使用 statsdb.stats()db.users.stats() 数据库 集合 文档","link":"/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E3%80%8AMongoDB-%E5%AE%9E%E6%88%98%E3%80%8B%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0.html"},{"title":"tricks-2020-11","text":"嗨，请准确无误地输入密码查看哟 ","link":"/tricks/tricks-2020-11.html"},{"title":"《MySQL8 cookbook》 阅读笔记","text":"豆瓣评分 7.4 内容简介MySQL 8.0 的发布是 MySQL 发展历史上的一个重要里程碑，也是开源数据库领域内的一个大事件。针对这个版本，MySQL 官方团队做了太多的工作，从查询优化到集群架构，从参数调整到特性支持，MySQL 都有了革命性的变化。《MySQL 8 Cookbook（中文版）》基于 MySQL 8.0，以基础知识为入手点，以讲解技术特性为目标，以案例作为理论的补充，详细介绍了 MySQL 的方方面面，提供了超过 150 个高性能数据库查询与管理技巧，是 MySQL 入门者和管理者的必读之作。 [TOC]","link":"/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E3%80%8AMySQL8-cookbook%E3%80%8B-%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0.html"},{"title":"《Redis 设计与实现》","text":"Redis 设计与实现 — Redis 设计与实现 [TOC] 第一部分：数据结构与对象2. 简单动态字符串SDS 的定义SDS 与 C 字符串的区别SDS API 重点回顾Redis 只会使用 C 字符串作为字面量， 在大多数情况下， Redis 使用 SDS （Simple Dynamic String，简单动态字符串）作为字符串表示。 比起 C 字符串， SDS 具有以下优点： 常数复杂度获取字符串长度。 杜绝缓冲区溢出。 减少修改字符串长度时所需的内存重分配次数。 二进制安全。 兼容部分 C 字符串函数。 3. 链表链表和链表节点的实现链表和链表节点的 API 重点回顾 链表被广泛用于实现 Redis 的各种功能， 比如列表键， 发布与订阅， 慢查询， 监视器， 等等。 每个链表节点由一个 listNode 结构来表示， 每个节点都有一个指向前置节点和后置节点的指针， 所以 Redis 的链表实现是双端链表。 每个链表使用一个 list 结构来表示， 这个结构带有表头节点指针、表尾节点指针、以及链表长度等信息。 因为链表表头节点的前置节点和表尾节点的后置节点都指向 NULL ， 所以 Redis 的链表实现是无环链表。 通过为链表设置不同的类型特定函数， Redis 的链表可以用于保存各种不同类型的值。 4. 字典字典的实现哈希算法解决键冲突rehash 渐进式 rehashrehash 的过程： 为 ht[1] 分配空间 将字典中 rehashidx 设为 0，表示 rehash 工作正式开始(rehashidx 表示 ht[0] 中下一个需要 rehash 的索引位置) 每次对字典进行增删改查，检测到 rehashidx&gt;=0, 则程序除了处理指定的操作，还会顺带将 ht[0] 在 rehashidx 索引上的所有键值对 rehash 到 ht[1] 中，rehashidx++ rehashidx 等于 ht[0] 的长度时，rehash结束，将 rehashidx 设为 -1 渐进式 rehash 的好处在于采取分而治之的方式，将 rehash 键值对的工作均摊到每次增删改查的操作上，避免了几种 rehash 而带来的庞大计算量。 字典 API 重点回顾 字典被广泛用于实现 Redis 的各种功能， 其中包括数据库和哈希键。 Redis 中的字典使用哈希表作为底层实现， 每个字典带有两个哈希表， 一个用于平时使用， 另一个仅在进行 rehash 时使用。 当字典被用作数据库的底层实现， 或者哈希键的底层实现时， Redis 使用 MurmurHash2 算法来计算键的哈希值。 哈希表使用链地址法来解决键冲突， 被分配到同一个索引上的多个键值对会连接成一个单向链表。 在对哈希表进行扩展或者收缩操作时， 程序需要将现有哈希表包含的所有键值对 rehash 到新哈希表里面， 并且这个 rehash 过程并不是一次性地完成的， 而是渐进式地完成的。 5. 跳跃表跳跃表的实现跳跃表 包含的属性： header tail level 目前跳跃表内，层数最大的节点的层数 length 跳跃表节点 包含的属性： level: 每个节点的 level 数量可能不同。每个 level 包括当前 level 指向下一个节点的指针和这 2 个节点之间的跨度 backward 指针 score obj 每次创建一个新跳跃表节点，程序根据幂次定律（越大的数出现的概率越小）随机生成一个 1~32之间的值作为 level 数组的大小，这个大小就是层的高度。如：高度为 3 的节点有 level[0] level[1] level[2] 三个向前的指针。 跳跃表 API 重点回顾 跳跃表是有序集合的底层实现之一， 除此之外它在 Redis 中没有其他应用。 Redis 的跳跃表实现由 zskiplist 和 zskiplistNode 两个结构组成， 其中 zskiplist 用于保存跳跃表信息（比如表头节点、表尾节点、长度）， 而 zskiplistNode 则用于表示跳跃表节点。 每个跳跃表节点的层高都是 1 至 32 之间的随机数。 在同一个跳跃表中， 多个节点可以包含相同的分值， 但每个节点的成员对象必须是唯一的。 跳跃表中的节点按照分值大小进行排序， 当分值相同时， 节点按照成员对象的大小进行排序。 6. 整数集合 intset整数集合的实现intset 包括的属性： encoding length contents[] encoding 可以是 intset_enc_int16 intset_enc_int32 intset_enc_int64，表示 contents 数组中元素的整数类型 升级新增元素大于当前 intset 类型的整数上限是，需要对 intset 进行升级 升级的好处降级 整数集合 API 重点回顾 整数集合是集合键的底层实现之一。 整数集合的底层实现为数组， 这个数组以有序、无重复的方式保存集合元素， 在有需要时， 程序会根据新添加元素的类型， 改变这个数组的类型。 升级操作为整数集合带来了操作上的灵活性， 并且尽可能地节约了内存。 整数集合只支持升级操作， 不支持降级操作。 7. 压缩列表压缩列表的构成压缩列表是为了节约内存开发的 压缩列表节点的构成previous_entry_length encoding content 连锁更新压缩列表 API 重点回顾 压缩列表是一种为节约内存而开发的顺序型数据结构。 压缩列表被用作列表键和哈希键的底层实现之一。 压缩列表可以包含多个节点，每个节点可以保存一个字节数组或者整数值。 添加新节点到压缩列表， 或者从压缩列表中删除节点， 可能会引发连锁更新操作， 但这种操作出现的几率并不高。 8. 对象对象的类型与编码123456789101112typedef struct redisObject{ // 类型 unsigned type: 4; // 编码 unsigned encoding: 4; // 指向底层实现数据结构的指针 void *ptr; // 引用计数 int refcount; // 最后一次被程序访问的时间 unsigned lru;} 类型指的是 Redis 数据库中保存的值的类型，可以是 redis_string , redis_list, redis_hash, redis_set, redis_zset 使用 type key 查询键对应的值的类型 编码底层实际使用的数据结构 使用 object encoding key 可以查询编码 字符串对象字符串 对象的编码可以是 int、raw、embstr，分别针对 整数 长字符 和 短字符 列表对象列表 对象的编码可以是 ziplist 或者 linkedlist 某一类型采用不同的编码主要是综合考虑 空间和时间 编码使用 ziplsit 的条件： 列表中所有字符串长度小于64字节 元素数量少于 512 个 以上 2 个条件的上限值可以修改 哈希对象哈希 对象的编码可以是 ziplist 和 hashtable 集合对象集合 对象的编码可以是 intset 和 hashtable 有序集合对象有序集合 对象的编码可以是 ziplist 和 skiplist skiplist 编码的有序集合 同时用了 跳跃表 和 字典 原因：为了让查找元素的分值与范围查找的复杂度降到最低 如果只用字典实现有序集合，每次范围操作时都要对所有元素进行排序，消耗 O(NlogN) 的时间复杂度和 O(N) 的额外内存空间。 如果只使用跳跃表，查找分值的复杂度为 O(logN) , 利用字典可以将复杂度降到 O(1) 类型检查与命令多态Redis 操作建的命令基本分为 2 类：一种可以操作所有类型的键，如 del expire rename type object 等 另一种只能对特定类型的键执行 redis 服务器收到命令后，会对命令的合法性进行检查 内存回收c 语言不具备自动内存回收功能，索引 Redis 自己构造了利用引用计数技术实现的内存回收机制，程序可以根据对象的引用计数信息，在适当的时候自动释放对象并进行内存回收。 对象共享Redis 在初始化服务器的时候，创建 0-9999 1 万个字符串对象， 对象的空转时长根据对象的 lru 属性计算出对象的空转时长 object idletime key 重点回顾 Redis 数据库中的每个键值对的键和值都是一个对象。 Redis 共有字符串、列表、哈希、集合、有序集合五种类型的对象， 每种类型的对象至少都有两种或以上的编码方式， 不同的编码可以在不同的使用场景上优化对象的使用效率。 服务器在执行某些命令之前， 会先检查给定键的类型能否执行指定的命令， 而检查一个键的类型就是检查键的值对象的类型。 Redis 的对象系统带有引用计数实现的内存回收机制， 当一个对象不再被使用时， 该对象所占用的内存就会被自动释放。 Redis 会共享值为 0 到 9999 的字符串对象。 对象会记录自己的最后一次被访问的时间， 这个时间可以用于计算对象的空转时间。 第二部分：单机数据库的实现9. 数据库服务器中的数据库切换数据库数据库键空间设置键的生存时间或过期时间过期键删除策略Redis 的过期键删除策略AOF 、RDB 和复制功能对过期键的处理数据库通知 重点回顾 Redis 服务器的所有数据库都保存在 redisServer.db 数组中， 而数据库的数量则由 redisServer.dbnum 属性保存。 客户端通过修改目标数据库指针， 让它指向 redisServer.db 数组中的不同元素来切换不同的数据库。 数据库主要由 dict 和 expires 两个字典构成， 其中 dict 字典负责保存键值对， 而 expires 字典则负责保存键的过期时间。 因为数据库由字典构成， 所以对数据库的操作都是建立在字典操作之上的。 数据库的键总是一个字符串对象， 而值则可以是任意一种 Redis 对象类型， 包括字符串对象、哈希表对象、集合对象、列表对象和有序集合对象， 分别对应字符串键、哈希表键、集合键、列表键和有序集合键。 expires 字典的键指向数据库中的某个键， 而值则记录了数据库键的过期时间， 过期时间是一个以毫秒为单位的 UNIX 时间戳。 Redis 使用惰性删除和定期删除两种策略来删除过期的键： 惰性删除策略只在碰到过期键时才进行删除操作， 定期删除策略则每隔一段时间， 主动查找并删除过期键。 执行 SAVE 命令或者 BGSAVE 命令所产生的新 RDB 文件不会包含已经过期的键。 执行 BGREWRITEAOF 命令所产生的重写 AOF 文件不会包含已经过期的键。 当一个过期键被删除之后， 服务器会追加一条 DEL 命令到现有 AOF 文件的末尾， 显式地删除过期键。 当主服务器删除一个过期键之后， 它会向所有从服务器发送一条 DEL 命令， 显式地删除过期键。 从服务器即使发现过期键， 也不会自作主张地删除它， 而是等待主节点发来 DEL 命令， 这种统一、中心化的过期键删除策略可以保证主从服务器数据的一致性。 当 Redis 命令对数据库进行修改之后， 服务器会根据配置， 向客户端发送数据库通知。 10. RDB 持久化RDB 文件的创建与载入自动间隔性保存RDB 文件结构分析 RDB 文件 重点回顾 RDB 文件用于保存和还原 Redis 服务器所有数据库中的所有键值对数据。 SAVE 命令由服务器进程直接执行保存操作，所以该命令会阻塞服务器。 BGSAVE 命令由子进程执行保存操作，所以该命令不会阻塞服务器。 服务器状态中会保存所有用 save 选项设置的保存条件，当任意一个保存条件被满足时，服务器会自动执行 BGSAVE 命令。 RDB 文件是一个经过压缩的二进制文件，由多个部分组成。 对于不同类型的键值对， RDB 文件会使用不同的方式来保存它们。 11. AOF 持久化AOF 持久化的实现AOF 文件的载入与数据还原AOF 重写 重点回顾 AOF 文件通过保存所有修改数据库的写命令请求来记录服务器的数据库状态。 AOF 文件中的所有命令都以 Redis 命令请求协议的格式保存。 命令请求会先保存到 AOF 缓冲区里面， 之后再定期写入并同步到 AOF 文件。 appendfsync 选项的不同值对 AOF 持久化功能的安全性、以及 Redis 服务器的性能有很大的影响。 服务器只要载入并重新执行保存在 AOF 文件中的命令， 就可以还原数据库本来的状态。 AOF 重写可以产生一个新的 AOF 文件， 这个新的 AOF 文件和原有的 AOF 文件所保存的数据库状态一样， 但体积更小。 AOF 重写是一个有歧义的名字， 该功能是通过读取数据库中的键值对来实现的， 程序无须对现有 AOF 文件进行任何读入、分析或者写入操作。 在执行 BGREWRITEAOF 命令时， Redis 服务器会维护一个 AOF 重写缓冲区， 该缓冲区会在子进程创建新 AOF 文件的期间， 记录服务器执行的所有写命令。 当子进程完成创建新 AOF 文件的工作之后， 服务器会将重写缓冲区中的所有内容追加到新 AOF 文件的末尾， 使得新旧两个 AOF 文件所保存的数据库状态一致。 最后， 服务器用新的 AOF 文件替换旧的 AOF 文件， 以此来完成 AOF 文件重写操作。(这跟 MySQL 的 recreate 重建表类似，为了不阻塞其他修改，将修改记录到日志，重建完成后将日志应用到新表) 12. 事件这一节没有太看懂 文件事件Redis 基于 Reactor 模式开发了自己的网络事件处理器： 这个处理器被称为文件事件处理器（file event handler）： 文件事件处理器使用 I/O 多路复用（multiplexing）程序来同时监听多个套接字， 并根据套接字目前执行的任务来为套接字关联不同的事件处理器。 当被监听的套接字准备好执行连接应答（accept）、读取（read）、写入（write）、关闭（close）等操作时， 与操作相对应的文件事件就会产生， 这时文件事件处理器就会调用套接字之前关联好的事件处理器来处理这些事件。 虽然文件事件处理器以单线程方式运行， 但通过使用 I/O 多路复用程序来监听多个套接字， 文件事件处理器既实现了高性能的网络通信模型， 又可以很好地与 Redis 服务器中其他同样以单线程方式运行的模块进行对接， 这保持了 Redis 内部单线程设计的简单性。 Redis 的 I/O 多路复用程序的所有功能都是通过包装常见的 select 、 epoll 、 evport 和 kqueue 这些 I/O 多路复用函数库来实现的 时间事件事件的调度与执行 重点回顾 Redis 服务器是一个事件驱动程序， 服务器处理的事件分为时间事件和文件事件两类。 文件事件处理器是基于 Reactor 模式实现的网络通讯程序。 文件事件是对套接字操作的抽象： 每次套接字变得可应答（acceptable）、可写（writable）或者可读（readable）时， 相应的文件事件就会产生。 文件事件分为 AE_READABLE 事件（读事件）和 AE_WRITABLE 事件（写事件）两类。 时间事件分为定时事件和周期性事件： 定时事件只在指定的时间达到一次， 而周期性事件则每隔一段时间到达一次。 服务器在一般情况下只执行 serverCron 函数一个时间事件， 并且这个事件是周期性事件。 文件事件和时间事件之间是合作关系， 服务器会轮流处理这两种事件， 并且处理事件的过程中也不会进行抢占。 时间事件的实际处理时间通常会比设定的到达时间晚一些。 参考资料 13. 客户端这一节没有太看懂 客户端属性客户端的创建与关闭 重点回顾 服务器状态结构使用 clients 链表连接起多个客户端状态， 新添加的客户端状态会被放到链表的末尾。 客户端状态的 flags 属性使用不同标志来表示客户端的角色， 以及客户端当前所处的状态。 输入缓冲区记录了客户端发送的命令请求， 这个缓冲区的大小不能超过 1 GB 。 命令的参数和参数个数会被记录在客户端状态的 argv 和 argc 属性里面， 而 cmd 属性则记录了客户端要执行命令的实现函数。 客户端有固定大小缓冲区和可变大小缓冲区两种缓冲区可用， 其中固定大小缓冲区的最大大小为 16 KB ， 而可变大小缓冲区的最大大小不能超过服务器设置的硬性限制值。 输出缓冲区限制值有两种， 如果输出缓冲区的大小超过了服务器设置的硬性限制， 那么客户端会被立即关闭； 除此之外， 如果客户端在一定时间内， 一直超过服务器设置的软性限制， 那么客户端也会被关闭。 当一个客户端通过网络连接连上服务器时， 服务器会为这个客户端创建相应的客户端状态。 网络连接关闭、 发送了不合协议格式的命令请求、 成为 CLIENT_KILL 命令的目标、 空转时间超时、 输出缓冲区的大小超出限制， 以上这些原因都会造成客户端被关闭。 处理 Lua 脚本的伪客户端在服务器初始化时创建， 这个客户端会一直存在， 直到服务器关闭。 载入 AOF 文件时使用的伪客户端在载入工作开始时动态创建， 载入工作完毕之后关闭。 14. 服务器命令请求的执行过程serverCron 函数初始化服务器 重点回顾 一个命令请求从发送到完成主要包括以下步骤： 1. 客户端将命令请求发送给服务器； 2. 服务器读取命令请求，并分析出命令参数； 3. 命令执行器根据参数查找命令的实现函数，然后执行实现函数并得出命令回复； 4. 服务器将命令回复返回给客户端。 serverCron 函数默认每隔 100 毫秒执行一次， 它的工作主要包括更新服务器状态信息， 处理服务器接收的 SIGTERM 信号， 管理客户端资源和数据库状态， 检查并执行持久化操作， 等等。 服务器从启动到能够处理客户端的命令请求需要执行以下步骤： 1. 初始化服务器状态； 2. 载入服务器配置； 3. 初始化服务器数据结构； 4. 还原数据库状态； 5. 执行事件循环。 第三部分：多机数据库的实现复制旧版复制功能的实现旧版复制功能的缺陷新版复制功能的实现部分重同步的实现PSYNC 命令的实现复制的实现心跳检测重点回顾 Sentinel启动并初始化 Sentinel获取主服务器信息获取从服务器信息向主服务器和从服务器发送信息接收来自主服务器和从服务器的频道信息检测主观下线状态检查客观下线状态选举领头 Sentinel故障转移重点回顾参考资料 集群节点槽指派在集群中执行命令重新分片ASK 错误复制与故障转移消息重点回顾 第四部分：独立功能的实现发布与订阅频道的订阅与退订模式的订阅与退订发送消息查看订阅信息重点回顾参考资料 事务事务的实现WATCH 命令的实现事务的 ACID 性质重点回顾参考资料 Lua 脚本创建并修改 Lua 环境Lua 环境协作组件EVAL 命令的实现EVALSHA 命令的实现脚本管理命令的实现脚本复制重点回顾参考资料 排序SORT 命令的实现ALPHA 选项的实现ASC 选项和 DESC 选项的实现BY 选项的实现带有 ALPHA 选项的 BY 选项的实现LIMIT 选项的实现GET 选项的实现STORE 选项的实现多个选项的执行顺序重点回顾 二进制位数组位数组的表示GETBIT 命令的实现SETBIT 命令的实现BITCOUNT 命令的实现BITOP 命令的实现重点回顾参考资料 慢查询日志慢查询记录的保存慢查询日志的阅览和删除添加新日志重点回顾 监视器成为监视器向监视器发送命令信息重点回顾","link":"/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E3%80%8ARedis-%E8%AE%BE%E8%AE%A1%E4%B8%8E%E5%AE%9E%E7%8E%B0%E3%80%8B.html"},{"title":"极客时间-MYSQL45讲-笔记","text":"[TOC] 困惑|总结两阶段锁 两阶段提交 间隙锁的规则 不建议使用长事务的几个原因 用不到的 undo log 在事务结束才会删除，长事务会导致占用存储空间 事务的 MDL 锁在事务结束才会释放，长事务可能导致 MDL 写锁阻塞，写锁阻塞，其他读锁也被阻塞，影响系统正常使用 幻读怎么导致的 基础篇 (8 讲)01 | 基础架构：一条 SQL 查询语句是如何执行的？ 连接器建立连接的过程通常是比较复杂的，所以我建议你在使用中要尽量减少建立连接的动作，也就是 尽量使用长连接。 但是全部使用长连接后，你可能会发现，有些时候 MySQL 占用内存涨得特别快，这是因为 MySQL 在执行过程中临时使用的内存是管理在连接对象里面的。这些资源会在连接断开的时候 才释放。所以如果长连接累积下来，可能导致内存占用太大，被系统强行杀掉（OOM），从现 象看就是 MySQL 异常重启了。 查询缓存大多数情况下我会建议你不要使用查询缓存，为什么呢？因为查询缓存往往弊大于利。 查询缓存的失效非常频繁，只要有对一个表的更新，这个表上所有的查询缓存都会被清空。因此 很可能你费劲地把结果存起来，还没使用呢，就被一个更新全清空了。对于更新压力大的数据库 来说，查询缓存的命中率会非常低。除非你的业务就是有一张静态表，很长时间才会更新一次。 比如，一个系统配置表，那这张表上的查询才适合使用查询缓存。 MySQL 8.0 版本直接将查询缓存的整块功能删掉了，也就是说 8.0 开始彻底没 有这个功能了。 分析器分析器先会做“词法分析”。你输入的是由多个字符串和空格组成的一条 SQL 语句，MySQL 需要识别出里面的字符串分别是什么，代表什么。 MySQL 从你输入的”select”这个关键字识别出来，这是一个查询语句。它也要把字符串“T”识 别成“表名 T”，把字符串“ID”识别成“列 ID”。 做完了这些识别以后，就要做“语法分析”。根据词法分析的结果，语法分析器会根据语法规 则，判断你输入的这个 SQL 语句是否满足 MySQL 语法。 优化器优化器是在表里面有多个索引的时候，决定使用哪个索引；或者在一个语句有多表关联（join） 的时候，决定各个表的连接顺序。 执行器先判断一下你对这个表 T 有没有执行查询的权限 如果有权限，就打开表继续执行。打开表的时候，优化器就会根据表的引擎定义，去使用这个引擎提供的接口。 02 | 日志系统：一条 SQL 更新语句是如何执行的？更新流程还涉及两个重要的日志模块，它们正是我们今天要讨论的主 角：redo log（重做日志）和 binlog（归档日志） 如果接触 MySQL，那这两个词肯定是绕 不过的 重要的日志模块：redo log如果有人要赊账或者还账的话，掌柜一般有两种做法： 一种做法是直接把账本翻出来，把这次赊的账加上去或者扣除掉； 另一种做法是先在粉板上记下这次的账，等打烊以后再把账本翻出来核算。 在生意红火柜台很忙时，掌柜一定会选择后者，因为前者操作实在是太麻烦了。 同样，在 MySQL 里也有这个问题，如果每一次的更新操作都需要写进磁盘，然后磁盘也要找到 对应的那条记录，然后再更新，整个过程 IO 成本、查找成本都很高 WAL 的全称是 Write-Ahead Logging 粉板和账本配合的整个过程，其实就是 MySQL 里经常说到的 WAL 它的关键点就是先写日志，再写磁盘，也就是先写粉板，等不忙的时候再写账本。 InnoDB 的 redo log 是固定大小的，比如可以配置为一组 4 个文件，每个文件的大 小是 1GB，那么这块“粉板”总共就可以记录 4GB 的操作。从头开始写，写到末尾就又回到开 头循环写 wirte pos 是当前记录的位置，一边写一边后移，写到第 3 号文件末尾后就回到 0 号文件开头。 checkpoint 是当前要擦除的位置，也是往后推移并且循环的，擦除记录前要把记录更新到数据文件。 如果 write pos 追上 checkpoint，表示“粉板”满了，这时候不能再执行新的更新，得停下来先擦掉一些记录，把 checkpoint 推进一下。 有了 redo log，InnoDB 就可以保证即使数据库发生异常重启，之前提交的记录都不会丢失， 这个能力称为crash-safe。 重要的日志模块：binlogredo log 是 InnoDB 引擎特有的日志，而 Server 层也有自己的日志，称为 binlog（归档日志）。 为什么会有两份日志呢 因为最开始 MySQL 里并没有 InnoDB 引擎。MySQL 自带的引擎是 MyISAM，但是 MyISAM 没有 crash-safe 的能力，binlog 日志只能用于归档。而 InnoDB 是另一个公司以插件形式引入 MySQL 的，既然只依靠 binlog 是没有 crash-safe 能力的，所以 InnoDB 使用另外一套日志系 统——也就是 redo log 来实现 crash-safe 能力。 这两种日志有以下三点不同。 redo log 是 InnoDB 引擎特有的；binlog 是 MySQL 的 Server 层实现的，所有引擎都可 以使用。 redo log 是物理日志，记录的是“在某个数据页上做了什么修改”；binlog 是逻辑日志， 记录的是这个语句的原始逻辑，比如“给 ID=2 这一行的 c 字段加 1 ”。 redo log 是循环写的，空间固定会用完；binlog 是可以追加写入的。“追加写”是指 binlog 文件写到一定大小后会切换到下一个，并不会覆盖以前的日志。 update 语句的执行流程图，图中浅色框表示是在 InnoDB 内部执行的，深色 框表示是在执行器中执行的 将 redo log 的写入拆成了两个步骤：prepare 和 commit，这就是”两阶段提交“。 如果不使用“两阶段提交”，那么数据库的状态就有可能和用它的日志恢复出来的库 的状态不一致。 简单说，redo log 和 binlog 都可以用于表示事务的提交状态，而两阶段提交就是让这两个状态保持逻辑上的一致。 小结今天，我介绍了 MySQL 里面最重要的两个日志，即物理日志 redo log 和逻辑日志 binlog。 redo log 用于保证 crash-safe 能力。innodb_flush_log_at_trx_commit 这个参数设置成 1 的 时候，表示每次事务的 redo log 都直接持久化到磁盘。这个参数我建议你设置成 1，这样可以 保证 MySQL 异常重启之后数据不丢失。 sync_binlog 这个参数设置成 1 的时候，表示每次事务的 binlog 都持久化到磁盘。这个参数我 也建议你设置成 1，这样可以保证 MySQL 异常重启之后 binlog 不丢失。 我还跟你介绍了与 MySQL 日志系统密切相关的“两阶段提交”。两阶段提交是跨系统维持数据 逻辑一致性时常用的一个方案，即使你不做数据库内核开发，日常开发中也有可能会用到。 03 | 事务隔离：为什么你改了我还看不见？隔离性与隔离级别提到事务，你肯定会想到 ACID（Atomicity、Consistency、Isolation、Durability，即原子性、一致性、隔离性、持久性） 当数据库上有多个事务同时执行的时候，就可能出现脏读（dirty read）、不可重复读（non reapeatable read）、幻读（phantom read）的问题，为了解决这些问题，就有了“隔离级别”的概念。 隔离得越严实，效率就会越低。因此很多时候，我们都要 在二者之间寻找一个平衡点 SQL 标准的事务隔离级别包括：读未提交（read uncommitted）、读提交（read committed）、可重复读（repeatable read）和串行化 （serializable ）。 读未提交是指，一个事务还没提交时，它做的变更就能被别的事务看到。 读提交是指，一个事务提交之后，它做的变更才会被其他事务看到。 可重复读是指，一个事务执行过程中看到的数据，总是跟这个事务在启动时看到的数据是一致的。当然在可重复读隔离级别下，未提交变更对其他事务也是不可见的。 串行化，顾名思义是对于同一行记录，“写”会加“写锁”，“读”会加“读锁”。当出现 读写锁冲突的时候，后访问的事务必须等前一个事务执行完成，才能继续执行。 我们来看看在不同的隔离级别下，事务 A 会有哪些不同的返回结果，也就是图里面 V1、V2、 V3 的返回值分别是什么。 若隔离级别是“读未提交”， 则 V1 的值就是 2。这时候事务 B 虽然还没有提交，但是结果 已经被 A 看到了。因此，V2、V3 也都是 2。 若隔离级别是“读提交”，则 V1 是 1，V2 的值是 2。事务 B 的更新在提交后才能被 A 看 到。所以， V3 的值也是 2。 若隔离级别是“可重复读”，则 V1、V2 是 1，V3 是 2。之所以 V2 还是 1，遵循的就是这 个要求：事务在执行期间看到的数据前后必须是一致的。 若隔离级别是“串行化”，则在事务 B 执行“将 1 改成 2”的时候，会被锁住。直到事务 A 提交后，事务 B 才可以继续执行。所以从 A 的角度看， V1、V2 值是 1，V3 的值是 2。 在实现上，数据库里面会创建一个视图，访问的时候以视图的逻辑结果为准。在“可重复读”隔离级别下，这个视图是在事务启动时创建的，整个事务存在期间都用这个视图。在“读提交”隔 离级别下，这个视图是在每个 SQL 语句开始执行的时候创建的。这里需要注意的是，“读未提交”隔离级别下直接返回记录上的最新值，没有视图概念；而“串行化”隔离级别下直接用加锁 的方式来避免并行访问。 那什么时候需要“可重复读”的场景呢 假设你在管理一个个人银行账户表。一个表存了每个月月底的余额，一个表存了账单明细。这时候你要做数据校对，也就是判断上个月的余额和当前余额的差额，是否与本月的账单明细一致。 你一定希望在校对过程中，即使有用户发生了一笔新的交易，也不影响你的校对结果。 这时候使用“可重复读”隔离级别就很方便。事务启动时的视图可以认为是静态的，不受其他事务更新的影响。 事务隔离的实现这里我们展开说明“可重复 读”。 undo log: 回滚日志 记录上的最新值，通过回滚操作，都可以得到前一个状态的值。 MySQL 中，实际上每条记录在更新的时候都会同时记录一条回滚操作 当前值是 4，但是在查询这条记录的时候，不同时刻启动的事务会有不同的 read-view。如图中 看到的，在视图 A、B、C 里面，这一个记录的值分别是 1、2、4，同一条记录在系统中可以存 在多个版本，就是数据库的多版本并发控制（MVCC）。对于 read-view A，要得到 1，就必须 将当前值依次执行图中所有的回滚操作得到。 当没有事务再需要用到这些回滚日志时，回滚日志会被删除。 讨论一下为什么建议你尽量不要使用长事务 长事务意味着系统里面会存在很老的事务视图 显式启动事务语句， begin 或 start transaction。配套的提交语句是 commit，回滚语句是 rollback。 set autocommit=0 会将这个线程的自动提交关掉 这个事务持续存在直到你主动执行 commit 或 rollback 语句，或者断开连接。 有些客户端连接框架会默认连接成功后先执行一个 set autocommit=0 的命令。这就导致接下 来的查询都在事务中，如果是长连接，就导致了意外的长事务。 建议你总是使用 set autocommit=1 通过显式语句的方式来启动事务。 如果执行 commit work and chain，则是提交事务并自动启动下一个事务，这样也省去了再次 执行 begin 语句的开销。 可以在 information_schema 库的 innodb_trx 这个表中查询长事务 1select * from information_schema.innodb_trx where TIME_TO_SEC(timediff(now(),trx_started))&gt;60 小结这篇文章里面，我介绍了 MySQL 的事务隔离级别的现象和实现，根据实现原理分析了长事务存在的风险，以及如何用正确的方式避免长事务。希望我举的例子能够帮助你理解事务，并更好地使用 MySQL 的事务特性。 04 | 深入浅出索引（上）索引的出现其实就是为了提高数据查询的效率，就像书的目录一样。 索引的常见模型介绍三种常见、也比较简单的数据结构，它们分别是哈希表、有序数组和搜索树。 因为不是有序的，所以哈希索引做区间查询的速度是很慢 的。 哈希表这种结构适用于只有等值查询的场景 有序数组在等值查询和范围查询场景中的性能就都非常优秀但是，在需要更新数据的时候就麻烦 了，你往中间插入一个记录就必须得挪动后面所有的记录，成本太高。有序数组索引只适用于静态存储引擎 二叉搜索树 更新的时间复杂度也是 O(log(N)) 实际上大多数的数据库存储却并不使用二叉树。其原因 是，索引不止存在内存中，还要写到磁盘上。 为了让一个查询尽量少地读磁盘，就必须让查询过程访问尽量少的数据块。那么，我们就不应该 使用二叉树，而是要使用“N 叉”树。N 叉树由于在读写上的性能优点，以及适配磁盘的访问模式，已经被广泛应用在数据库引擎中 了。 数据库底层存储的核心就是基于这些数据模型的。每碰到一个新数据库，我 们需要先关注它的数据模型，这样才能从理论上分析出这个数据库的适用场景。 在 MySQL 中，索引是在存储引擎层实现的，所以并没有统一的索引标准，即不同存储引擎的索 引的工作方式并不一样 即使多个存储引擎支持同一种类型的索引，其底层的实现也可能不 同。 InnoDB 的索引模型 从图中不难看出，根据叶子节点的内容，索引类型分为主键索引和非主键索引。 主键索引的叶子节点存的是整行数据。在 InnoDB 里，主键索引也被称为聚簇索引（clustered index）。 在 InnoDB 里，非主键索引也被称为二级索引 （secondary index）。 非主键索引的叶子节点内容是主键的值 基于主键索引和普通索引的查询有什么区别？ 主键查询方式，则只需要搜索 ID 这棵 B+ 树； 普通索引查询方式，则需要先搜索 k 索引树， 得到 ID 的值为 500，再到 ID 索引树搜索一次 这个过程称为回表。 也就是说，基于非主键索引的查询需要多扫描一棵索引树。因此，我们在应用中应该尽量使用主键查询。 索引维护如果新插入的 ID 值为 400，就相对麻烦了，需要逻辑上挪动后面的数据，空出位置。而更糟的情况是，如果 R5 所在的数据页已经满了，根据 B+ 树的算法，这时候需要申请一个新 的数据页，然后挪动部分数据过去.这个过程称为页分裂 当相邻两个页由于删除了数据，利用率很低之后，会将数据页做合并 自增主键的插入数据模式，正符合了我们前面提到的递增插入的场景。每次插入一条 新记录，都是追加操作，都不涉及到挪动其他记录，也不会触发叶子节点的分裂 有业务逻辑的字段做主键，则往往不容易保证有序插入 主键长度越小，普通索引的叶子节点就越小，普通索引占用的空间也就越小 从性能和存储空间方面考量，自增主键往往是更合理的选择 有没有什么场景适合用业务字段直接做主键的呢？还是有的。比如，有些业务的场景需求是这样 的： 1. 只有一个索引； 2. 该索引必须是唯一索引。这就是典型的 KV 场景。 这时候我们就要优先考虑上一段提到的“尽量使用主键查询”原则，直接将这个索引设置为主 键，可以避免每次查询需要搜索两棵树。 小结今天，我跟你分析了数据库引擎可用的数据结构，介绍了 InnoDB 采用的 B+ 树结构，以及为 什么 InnoDB 要这么选择。B+ 树能够很好地配合磁盘的读写特性，减少单次查询的磁盘访问次 数。 由于 InnoDB 是索引组织表，一般情况下我会建议你创建一个自增主键，这样非主键索引占用 的空间最小。但事无绝对，我也跟你讨论了使用业务逻辑字段做主键的应用场景。 05 | 深入浅出索引（下）覆盖索引如果执行的语句是 select ID from T where k between 3 and 5，这时只需要查 ID 的值，而 ID 的值已经在 k 索引树上了，因此可以直接提供查询结果，不需要回表。也就是说，在这个查 询里面，索引 k 已经“覆盖了”我们的查询需求，我们称为覆盖索引。 由于覆盖索引可以减少树的搜索次数，显著提升查询性能，所以使用覆盖索引是一个常用的性能 优化手段。 最左前缀原则B+ 树这种索引结构，可以利用索引的“最左前缀”，来定位记录。 用（name，age）这个联合索引来分析 如果你要查的是所有名字第一个字是“张”的人，你也能够用上这个索引 不只是索引的全部定义，只要满足最左前缀，就可以利用索引来加速检索 最左前缀可以是联合索引的最左 N 个字段，也可以是字符串索引的最左 M 个字符。 在建立联合索引的时候，如何安排索引内的字段顺序。 这里我们的评估标准是，索引的复用能力。第一原则是，如果通过调整顺序， 可以少维护一个索引，那么这个顺序往往就是需要优先考虑采用的。 索引下推1select * from tuser where name like '张 %' and age=10 and ismale=1; MySQL 5.6 引入的索引下推优化（index condition pushdown)， 可以在索引遍历过程 中，对索引中包含的字段先做判断，直接过滤掉不满足条件的记录，减少回表次数。 在图 3 和 4 这两个图里面，每一个虚线箭头表示回表一次。 图 3 中，在 (name,age) 索引里面我特意去掉了 age 的值，这个过程 InnoDB 并不会去看 age 的值，只是按顺序把“name 第一个字是’张’”的记录一条条取出来回表。因此，需要回表 4 次。 图 4 跟图 3 的区别是，InnoDB 在 (name,age) 索引内部就判断了 age 是否等于 10，对于不等 于 10 的记录，直接判断并跳过。在我们的这个例子中，只需要对 ID4、ID5 这两条记录回表取 数据判断，就只需要回表 2 次。 小结今天这篇文章，我和你继续讨论了数据库索引的概念，包括了覆盖索引、前缀索引、索引下推。 你可以看到，在满足语句需求的情况下， 尽量少地访问资源是数据库设计的重要原则之一。我 们在使用数据库的时候，尤其是在设计表结构时，也要以减少资源消耗作为目标。 06 | 全局锁和表锁 ：给表加个字段怎么有这么多阻碍？根据加锁的范围，MySQL 里面的锁大致可以分成全局锁、表级锁和行锁三类。 全局锁全局锁就是对整个数据库实例加锁 MySQL 提供了一个加全局读锁的方法，命令是 Flush tables with read lock (FTWRL) 之后其他线程的以下语句会被阻塞：数据更新语句（数据的增删改）、数据定义语句（包 括建表、修改表结构等）和更新类事务的提交语句。 全局锁的典型使用场景是，做全库逻辑备份。 让整库都只读，听上去就很危险： 如果你在主库上备份，那么在备份期间都不能执行更新，业务基本上就得停摆； 如果你在从库上备份，那么备份期间从库不能执行主库同步过来的 binlog，会导致主从延迟。 不加锁的话，备份系统备份的得到的库不是一个逻辑时间点，这个视图是逻辑不一致 的。 官方自带的逻辑备份工具是 mysqldump。当 mysqldump 使用参数–single-transaction 的时 候，导数据之前就会启动一个事务，来确保拿到一致性视图。而由于 MVCC 的支持，这个过程 中数据是可以正常更新的。 对于 MyISAM 这种不支持事务的引擎 就需要使用 FTWRL 命令 single-transaction 方法只适用于所有的表使用事务引擎的库。如果有的表使用了不支 持事务的引擎，那么备份就只能通过 FTWRL 方法。这往往是 DBA 要求业务开发人员使用 InnoDB 替代 MyISAM 的原因之一。 为什么不使用 set global readonly=true 的方式呢 一是，在有些系统中，readonly 的值会被用来做其他逻辑，比如用来判断一个库是主库还是 备库。 二是，在异常处理机制上有差异。如果执行 FTWRL 命令之后由于客户端发生异常断开，那 么 MySQL 会自动释放这个全局锁，整个库回到可以正常更新的状态。而将整个库设置为 readonly 之后，如果客户端发生异常，则数据库就会一直保持 readonly 状态，这样会导致 整个库长时间处于不可写状态，风险较高。 表级锁MySQL 里面表级别的锁有两种：一种是表锁，一种是元数据锁（meta data lock，MDL)。 表锁的语法是 lock tables … read/write 与 FTWRL 类似，可以用 unlock tables 主动释放 锁，也可以在客户端断开的时候自动释放。 需要注意，lock tables 语法除了会限制别的线程的 读写外，也限定了本线程接下来的操作对象。 举个例子, 如果在某个线程 A 中执行 lock tables t1 read, t2 write; 这个语句，则其他线程写 t1、读写 t2 的语句都会被阻塞。同时，线程 A 在执行 unlock tables 之前，也只能执行读 t1、 写 t2 的操作。连读 t2 都不允许，自然也不能访问其他表。 对于 InnoDB 这种支持行锁的引擎，一般不使用 lock tables 命令来控制并发，毕竟锁住整个表的影响面还是太大。 另一类表级的锁是 MDL（metadata lock) MDL 不需要显式使用，在访问一个表的时候会被自动加上。MDL 的作用是，保证读写的正确性。你可以想象一下，如果一个查询正在遍历一个 表中的数据，而执行期间另一个线程对这个表结构做变更，删了一列，那么查询线程拿到的结果 跟表结构对不上，肯定是不行的。 当对一个表做增删改查操作的时候，加 MDL 读锁；当要对表做结构变更操作的时候，加 MDL 写锁。 读锁之间不互斥，因此你可以有多个线程同时对一张表增删改查。 读写锁之间，写锁之间是互斥的，用来保证变更表结构操作的安全性。因此，如果有两个线程要同时给一个表加字段，其中一个要等另一个执行完才能开始执行。 事务中的 MDL 锁，在语句执行开始时申请，但是语句结束后并不会马上释放，而会等到整个事务提交后再释放。 如何安全地给小表加字段 首先我们要解决长事务，事务不提交，就会一直占着 MDL 锁 如果你要做 DDL 变更的表刚好有长事务在执行，要考虑先暂停 DDL，或者 kill 掉这个长事务。 比较理想的机制是，在 alter table 语句 里面设定等待时间 小结今天，我跟你介绍了 MySQL 的全局锁和表级锁。 全局锁主要用在逻辑备份过程中。对于全部是 InnoDB 引擎的库，我建议你选择使用–singletransaction 参数，对应用会更友好。 表锁一般是在数据库引擎不支持行锁的时候才会被用到的。如果你发现你的应用程序里有 lock tables 这样的语句，你需要追查一下，比较可能的情况是： 要么是你的系统现在还在用 MyISAM 这类不支持事务的引擎，那要安排升级换引擎； 要么是你的引擎升级了，但是代码还没升级。我见过这样的情况，最后业务开发就是把 lock tables 和 unlock tables 改成 begin 和 commit，问题就解决了。 MDL 会直到事务提交才释放，在做表结构变更的时候，你一定要小心不要导致锁住线上查询和 更新。 07 | 行锁功过：怎么减少行锁对性能的影响？两阶段锁在 InnoDB 事务中，行锁是在需要的时候才加上的，但并不是不需要了就立刻释 放，而是要等到事务结束时才释放。这个就是两阶段锁协议 如果你的事务中需要锁多个行，要把 最可能造成锁冲突、最可能影响并发度的锁尽量往后放。 死锁和死锁检测 这时候，事务 A 在等待事务 B 释放 id=2 的行锁，而事务 B 在等待事务 A 释放 id=1 的行锁。 事务 A 和事务 B 在互相等待对方的资源释放，就是进入了死锁状态 当出现死锁以后，有两种策略： 一种策略是，直接进入等待，直到超时。这个超时时间可以通过参数 innodb_lock_wait_timeout 来设置。 另一种策略是，发起死锁检测，发现死锁后，主动回滚死锁链条中的某一个事务，让其他事 务得以继续执行。将参数 innodb_deadlock_detect 设置为 on，表示开启这个逻辑。 在 InnoDB 中，innodb_lock_wait_timeout 的默认值是 50s。 对于在线服务来说，这个等待时间往往是无法接受的。但是，我们又不可能直接把这个时间设置成一个很小的值，比如 1s。这样当出现死锁的时候， 确实很快就可以解开，但如果不是死锁，而是简单的锁等待呢？所以，超时时间设置太短的话， 会出现很多误伤。 所以，正常情况下我们还是要采用第二种策略，即：主动死锁检测 主动死锁检测在发生死锁的时候，是能够快 速发现并进行处理的，但是它也是有额外负担的。 innodb_deadlock_detect 的默认值本身就是 on 每个新来的被堵住的线程，都要判断会不会由于自己的加入导致了死锁，这是一个时间复杂度是 O(n) 的操作。假设有 1000 个并发线程要同时更新同一行，那么死锁检测操作就是 100 万这个 量级的。 虽然最终检测的结果是没有死锁，但是这期间要消耗大量的 CPU 资源。因此，你就会看到 CPU 利用率很高，但是每秒却执行不了几个事务 怎么解决由这种热点行更新导致的性能问题呢 一种头痛医头的方法，就是如果你能确保这个业务一定不会出现死锁，可以临时把死锁检测关 掉。 另一个思路是控制并发度 一个直接的想法就是，在客户端做并发控制。但是，你会很快发现这个方法不太可行，因为客户端很多 因此，这个并发控制要做在数据库服务端。如果你有中间件，可以考虑在中间件实现；如果你的团队有能修改 MySQL 源码的人，也可以做在 MySQL 里面。基本思路就是，对于相同行的更 新，在进入引擎之前排队。这样在 InnoDB 内部就不会有大量的死锁检测工作了。 小结今天，我和你介绍了 MySQL 的行锁，涉及了两阶段锁协议、死锁和死锁检测这两大部分内容。 其中，我以两阶段协议为起点，和你一起讨论了在开发的时候如何安排正确的事务语句。这里的 原则 / 我给你的建议是：如果你的事务中需要锁多个行，要把最可能造成锁冲突、最可能影响并 发度的锁的申请时机尽量往后放。 但是，调整语句顺序并不能完全避免死锁。所以我们引入了死锁和死锁检测的概念，以及提供了 三个方案，来减少死锁对数据库的影响。减少死锁的主要方向，就是控制访问相同资源的并发事 务量。 08 | 事务到底是隔离的还是不隔离的？考虑这道题： insert into t(id, k) values(1,1),(2,2); 语句 Q1 返回的 k 的值是 3，而语句 Q2 返回的 k 的值是 1 在 MySQL 里，有两个“视图”的概念： 一个是 view。它是一个用查询语句定义的虚拟表 另一个是 InnoDB 在实现 MVCC 时用到的一致性读视图，即 consistent read view，用于 支持 RC（Read Committed，读提交）和 RR（Repeatable Read，可重复度）隔离级别的 实现。 InnoDB 里面每个事务有一个唯一的事务 ID，叫作 transaction id。 把 transaction id 赋值给这个数据版本的事务 ID ：row trx_id 语句更新会生成 undo log（回滚日志） V1、V2、V3 并不是物理上真实存在 的，而是每次需要的时候根据当前版本和 undo log 计算出来的 三个虚线箭头，就是 undo log InnoDB 代码实现上，一个事务只需要在启动的时候，找到所有已经提交的事务 ID 的最 大值，记为 up_limit_id。然后声明说，“如果一个数据版本的 row trx_id 大于 up_limit_id，我就不认，我必须要找到它的上一个版本” 这里，我们不妨做如下假设： 1. 事务 A 开始前，系统里面已经提交的事务最大 ID 是 99； 2. 事务 A、B、C 的版本号分别是 100、101、102，且当前系统里没有别的事务； 3. 三个事务开始前，(1,1）这一行数据的 row trx_id 是 90。 这样，事务 A、B、C 的 up_limit_id 的值就都是 99。 (1,1) 这个历史版本，什么时候可以被删除掉呢？在事务 A 提交后,（1,1) 这个版本就可以被删掉了 更新逻辑事务 B 前面的查询语句，拿到的 k 也是 1。但是，当它要去更新数据的时候，不能再在历史版 本上更新了，否则事务 C 的更新就丢失了。 更新数据都是先读后写的，而这个读，只能读当前的值，称为“当前读（current read）”。 当前读 之后，事务的 up_limit_id 就发生了变化 除了 update 语句外，select 语句如果加锁，也是当前读。 加上 lock in share mode 或 for update 下面这两个 select 语句，分别加了读锁（S 锁，共享锁）和 写锁（X 锁，排他锁）。 select k from t where id=1 lock in share mode; select k from t where id=1 for update; 可重复读的核心就是一致性读（consistent read） 而事务更新数据的时候，只能用当前读。 如果当前的记录的行锁被其他事务占用的话，就需要进入锁等待。 读提交和可重复读最主要的区别是 在可重复读隔离级别下，只需要在事务开始的时候找到那个 up_limit_id，之后事务里的其他查询都共用这个 up_limit_id；（除非用了 当前读） 在读提交隔离级别下，每一个语句执行前都会重新算一次 up_limit_id 的值。 对于可重复读，查询只承认在事务启动前就已经提交完成的数据； 对于读提交，查询只承认在语句启动前就已经提交完成的数据； 小结InnoDB 的行数据有多个版本，每个数据版本有自己的 row trx_id，每个事务或者语句有自己的 up_limit_id。普通查询语句是一致性读，一致性读会根据 row trx_id 和 up_limit_id 的大小决 定数据版本的可见性。 对于可重复读，查询只承认在事务启动前就已经提交完成的数据； 对于读提交，查询只承认在语句启动前就已经提交完成的数据； 而当前读，总是读取已经提交完成的最新版本。 实践篇 (37 讲)09 | 普通索引和唯一索引，应该怎么选择？从这两种索引对查询语句和更新语句的性能影响来进行分析 查询过程 对于普通索引来说，查找到满足条件的第一个记录 (5,500) 后，需要查找下一个记录，直到 碰到第一个不满足 k=5 条件的记录。 对于唯一索引来说，由于索引定义了唯一性，查找到第一个满足条件的记录后，就会停止继续检索。 那么，这个不同带来的性能差距会有多少呢？答案是，微乎其微。 InnoDB 的数据是按数据页为单位来读写的。也就是说，当需要读一条记录的时候， 并不是将这个记录本身从磁盘读出来，而是以页为单位，将其整体读入内存。在 InnoDB 中， 每个数据页的大小默认是 16KB。 当找到 k=5 的记录的时候，它所在的数据页就都在内存里 了。那么，对于普通索引来说，要多做的那一次“查找和判断下一条记录”的操作，就只需要一 次指针寻找和一次计算。 change buffer当需要更新一个数据页时，如果数据页在内存中就直接更新；而如果这个数据页还没有在内存中 的话，在不影响数据一致性的前提下，InooDB 会将这些更新操作缓存在 change buffer 中。这样就不需要从磁盘中读入这个数据页了 在下次查询需要访问这个数据页的时候，将数据页读入内存，然后执行 change buffer 中与这个页有关的操作 通过这种方式就能保证这个数据逻 辑的正确性。 ​ 将 change buffer 中的操作应用到原数据页，得到最新结果的过程称为 purge 除了访问这个 数据页会触发 purge 外，系统有后台线程会定期 purge。在数据库正常关闭（shutdown）的 过程中，也会执行 purge 操作。 purge 的执行流程： 从磁盘读入数据页到内存（老版本的数据页）； 从 change buffer 里找出这个数据页的 change buffer 记录 (可能有多个），依次应用， 得到新版数据页； 写 redo log。这个 redo log 包含了数据的变更和 change buffer 的变更。 如果能够将更新操作先记录在 change buffer，减少读磁盘，语句的执行速度会得到明显 的提升 什么条件下可以使用 change buffer 呢 对于唯一索引来说，所有的更新操作都要先判断这个操作是否违反唯一性约束。比如，要插入 (4,400) 这个记录，就要先判断现在表中是否已经存在 k=4 的记录，而这必须要将数据页读入内存才能判断。如果都已经读入到内存了，那直接更新内存会更快，就没必要使用 change buffer 了。 因此，唯一索引的更新就不能使用 change buffer，实际上也只有普通索引可以使用 更新过程第一种情况是，这个记录要更新的目标页在内存中。这不是我们关注的重点 第二种情况是，这个记录要更新的目标页不在内存中。这时，InnoDB 的处理流程如下： 对于唯一索引来说，需要将数据页读入内存，判断到没有冲突，插入这个值，语句执行结束； 对于普通索引来说，则是将更新记录在 change buffer，语句执行就结束了。 将数据从磁盘读入内存涉及随机 IO 的访问，是数据库里面成本最高的操作之一。change buffer 因为减少了随机磁盘访问，所以对更新性能的提升是会很明显的。 change buffer 的使用场景通过上面的分析，你已经清楚了使用 change buffer 对更新过程的加速作用，也清楚了 change buffer 只限于用在普通索引的场景下，而不适用于唯一索引。 普通索引的所有场景，使用 change buffer 都可以起到加速作用吗？ 对于写多读少的业务来说，页面在写完以后马上被访问到的概率比较小，此时 change buffer 的使用效果最好。这种业务模型常见的就是账单类、日志类的系统。 反过来，假设一个业务的更新模式是写入之后马上会做查询， 那么即使满足了条件，将更新先记录在 change buffer，但之后由于马上要访问这个数据页，会立即触发 purge 过程。这样随机 访问 IO 的次数不会减少，反而增加了 change buffer 的维护代价 总结两类索引在查询能力上 是没差别的，主要考虑的是对更新性能的影响 建议你尽量选择普通索引 特别地，在使用机械硬盘时，change buffer 这个机制的收效是非常显著 个人理解 change buffer 和 redo log 的区别 change buffer: 在 MySQL 用到的内存中，有这么一块区域，叫 change buffer, 暂存对内存中还没有包含的数据的修改，以后读取的时候从磁盘中读取到内存，再应用change buffer而 redo log 将对数据库的操作暂存，到一定程度才对数据库进行真正的更新，所以避免频繁的随机写磁盘 如原文所说：如果要简单地对比这两个机制在提升更新性能上的收益的话，redo log 主要节省的是随 机写磁盘的 IO 消耗（转成顺序写），而 change buffer 主要节省的则是随机读磁盘的 IO 消 耗。 小结今天，我从普通索引和唯一索引的选择开始，和你分享了数据的查询和更新过程，然后说明了 change buffer 的机制以及应用场景，最后讲到了索引选择的实践。 由于唯一索引用不上 change buffer 的优化机制，因此如果业务可以接受，从性能角度出发我 建议你优先考虑非唯一索引。 10 | MySQL 为什么有时候会选错索引？优化器的逻辑选择索引是优化器的工作 优化器会结合扫描行数、是否使用临时表、是否排序等因素进行综合判断。 扫描行数是怎么判断的？MySQL 在真正开始执行语句之前，并不能精确地知道满足这个条件的记录有多少条，而只能根据统计信息来估算记录数。 一个索引上不同的值的个数，我们称之为“基数”（cardinality）。也就是说，这个基数越大，索引的区分度越好 可以使用 show index 方法，看到一个索引的基数 MySQL 是怎样得到索引的基数的呢？为什么要采样统计呢？因为把整张表取出来一行行统计，虽然可以得到精确的结果，但是代价太 高了，所以只能选择“采样统计”。 InnoDB 默认会选择 N 个数据页，统计这些页面上的不同值，得到一个平均值，然后乘以这个索引的页面数，就得到了这个索引的基数。 当变更的数据行数超过 1/M 的时候，会自动触发重新做一次索引统计。 rows 这个字段表示的是预计扫描行数 使用普通索引需要把回表的代价算进去 analyze table t 命令，可以用来重新统计索引信息。 索引选择异常和处理一种方法是，像我们第一个例子一样，采用 force index 强行选择一个索引。如果 force index 指定的索引在候选索引列表中，就直接选择这个索引，不再评估 其他索引的执行代价。 第二种方法就是，我们可以考虑修改语 句，引导 MySQL 使用我们期望的索引，在这个例子里，显然把“order by b limit 1” 改成 “order by b,a limit 1” ，语义的逻辑是相同的。这种修改并不是通用的优化手段，不具备通用性 小结今天我们一起聊了聊索引统计的更新机制，并提到了优化器存在选错索引的可能性。 对于由于索引统计信息不准确导致的问题，你可以用 analyze table 来解决。 而对于其他优化器误判的情况，你可以在应用端用 force index 来强行指定索引，也可以通过修 改语句来引导优化器，还可以通过增加或者删除索引来绕过这个问题。 11 | 怎么给字符串字段加索引？前缀索引使用前缀索引，定义好长度，就可以做到既节省空间，又不用额外增加太多的查询成 本。 当要给字符串创建前缀索引时，有什么方法能够确定我应该使用多长的前 缀呢？ 我们在建立索引时关注的是区分度，区分度越高越好。因为区分度越高，意味着重复的 键值越少。 因此，我们可以通过统计索引上有多少个不同的值来判断要使用多长的前缀。 首先，你可以使用下面这个语句，算出这个列上有多少个不同的值： 1select count(distinct email) as L from SUser; 然后，依次选取不同长度的前缀来看这个值，比如我们要看一下 4~7 个字节的前缀索引，可以 用这个语句： 123456select count(distinct left(email,4)）as L4, count(distinct left(email,5)）as L5, count(distinct left(email,6)）as L6, count(distinct left(email,7)）as L7, from SUser; 当然，使用前缀索引很可能会损失区分度，所以你需要预先设定一个可以接受的损失比例，比如 5%。然后，在返回的 L4~L7 中，找出不小于 L * 95% 的值，假设这里 L6、L7 都满足，你就可 以选择前缀长度为 6。 前缀索引对覆盖索引的影响 使用前缀索引就用不上覆盖索引对查询性能的优化了，这也是你在选择是否使用前缀索引时需要考虑的一个因素。 其他方式比如，我们国家的身份证号 第一种方式是使用倒序存储 如果你存储身份证号的时候把它倒过来存，每次查询的时候，你可 以这么写： select field_list from t where id_card = reverse(‘input_id_card_string’); 第二种方式是使用 hash 字段 你可以在表上再创建一个整数字段，来保存身份证的校验码，同 时在这个字段上创建索引。 alter table t add id_card_crc int unsigned, add index(id_card_crc); 然后每次插入新记录的时候，都同时用 crc32() 这个函数得到校验码填到这个新字段 由于校验 码可能存在冲突，也就是说两个不同的身份证号通过 crc32() 函数得到的结果可能是相同的，所 以你的查询语句 where 部分要判断 id_card 的值是否精确相同。 小结在今天这篇文章中，我跟你聊了聊字符串字段创建索引的场景。我们来回顾一下，你可以使用的 方式有： 直接创建完整索引，这样可能比较占用空间； 创建前缀索引，节省空间，但会增加查询扫描次数，并且不能使用覆盖索引； 倒序存储，再创建前缀索引，用于绕过字符串本身前缀的区分度不够的问题； 创建 hash 字段索引，查询性能稳定，有额外的存储和计算消耗，跟第三种方式一样，都不支持范围扫描。 在实际应用中，你要根据业务字段的特点选择使用哪种方式。 12 | 为什么我的 MySQL 会 “抖” 一下InnoDB 在处理更新语句的时候，只做了写日志这一个磁盘操作。这个日志叫作 redo log（重做日志）。InnoDB 在处理更新语句的时候，只做了写日志这一个磁盘操作，在更新内存写完 redo log 后，就返回给客户端，本次更新成功。 掌柜总要找时间把账本更新一下，这对应的就是把内存里的数据写入磁盘的过程，术语就是 flush。 在这个 flush 操作执行之前，孔乙己的赊账总额，其实跟掌柜手中账本里面的记录是不 一致的。因为孔乙己今天的赊账金额还只在粉板上，而账本里的记录是老的，还没把今天的赊账 算进去。 当内存数据页跟磁盘数据页内容不一致的时候，我们称这个内存页为“脏页”。内存数据写入到 磁盘后，内存和磁盘上的数据页的内容就一致了，称为“干净页”。 不论是脏页还是干净页，都在内存中。在这个例子里，内存对应的就是掌柜的记忆。 MySQL 偶尔“抖”一下的那个瞬间，可能就是在刷脏页（flush）。 什么情况会引发数据库的 flush 过程 第一种场景是，InnoDB 的 redo log 写满了 把 checkpoint 位置从 CP 推进到 CP’，就需要将两个点之间的日志（浅绿色部分），对应的所有脏页都 flush 到磁盘 第二种场景，掌柜发现自己快记不住了，系统内存不足 第三种场景是，MySQL 认为系统“空闲”的时候 第四种场景，MySQL 正常关闭的 第一种是“redo log 写满了，要 flush 脏页”，这种情况是 InnoDB 要尽量避免的。因为出现 这种情况的时候，整个系统就不能再接受更新了，所有的更新都必须堵住。如果你从监控上看， 这时候更新数会跌为 0 第二种是“内存不够用了，要先将脏页写到磁盘”，这种情况其实是常态。InnoDB 用缓冲池 （buffer pool）管理内存，缓冲池中的内存页有三种状态： 第一种是，还没有使用的 第二种是，使用了并且是干净页 第三种是，使用了并且是脏页 flush 的相关参数innodb_io_capacity 首先，你要正确地告诉 InnoDB 所在主机的 IO 能力，这样 InnoDB 才能知道需要全力刷脏页的 时候，可以刷多快。一般设置成磁盘的 IOPS，磁盘的 IOPS 可以通过 fio 这个工具来测试 innodb_max_dirty_pages_pct 是脏页比例上限，默认值是 75% 根据上述算得的 F1(M) 和 F2(N) 两个值，取其中较大的值记为 R，之后引擎就可以按照 innodb_io_capacity 定义的能力乘以 R% 来控制刷脏页的速度。 平时要多关注脏页比 例，不要让它经常接近 75%。 脏页比例是通过 Innodb_buffer_pool_pages_dirty/Innodb_buffer_pool_pages_total 得到的 innodb_flush_neighbors 而 MySQL 中的一个机制，可能让你的查询会更慢 在准备刷一个脏页的时候，如果这个数据页旁边的数据页刚好是脏页，就会把这个“邻居”也带着一起刷掉。而且这个把“邻居”拖下水的逻 辑还可以继续蔓延，也就是对于每个邻居数据页，如果跟它相邻的数据页也还是脏页的话，也会 被放到一起刷。 值为 1 的时候会有上 述的“连坐”机制，值为 0 时表示不找邻居，自己刷自己的。 找“邻居”这个优化在机械硬盘时代是很有意义的，可以减少很多随机 IO 而如果使用的是 SSD 这类 IOPS 比较高的设备的话，我就建议你把 innodb_flush_neighbors 的值设置成 0。因为这时候 IOPS 往往不是瓶颈，而“只刷自己”，就能更快地执行完必要的刷 脏页操作，减少 SQL 语句响应时间。 在 MySQL 8.0 中，innodb_flush_neighbors 参数的默认值已经是 0 了。 小结今天这篇文章，我延续第 2 篇中介绍的 WAL 的概念，和你解释了这个机制后续需要的刷脏页操 作和执行时机。利用 WAL 技术，数据库将随机写转换成了顺序写，大大提升了数据库的性能。 但是，由此也带来了内存脏页的问题。脏页会被后台线程自动 flush，也会由于数据页淘汰而触 发 flush，而刷脏页的过程由于会占用资源，可能会让你的更新和查询语句的响应时间长一些。 在文章里，我也给你介绍了控制刷脏页的方法和对应的监控方式。 13 | 为什么表数据删掉一半，表文件大小不变？ 正确回收空间的方法 为什么简单地删除表数据达不到表空间回收的效果 innodb_file_per_table表数据既可以存在共享表空间里，也可以是单独的文件。这个行为是由参数 innodb_file_per_table 控制的： 这个参数设置为 OFF 表示的是，表的数据放在系统共享表空间，也就是跟数据字典放在一 起； 这个参数设置为 ON 表示的是，每个 InnoDB 表数据存储在一个以 .ibd 为后缀的文件中。 从 MySQL 5.6.6 版本开始，它的默认值就是 ON 了。 因为，一个表单独存储为一个 文件更容易管理，而且在你不需要这个表的时候，通过 drop table 命令，系统就会直接删除这 个文件。而如果是放在共享表空间中，即使表删掉了，空间也是不会回收 建议你不论使用 MySQL 的哪个版本，都将这个值设置为 ON 在删除整个表的时候，可以使用 drop table 命令回收表空间。但是，我们遇到的更多的删 除数据的场景是删除某些行，这时就遇到了我们文章开头的问题：表中的数据被删除了，但是表空间却没有被回收。 数据删除流程数据页的复用跟记录的复用是不同的 如果我们用 delete 命令把整个表的数据删除呢？结果就是，所有的数据页都会被标 记为可复用。但是磁盘上，文件不会变小。 delete 命令其实只是把记录的位置，或者数据页标记为了“可复用”，但磁盘 文件的大小是不会变的。也就是说，通过 delete 命令是不能回收表空间的。这些可以复用，而 没有被使用的空间，看起来就像是“空洞”。 不止是删除数据会造成空洞，插入数据也会。所以，如果能够把这些空洞去掉，就 能达到收缩表空间的目的。经过大量增删改的表，都是可能是存在空洞的. 而重建表，就可以达到这样的目的。 重建表新建一个与表 A 结构相同的表 B，然后按照主键 ID 递增的顺序，把数据一行一行地从表 A 里读出来再插入到表 B 中。数据从表 A 导入表 B 的操作完成后，用表 B 替换 A，从效果上看，就起到了收缩表 A 空间的作用。 alter table A engine=InnoDB 命令来重建表。 这个临时表 B 不需要你自己创建， MySQL 会自动完成转存数据、交换表名、删除旧表的操作。 在整个 DDL 过程中，表 A 中不能有更新。也就是说， 这个 DDL 不是 Online 的。 MySQL 5.6 版本开始引入的 Online DDL, 对这个操作流程做了优化 生成临时文件的过程中，将所有对 A 的操作记录在一个日志文件（row log）中 临时文件生成后，将日志文件中的操作应用到临时文件，得到一个逻辑数据上与表 A 相同 的数据文件 方案在重建表的过程中，允许对表 A 做增删改操作。这也就是 Online DDL 名字的来源 alter table t engine = InnoDB（也就是 recreate） analyze table t 只是对表的索引信息做重新统计 optimize table t 等于 recreate+analyze。 小结今天这篇文章，我和你讨论了数据库中收缩表空间的方法。 现在你已经知道了，如果要收缩一个表，只是 delete 掉表里面不用的数据的话，表文件的大小 是不会变的，你还要通过 alter table 命令重建表，才能达到表文件变小的目的。我跟你介绍了 重建表的两种实现方式，Online DDL 的方式是可以考虑在业务低峰期使用的，而 MySQL 5.5 及之前的版本，这个命令是会阻塞 DML 的，这个你需要特别小心。 14 | count (*) 这么慢，我该怎么办？count(*) 的实现方式MyISAM 引擎把一个表的总行数存在了磁盘上，因此执行 count(*) 的时候会直接返回这个 数，效率很高； 而 InnoDB 引擎就麻烦了，它执行 count(*) 的时候，需要把数据一行一行地从引擎里面读出 来，然后累积计数。 我们在这篇文章里讨论的是没有过滤条件的 count(*)，如果加了 where 条件的话，MyISAM 表也是不能返回得这么快的。 即使是在同一个时刻的多个查询，由于多版本并发控制（MVCC）的原因，InnoDB 表“应该返回多少行”也是不确定的 当然，现在这个看上去笨笨的 MySQL，在执行 count(*) 操作的时候还是做了优化的。 InnoDB 是索引组织表，主键索引树的叶子节点是数据，而普通索引树的叶子节点是 主键值。所以，普通索引树比主键索引树小很多。对于 count() 这样的操作，遍历哪个索引树得到的结果逻辑上都是一样的。因此，*MySQL 优化器会找到最小的那棵树来遍历**。在保证逻辑 正确的前提下，尽量减少扫描的数据量，是数据库系统设计的通用法则之一。 MyISAM 表虽然 count(*) 很快，但是不支持事务 show table status 命令虽然返回很快，但是不准确 InnoDB 表直接 count(*) 会遍历全表，虽然结果准确，但会导致性能问题。 count (*) 这么慢，我们只能自己计数在数据库保存计数 要解决的问题，都是由于 InnoDB 要支持事务，从而导致 InnoDB 表不能把 count(*) 直接存起来，然后查询的时候直接返回形成的。 所谓以子之矛攻子之盾，现在我们就利用“事务”这个特性，把问题解决掉。 将 插入删除数据和更新计数值 作为一个事务提交，确保任何时刻获得的都是逻辑正确的计数值 不同的 count 用法如果 count 函数的参数不是 NULL，累计值就加 1，否则不加 count(*)、count(主键 id) 和 count(1) 都表示返回满足条件的结果集的总行数（因为它们都不肯为 null）；而 count(字段），则表示返回满足条件的数据行里面，参数“字段”不为 NULL 的总个数。 现在的优化器只优化了 count(*) 的语义为“取行数” 对于 count(主键 id) 来说，InnoDB 引擎会遍历整张表，把每一行的 id 值都取出来，返回给 server 层。server 层拿到 id 后，判断是不可能为空的，就按行累加。 对于 count(1) 来说，InnoDB 引擎遍历整张表，但不取值。server 层对于返回的每一行，放一 个数字“1”进去，判断是不可能为空的，按行累加。 count() 是例外，并不会把全部字段取出来，而是专门做了优化，不取值。count() 肯定 不是 null，按行累加。 按照效率排序的话，count(字段)&lt;count(主键 id)&lt;count(1)≈count(*)，所以我 建议你，尽量使用 count(*) 小结今天，我和你聊了聊 MySQL 中获得表行数的两种方法。我们提到了在不同引擎中 count(*) 的 实现方式是不一样的，也分析了用缓存系统来存储计数值存在的问题。 其实，把计数放在 Redis 里面，不能够保证计数和 MySQL 表里的数据精确一致的原因，是这 两个不同的存储构成的系统，不支持分布式事务，无法拿到精确一致的视图。而把计数值也放在 MySQL 中，就解决了一致性视图的问题。 InnoDB 引擎支持事务，我们利用好事务的原子性和隔离性，就可以简化在业务开发时的逻辑。 这也是 InnoDB 引擎备受青睐的原因之一。 15 | 答疑文章（一）：日志和索引相关问题16 | “order by” 是怎么工作的？17 | 如何正确地显示随机消息？18 | 为什么这些 SQL 语句逻辑相同，性能却差异巨大？19 | 为什么我只查一行的语句，也执行这么慢？20 | 幻读是什么，幻读有什么问题？21 | 为什么我只改一行的语句，锁这么多？22 | MySQL 有哪些 “饮鸩止渴” 提高性能的方法？23 | MySQL 是怎么保证数据不丢的？24 | MySQL 是怎么保证主备一致的？25 | MySQL 是怎么保证高可用的？26 | 备库为什么会延迟好几个小时？27 | 主库出问题了，从库怎么办？28 | 读写分离有哪些坑？29 | 如何判断一个数据库是不是出问题了？30 | 答疑文章（二）：用动态的观点看加锁31 | 误删数据后除了跑路，还能怎么办？32 | 为什么还有 kill 不掉的语句？33 | 我查这么多数据，会不会把数据库内存打爆？34 | 到底可不可以使用 join？35 | join 语句怎么优化？36 | 为什么临时表可以重名？37 | 什么时候会使用内部临时表？38 | 都说 InnoDB 好，那还要不要使用 Memory 引擎？39 | 自增主键为什么不是连续的？40 | insert 语句的锁为什么这么多？41 | 怎么最快地复制一张表？42 | grant 之后要跟着 flush privileges 吗？43 | 要不要使用分区表？44 | 答疑文章（三）：说一说这些好问题45 | 自增 id 用完怎么办？其他资料MySQL 6 种日志文件MySQL 中的重做日志（redo log），回滚日志（undo log），以及二进制日志（binlog）的简单总结 - MSSQL123 - 博客园 MySQL 面试题MySQL 思维导图主要为了复习的时候，能快速检查自己是否了解某一概念","link":"/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4-MYSQL45%E8%AE%B2-%E7%AC%94%E8%AE%B0.html"}],"tags":[{"name":"vue","slug":"vue","link":"/tags/vue/"},{"name":"js","slug":"js","link":"/tags/js/"},{"name":"前端","slug":"前端","link":"/tags/%E5%89%8D%E7%AB%AF/"},{"name":"nodejs","slug":"nodejs","link":"/tags/nodejs/"},{"name":"vue.js","slug":"vue-js","link":"/tags/vue-js/"},{"name":"tricks","slug":"tricks","link":"/tags/tricks/"},{"name":"Java","slug":"Java","link":"/tags/Java/"},{"name":"python","slug":"python","link":"/tags/python/"},{"name":"you-get","slug":"you-get","link":"/tags/you-get/"},{"name":"加密文章","slug":"加密文章","link":"/tags/%E5%8A%A0%E5%AF%86%E6%96%87%E7%AB%A0/"},{"name":"weekly","slug":"weekly","link":"/tags/weekly/"},{"name":"Python","slug":"Python","link":"/tags/Python/"},{"name":"Dubbo","slug":"Dubbo","link":"/tags/Dubbo/"},{"name":"项目","slug":"项目","link":"/tags/%E9%A1%B9%E7%9B%AE/"},{"name":"并发","slug":"并发","link":"/tags/%E5%B9%B6%E5%8F%91/"},{"name":"面试","slug":"面试","link":"/tags/%E9%9D%A2%E8%AF%95/"},{"name":"虚拟机","slug":"虚拟机","link":"/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/"},{"name":"多线程","slug":"多线程","link":"/tags/%E5%A4%9A%E7%BA%BF%E7%A8%8B/"},{"name":"bio","slug":"bio","link":"/tags/bio/"},{"name":"nio","slug":"nio","link":"/tags/nio/"},{"name":"Stack","slug":"Stack","link":"/tags/Stack/"},{"name":"Tree","slug":"Tree","link":"/tags/Tree/"},{"name":"Breadth-first Search","slug":"Breadth-first-Search","link":"/tags/Breadth-first-Search/"},{"name":"nowcoder","slug":"nowcoder","link":"/tags/nowcoder/"},{"name":"examination","slug":"examination","link":"/tags/examination/"},{"name":"java","slug":"java","link":"/tags/java/"},{"name":"Array","slug":"Array","link":"/tags/Array/"},{"name":"Depth-first Search","slug":"Depth-first-Search","link":"/tags/Depth-first-Search/"},{"name":"Dynamic Programming","slug":"Dynamic-Programming","link":"/tags/Dynamic-Programming/"},{"name":"Union Find","slug":"Union-Find","link":"/tags/Union-Find/"},{"name":"Backtracking","slug":"Backtracking","link":"/tags/Backtracking/"},{"name":"Greedy","slug":"Greedy","link":"/tags/Greedy/"},{"name":"Linked List","slug":"Linked-List","link":"/tags/Linked-List/"},{"name":"Two Pointers","slug":"Two-Pointers","link":"/tags/Two-Pointers/"},{"name":"Design","slug":"Design","link":"/tags/Design/"},{"name":"Binary Search","slug":"Binary-Search","link":"/tags/Binary-Search/"},{"name":"Math","slug":"Math","link":"/tags/Math/"},{"name":"Sort","slug":"Sort","link":"/tags/Sort/"},{"name":"Hash Table","slug":"Hash-Table","link":"/tags/Hash-Table/"},{"name":"Trie","slug":"Trie","link":"/tags/Trie/"},{"name":"Divide and Conquer","slug":"Divide-and-Conquer","link":"/tags/Divide-and-Conquer/"},{"name":"Heap","slug":"Heap","link":"/tags/Heap/"},{"name":"Sliding Window","slug":"Sliding-Window","link":"/tags/Sliding-Window/"},{"name":"Bit Manipulation","slug":"Bit-Manipulation","link":"/tags/Bit-Manipulation/"},{"name":"String","slug":"String","link":"/tags/String/"},{"name":"Queue","slug":"Queue","link":"/tags/Queue/"},{"name":"Recursion","slug":"Recursion","link":"/tags/Recursion/"},{"name":"Graph","slug":"Graph","link":"/tags/Graph/"}],"categories":[{"name":"Leetcode weekly contest","slug":"Leetcode-weekly-contest","link":"/categories/Leetcode-weekly-contest/"},{"name":"Chrome","slug":"Chrome","link":"/categories/Chrome/"},{"name":"Mac","slug":"Mac","link":"/categories/Mac/"},{"name":"Linux","slug":"Linux","link":"/categories/Linux/"},{"name":"blockchain","slug":"blockchain","link":"/categories/blockchain/"},{"name":"frontEnd","slug":"frontEnd","link":"/categories/frontEnd/"},{"name":"go","slug":"go","link":"/categories/go/"},{"name":"java","slug":"java","link":"/categories/java/"},{"name":"other","slug":"other","link":"/categories/other/"},{"name":"private","slug":"private","link":"/categories/private/"},{"name":"python","slug":"python","link":"/categories/python/"},{"name":"todo","slug":"todo","link":"/categories/todo/"},{"name":"tricks","slug":"tricks","link":"/categories/tricks/"},{"name":"研究生课程","slug":"研究生课程","link":"/categories/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/"},{"name":"阿里云","slug":"阿里云","link":"/categories/%E9%98%BF%E9%87%8C%E4%BA%91/"},{"name":"Collections","slug":"java/Collections","link":"/categories/java/Collections/"},{"name":"other","slug":"java/other","link":"/categories/java/other/"},{"name":"module test","slug":"java/module-test","link":"/categories/java/module-test/"},{"name":"taotao","slug":"java/taotao","link":"/categories/java/taotao/"},{"name":"基础","slug":"java/基础","link":"/categories/java/%E5%9F%BA%E7%A1%80/"},{"name":"leetcode","slug":"leetcode","link":"/categories/leetcode/"},{"name":"leetcode-1**","slug":"leetcode/leetcode-1","link":"/categories/leetcode/leetcode-1/"},{"name":"leetcode-2**","slug":"leetcode/leetcode-2","link":"/categories/leetcode/leetcode-2/"},{"name":"leetcode-3**","slug":"leetcode/leetcode-3","link":"/categories/leetcode/leetcode-3/"},{"name":"leetcode-4**","slug":"leetcode/leetcode-4","link":"/categories/leetcode/leetcode-4/"},{"name":"leetcode-5**","slug":"leetcode/leetcode-5","link":"/categories/leetcode/leetcode-5/"},{"name":"leetcode-6**","slug":"leetcode/leetcode-6","link":"/categories/leetcode/leetcode-6/"},{"name":"leetcode-7**","slug":"leetcode/leetcode-7","link":"/categories/leetcode/leetcode-7/"},{"name":"leetcode-8**","slug":"leetcode/leetcode-8","link":"/categories/leetcode/leetcode-8/"},{"name":"leetcode-9**","slug":"leetcode/leetcode-9","link":"/categories/leetcode/leetcode-9/"},{"name":"天书","slug":"天书","link":"/categories/%E5%A4%A9%E4%B9%A6/"},{"name":"信息系统实训","slug":"研究生课程/信息系统实训","link":"/categories/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%AE%AD/"},{"name":"CNCF-×-Alibaba云原生技术公开课","slug":"天书/CNCF-×-Alibaba云原生技术公开课","link":"/categories/%E5%A4%A9%E4%B9%A6/CNCF-%C3%97-Alibaba%E4%BA%91%E5%8E%9F%E7%94%9F%E6%8A%80%E6%9C%AF%E5%85%AC%E5%BC%80%E8%AF%BE/"},{"name":"软件测试","slug":"研究生课程/软件测试","link":"/categories/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"},{"name":"计算机基础","slug":"计算机基础","link":"/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"},{"name":"操作系统","slug":"计算机基础/操作系统","link":"/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"},{"name":"计算机网络","slug":"计算机基础/计算机网络","link":"/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"},{"name":"提交作业","slug":"研究生课程/信息系统实训/提交作业","link":"/categories/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%AE%AD/%E6%8F%90%E4%BA%A4%E4%BD%9C%E4%B8%9A/"},{"name":"2020","slug":"private/2020","link":"/categories/private/2020/"},{"name":"4","slug":"private/2020/4","link":"/categories/private/2020/4/"},{"name":"5","slug":"private/2020/5","link":"/categories/private/2020/5/"},{"name":"docker k8s","slug":"docker-k8s","link":"/categories/docker-k8s/"},{"name":"redis","slug":"redis","link":"/categories/redis/"},{"name":"软件测试实训","slug":"研究生课程/软件测试实训","link":"/categories/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%AE%9E%E8%AE%AD/"},{"name":"剑指offer","slug":"leetcode/剑指offer","link":"/categories/leetcode/%E5%89%91%E6%8C%87offer/"},{"name":"程序员面试金典","slug":"leetcode/程序员面试金典","link":"/categories/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/"},{"name":"分类","slug":"leetcode/分类","link":"/categories/leetcode/%E5%88%86%E7%B1%BB/"},{"name":"其他","slug":"leetcode/其他","link":"/categories/leetcode/%E5%85%B6%E4%BB%96/"},{"name":"读书笔记","slug":"读书笔记","link":"/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"}]}