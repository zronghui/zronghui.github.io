<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>zronghui的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://zronghui.github.io/"/>
  <updated>2020-07-14T03:15:54.000Z</updated>
  <id>https://zronghui.github.io/</id>
  
  <author>
    <name>zronghui</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>leetcode 120. Triangle</title>
    <link href="https://zronghui.github.io/leetcode-120-Triangle.html"/>
    <id>https://zronghui.github.io/leetcode-120-Triangle.html</id>
    <published>2020-07-14T00:04:19.000Z</published>
    <updated>2020-07-14T03:15:54.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problems/triangle/">leetcode</a><br><a href="https://www.jiuzhang.com/solution/triangle/">九章</a></p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>Given a triangle, find the minimum path sum from top to bottom. Each step you<br>may move to adjacent numbers on the row below.</p><p>For example, given the following triangle</p><pre><code>[     [ **2** ],    [ **3** ,4],   [6, **5** ,7],  [4, **1** ,8,3]]</code></pre><p>The minimum path sum from top to bottom is <code>11</code> (i.e., <strong>2</strong> + <strong>3</strong> + <strong>5</strong><br>+ <strong>1</strong> = 11).</p><p><strong>Note:</strong></p><p>Bonus point if you are able to do this using only <em>O</em> ( <em>n</em> ) extra space,<br>where <em>n</em> is the total number of rows in the triangle.</p><p><strong>Tags:</strong> Array, Dynamic Programming</p><p><strong>Difficulty:</strong> Medium</p><h2 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h2><p><a id="more"></a></p><p><a href="https://leetcode-cn.com/problems/triangle/solution/zi-di-xiang-shang-dong-tai-gui-hua-lei-si-yu-cong-/">自底向上动态规划，类似于从起点到目的地之间的最短路径 - 三角形最小路径和 - 力扣（LeetCode）</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">minimumTotal</span><span class="params">(self, triangle: List[List[int]])</span> -&gt; int:</span></span><br><span class="line">        <span class="keyword">if</span> len(triangle)==<span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> triangle[<span class="number">0</span>][<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> reversed(range(len(triangle)<span class="number">-1</span>)):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(len(triangle[i])):</span><br><span class="line">                triangle[i][j] += min(triangle[i+<span class="number">1</span>][j:j+<span class="number">2</span>])</span><br><span class="line">        <span class="keyword">return</span> triangle[<span class="number">0</span>][<span class="number">0</span>]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/triangle/&quot;&gt;leetcode&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.jiuzhang.com/solution/triangle/&quot;&gt;九章&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;Given a triangle, find the minimum path sum from top to bottom. Each step you&lt;br&gt;may move to adjacent numbers on the row below.&lt;/p&gt;
&lt;p&gt;For example, given the following triangle&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[
     [ **2** ],
    [ **3** ,4],
   [6, **5** ,7],
  [4, **1** ,8,3]
]&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The minimum path sum from top to bottom is &lt;code&gt;11&lt;/code&gt; (i.e., &lt;strong&gt;2&lt;/strong&gt; + &lt;strong&gt;3&lt;/strong&gt; + &lt;strong&gt;5&lt;/strong&gt;&lt;br&gt;+ &lt;strong&gt;1&lt;/strong&gt; = 11).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Bonus point if you are able to do this using only &lt;em&gt;O&lt;/em&gt; ( &lt;em&gt;n&lt;/em&gt; ) extra space,&lt;br&gt;where &lt;em&gt;n&lt;/em&gt; is the total number of rows in the triangle.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tags:&lt;/strong&gt; Array, Dynamic Programming&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Difficulty:&lt;/strong&gt; Medium&lt;/p&gt;
&lt;h2 id=&quot;答案&quot;&gt;&lt;a href=&quot;#答案&quot; class=&quot;headerlink&quot; title=&quot;答案&quot;&gt;&lt;/a&gt;答案&lt;/h2&gt;&lt;p&gt;
    
    </summary>
    
    
    
      <category term="Array" scheme="https://zronghui.github.io/tags/Array/"/>
    
      <category term="Dynamic Programming" scheme="https://zronghui.github.io/tags/Dynamic-Programming/"/>
    
  </entry>
  
  <entry>
    <title>leetcode 1041. Robot Bounded In Circle</title>
    <link href="https://zronghui.github.io/leetcode/leetcode-1**/leetcode-1041-Robot-Bounded-In-Circle.html"/>
    <id>https://zronghui.github.io/leetcode/leetcode-1**/leetcode-1041-Robot-Bounded-In-Circle.html</id>
    <published>2020-07-13T23:34:57.000Z</published>
    <updated>2020-07-14T03:15:54.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problems/robot-bounded-in-circle/">leetcode</a><br><a href="https://www.jiuzhang.com/solution/robot-bounded-in-circle/">九章</a></p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>On an infinite plane, a robot initially stands at <code>(0, 0)</code> and faces north.<br>The robot can receive one of three instructions:</p><ul><li><code>&quot;G&quot;</code>: go straight 1 unit;</li><li><code>&quot;L&quot;</code>: turn 90 degrees to the left;</li><li><code>&quot;R&quot;</code>: turn 90 degress to the right.</li></ul><p>The robot performs the <code>instructions</code> given in order, and repeats them<br>forever.</p><p>Return <code>true</code> if and only if there exists a circle in the plane such that the<br>robot never leaves the circle.</p><p><strong>Example 1:</strong><br>            Input: “GGLLGG”    Output: true    Explanation:    The robot moves from (0,0) to (0,2), turns 180 degrees, and then returns to (0,0).    When repeating these instructions, the robot remains in the circle of radius 2 centered at the origin.    </p><p><strong>Example 2:</strong><br>            Input: “GG”    Output: false    Explanation:    The robot moves north indefinitely.    </p><p><strong>Example 3:</strong><br>            Input: “GL”    Output: true    Explanation:    The robot moves from (0, 0) -&gt; (0, 1) -&gt; (-1, 1) -&gt; (-1, 0) -&gt; (0, 0) -&gt; …    </p><p><strong>Note:</strong></p><ol><li><code>1 &lt;= instructions.length &lt;= 100</code></li><li><code>instructions[i]</code> is in <code>{&#39;G&#39;, &#39;L&#39;, &#39;R&#39;}</code></li></ol><p><strong>Tags:</strong> Math</p><p><strong>Difficulty:</strong> Medium</p><h2 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h2><p><a id="more"></a></p><p>只要走完一轮后，方向改变，即不是直走的话，最后无论再走多少轮总有一轮会走回终点</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isRobotBounded</span><span class="params">(self, instructions: str)</span> -&gt; bool:</span></span><br><span class="line">        x = y = <span class="number">0</span></span><br><span class="line">        directions = [</span><br><span class="line">            (<span class="number">0</span>, <span class="number">1</span>), <span class="comment"># 上北</span></span><br><span class="line">            (<span class="number">1</span>, <span class="number">0</span>), <span class="comment"># 右东</span></span><br><span class="line">            (<span class="number">0</span>, <span class="number">-1</span>), <span class="comment"># 下南</span></span><br><span class="line">            (<span class="number">-1</span>, <span class="number">0</span>), <span class="comment"># 左西</span></span><br><span class="line">        ]</span><br><span class="line">        di = <span class="number">0</span> <span class="comment"># 开始朝北，若 R，+1 %4</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> instructions:</span><br><span class="line">            <span class="keyword">if</span> i==<span class="string">'R'</span>: di = (di+<span class="number">1</span>)%<span class="number">4</span></span><br><span class="line">            <span class="keyword">elif</span> i==<span class="string">'L'</span>: di = (di<span class="number">-1</span>)%<span class="number">4</span></span><br><span class="line">            <span class="keyword">elif</span> i==<span class="string">'G'</span>: </span><br><span class="line">                x += directions[di][<span class="number">0</span>]</span><br><span class="line">                y += directions[di][<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">return</span> x==y==<span class="number">0</span> <span class="keyword">or</span> di!=<span class="number">0</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/robot-bounded-in-circle/&quot;&gt;leetcode&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.jiuzhang.com/solution/robot-bounded-in-circle/&quot;&gt;九章&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;On an infinite plane, a robot initially stands at &lt;code&gt;(0, 0)&lt;/code&gt; and faces north.&lt;br&gt;The robot can receive one of three instructions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;G&amp;quot;&lt;/code&gt;: go straight 1 unit;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;L&amp;quot;&lt;/code&gt;: turn 90 degrees to the left;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;quot;R&amp;quot;&lt;/code&gt;: turn 90 degress to the right.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The robot performs the &lt;code&gt;instructions&lt;/code&gt; given in order, and repeats them&lt;br&gt;forever.&lt;/p&gt;
&lt;p&gt;Return &lt;code&gt;true&lt;/code&gt; if and only if there exists a circle in the plane such that the&lt;br&gt;robot never leaves the circle.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example 1:&lt;/strong&gt;&lt;br&gt;            Input: “GGLLGG”    Output: true    Explanation:    The robot moves from (0,0) to (0,2), turns 180 degrees, and then returns to (0,0).    When repeating these instructions, the robot remains in the circle of radius 2 centered at the origin.    &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example 2:&lt;/strong&gt;&lt;br&gt;            Input: “GG”    Output: false    Explanation:    The robot moves north indefinitely.    &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example 3:&lt;/strong&gt;&lt;br&gt;            Input: “GL”    Output: true    Explanation:    The robot moves from (0, 0) -&amp;gt; (0, 1) -&amp;gt; (-1, 1) -&amp;gt; (-1, 0) -&amp;gt; (0, 0) -&amp;gt; …    &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;1 &amp;lt;= instructions.length &amp;lt;= 100&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;instructions[i]&lt;/code&gt; is in &lt;code&gt;{&amp;#39;G&amp;#39;, &amp;#39;L&amp;#39;, &amp;#39;R&amp;#39;}&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Tags:&lt;/strong&gt; Math&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Difficulty:&lt;/strong&gt; Medium&lt;/p&gt;
&lt;h2 id=&quot;答案&quot;&gt;&lt;a href=&quot;#答案&quot; class=&quot;headerlink&quot; title=&quot;答案&quot;&gt;&lt;/a&gt;答案&lt;/h2&gt;&lt;p&gt;
    
    </summary>
    
    
      <category term="leetcode" scheme="https://zronghui.github.io/categories/leetcode/"/>
    
      <category term="leetcode-1**" scheme="https://zronghui.github.io/categories/leetcode/leetcode-1/"/>
    
    
      <category term="Math" scheme="https://zronghui.github.io/tags/Math/"/>
    
  </entry>
  
  <entry>
    <title>leetcode 264. Ugly Number II</title>
    <link href="https://zronghui.github.io/leetcode/leetcode-2**/leetcode-264-Ugly-Number-II.html"/>
    <id>https://zronghui.github.io/leetcode/leetcode-2**/leetcode-264-Ugly-Number-II.html</id>
    <published>2020-07-13T14:30:50.000Z</published>
    <updated>2020-07-13T14:36:10.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problems/ugly-number-ii/">leetcode</a><br><a href="https://www.jiuzhang.com/solution/ugly-number-ii/">九章</a></p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>Write a program to find the <code>n</code>-th ugly number.</p><p>Ugly numbers are <strong>positive numbers</strong> whose prime factors only include <code>2, 3,5</code>.</p><p><strong>Example:</strong></p><pre><code>Input: n = 10Output: 12Explanation:1, 2, 3, 4, 5, 6, 8, 9, 10, 12 is the sequence of the first 10 ugly numbers.</code></pre><p><strong>Note:</strong>  </p><ol><li><code>1</code> is typically treated as an ugly number.</li><li><code>n</code> <strong>does not exceed 1690</strong>.</li></ol><p><strong>Tags:</strong> Math, Dynamic Programming, Heap</p><p><strong>Difficulty:</strong> Medium</p><h2 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h2><p><a id="more"></a></p><p><a href="https://leetcode-cn.com/problems/ugly-number-ii/solution/chou-shu-ii-by-leetcode/">丑数 II - 丑数 II - 力扣（LeetCode）</a><br><a href="https://leetcode-cn.com/problems/chou-shu-lcof/solution/mian-shi-ti-49-chou-shu-dong-tai-gui-hua-qing-xi-t/">面试题49. 丑数（动态规划，清晰图解） - 丑数 - 力扣（LeetCode）</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Ugly</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.nums = [<span class="number">1</span>]</span><br><span class="line">        a = b = c = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">1690</span>):</span><br><span class="line">            n2, n3, n5 = self.nums[a]*<span class="number">2</span>, self.nums[b]*<span class="number">3</span>, self.nums[c]*<span class="number">5</span></span><br><span class="line">            m = min(n2, n3, n5)</span><br><span class="line">            self.nums.append(m)</span><br><span class="line">            <span class="keyword">if</span> m==n2: a += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> m==n3: b += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> m==n5: c += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    u = Ugly()</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">nthUglyNumber</span><span class="params">(self, n: int)</span> -&gt; int:</span></span><br><span class="line">        <span class="keyword">return</span> self.u.nums[n<span class="number">-1</span>]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/ugly-number-ii/&quot;&gt;leetcode&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.jiuzhang.com/solution/ugly-number-ii/&quot;&gt;九章&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;Write a program to find the &lt;code&gt;n&lt;/code&gt;-th ugly number.&lt;/p&gt;
&lt;p&gt;Ugly numbers are &lt;strong&gt;positive numbers&lt;/strong&gt; whose prime factors only include &lt;code&gt;2, 3,
5&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Input: n = 10
Output: 12
Explanation:1, 2, 3, 4, 5, 6, 8, 9, 10, 12 is the sequence of the first 10 ugly numbers.&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;1&lt;/code&gt; is typically treated as an ugly number.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;n&lt;/code&gt; &lt;strong&gt;does not exceed 1690&lt;/strong&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Tags:&lt;/strong&gt; Math, Dynamic Programming, Heap&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Difficulty:&lt;/strong&gt; Medium&lt;/p&gt;
&lt;h2 id=&quot;答案&quot;&gt;&lt;a href=&quot;#答案&quot; class=&quot;headerlink&quot; title=&quot;答案&quot;&gt;&lt;/a&gt;答案&lt;/h2&gt;&lt;p&gt;
    
    </summary>
    
    
      <category term="leetcode" scheme="https://zronghui.github.io/categories/leetcode/"/>
    
      <category term="leetcode-2**" scheme="https://zronghui.github.io/categories/leetcode/leetcode-2/"/>
    
    
      <category term="Dynamic Programming" scheme="https://zronghui.github.io/tags/Dynamic-Programming/"/>
    
      <category term="Math" scheme="https://zronghui.github.io/tags/Math/"/>
    
      <category term="Heap" scheme="https://zronghui.github.io/tags/Heap/"/>
    
  </entry>
  
  <entry>
    <title>leetcode 263. Ugly Number</title>
    <link href="https://zronghui.github.io/leetcode/leetcode-2**/leetcode-263-Ugly-Number.html"/>
    <id>https://zronghui.github.io/leetcode/leetcode-2**/leetcode-263-Ugly-Number.html</id>
    <published>2020-07-13T13:45:45.000Z</published>
    <updated>2020-07-13T14:36:10.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problems/ugly-number/">leetcode</a><br><a href="https://www.jiuzhang.com/solution/ugly-number/">九章</a></p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>Write a program to check whether a given number is an ugly number.</p><p>Ugly numbers are <strong>positive numbers</strong> whose prime factors only include <code>2, 3,5</code>.</p><p><strong>Example 1:</strong></p><pre><code>Input: 6Output: trueExplanation: 6 = 2 × 3</code></pre><p><strong>Example 2:</strong></p><pre><code>Input: 8Output: trueExplanation: 8 = 2 × 2 × 2</code></pre><p><strong>Example 3:</strong></p><pre><code>Input: 14Output: false Explanation:14 is not ugly since it includes another prime factor 7.</code></pre><p><strong>Note:</strong></p><ol><li><code>1</code> is typically treated as an ugly number.</li><li>Input is within the 32-bit signed integer range: [−231,  231 − 1].</li></ol><p><strong>Tags:</strong> Math</p><p><strong>Difficulty:</strong> Easy</p><h2 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h2><p><a id="more"></a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isUgly</span><span class="params">(self, n: int)</span> -&gt; bool:</span></span><br><span class="line">        <span class="keyword">if</span> n&lt;=<span class="number">0</span>: <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">not</span> n%<span class="number">5</span>: n = n//<span class="number">5</span></span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">not</span> n%<span class="number">3</span>: n = n//<span class="number">3</span></span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">not</span> n%<span class="number">2</span>: n = n//<span class="number">2</span></span><br><span class="line">        <span class="keyword">return</span> n==<span class="number">1</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/ugly-number/&quot;&gt;leetcode&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.jiuzhang.com/solution/ugly-number/&quot;&gt;九章&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;Write a program to check whether a given number is an ugly number.&lt;/p&gt;
&lt;p&gt;Ugly numbers are &lt;strong&gt;positive numbers&lt;/strong&gt; whose prime factors only include &lt;code&gt;2, 3,
5&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example 1:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Input: 6
Output: true
Explanation: 6 = 2 × 3&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Example 2:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Input: 8
Output: true
Explanation: 8 = 2 × 2 × 2&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Example 3:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Input: 14
Output: false 
Explanation:14 is not ugly since it includes another prime factor 7.&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;1&lt;/code&gt; is typically treated as an ugly number.&lt;/li&gt;
&lt;li&gt;Input is within the 32-bit signed integer range: [−231,  231 − 1].&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Tags:&lt;/strong&gt; Math&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Difficulty:&lt;/strong&gt; Easy&lt;/p&gt;
&lt;h2 id=&quot;答案&quot;&gt;&lt;a href=&quot;#答案&quot; class=&quot;headerlink&quot; title=&quot;答案&quot;&gt;&lt;/a&gt;答案&lt;/h2&gt;&lt;p&gt;
    
    </summary>
    
    
      <category term="leetcode" scheme="https://zronghui.github.io/categories/leetcode/"/>
    
      <category term="leetcode-2**" scheme="https://zronghui.github.io/categories/leetcode/leetcode-2/"/>
    
    
      <category term="Math" scheme="https://zronghui.github.io/tags/Math/"/>
    
  </entry>
  
  <entry>
    <title>leetcode模板</title>
    <link href="https://zronghui.github.io/leetcode/leetcode%E6%A8%A1%E6%9D%BF.html"/>
    <id>https://zronghui.github.io/leetcode/leetcode%E6%A8%A1%E6%9D%BF.html</id>
    <published>2020-07-13T01:33:11.000Z</published>
    <updated>2020-07-13T14:36:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a><h2 id="二分"><a href="#二分" class="headerlink" title="二分"></a>二分</h2><p>helper 函数</p><p>l&lt;=r  l=mid+1 r=mid-1 </p><p>根据求左边界还是右边界，l r 的更新不同</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">search</span><span class="params">(self, nums: List[int], target: int)</span> -&gt; int:</span></span><br><span class="line">        <span class="comment"># return bisect.bisect(nums, target)-bisect.bisect(nums, target-1)</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">helper</span><span class="params">(n)</span>:</span></span><br><span class="line">            l, r = <span class="number">0</span>, len(nums)<span class="number">-1</span></span><br><span class="line">            <span class="keyword">while</span> l&lt;=r:</span><br><span class="line">                mid = (l+r)//<span class="number">2</span></span><br><span class="line">                <span class="keyword">if</span> nums[mid]&lt;=n: l = mid+<span class="number">1</span></span><br><span class="line">                <span class="keyword">else</span>: r = mid<span class="number">-1</span></span><br><span class="line">            <span class="keyword">return</span> l</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> helper(target)-helper(target<span class="number">-1</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
    
    </summary>
    
    
      <category term="leetcode" scheme="https://zronghui.github.io/categories/leetcode/"/>
    
    
  </entry>
  
  <entry>
    <title>weekly-contest-197</title>
    <link href="https://zronghui.github.io/Leetcode%20weekly%20contest/weekly-contest-197.html"/>
    <id>https://zronghui.github.io/Leetcode%20weekly%20contest/weekly-contest-197.html</id>
    <published>2020-07-12T05:53:52.000Z</published>
    <updated>2020-07-12T16:00:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><ul><li><input checked="" disabled="" type="checkbox"> <a href="https://leetcode-cn.com/problems/number-of-good-pairs/">好数对的数目</a><strong>3</strong></li><li><input checked="" disabled="" type="checkbox"> <a href="https://leetcode-cn.com/problems/number-of-substrings-with-only-1s/">仅含 1 的子串数</a><strong>4</strong></li><li><input disabled="" type="checkbox"> <a href="https://leetcode-cn.com/problems/path-with-maximum-probability/">概率最大的路径</a><strong>5</strong></li><li><input disabled="" type="checkbox"> <a href="https://leetcode-cn.com/problems/best-position-for-a-service-centre/">服务中心的最佳位置</a><strong>7</strong></li></ul><a id="more"></a><h1 id="1"><a href="#1" class="headerlink" title="1"></a>1</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">numIdenticalPairs</span><span class="params">(self, nums: List[int])</span> -&gt; int:</span></span><br><span class="line">        res = <span class="number">0</span></span><br><span class="line">        n = len(nums)</span><br><span class="line">        <span class="keyword">if</span> n==<span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n<span class="number">-1</span>):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(i+<span class="number">1</span>, n):</span><br><span class="line">                <span class="keyword">if</span> nums[i]==nums[j]:</span><br><span class="line">                    res += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure><h1 id="2"><a href="#2" class="headerlink" title="2"></a>2</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">numSub</span><span class="params">(self, s: str)</span> -&gt; int:</span></span><br><span class="line">        <span class="comment"># 0 1 1 0 1 1 1</span></span><br><span class="line">        <span class="comment"># 0 1 2 0 1 2 3 dp: 以当前位置结尾的 1 的长度</span></span><br><span class="line">        <span class="comment"># 1+2+1+2+3</span></span><br><span class="line">        n = len(s)</span><br><span class="line">        dp = [<span class="number">0</span> <span class="keyword">for</span> _ <span class="keyword">in</span> range(n+<span class="number">1</span>)]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, n+<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">if</span> s[i<span class="number">-1</span>]==<span class="string">'1'</span>:</span><br><span class="line">                dp[i] = dp[i<span class="number">-1</span>]+<span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> sum(dp[<span class="number">1</span>:])%(<span class="number">10</span>**<span class="number">9</span>+<span class="number">7</span>)</span><br></pre></td></tr></table></figure><h1 id="3"><a href="#3" class="headerlink" title="3"></a>3</h1><p><a href="https://leetcode-cn.com/problems/path-with-maximum-probability/solution/bfsbian-li-qiu-jie-by-jie-dong/">bfs遍历求解 - 概率最大的路径 - 力扣（LeetCode）</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">maxProbability</span><span class="params">(self, n: int, e: List[List[int]], succProb: List[float], start: int, end: int)</span> -&gt; float:</span></span><br><span class="line">        <span class="comment"># 1. defaultdict 构造 graph</span></span><br><span class="line">        graph = collections.defaultdict(dict)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(e)):</span><br><span class="line">            p1, p2 = e[i]</span><br><span class="line">            graph[p1][p2] = succProb[i]</span><br><span class="line">            graph[p2][p1] = succProb[i]</span><br><span class="line">        stack = collections.deque()</span><br><span class="line">        stack.append([start, <span class="number">1</span>, <span class="number">1</span>&lt;&lt;start]) <span class="comment"># start 到 当前点 的 概率 ，遍历过哪些点</span></span><br><span class="line">        ans = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> stack:</span><br><span class="line">            cur, prob, passed = stack.popleft()</span><br><span class="line">            <span class="keyword">if</span> cur==end:</span><br><span class="line">                ans = max(ans, prob)</span><br><span class="line">            <span class="keyword">elif</span> prob&gt;ans:</span><br><span class="line">                <span class="keyword">for</span> point, _prob <span class="keyword">in</span> graph[cur].items():</span><br><span class="line">                    <span class="keyword">if</span> <span class="keyword">not</span> passed&amp;(<span class="number">1</span>&lt;&lt;point) <span class="keyword">and</span> _prob*prob&gt;ans:</span><br><span class="line">                        stack.append([point, _prob*prob, passed^<span class="number">1</span>&lt;&lt;point])</span><br><span class="line">            </span><br><span class="line">        <span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure><p>优化：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">maxProbability</span><span class="params">(self, n: int, e: List[List[int]], succProb: List[float], start: int, end: int)</span> -&gt; float:</span></span><br><span class="line">        <span class="comment"># defaultdict 构造 graph</span></span><br><span class="line">        graph = collections.defaultdict(dict)</span><br><span class="line">        <span class="comment"># 因为这个题目比较特殊，权重是乘性的并且0-1之间，所以可以用一个dic记录从start开始到每个节点的最大权重。 然后每次你只需要判断pop出的节点的权重就可以。如果比曾经记录的dic中的权重小那就没必要继续（这里面包含了环，回头），如果比曾经记录的权重大，那么继续进行。</span></span><br><span class="line">        d = collections.defaultdict(float)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(e)):</span><br><span class="line">            p1, p2 = e[i]</span><br><span class="line">            graph[p1][p2] = succProb[i]</span><br><span class="line">            graph[p2][p1] = succProb[i]</span><br><span class="line">        stack = collections.deque()</span><br><span class="line">        stack.append([start, <span class="number">1</span>]) <span class="comment"># start 到 当前点 的 概率</span></span><br><span class="line">        ans = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> stack:</span><br><span class="line">            cur, prob = stack.popleft()</span><br><span class="line">            <span class="keyword">if</span> cur==end:</span><br><span class="line">                ans = max(ans, prob)</span><br><span class="line">            <span class="keyword">elif</span> prob&gt;ans:</span><br><span class="line">                <span class="keyword">for</span> point, _prob <span class="keyword">in</span> graph[cur].items():</span><br><span class="line">                    <span class="keyword">if</span> _prob*prob&gt;ans <span class="keyword">and</span> _prob*prob&gt;d.get(point, <span class="number">0</span>):</span><br><span class="line">                        d[point] = _prob*prob</span><br><span class="line">                        stack.append([point, _prob*prob])</span><br><span class="line">        <span class="keyword">return</span> ans</span><br></pre></td></tr></table></figure><h1 id="4"><a href="#4" class="headerlink" title="4"></a>4</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&quot;&quot; disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; &lt;a href=&quot;https://leetcode-cn.com/problems/number-of-good-pairs/&quot;&gt;好数对的数目&lt;/a&gt;&lt;strong&gt;3&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&quot;&quot; disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; &lt;a href=&quot;https://leetcode-cn.com/problems/number-of-substrings-with-only-1s/&quot;&gt;仅含 1 的子串数&lt;/a&gt;&lt;strong&gt;4&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; &lt;a href=&quot;https://leetcode-cn.com/problems/path-with-maximum-probability/&quot;&gt;概率最大的路径&lt;/a&gt;&lt;strong&gt;5&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; &lt;a href=&quot;https://leetcode-cn.com/problems/best-position-for-a-service-centre/&quot;&gt;服务中心的最佳位置&lt;/a&gt;&lt;strong&gt;7&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Leetcode weekly contest" scheme="https://zronghui.github.io/categories/Leetcode-weekly-contest/"/>
    
    
  </entry>
  
  <entry>
    <title>biweekly-contest-30</title>
    <link href="https://zronghui.github.io/Leetcode%20weekly%20contest/biweekly-contest-30.html"/>
    <id>https://zronghui.github.io/Leetcode%20weekly%20contest/biweekly-contest-30.html</id>
    <published>2020-07-12T05:46:55.000Z</published>
    <updated>2020-07-12T16:00:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><ul><li><input checked="" disabled="" type="checkbox"> <a href="https://leetcode-cn.com/contest/biweekly-contest-30/problems/reformat-date/">转变日期格式</a><strong>3</strong></li><li><input checked="" disabled="" type="checkbox"> <a href="https://leetcode-cn.com/contest/biweekly-contest-30/problems/range-sum-of-sorted-subarray-sums/">子数组和排序后的区间和</a><strong>4</strong></li><li><input checked="" disabled="" type="checkbox"> <a href="https://leetcode-cn.com/contest/biweekly-contest-30/problems/minimum-difference-between-largest-and-smallest-value-in-three-moves/">三次操作后最大值与最小值的最小差</a><strong>5</strong></li><li><input checked="" disabled="" type="checkbox"> <a href="https://leetcode-cn.com/contest/biweekly-contest-30/problems/stone-game-iv/">石子游戏 IV</a><strong>6</strong></li></ul><a id="more"></a><h1 id="1"><a href="#1" class="headerlink" title="1"></a>1</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">reformatDate</span><span class="params">(self, date: str)</span> -&gt; str:</span></span><br><span class="line">        day, month, year = date.split()</span><br><span class="line">        day = day[:<span class="number">-2</span>]</span><br><span class="line">        month = [<span class="string">"Jan"</span>, <span class="string">"Feb"</span>, <span class="string">"Mar"</span>, <span class="string">"Apr"</span>, <span class="string">"May"</span>, <span class="string">"Jun"</span>, <span class="string">"Jul"</span>, <span class="string">"Aug"</span>, <span class="string">"Sep"</span>, <span class="string">"Oct"</span>, <span class="string">"Nov"</span>, <span class="string">"Dec"</span>].index(month)+<span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'&#123;&#125;-&#123;&#125;-&#123;&#125;'</span>.format(year, str(month).zfill(<span class="number">2</span>), day.zfill(<span class="number">2</span>))</span><br></pre></td></tr></table></figure><h1 id="2"><a href="#2" class="headerlink" title="2"></a>2</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">rangeSum</span><span class="params">(self, nums: List[int], n: int, left: int, right: int)</span> -&gt; int:</span></span><br><span class="line">        _sum = [<span class="number">0</span> <span class="keyword">for</span> _ <span class="keyword">in</span> range(n+<span class="number">1</span>)]</span><br><span class="line">        _sum[<span class="number">0</span>], _sum[<span class="number">1</span>] = <span class="number">0</span>, nums[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, n):</span><br><span class="line">            _sum[i+<span class="number">1</span>] += _sum[i]+nums[i]</span><br><span class="line">        l = [_sum[j]-_sum[i] <span class="keyword">for</span> i <span class="keyword">in</span> range(n+<span class="number">1</span>) <span class="keyword">for</span> j <span class="keyword">in</span> range(i+<span class="number">1</span>, n+<span class="number">1</span>)]</span><br><span class="line">        l.sort()</span><br><span class="line">        <span class="keyword">return</span> sum(l[left<span class="number">-1</span>:right]) % (<span class="number">10</span>**<span class="number">9</span> + <span class="number">7</span>)</span><br></pre></td></tr></table></figure><h1 id="3"><a href="#3" class="headerlink" title="3"></a>3</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">minDifference</span><span class="params">(self, nums: List[int])</span> -&gt; int:</span></span><br><span class="line">        n = len(nums)</span><br><span class="line">        <span class="keyword">if</span> n&lt;<span class="number">5</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        <span class="comment"># 思路: 取 4 个最小值，4 个最大值，最多 8 个元素时，可以暴力解法</span></span><br><span class="line">        <span class="keyword">if</span> n&lt;<span class="number">9</span>:</span><br><span class="line">            nums.sort()</span><br><span class="line">            <span class="comment"># 1 2 3 4 5   -&gt; 5-4(删除 123), 4-3(删除 125), 3-2(删除 145), 2-1(删除 345)</span></span><br><span class="line">            n = len(nums)</span><br><span class="line">            <span class="keyword">return</span> min(nums[n<span class="number">-1</span>]-nums[<span class="number">3</span>], nums[n<span class="number">-2</span>]-nums[<span class="number">2</span>], nums[n<span class="number">-3</span>]-nums[<span class="number">1</span>], nums[n<span class="number">-4</span>]-nums[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            l = []</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>): <span class="comment"># 取 4 个最小值</span></span><br><span class="line">                mini = i</span><br><span class="line">                <span class="keyword">for</span> j <span class="keyword">in</span> range(i, n):</span><br><span class="line">                    <span class="keyword">if</span> nums[j]&lt;nums[mini]:</span><br><span class="line">                        mini = j</span><br><span class="line">                nums[mini], nums[i] = nums[i], nums[mini]</span><br><span class="line">                l.append(nums[i])</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">4</span>): <span class="comment"># 4 个最大值</span></span><br><span class="line">                mini = i</span><br><span class="line">                <span class="keyword">for</span> j <span class="keyword">in</span> range(i, n):</span><br><span class="line">                    <span class="keyword">if</span> nums[j]&gt;nums[mini]:</span><br><span class="line">                        mini = j</span><br><span class="line">                nums[mini], nums[i] = nums[i], nums[mini]</span><br><span class="line">                l.append(nums[i])</span><br><span class="line">            <span class="keyword">return</span> self.minDifference(l)</span><br></pre></td></tr></table></figure><h1 id="4"><a href="#4" class="headerlink" title="4"></a>4</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">winnerSquareGame</span><span class="params">(self, n: int)</span> -&gt; bool:</span></span><br><span class="line">        dp = [<span class="literal">False</span> <span class="keyword">for</span> _ <span class="keyword">in</span> range(n+<span class="number">1</span>)]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, n+<span class="number">1</span>):</span><br><span class="line">            j = <span class="number">1</span></span><br><span class="line">            <span class="keyword">while</span> j*j&lt;=i:</span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> dp[i-j*j]:</span><br><span class="line">                    dp[i] = <span class="literal">True</span></span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                j += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> dp[<span class="number">-1</span>]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&quot;&quot; disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; &lt;a href=&quot;https://leetcode-cn.com/contest/biweekly-contest-30/problems/reformat-date/&quot;&gt;转变日期格式&lt;/a&gt;&lt;strong&gt;3&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&quot;&quot; disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; &lt;a href=&quot;https://leetcode-cn.com/contest/biweekly-contest-30/problems/range-sum-of-sorted-subarray-sums/&quot;&gt;子数组和排序后的区间和&lt;/a&gt;&lt;strong&gt;4&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&quot;&quot; disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; &lt;a href=&quot;https://leetcode-cn.com/contest/biweekly-contest-30/problems/minimum-difference-between-largest-and-smallest-value-in-three-moves/&quot;&gt;三次操作后最大值与最小值的最小差&lt;/a&gt;&lt;strong&gt;5&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&quot;&quot; disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; &lt;a href=&quot;https://leetcode-cn.com/contest/biweekly-contest-30/problems/stone-game-iv/&quot;&gt;石子游戏 IV&lt;/a&gt;&lt;strong&gt;6&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Leetcode weekly contest" scheme="https://zronghui.github.io/categories/Leetcode-weekly-contest/"/>
    
    
  </entry>
  
  <entry>
    <title>weekly-contest-196</title>
    <link href="https://zronghui.github.io/Leetcode%20weekly%20contest/weekly-contest-196.html"/>
    <id>https://zronghui.github.io/Leetcode%20weekly%20contest/weekly-contest-196.html</id>
    <published>2020-07-08T12:29:59.000Z</published>
    <updated>2020-07-12T16:00:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><p>又是怀疑人生的一次比赛</p><a id="more"></a><h1 id="1"><a href="#1" class="headerlink" title="1"></a>1</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">canMakeArithmeticProgression</span><span class="params">(self, arr: List[int])</span> -&gt; bool:</span></span><br><span class="line">        n = len(arr)</span><br><span class="line">        <span class="keyword">if</span> n==<span class="number">2</span>: <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        arr.sort()</span><br><span class="line">        gap = arr[<span class="number">1</span>]-arr[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">return</span> all(arr[i]-arr[i<span class="number">-1</span>]==gap <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, n))</span><br></pre></td></tr></table></figure><h1 id="2"><a href="#2" class="headerlink" title="2"></a>2</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getLastMoment</span><span class="params">(self, n: int, left: List[int], right: List[int])</span> -&gt; int:</span></span><br><span class="line">        <span class="keyword">if</span> left <span class="keyword">and</span> right:</span><br><span class="line">            <span class="keyword">return</span> max(max(left), n-min(right))</span><br><span class="line">        <span class="keyword">if</span> left:</span><br><span class="line">            <span class="keyword">return</span> max(left)</span><br><span class="line">        <span class="keyword">if</span> right:</span><br><span class="line">            <span class="keyword">return</span> n-min(right)</span><br></pre></td></tr></table></figure><h1 id="3"><a href="#3" class="headerlink" title="3"></a>3</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="4"><a href="#4" class="headerlink" title="4"></a>4</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
&lt;p&gt;又是怀疑人生的一次比赛&lt;/p&gt;
    
    </summary>
    
    
      <category term="Leetcode weekly contest" scheme="https://zronghui.github.io/categories/Leetcode-weekly-contest/"/>
    
    
  </entry>
  
  <entry>
    <title>leetcode 53. Maximum Subarray</title>
    <link href="https://zronghui.github.io/leetcode/leetcode-5**/leetcode-53-Maximum-Subarray.html"/>
    <id>https://zronghui.github.io/leetcode/leetcode-5**/leetcode-53-Maximum-Subarray.html</id>
    <published>2020-07-08T12:26:47.000Z</published>
    <updated>2020-07-10T01:35:26.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problems/maximum-subarray/">leetcode</a><br><a href="https://www.jiuzhang.com/solution/maximum-subarray/">九章</a></p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>Given an integer array <code>nums</code>, find the contiguous subarray (containing at<br>least one number) which has the largest sum and return its sum.</p><p><strong>Example:</strong></p><pre><code>Input: [-2,1,-3,4,-1,2,1,-5,4],Output: 6Explanation:  [4,-1,2,1] has the largest sum = 6.</code></pre><p><strong>Follow up:</strong></p><p>If you have figured out the O( <em>n</em> ) solution, try coding another solution<br>using the divide and conquer approach, which is more subtle.</p><p><strong>Tags:</strong> Array, Divide and Conquer, Dynamic Programming</p><p><strong>Difficulty:</strong> Easy</p><h2 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h2><p><a id="more"></a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * @lc app=leetcode id=53 lang=java</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * [53] Maximum Subarray</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">// 动态规划</span></span><br><span class="line"><span class="comment">// 长度从0~nums.length</span></span><br><span class="line"><span class="comment">// solution(0~i) = max(solution(i-1)+nums[i],nums[i])</span></span><br><span class="line"><span class="comment">// solution = max(solutions)</span></span><br><span class="line"><span class="comment">// 下面用dp(dynamic programming) 表示 solution</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxSubArray</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> dp = nums[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">int</span> maxdp = nums[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">            dp = Math.max(dp+nums[i], nums[i]);</span><br><span class="line">            maxdp = Math.max(dp, maxdp);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> maxdp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">maxSubArray</span><span class="params">(self, nums: List[int])</span> -&gt; int:</span></span><br><span class="line">        <span class="comment"># -2 1 -3 4 -1 2 1 -5 4  nums</span></span><br><span class="line">        <span class="comment"># -2 1 -2 4  3 5 6  1 5  dp(表示以 i 结尾的最大和)</span></span><br><span class="line">        <span class="comment"># if dp[i-1] &lt;= 0: dp[i] = nums[i]</span></span><br><span class="line">        <span class="comment"># else: dp[i] = dp[i-1]+nums[i]</span></span><br><span class="line">        <span class="comment"># 可以看到若要返回那个数组，范围是 [maxdp 前第一个非负的 dp : maxdp]</span></span><br><span class="line">        dp = maxdp = nums[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">for</span> num <span class="keyword">in</span> nums[<span class="number">1</span>:]:</span><br><span class="line">            <span class="keyword">if</span> dp&lt;=<span class="number">0</span>: dp = num</span><br><span class="line">            <span class="keyword">else</span>: dp += num</span><br><span class="line">            maxdp = max(maxdp, dp)</span><br><span class="line">        <span class="keyword">return</span> maxdp</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/maximum-subarray/&quot;&gt;leetcode&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.jiuzhang.com/solution/maximum-subarray/&quot;&gt;九章&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;Given an integer array &lt;code&gt;nums&lt;/code&gt;, find the contiguous subarray (containing at&lt;br&gt;least one number) which has the largest sum and return its sum.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Input: [-2,1,-3,4,-1,2,1,-5,4],
Output: 6
Explanation:  [4,-1,2,1] has the largest sum = 6.&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Follow up:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you have figured out the O( &lt;em&gt;n&lt;/em&gt; ) solution, try coding another solution&lt;br&gt;using the divide and conquer approach, which is more subtle.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tags:&lt;/strong&gt; Array, Divide and Conquer, Dynamic Programming&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Difficulty:&lt;/strong&gt; Easy&lt;/p&gt;
&lt;h2 id=&quot;答案&quot;&gt;&lt;a href=&quot;#答案&quot; class=&quot;headerlink&quot; title=&quot;答案&quot;&gt;&lt;/a&gt;答案&lt;/h2&gt;&lt;p&gt;
    
    </summary>
    
    
      <category term="leetcode" scheme="https://zronghui.github.io/categories/leetcode/"/>
    
      <category term="leetcode-5**" scheme="https://zronghui.github.io/categories/leetcode/leetcode-5/"/>
    
    
      <category term="Array" scheme="https://zronghui.github.io/tags/Array/"/>
    
      <category term="Dynamic Programming" scheme="https://zronghui.github.io/tags/Dynamic-Programming/"/>
    
      <category term="Divide and Conquer" scheme="https://zronghui.github.io/tags/Divide-and-Conquer/"/>
    
  </entry>
  
  <entry>
    <title>leetcode 企业题库</title>
    <link href="https://zronghui.github.io/leetcode/leetcode-%E4%BC%81%E4%B8%9A%E9%A2%98%E5%BA%93.html"/>
    <id>https://zronghui.github.io/leetcode/leetcode-%E4%BC%81%E4%B8%9A%E9%A2%98%E5%BA%93.html</id>
    <published>2020-07-08T02:05:20.000Z</published>
    <updated>2020-07-08T02:18:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a><p>来源：<a href="https://blog.nowcoder.net/lingo/20178">LeetCode 企业题库_牛客博客</a></p><h2 id="小米"><a href="#小米" class="headerlink" title="小米"></a>小米</h2><img src="https://i.loli.net/2020/07/08/qixt5ZOSjWGlnIb.png" alt="图片说明" style="zoom: 67%;" /><h2 id="字节跳动"><a href="#字节跳动" class="headerlink" title="字节跳动"></a>字节跳动</h2><img src="https://i.loli.net/2020/07/08/rdNRXtueDkjPB7m.png" alt="图片说明" style="zoom:67%;" /><h2 id="腾讯"><a href="#腾讯" class="headerlink" title="腾讯"></a>腾讯</h2><img src="https://i.loli.net/2020/07/08/7LHGKzAvVXb1DSq.png" alt="图片说明" style="zoom:67%;" /><h2 id="阿里巴巴"><a href="#阿里巴巴" class="headerlink" title="阿里巴巴"></a>阿里巴巴</h2><img src="https://i.loli.net/2020/07/08/1czlxJMHAj3V2Bd.png" alt="图片说明" style="zoom:67%;" /><h2 id="华为"><a href="#华为" class="headerlink" title="华为"></a>华为</h2><img src="https://i.loli.net/2020/07/08/3VTg1G6qFNpA4Co.png" alt="图片说明" style="zoom:67%;" /><h2 id="微软"><a href="#微软" class="headerlink" title="微软"></a>微软</h2><img src="https://i.loli.net/2020/07/08/a359RoHZJwVTh7r.png" alt="图片说明" style="zoom:67%;" /><h2 id="今日头条"><a href="#今日头条" class="headerlink" title="今日头条"></a>今日头条</h2><img src="https://i.loli.net/2020/07/08/K9xs2mZ3Yy6EBbQ.png" alt="图片说明" style="zoom:67%;" /><h2 id="百度"><a href="#百度" class="headerlink" title="百度"></a>百度</h2><img src="https://i.loli.net/2020/07/08/3VNC9sktaAolrpg.png" alt="图片说明" style="zoom:67%;" />]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
    
    </summary>
    
    
      <category term="leetcode" scheme="https://zronghui.github.io/categories/leetcode/"/>
    
    
  </entry>
  
  <entry>
    <title>面试题 17.26 稀疏相似度</title>
    <link href="https://zronghui.github.io/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-17-26-%E7%A8%80%E7%96%8F%E7%9B%B8%E4%BC%BC%E5%BA%A6.html"/>
    <id>https://zronghui.github.io/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-17-26-%E7%A8%80%E7%96%8F%E7%9B%B8%E4%BC%BC%E5%BA%A6.html</id>
    <published>2020-07-08T01:43:41.000Z</published>
    <updated>2020-07-08T02:18:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a><h3 id="原题链接"><a href="#原题链接" class="headerlink" title="原题链接"></a>原题链接</h3><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
    
    </summary>
    
    
      <category term="leetcode" scheme="https://zronghui.github.io/categories/leetcode/"/>
    
      <category term="程序员面试金典" scheme="https://zronghui.github.io/categories/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/"/>
    
    
  </entry>
  
  <entry>
    <title>面试题 17.25 单词矩阵</title>
    <link href="https://zronghui.github.io/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-17-25-%E5%8D%95%E8%AF%8D%E7%9F%A9%E9%98%B5.html"/>
    <id>https://zronghui.github.io/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-17-25-%E5%8D%95%E8%AF%8D%E7%9F%A9%E9%98%B5.html</id>
    <published>2020-07-08T01:43:39.000Z</published>
    <updated>2020-07-08T02:18:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a><h3 id="原题链接"><a href="#原题链接" class="headerlink" title="原题链接"></a>原题链接</h3><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
    
    </summary>
    
    
      <category term="leetcode" scheme="https://zronghui.github.io/categories/leetcode/"/>
    
      <category term="程序员面试金典" scheme="https://zronghui.github.io/categories/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/"/>
    
    
  </entry>
  
  <entry>
    <title>面试题 17.24 最大子矩阵</title>
    <link href="https://zronghui.github.io/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-17-24-%E6%9C%80%E5%A4%A7%E5%AD%90%E7%9F%A9%E9%98%B5.html"/>
    <id>https://zronghui.github.io/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-17-24-%E6%9C%80%E5%A4%A7%E5%AD%90%E7%9F%A9%E9%98%B5.html</id>
    <published>2020-07-08T01:43:37.000Z</published>
    <updated>2020-07-08T02:18:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a><h3 id="原题链接"><a href="#原题链接" class="headerlink" title="原题链接"></a>原题链接</h3><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
    
    </summary>
    
    
      <category term="leetcode" scheme="https://zronghui.github.io/categories/leetcode/"/>
    
      <category term="程序员面试金典" scheme="https://zronghui.github.io/categories/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/"/>
    
    
  </entry>
  
  <entry>
    <title>面试题 17.23 最大黑方阵</title>
    <link href="https://zronghui.github.io/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-17-23-%E6%9C%80%E5%A4%A7%E9%BB%91%E6%96%B9%E9%98%B5.html"/>
    <id>https://zronghui.github.io/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-17-23-%E6%9C%80%E5%A4%A7%E9%BB%91%E6%96%B9%E9%98%B5.html</id>
    <published>2020-07-08T01:43:35.000Z</published>
    <updated>2020-07-08T02:18:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a><h3 id="原题链接"><a href="#原题链接" class="headerlink" title="原题链接"></a>原题链接</h3><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
    
    </summary>
    
    
      <category term="leetcode" scheme="https://zronghui.github.io/categories/leetcode/"/>
    
      <category term="程序员面试金典" scheme="https://zronghui.github.io/categories/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/"/>
    
    
  </entry>
  
  <entry>
    <title>面试题 17.22 单词转换</title>
    <link href="https://zronghui.github.io/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-17-22-%E5%8D%95%E8%AF%8D%E8%BD%AC%E6%8D%A2.html"/>
    <id>https://zronghui.github.io/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-17-22-%E5%8D%95%E8%AF%8D%E8%BD%AC%E6%8D%A2.html</id>
    <published>2020-07-08T01:43:33.000Z</published>
    <updated>2020-07-08T02:18:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a><h3 id="原题链接"><a href="#原题链接" class="headerlink" title="原题链接"></a>原题链接</h3><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
    
    </summary>
    
    
      <category term="leetcode" scheme="https://zronghui.github.io/categories/leetcode/"/>
    
      <category term="程序员面试金典" scheme="https://zronghui.github.io/categories/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/"/>
    
    
  </entry>
  
  <entry>
    <title>面试题 17.21 直方图的水量</title>
    <link href="https://zronghui.github.io/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-17-21-%E7%9B%B4%E6%96%B9%E5%9B%BE%E7%9A%84%E6%B0%B4%E9%87%8F.html"/>
    <id>https://zronghui.github.io/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-17-21-%E7%9B%B4%E6%96%B9%E5%9B%BE%E7%9A%84%E6%B0%B4%E9%87%8F.html</id>
    <published>2020-07-08T01:43:31.000Z</published>
    <updated>2020-07-08T02:18:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a><h3 id="原题链接"><a href="#原题链接" class="headerlink" title="原题链接"></a>原题链接</h3><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
    
    </summary>
    
    
      <category term="leetcode" scheme="https://zronghui.github.io/categories/leetcode/"/>
    
      <category term="程序员面试金典" scheme="https://zronghui.github.io/categories/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/"/>
    
    
  </entry>
  
  <entry>
    <title>面试题 17.20 连续中值</title>
    <link href="https://zronghui.github.io/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-17-20-%E8%BF%9E%E7%BB%AD%E4%B8%AD%E5%80%BC.html"/>
    <id>https://zronghui.github.io/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-17-20-%E8%BF%9E%E7%BB%AD%E4%B8%AD%E5%80%BC.html</id>
    <published>2020-07-08T01:43:30.000Z</published>
    <updated>2020-07-08T02:18:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a><h3 id="原题链接"><a href="#原题链接" class="headerlink" title="原题链接"></a>原题链接</h3><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
    
    </summary>
    
    
      <category term="leetcode" scheme="https://zronghui.github.io/categories/leetcode/"/>
    
      <category term="程序员面试金典" scheme="https://zronghui.github.io/categories/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/"/>
    
    
  </entry>
  
  <entry>
    <title>面试题 17.19 消失的两个数字</title>
    <link href="https://zronghui.github.io/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-17-19-%E6%B6%88%E5%A4%B1%E7%9A%84%E4%B8%A4%E4%B8%AA%E6%95%B0%E5%AD%97.html"/>
    <id>https://zronghui.github.io/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-17-19-%E6%B6%88%E5%A4%B1%E7%9A%84%E4%B8%A4%E4%B8%AA%E6%95%B0%E5%AD%97.html</id>
    <published>2020-07-08T01:43:28.000Z</published>
    <updated>2020-07-08T02:18:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a><h3 id="原题链接"><a href="#原题链接" class="headerlink" title="原题链接"></a>原题链接</h3><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
    
    </summary>
    
    
      <category term="leetcode" scheme="https://zronghui.github.io/categories/leetcode/"/>
    
      <category term="程序员面试金典" scheme="https://zronghui.github.io/categories/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/"/>
    
    
  </entry>
  
  <entry>
    <title>面试题 17.18 最短超串</title>
    <link href="https://zronghui.github.io/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-17-18-%E6%9C%80%E7%9F%AD%E8%B6%85%E4%B8%B2.html"/>
    <id>https://zronghui.github.io/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-17-18-%E6%9C%80%E7%9F%AD%E8%B6%85%E4%B8%B2.html</id>
    <published>2020-07-08T01:43:26.000Z</published>
    <updated>2020-07-08T02:18:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a><h3 id="原题链接"><a href="#原题链接" class="headerlink" title="原题链接"></a>原题链接</h3><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
    
    </summary>
    
    
      <category term="leetcode" scheme="https://zronghui.github.io/categories/leetcode/"/>
    
      <category term="程序员面试金典" scheme="https://zronghui.github.io/categories/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/"/>
    
    
  </entry>
  
  <entry>
    <title>面试题 17.17 多次搜索</title>
    <link href="https://zronghui.github.io/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-17-17-%E5%A4%9A%E6%AC%A1%E6%90%9C%E7%B4%A2.html"/>
    <id>https://zronghui.github.io/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/%E9%9D%A2%E8%AF%95%E9%A2%98-17-17-%E5%A4%9A%E6%AC%A1%E6%90%9C%E7%B4%A2.html</id>
    <published>2020-07-08T01:43:24.000Z</published>
    <updated>2020-07-08T02:18:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a><h3 id="原题链接"><a href="#原题链接" class="headerlink" title="原题链接"></a>原题链接</h3><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
    
    </summary>
    
    
      <category term="leetcode" scheme="https://zronghui.github.io/categories/leetcode/"/>
    
      <category term="程序员面试金典" scheme="https://zronghui.github.io/categories/leetcode/%E7%A8%8B%E5%BA%8F%E5%91%98%E9%9D%A2%E8%AF%95%E9%87%91%E5%85%B8/"/>
    
    
  </entry>
  
</feed>
