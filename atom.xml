<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>zronghui的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://zronghui.github.io/"/>
  <updated>2020-03-11T07:18:04.000Z</updated>
  <id>https://zronghui.github.io/</id>
  
  <author>
    <name>zronghui</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>小石潭记</title>
    <link href="https://zronghui.github.io/jiao/%E5%B0%8F%E7%9F%B3%E6%BD%AD%E8%AE%B0.html"/>
    <id>https://zronghui.github.io/jiao/%E5%B0%8F%E7%9F%B3%E6%BD%AD%E8%AE%B0.html</id>
    <published>2020-03-11T07:11:50.000Z</published>
    <updated>2020-03-11T07:18:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
    
    </summary>
    
    
      <category term="jiao" scheme="https://zronghui.github.io/categories/jiao/"/>
    
    
  </entry>
  
  <entry>
    <title>桃花源记</title>
    <link href="https://zronghui.github.io/jiao/%E6%A1%83%E8%8A%B1%E6%BA%90%E8%AE%B0.html"/>
    <id>https://zronghui.github.io/jiao/%E6%A1%83%E8%8A%B1%E6%BA%90%E8%AE%B0.html</id>
    <published>2020-03-11T07:11:42.000Z</published>
    <updated>2020-03-11T07:18:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
    
    </summary>
    
    
      <category term="jiao" scheme="https://zronghui.github.io/categories/jiao/"/>
    
    
  </entry>
  
  <entry>
    <title>时间的脚印</title>
    <link href="https://zronghui.github.io/jiao/%E6%97%B6%E9%97%B4%E7%9A%84%E8%84%9A%E5%8D%B0.html"/>
    <id>https://zronghui.github.io/jiao/%E6%97%B6%E9%97%B4%E7%9A%84%E8%84%9A%E5%8D%B0.html</id>
    <published>2020-03-11T07:11:34.000Z</published>
    <updated>2020-03-11T07:18:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
    
    </summary>
    
    
      <category term="jiao" scheme="https://zronghui.github.io/categories/jiao/"/>
    
    
  </entry>
  
  <entry>
    <title>大雁归来</title>
    <link href="https://zronghui.github.io/jiao/%E5%A4%A7%E9%9B%81%E5%BD%92%E6%9D%A5.html"/>
    <id>https://zronghui.github.io/jiao/%E5%A4%A7%E9%9B%81%E5%BD%92%E6%9D%A5.html</id>
    <published>2020-03-11T07:11:27.000Z</published>
    <updated>2020-03-11T07:18:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
    
    </summary>
    
    
      <category term="jiao" scheme="https://zronghui.github.io/categories/jiao/"/>
    
    
  </entry>
  
  <entry>
    <title>阿西莫夫短文两篇</title>
    <link href="https://zronghui.github.io/jiao/%E9%98%BF%E8%A5%BF%E8%8E%AB%E5%A4%AB%E7%9F%AD%E6%96%87%E4%B8%A4%E7%AF%87.html"/>
    <id>https://zronghui.github.io/jiao/%E9%98%BF%E8%A5%BF%E8%8E%AB%E5%A4%AB%E7%9F%AD%E6%96%87%E4%B8%A4%E7%AF%87.html</id>
    <published>2020-03-11T07:11:19.000Z</published>
    <updated>2020-03-11T07:18:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
    
    </summary>
    
    
      <category term="jiao" scheme="https://zronghui.github.io/categories/jiao/"/>
    
    
  </entry>
  
  <entry>
    <title>回延安</title>
    <link href="https://zronghui.github.io/jiao/%E5%9B%9E%E5%BB%B6%E5%AE%89.html"/>
    <id>https://zronghui.github.io/jiao/%E5%9B%9E%E5%BB%B6%E5%AE%89.html</id>
    <published>2020-03-11T07:11:07.000Z</published>
    <updated>2020-03-11T07:18:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a><p><img src="https://i.loli.net/2020/03/11/95I1GVNYheHrXz8.png" alt="95I1GVNYheHrXz8"></p><p><img src="https://i.loli.net/2020/03/11/fvLJAOayUSnw5CM.png" alt="fvLJAOayUSnw5CM"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
    
    </summary>
    
    
      <category term="jiao" scheme="https://zronghui.github.io/categories/jiao/"/>
    
    
  </entry>
  
  <entry>
    <title>大自然的语言</title>
    <link href="https://zronghui.github.io/jiao/%E5%A4%A7%E8%87%AA%E7%84%B6%E7%9A%84%E8%AF%AD%E8%A8%80.html"/>
    <id>https://zronghui.github.io/jiao/%E5%A4%A7%E8%87%AA%E7%84%B6%E7%9A%84%E8%AF%AD%E8%A8%80.html</id>
    <published>2020-03-11T07:10:51.000Z</published>
    <updated>2020-03-11T07:18:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
    
    </summary>
    
    
      <category term="jiao" scheme="https://zronghui.github.io/categories/jiao/"/>
    
    
  </entry>
  
  <entry>
    <title>安塞腰鼓</title>
    <link href="https://zronghui.github.io/jiao/%E5%AE%89%E5%A1%9E%E8%85%B0%E9%BC%93.html"/>
    <id>https://zronghui.github.io/jiao/%E5%AE%89%E5%A1%9E%E8%85%B0%E9%BC%93.html</id>
    <published>2020-03-11T07:10:32.000Z</published>
    <updated>2020-03-11T07:18:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
    
    </summary>
    
    
      <category term="jiao" scheme="https://zronghui.github.io/categories/jiao/"/>
    
    
  </entry>
  
  <entry>
    <title>社戏</title>
    <link href="https://zronghui.github.io/jiao/%E7%A4%BE%E6%88%8F.html"/>
    <id>https://zronghui.github.io/jiao/%E7%A4%BE%E6%88%8F.html</id>
    <published>2020-03-11T07:10:20.000Z</published>
    <updated>2020-03-11T07:26:49.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a><p><img src="https://i.loli.net/2020/03/11/Cyn8TXd16Zzl7Bk.png" alt="Cyn8TXd16Zzl7Bk"></p><p><img src="https://i.loli.net/2020/03/11/5NVabWjwtQK4oJU.png" alt="5NVabWjwtQK4oJU"></p><p><img src="https://i.loli.net/2020/03/11/1iCT6jguQwVhfNz.png" alt="1iCT6jguQwVhfNz"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
    
    </summary>
    
    
      <category term="jiao" scheme="https://zronghui.github.io/categories/jiao/"/>
    
    
  </entry>
  
  <entry>
    <title>alfred</title>
    <link href="https://zronghui.github.io/Mac/07-alfred.html"/>
    <id>https://zronghui.github.io/Mac/07-alfred.html</id>
    <published>2020-03-10T05:01:41.000Z</published>
    <updated>2020-03-11T07:18:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a><h2 id="workflow-search"><a href="#workflow-search" class="headerlink" title="workflow search"></a>workflow search</h2><p><a href="http://www.alfredworkflow.com/">Alfred 2 Workflow List | Search, Install and Share</a></p><h2 id="useful-workflow"><a href="#useful-workflow" class="headerlink" title="useful workflow"></a>useful workflow</h2><h3 id="DevDocs-v1-2-0-Download"><a href="#DevDocs-v1-2-0-Download" class="headerlink" title="DevDocs (v1.2.0) ~ Download"></a><a href="https://github.com/yannickglt/alfred-devdocs">DevDocs</a> (v1.2.0) ~ <a href="https://github.com/zenorocha/alfred-workflows/raw/master/devdocs/devdocs.alfredworkflow">Download</a></h3><p>Search through <a href="http://devdocs.io/">DevDocs</a> documentations by filtering the keyword for each language/library ~ <em>by <a href="https://github.com/yannickglt">@yannickglt</a>.</em></p><blockquote><p>Triggers: <code>cdoc</code>, <code>angular</code>, <code>coffeescript</code>, <code>css</code>, <code>d3</code>, <code>dom</code>, <code>dom_events</code>, <code>git</code>, <code>html</code>, <code>http</code>, <code>javascript</code>, <code>jquery</code>, <code>jqueryui</code>, <code>lodash</code>, <code>php</code>, <code>sass</code>, <code>backbone</code>, <code>c</code>, <code>cpp</code>, <code>chai</code>, <code>cordova</code>, <code>ember</code>, <code>express</code>, <code>go</code>, <code>grunt</code>, <code>haskell</code>, <code>jquerymobile</code>, <code>knockout</code>, <code>laravel</code>, <code>less</code>, <code>maxcdn</code>, <code>moment</code>, <code>node</code>, <code>postgresql</code>, <code>python</code>, <code>redis</code>, <code>requirejs</code>, <code>ruby</code>, <code>rails</code>, <code>sinon</code>, <code>underscore</code>, <code>yii</code>.</p></blockquote><img src="https://i.loli.net/2020/03/10/8gjeZf5NnSlV4Ro.png" alt="8gjeZf5NnSlV4Ro" style="zoom:33%;" /><img src="https://i.loli.net/2020/03/10/yCAK5dBMIcUElaj.png" alt="yCAK5dBMIcUElaj" style="zoom:33%;" /><img src="https://i.loli.net/2020/03/10/AfbnqMrwHaL3i5v.png" alt="AfbnqMrwHaL3i5v" style="zoom:33%;" /><h3 id="Caffeinate-v3-03-0-Download"><a href="#Caffeinate-v3-03-0-Download" class="headerlink" title="Caffeinate (v3.03.0) ~ Download"></a><a href="https://github.com/shawnrice/alfred-2-caffeinate-workflow">Caffeinate</a> (v3.03.0) ~ <a href="https://github.com/zenorocha/alfred-workflows/raw/master/caffeinate/caffeinate.alfredworkflow">Download</a></h3><p>Solves the problem of your computer constantly falling asleep by using OS X’s native command line ~ <em>by <a href="https://github.com/shawnrice/">@shawnrice</a>.</em></p><blockquote><p>Triggers: <code>caff</code>.</p></blockquote><img src="https://i.loli.net/2020/03/10/KiGHQqAyPSLlN1E.png" alt="KiGHQqAyPSLlN1E" style="zoom:33%;" /><h3 id="Emoji-v1-5-0-Download"><a href="#Emoji-v1-5-0-Download" class="headerlink" title="Emoji (v1.5.0) ~ Download"></a><a href="https://github.com/carlosgaldino/alfred-emoji-workflow">Emoji</a> (v1.5.0) ~ <a href="https://github.com/zenorocha/alfred-workflows/raw/master/emoji/emoji.alfredworkflow">Download</a></h3><p>Search for <a href="https://en.wikipedia.org/wiki/Emoji">Emojis</a> used by Basecamp, GitHub, GitLab, Trello, and other services ~ <em>by <a href="https://github.com/carlosgaldino/">@carlosgaldino</a>.</em></p><blockquote><p>Triggers: <code>emoji</code>, <code>emoji [alt key]</code>.</p></blockquote><img src="https://i.loli.net/2020/03/10/yKtOVnTFIoifZBS.png" alt="yKtOVnTFIoifZBS" style="zoom:33%;" /><h3 id="Encode-Decode-v1-8-0-Download"><a href="#Encode-Decode-v1-8-0-Download" class="headerlink" title="Encode/Decode (v1.8.0) ~ Download"></a><a href="https://github.com/willfarrell/alfred-encode-decode-workflow">Encode/Decode</a> (v1.8.0) ~ <a href="https://github.com/zenorocha/alfred-workflows/raw/master/encode-decode/encode-decode.alfredworkflow">Download</a></h3><p>Transform query strings through base64, html, url, and utf-8 encode/decode ~ <em>by <a href="https://github.com/willfarrell/">@willfarrell</a>.</em></p><blockquote><p>Triggers: <code>encode</code>, <code>decode</code>.</p></blockquote><img src="https://i.loli.net/2020/03/10/8uxcZXlPRQtTofe.png" alt="8uxcZXlPRQtTofe" style="zoom:33%;" /><h3 id="GitHub-v1-6-0-Download"><a href="#GitHub-v1-6-0-Download" class="headerlink" title="GitHub (v1.6.0) ~ Download"></a><a href="https://github.com/gharlan/alfred-github-workflow">GitHub</a> (v1.6.0) ~ <a href="https://github.com/zenorocha/alfred-workflows/raw/master/github/github.alfredworkflow">Download</a></h3><p>Easily open <a href="https://github.com/">GitHub</a> repositories and more in the browser ~ <em>by <a href="https://github.com/gharlan/">@gharlan</a>.</em></p><p>P.S.: You have to login before you can use the workflow: <code>gh &gt; login</code>.</p><blockquote><p>Triggers: <code>gh</code>.</p></blockquote><img src="https://cloud.githubusercontent.com/assets/398893/14360273/6d1d54ba-fcaa-11e5-99fb-a9b9976194e2.png" alt="github-1" style="zoom:33%;" /><img src="https://cloud.githubusercontent.com/assets/398893/14360270/6d1ae748-fcaa-11e5-80da-6433c312e452.png" alt="github-2" style="zoom:33%;" /><img src="https://cloud.githubusercontent.com/assets/398893/14360274/6d1eba8a-fcaa-11e5-8815-d7e9ca890542.png" alt="github-3" style="zoom:33%;" /><h3 id="Kill-Process-v1-2-0-Download"><a href="#Kill-Process-v1-2-0-Download" class="headerlink" title="Kill Process (v1.2.0) ~ Download"></a><a href="https://github.com/ngreenstein/alfred-process-killer">Kill Process</a> (v1.2.0) ~ <a href="https://github.com/zenorocha/alfred-workflows/raw/master/kill-process/kill-process.alfredworkflow">Download</a></h3><p>Easily find processes by name and kill them ~ <em>by <a href="https://github.com/ngreenstein">@ngreenstein</a>.</em></p><blockquote><p>Triggers: <code>kill</code>.</p></blockquote><img src="https://cloud.githubusercontent.com/assets/398893/14360276/6d2a33ba-fcaa-11e5-8fa5-4d3703a8129f.png" alt="kill" style="zoom:33%;" /><h3 id="Package-Managers-v3-16-0-Download"><a href="#Package-Managers-v3-16-0-Download" class="headerlink" title="Package Managers (v3.16.0) ~ Download"></a><a href="https://github.com/willfarrell/alfred-pkgman-workflow">Package Managers</a> (v3.16.0) ~ <a href="https://github.com/zenorocha/alfred-workflows/raw/master/package-managers/package-managers.alfredworkflow">Download</a></h3><p>Quick package/plugin/component lookup for your favorite package managers ~ <em>by <a href="https://github.com/willfarrell/">@willfarrell</a>.</em></p><blockquote><p>Triggers: <code>apt-get</code>, <code>apm</code>, <code>bower</code>, <code>brew</code>, <code>chef</code>, <code>cocoa</code>, <code>composer</code>, <code>docker</code>, <code>gems</code>, <code>gradle</code>, <code>grunt</code>, <code>gulp</code>, <code>hex</code>, <code>maven</code>, <code>npm</code>, <code>pear</code>, <code>puppet</code>, <code>pypi</code>, <code>raspbian</code>, <code>rpm</code>, <code>yo</code>.</p></blockquote><img src="https://cloud.githubusercontent.com/assets/398893/14360278/6d2d7f2a-fcaa-11e5-9463-0a909fd4a9bd.png" alt="pm-1" style="zoom:33%;" /><img src="https://cloud.githubusercontent.com/assets/398893/14360277/6d2c5c94-fcaa-11e5-964b-09633238e291.png" alt="pm-2" style="zoom:33%;" /><h3 id="Terminal-→-Finder-v1-6-0-Download"><a href="#Terminal-→-Finder-v1-6-0-Download" class="headerlink" title="Terminal → Finder (v1.6.0) ~ Download"></a><a href="https://github.com/LeEnno/alfred-terminalfinder">Terminal → Finder</a> (v1.6.0) ~ <a href="https://github.com/zenorocha/alfred-workflows/raw/master/terminal-finder/terminal-finder.alfredworkflow">Download</a></h3><p>Open current Finder (or Path Finder) window in Terminal (or iTerm) and vice versa ~ <em>by <a href="https://github.com/LeEnno/">@LeEnno</a>.</em></p><blockquote><p>Triggers: <code>ft</code>, <code>tf</code>, <code>fi</code>, <code>if</code>, <code>pt</code>, <code>tp</code>, <code>pi</code>, <code>ip</code>.</p></blockquote><img src="https://cloud.githubusercontent.com/assets/398893/14360282/6d3a0e3e-fcaa-11e5-8e5b-a8c5a3305962.png" alt="terminal-1" style="zoom: 33%;" /><img src="https://cloud.githubusercontent.com/assets/398893/14360284/6d3d19da-fcaa-11e5-933b-2ce62f83d77e.png" alt="terminal-2" style="zoom:33%;" /><h3 id="ssh-Download"><a href="#ssh-Download" class="headerlink" title="ssh (Download)"></a><a href="https://github.com/isometry/alfredworkflows/tree/master/net.isometry.alfred.ssh">ssh</a> (<a href="https://raw.github.com/isometry/alfredworkflows/master/ssh.alfredworkflow">Download</a>)</h3><p>by <a href="https://github.com/isometry">@isometry</a></p><img src="https://i.loli.net/2020/03/10/biwXPyrx3cWtsoY.png" alt="biwXPyrx3cWtsoY" style="zoom: 50%;" /><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://github.com/zenorocha/alfred-workflows">zenorocha/alfred-workflows: A collection of Alfred 3 and 4 workflows that will rock your world</a><br><a href="https://github.com/hzlzh/AlfredWorkflow.com">hzlzh/AlfredWorkflow.com: A public Collection of Alfred Workflows.</a><br><a href="https://github.com/deanishe/alfred-workflow">deanishe/alfred-workflow: Full-featured library for writing Alfred 3 &amp; 4 workflows</a><br><a href="https://github.com/willfarrell/alfred-workflows">willfarrell/alfred-workflows: Alfred Workflows for Developers</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
    
    </summary>
    
    
      <category term="Mac" scheme="https://zronghui.github.io/categories/Mac/"/>
    
    
  </entry>
  
  <entry>
    <title>scrapy</title>
    <link href="https://zronghui.github.io/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%AE%AD/scrapy.html"/>
    <id>https://zronghui.github.io/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%AE%AD/scrapy.html</id>
    <published>2020-03-10T03:26:04.000Z</published>
    <updated>2020-03-11T07:18:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a><p><a href="https://scrapy-chs.readthedocs.io/zh_CN/0.24/intro/tutorial.html">Scrapy入门教程 — Scrapy 0.24.6 文档</a></p><h2 id="helloScrapy"><a href="#helloScrapy" class="headerlink" title="helloScrapy"></a>helloScrapy</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pip install scrapy</span><br><span class="line">scrapy startproject helloScrapy</span><br><span class="line">scrapy genspider volmoe volmoe.com</span><br><span class="line">scrapy genspider douban douban.com</span><br></pre></td></tr></table></figure><h3 id="settings-py"><a href="#settings-py" class="headerlink" title="settings.py"></a>settings.py</h3><p>300 是权重，决定多个 pipeline 执行的顺序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ROBOTSTXT_OBEY = True</span></span><br><span class="line"></span><br><span class="line">ITEM_PIPELINES = &#123;</span><br><span class="line">   <span class="string">'helloScrapy.pipelines.HelloscrapyPipeline'</span>: <span class="number">300</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="pipelines-py"><a href="#pipelines-py" class="headerlink" title="pipelines.py"></a>pipelines.py</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Define your item pipelines here</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Don't forget to add your pipeline to the ITEM_PIPELINES setting</span></span><br><span class="line"><span class="comment"># See: https://docs.scrapy.org/en/latest/topics/item-pipeline.html</span></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HelloscrapyPipeline</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    处理爬虫所爬取到的数据</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        初始化操作，在爬虫运行过程中只执行一次</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        self.file = open(<span class="string">'books.json'</span>, <span class="string">'w'</span>, encoding=<span class="string">'utf-8'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">process_item</span><span class="params">(self, item, spider)</span>:</span></span><br><span class="line">        <span class="comment"># 现将item数据转为字典类型，再将其保存为json文件</span></span><br><span class="line">        text = json.dumps(dict(item), ensure_ascii=<span class="literal">False</span>) + <span class="string">'\n'</span></span><br><span class="line">        <span class="comment"># 写入本地</span></span><br><span class="line">        self.file.write(text)</span><br><span class="line">        <span class="comment"># 会将item打印到屏幕上，方便观察</span></span><br><span class="line">        <span class="keyword">return</span> item</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">close_spider</span><span class="params">(self, spider)</span>:</span></span><br><span class="line">        <span class="string">"""</span></span><br><span class="line"><span class="string">        爬虫关闭时所执行的操作，在爬虫运行过程中只执行一次</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        self.file.close()</span><br></pre></td></tr></table></figure><h3 id="items-py"><a href="#items-py" class="headerlink" title="items.py"></a>items.py</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BookItem</span><span class="params">(scrapy.Item)</span>:</span></span><br><span class="line">    <span class="comment"># define the fields for your item here like:</span></span><br><span class="line">    <span class="comment"># name = scrapy.Field()</span></span><br><span class="line">    book_name = scrapy.Field()</span><br><span class="line">    book_url = scrapy.Field()</span><br><span class="line">    book_desc = scrapy.Field()</span><br></pre></td></tr></table></figure><h3 id="Spider-volmoe-py"><a href="#Spider-volmoe-py" class="headerlink" title="Spider/volmoe.py"></a>Spider/volmoe.py</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">from</span> zhconv <span class="keyword">import</span> convert</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> helloScrapy.items <span class="keyword">import</span> BookItem</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">VolmoeSpider</span><span class="params">(scrapy.Spider)</span>:</span></span><br><span class="line">    name = <span class="string">'volmoe'</span></span><br><span class="line">    allowed_domains = [<span class="string">'volmoe.com'</span>]</span><br><span class="line">    <span class="comment"># start_urls = [f'https://volmoe.com/l/all,all,all,sortpoint,all,all/&#123;i&#125;.htm' for i in range(1, 2)]</span></span><br><span class="line">    start_urls = [<span class="string">f'https://volmoe.com/l/all,all,all,sortpoint,all,all/<span class="subst">&#123;i&#125;</span>.htm'</span> <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">473</span>)]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 自动调用 parse ，解析 item URL</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, response)</span>:</span></span><br><span class="line">        itemUrlList = list(set(response.xpath(<span class="string">'/html/body/div[7]/table'</span>) \</span><br><span class="line">                               .xpath(<span class="string">'//a/@href'</span>) \</span><br><span class="line">                               .re(<span class="string">r'https://volmoe.com/c/\d+.htm'</span>)))</span><br><span class="line">        <span class="keyword">for</span> itemUrl <span class="keyword">in</span> itemUrlList:</span><br><span class="line">            <span class="keyword">yield</span> scrapy.Request(url=itemUrl, callback=self.parse_item)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 手动调用 parse_item ，解析 item</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse_item</span><span class="params">(self, response)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            item = BookItem()</span><br><span class="line">            item[<span class="string">'book_url'</span>] = response.url</span><br><span class="line">            item[<span class="string">'book_name'</span>] = convert(response.xpath(<span class="string">'//div/b/text()'</span>).extract()[<span class="number">0</span>], <span class="string">'zh-cn'</span>)</span><br><span class="line">            item[<span class="string">'book_desc'</span>] = convert(response.xpath(<span class="string">'//*[@id="desc_text"]/text()'</span>).extract()[<span class="number">0</span>].strip(), <span class="string">'zh-cn'</span>)</span><br><span class="line">            <span class="keyword">yield</span> item</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            print(e)</span><br><span class="line">            <span class="keyword">return</span></span><br></pre></td></tr></table></figure><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><ol><li>爬取 列表页+详情页 用 rules 更方便，但是我用了，没有生效，所以手动指定函数处理</li><li>直接在网页上的 xpath 可能会与爬虫请求到的结构不同，所以可以用 scrapy shell “url”， view(response), 在网页上使用 xpath finder , xpath helper 查看指定元素的 xpath</li><li>scrapy genspider mydomain mydomain.com，最后的 mydomain.com 不用加 http 和 com 后面的/, 如 <del><a href="http://mydomain.com/">http://mydomain.com/</a></del></li></ol><h2 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h2><h3 id="启动所有爬虫？？"><a href="#启动所有爬虫？？" class="headerlink" title="启动所有爬虫？？"></a>启动所有爬虫？？</h3><h3 id="启动一个爬虫"><a href="#启动一个爬虫" class="headerlink" title="启动一个爬虫"></a>启动一个爬虫</h3><p>scrapy crawl volmoe</p><h3 id="事例-spider"><a href="#事例-spider" class="headerlink" title="事例 spider"></a>事例 spider</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> tutorial.items <span class="keyword">import</span> DmozItem</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DmozSpider</span><span class="params">(scrapy.Spider)</span>:</span></span><br><span class="line">    name = <span class="string">"dmoz"</span></span><br><span class="line">    allowed_domains = [<span class="string">"dmoz.org"</span>]</span><br><span class="line">    start_urls = [</span><br><span class="line">        <span class="string">"http://www.dmoz.org/Computers/Programming/Languages/Python/Books/"</span>,</span><br><span class="line">        <span class="string">"http://www.dmoz.org/Computers/Programming/Languages/Python/Resources/"</span></span><br><span class="line">    ]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, response)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> sel <span class="keyword">in</span> response.xpath(<span class="string">'//ul/li'</span>):</span><br><span class="line">            item = DmozItem()</span><br><span class="line">            item[<span class="string">'title'</span>] = sel.xpath(<span class="string">'a/text()'</span>).extract()</span><br><span class="line">            item[<span class="string">'link'</span>] = sel.xpath(<span class="string">'a/@href'</span>).extract()</span><br><span class="line">            item[<span class="string">'desc'</span>] = sel.xpath(<span class="string">'text()'</span>).extract()</span><br><span class="line">            <span class="keyword">yield</span> item</span><br></pre></td></tr></table></figure><h3 id="保存爬取到的数据"><a href="#保存爬取到的数据" class="headerlink" title="保存爬取到的数据"></a>保存爬取到的数据</h3><p>最简单存储爬取的数据的方式是使用 <a href="https://scrapy-chs.readthedocs.io/zh_CN/0.24/topics/feed-exports.html#topics-feed-exports">Feed exports</a>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scrapy crawl dmoz -o items.json</span><br></pre></td></tr></table></figure><p>该命令将采用 <a href="http://en.wikipedia.org/wiki/JSON">JSON</a> 格式对爬取的数据进行序列化，生成 <code>items.json</code> 文件。</p><p>在类似本篇教程里这样小规模的项目中，这种存储方式已经足够。 如果需要对爬取到的item做更多更为复杂的操作，您可以编写 <a href="https://scrapy-chs.readthedocs.io/zh_CN/0.24/topics/item-pipeline.html#topics-item-pipeline">Item Pipeline</a> 。 </p><h3 id="在Shell中尝试Selector选择器"><a href="#在Shell中尝试Selector选择器" class="headerlink" title="在Shell中尝试Selector选择器"></a>在Shell中尝试Selector选择器</h3><p>为了介绍Selector的使用方法，接下来我们将要使用内置的 <a href="https://scrapy-chs.readthedocs.io/zh_CN/0.24/topics/shell.html#topics-shell">Scrapy shell</a> 。Scrapy Shell需要您预装好IPython(一个扩展的Python终端)。</p><p>您需要进入项目的根目录，执行下列命令来启动shell:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scrapy shell &quot;http:&#x2F;&#x2F;www.dmoz.org&#x2F;Computers&#x2F;Programming&#x2F;Languages&#x2F;Python&#x2F;Books&#x2F;&quot;</span><br></pre></td></tr></table></figure><p>注解</p><p>当您在终端运行Scrapy时，请一定记得给url地址加上引号，否则包含参数的url(例如 <code>&amp;</code> 字符)会导致Scrapy运行失败。</p><p>shell的输出类似:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[ ... Scrapy log here ... ]</span><br><span class="line"></span><br><span class="line">2014-01-23 17:11:42-0400 [default] DEBUG: Crawled (200) &lt;GET http:&#x2F;&#x2F;www.dmoz.org&#x2F;Computers&#x2F;Programming&#x2F;Languages&#x2F;Python&#x2F;Books&#x2F;&gt; (referer: None)</span><br><span class="line">[s] Available Scrapy objects:</span><br><span class="line">[s]   crawler    &lt;scrapy.crawler.Crawler object at 0x3636b50&gt;</span><br><span class="line">[s]   item       &#123;&#125;</span><br><span class="line">[s]   request    &lt;GET http:&#x2F;&#x2F;www.dmoz.org&#x2F;Computers&#x2F;Programming&#x2F;Languages&#x2F;Python&#x2F;Books&#x2F;&gt;</span><br><span class="line">[s]   response   &lt;200 http:&#x2F;&#x2F;www.dmoz.org&#x2F;Computers&#x2F;Programming&#x2F;Languages&#x2F;Python&#x2F;Books&#x2F;&gt;</span><br><span class="line">[s]   settings   &lt;scrapy.settings.Settings object at 0x3fadc50&gt;</span><br><span class="line">[s]   spider     &lt;Spider &#39;default&#39; at 0x3cebf50&gt;</span><br><span class="line">[s] Useful shortcuts:</span><br><span class="line">[s]   shelp()           Shell help (print this help)</span><br><span class="line">[s]   fetch(req_or_url) Fetch request (or URL) and update local objects</span><br><span class="line">[s]   view(response)    View response in a browser</span><br><span class="line"></span><br><span class="line">In [1]:</span><br></pre></td></tr></table></figure><p>当shell载入后，您将得到一个包含response数据的本地 <code>response</code> 变量。输入 <code>response.body</code> 将输出response的包体， 输出 <code>response.headers</code> 可以看到response的包头。</p><p>更为重要的是，当输入 <code>response.selector</code> 时， 您将获取到一个可以用于查询返回数据的selector(选择器)， 以及映射到 <code>response.selector.xpath()</code> 、 <code>response.selector.css()</code> 的 快捷方法(shortcut): <code>response.xpath()</code> 和 <code>response.css()</code> 。</p><p>同时，shell根据response提前初始化了变量 <code>sel</code> 。该selector根据response的类型自动选择最合适的分析规则(XML vs HTML)。</p><p>让我们来试试:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">In [<span class="number">1</span>]: response.xpath(<span class="string">'//title'</span>)</span><br><span class="line">Out[<span class="number">1</span>]: [&lt;Selector xpath=<span class="string">'//title'</span> data=<span class="string">u'&lt;title&gt;Open Directory - Computers: Progr'</span>&gt;]</span><br><span class="line"></span><br><span class="line">In [<span class="number">2</span>]: response.xpath(<span class="string">'//title'</span>).extract()</span><br><span class="line">Out[<span class="number">2</span>]: [<span class="string">u'&lt;title&gt;Open Directory - Computers: Programming: Languages: Python: Books&lt;/title&gt;'</span>]</span><br><span class="line"></span><br><span class="line">In [<span class="number">3</span>]: response.xpath(<span class="string">'//title/text()'</span>)</span><br><span class="line">Out[<span class="number">3</span>]: [&lt;Selector xpath=<span class="string">'//title/text()'</span> data=<span class="string">u'Open Directory - Computers: Programming:'</span>&gt;]</span><br><span class="line"></span><br><span class="line">In [<span class="number">4</span>]: response.xpath(<span class="string">'//title/text()'</span>).extract()</span><br><span class="line">Out[<span class="number">4</span>]: [<span class="string">u'Open Directory - Computers: Programming: Languages: Python: Books'</span>]</span><br><span class="line"></span><br><span class="line">In [<span class="number">5</span>]: response.xpath(<span class="string">'//title/text()'</span>).re(<span class="string">'(\w+):'</span>)</span><br><span class="line">Out[<span class="number">5</span>]: [<span class="string">u'Computers'</span>, <span class="string">u'Programming'</span>, <span class="string">u'Languages'</span>, <span class="string">u'Python'</span>]</span><br></pre></td></tr></table></figure><h3 id="命令行工具"><a href="#命令行工具" class="headerlink" title="命令行工具"></a>命令行工具</h3><p>详见：<a href="https://scrapy-chs.readthedocs.io/zh_CN/0.24/topics/commands.html">命令行工具(Command line tools) — Scrapy 0.24.6 文档</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">scrapy startproject myproject</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 可以指定模板（怎么自定义模板？）</span></span><br><span class="line">scrapy genspider [-t template] &lt;name&gt; &lt;domain&gt;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看 basic 模板</span></span><br><span class="line">scrapy genspider -d basic</span><br><span class="line"></span><br><span class="line">scrapy crawl myspider</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 运行contract检查（没明白，不过好像也没用）</span></span><br><span class="line">scrapy check [-l] &lt;spider&gt;</span><br><span class="line"></span><br><span class="line">scrapy list</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 使用 EDITOR 中设定的编辑器编辑给定的spider</span></span><br><span class="line">scrapy edit spider1</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 使用Scrapy下载器(downloader)下载给定的URL，并将获取到的内容送到标准输出（命令行？）</span></span><br><span class="line">scrapy fetch &lt;url&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> ** 在浏览器中打开给定的URL，并以Scrapy spider获取到的形式展现。 有些时候spider获取到的页面和普通用户看到的并不相同。 因此该命令可以用来检查spider所获取到的页面，并确认这是您所期望的。</span></span><br><span class="line">scrapy view &lt;url&gt;</span><br><span class="line"></span><br><span class="line">scrapy shell [url]</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 获取给定的URL并使用相应的spider分析处理。如果您提供 --callback 选项，则使用spider的该方法处理，否则使用 parse 。</span></span><br><span class="line">scrapy parse &lt;url&gt; [options]</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 获取Scrapy的设定</span></span><br><span class="line">scrapy settings [options]</span><br><span class="line"><span class="meta">$</span><span class="bash"> scrapy settings --get BOT_NAME</span></span><br><span class="line">scrapybot</span><br><span class="line"><span class="meta">$</span><span class="bash"> scrapy settings --get DOWNLOAD_DELAY</span></span><br><span class="line">0</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 在未创建项目的情况下，运行一个编写在Python文件中的spider。</span></span><br><span class="line">scrapy runspider &lt;spider_file.py&gt;</span><br><span class="line"><span class="meta">$</span><span class="bash"> scrapy runspider myspider.py</span></span><br><span class="line">[ ... spider starts crawling ... ]</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 输出Scrapy版本。配合 -v 运行时，该命令同时输出Python, Twisted以及平台的信息，方便bug提交。</span></span><br><span class="line">scrapy version [-v]</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 将项目部署到Scrapyd服务？</span></span><br><span class="line">scrapy deploy [ &lt;target:project&gt; | -l &lt;target&gt; | -L ]</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 运行benchmark测试</span></span><br><span class="line">scrapy bench</span><br></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://juejin.im/post/5aec1bb9f265da0b9526f855">Scrapy框架的使用之Selector的用法 - 掘金</a></p><p>介绍了 css xpath re 的用法</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
    
    </summary>
    
    
      <category term="研究生课程" scheme="https://zronghui.github.io/categories/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/"/>
    
      <category term="信息系统实训" scheme="https://zronghui.github.io/categories/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%AE%AD/"/>
    
    
  </entry>
  
  <entry>
    <title>信息系统实训 第二次作业</title>
    <link href="https://zronghui.github.io/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%AE%AD/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%AE%AD-%E7%AC%AC%E4%BA%8C%E6%AC%A1%E4%BD%9C%E4%B8%9A.html"/>
    <id>https://zronghui.github.io/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%AE%AD/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%AE%AD-%E7%AC%AC%E4%BA%8C%E6%AC%A1%E4%BD%9C%E4%B8%9A.html</id>
    <published>2020-03-10T00:45:02.000Z</published>
    <updated>2020-03-11T07:18:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a><p>书籍搜索引擎</p><h2 id="任务一"><a href="#任务一" class="headerlink" title="任务一"></a>任务一</h2><h3 id="选择其中一个要爬取的网站"><a href="#选择其中一个要爬取的网站" class="headerlink" title="选择其中一个要爬取的网站"></a>选择其中一个要爬取的网站</h3><p><a href="https://volmoe.com/">Vol.moe [Kindle漫画|Kobo漫画|epub漫画]</a></p><h3 id="选择想爬取数据项（尽量全）"><a href="#选择想爬取数据项（尽量全）" class="headerlink" title="选择想爬取数据项（尽量全）"></a>选择想爬取数据项（尽量全）</h3><p>书籍名 书籍链接 书籍详情</p><img src="https://i.loli.net/2020/03/10/37r9Qo1dtHCmxLS.png" alt="37r9Qo1dtHCmxLS" style="zoom: 25%;" /><h3 id="确定数据项所在网页之间的跳转关系，绘制它们的url树"><a href="#确定数据项所在网页之间的跳转关系，绘制它们的url树" class="headerlink" title="确定数据项所在网页之间的跳转关系，绘制它们的url树"></a>确定数据项所在网页之间的跳转关系，绘制它们的url树</h3><p>说明：共 471 个分页，一个分页有 18 个详情页</p><img src="https://i.loli.net/2020/03/10/e1DENgTSL2FBsiv.png" alt="e1DENgTSL2FBsiv" style="zoom: 33%;" /><h3 id="写出url树的深度优先遍历、广度优先遍历顺序"><a href="#写出url树的深度优先遍历、广度优先遍历顺序" class="headerlink" title="写出url树的深度优先遍历、广度优先遍历顺序"></a>写出url树的深度优先遍历、广度优先遍历顺序</h3><p><strong>深度优先遍历</strong>: A B E F C G H D</p><p><strong>广度优先遍历</strong>: A B C D E F G H</p><h2 id="任务二"><a href="#任务二" class="headerlink" title="任务二"></a>任务二</h2><h3 id="选择要爬取的数据项所在的其中一个网页"><a href="#选择要爬取的数据项所在的其中一个网页" class="headerlink" title="选择要爬取的数据项所在的其中一个网页"></a>选择要爬取的数据项所在的其中一个网页</h3><p><a href="https://volmoe.com/l/all,all,all,sortpoint,all,all/1.htm">https://volmoe.com/l/all,all,all,sortpoint,all,all/1.htm</a></p><h3 id="对想爬取的数据项绘制出它们的dom树"><a href="#对想爬取的数据项绘制出它们的dom树" class="headerlink" title="对想爬取的数据项绘制出它们的dom树"></a>对想爬取的数据项绘制出它们的dom树</h3><p>书籍名：/html/body/div[7]/table/tbody/tr/td[2]/div/font[7]/b/font</p><p>书籍详情：/html/body/div[8]/div/font[1]/font[4]</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
    
    </summary>
    
    
      <category term="研究生课程" scheme="https://zronghui.github.io/categories/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/"/>
    
      <category term="信息系统实训" scheme="https://zronghui.github.io/categories/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%AE%AD/"/>
    
    
  </entry>
  
  <entry>
    <title>书籍地址</title>
    <link href="https://zronghui.github.io/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%AE%AD/%E4%B9%A6%E7%B1%8D%E5%9C%B0%E5%9D%80.html"/>
    <id>https://zronghui.github.io/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%AE%AD/%E4%B9%A6%E7%B1%8D%E5%9C%B0%E5%9D%80.html</id>
    <published>2020-03-09T12:47:42.000Z</published>
    <updated>2020-03-11T07:18:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a><p><a href="https://www.jiandaoyun.com/r/5b95200de22eed486e92ac63">电子书下载网站全览</a></p><ul><li><input disabled="" type="checkbox"> <p><a href="https://www.owllook.net/">owllook - 网络小说搜索引擎 - 最简洁清新的搜索阅读体验</a></p></li><li><input disabled="" type="checkbox"> <p><a href="https://www.shudan.vip/">书单网 - pdf - epub - mobi - azw3 让搜书变得简单</a></p></li><li><input disabled="" type="checkbox"> <p><a href="http://pan.shudan.vip/">精品电子书下载 - 读好书，好读书！</a></p></li><li><input checked="" disabled="" type="checkbox"> <p><a href="https://volmoe.com/">Vol.moe [Kindle漫画|Kobo漫画|epub漫画] [volmoe.com]</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
    
    </summary>
    
    
      <category term="研究生课程" scheme="https://zronghui.github.io/categories/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/"/>
    
      <category term="信息系统实训" scheme="https://zronghui.github.io/categories/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%AE%AD/"/>
    
    
  </entry>
  
  <entry>
    <title>进程分析 端口分析</title>
    <link href="https://zronghui.github.io/Linux/%E8%BF%9B%E7%A8%8B%E5%88%86%E6%9E%90-%E7%AB%AF%E5%8F%A3%E5%88%86%E6%9E%90.html"/>
    <id>https://zronghui.github.io/Linux/%E8%BF%9B%E7%A8%8B%E5%88%86%E6%9E%90-%E7%AB%AF%E5%8F%A3%E5%88%86%E6%9E%90.html</id>
    <published>2020-03-08T08:43:36.000Z</published>
    <updated>2020-03-09T02:47:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a><h2 id="进程分析"><a href="#进程分析" class="headerlink" title="进程分析"></a>进程分析</h2><h3 id="查看进程信息"><a href="#查看进程信息" class="headerlink" title="查看进程信息"></a>查看进程信息</h3><p>ps aux | grep python 查看系统中运行的 python 进程</p><h3 id="向进程发送信号"><a href="#向进程发送信号" class="headerlink" title="向进程发送信号"></a>向进程发送信号</h3><p>我们可以使用 kill PID 杀死一个进程，或者使用 kill -9 PID 强制杀死一个进程。</p><p> -9 是信号的一种，kill 命令会向进程发送一个信号，-9代表 SIGKILL 之意，用于强制终止某个进程</p><p>我们可以通过 kill -l 命令查看到所有的信号</p><p>HUP INT QUIT ILL TRAP ABRT BUS FPE KILL USR1 SEGV USR2 PIPE ALRM TERM STKFLT CHLD CONT STOP TSTP TTIN TTOU URG XCPU XFSZ VTALRM PROF WINCH POLL PWR SYS</p><p>上面的信号是有顺序的，比如第1个是 HUP，第9个是 KILL，下面两种方式是等价的：</p><p>kill -1 PID 和 kill -HUP PID</p><p>kill -9 PID 和 kill -KILL PID</p><p>信号HUP通常程序用这个信号进行优雅重载配置文件，重新启动并且不影响正在运行的服务。比如</p><p>pkill -1 uwsgi 优雅重启uwsgi 进程，对服务器没有影响</p><p>kill -1 NGINX_PID 优雅重启nginx进程，对服务器没有影响</p><p>除了知道可以这么使用之外，感兴趣的读者还可以自行学习，深入了解下uwsgi和nginx无损reload的机制。</p><p>CTRL-C 发送 SIGINT 信号给前台进程组中的所有进程，常用于终止正在运行的程序。</p><p>CTRL-Z 发送 SIGTSTP 信号给前台进程组中的所有进程，常用于挂起一个进程。</p><h3 id="查看进程打开了哪些文件"><a href="#查看进程打开了哪些文件" class="headerlink" title="查看进程打开了哪些文件"></a>查看进程打开了哪些文件</h3><p>sudo lsof -p PID</p><p>可以使用 lsof -p PID | grep TCP 查看进程中的 TCP 连接信息。</p><h3 id="查看文件被哪个进程使用"><a href="#查看文件被哪个进程使用" class="headerlink" title="查看文件被哪个进程使用"></a>查看文件被哪个进程使用</h3><p>使用这个命令查看一个文件被哪些进程正在使用 sudo lsof /path/to/file，示例如下：</p><blockquote><p>sudo lsof /home/tu/.virtualenvs/mic/bin/uwsgi</p></blockquote><h3 id="查看进程当前状态"><a href="#查看进程当前状态" class="headerlink" title="查看进程当前状态"></a>查看进程当前状态</h3><p>当我们发现一个进程启动了，端口也是正常的，但好像这个进程就是不“干活”。比如我们执行的是数据更新进程，这个进程不更新数据了，但还是在跑着。可能数据源有问题，可能我们写的程序有BUG，也可能是更新时要写入到的数据库出问题了（数据库连接不上了，写数据死锁了）。我们这里主要说下第二种，我们自己的程序如果有BUG，导致工作不正常，我们怎么知道它当前正在干什么呢，这时候就要用到Linux中的调试分析诊断strace，可以使用 sudo strace -p PID这个命令。</p><p>？</p><h2 id="端口分析"><a href="#端口分析" class="headerlink" title="端口分析"></a>端口分析</h2><p>比如我们在服务器上运行 Nginx，访问的时候就是连接不上，我们可以使用 ps aux | grep nginx看下nginx进程是不是启动了，也可以看下 80端口有没有被占用。换句话说，如果没有任何程序跑在这个端口上（或者说没有任何程序使用这个端口），证明忘了启动相关程序或者没能启动成功，或者说程序使用的端口被修改了，不是80了，那又怎么可能能访问到呢？</p><h3 id="查看全部端口占用情况"><a href="#查看全部端口占用情况" class="headerlink" title="查看全部端口占用情况"></a>查看全部端口占用情况</h3><p>Linux中我们可以使用 netstat 工具来进程网络分析，netstat 命令有非常多选项，这里只列出了常用的一部分</p><p>-a或–all 显示所有连接中的Socket，默认不显示 LISTEN 相关的。</p><p>-c或–continuous 持续列出网络状态，不断自动刷新输出。</p><p>-l或–listening 显示监听中的服务器的Socket。</p><p>-n或–numeric 直接使用IP地址，而不是展示域名。</p><p>-p或–programs 显示正在使用Socket的程序进程PID和名称。</p><p>-t或–tcp 显示TCP传输协议的连接。</p><p>-u或–udp 显示UDP传输协议的连接。</p><p>比如我们可以查看服务器中监控了哪些端口，如果我们的nginx是使用80端口，uwsgi使用的是7001端口，我们就能知道通过下面的命令</p><blockquote><p>netstat -nltp</p></blockquote><p>Active Internet connections (only servers)</p><p>Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name</p><p>tcp        0      0 0.0.0.0:7001            0.0.0.0:*               LISTEN      2070/uwsgi      </p><p>tcp        0      0 127.0.0.1:6379          0.0.0.0:*               LISTEN      1575/redis-server 1</p><p>就能知道80端口的 nginx 是不是启动成功了，7001端口的uwsgi是不是启动成功了。</p><p>注意：如果PID和Program Name显示不出来，证明是权限不够，可以使用sudo运行</p><h3 id="查看具体端口占用情况"><a href="#查看具体端口占用情况" class="headerlink" title="查看具体端口占用情况"></a>查看具体端口占用情况</h3><blockquote><p>sudo lsof -i :80 (注意端口80前面有个英文的冒号)</p></blockquote><p>COMMAND    PID     USER   FD   TYPE DEVICE SIZE/OFF NODE NAME</p><p>nginx   4123   admin    3u  IPv4  13031      0t0  TCP *:http (LISTEN)</p><p>nginx   4124   admin    3u  IPv4  13031      0t0  TCP *:http (LISTEN)</p><p>我们可以通过这个方法查询出占用端口的程序，如果遇到端口已经被占用，原来的进程没有正确地终止，可以使用kill命令停掉原来的进程，这样我们就又可以使用这个端口了。</p><p>除了上面讲的一些命令，在部署过程中会经常用到下面的一些Linux命令，如果不清楚它们是做什么的，可以提前自行学习下这些Linux基础命令：</p><p>ls, touch, mkdir, mv, cp, ps, chmod, chown</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="https://zronghui.github.io/categories/Linux/"/>
    
    
  </entry>
  
  <entry>
    <title>django</title>
    <link href="https://zronghui.github.io/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%AE%AD/django.html"/>
    <id>https://zronghui.github.io/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%AE%AD/django.html</id>
    <published>2020-03-07T01:23:57.000Z</published>
    <updated>2020-03-11T07:18:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a><h2 id="1-hello-world"><a href="#1-hello-world" class="headerlink" title="1. hello world"></a>1. hello world</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">pip install django</span><br><span class="line"></span><br><span class="line">django-admin.py startproject helloDjango</span><br><span class="line">cd helloDjango</span><br><span class="line">python manage.py startapp article</span><br><span class="line"><span class="meta">#</span><span class="bash"> python manage.py runserver</span></span><br><span class="line">python manage.py runserver 0.0.0.0:80 &amp;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 最后面的”&amp;”，这符号表示在后台运行该进程。这里的IP地址如果用公网IP</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 会运行不了，而用0.0.0.0则外网和127.0.0.1都能够访问。</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> python manage.py migrate</span></span><br></pre></td></tr></table></figure><p>helloDjango/settings.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">DEBUG = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Application definition</span></span><br><span class="line">INSTALLED_APPS = [</span><br><span class="line">    <span class="string">'django.contrib.admin'</span>,</span><br><span class="line">    ...</span><br><span class="line">    <span class="string">'article'</span>,  <span class="comment">#这里填写的是app的名称</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>helloDjango/urls.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> article.views <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">'admin/'</span>, admin.site.urls),</span><br><span class="line">    path(<span class="string">'hello/'</span>, hello),</span><br><span class="line">    path(<span class="string">'hello/&lt;int:num&gt;'</span>, hello_num),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>article/views.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse, Http404</span><br><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your views here.</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">"hello world"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_num</span><span class="params">(request, num)</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        num = int(num)</span><br><span class="line">        <span class="keyword">return</span> HttpResponse(<span class="string">f"hello world <span class="subst">&#123;num&#125;</span>"</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> Http404()</span><br></pre></td></tr></table></figure><h2 id="2-1-模板"><a href="#2-1-模板" class="headerlink" title="2.1 模板"></a>2.1 模板</h2><p>helloDjango/settings.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">TEMPLATE_DIRS = [os.path.join(os.path.dirname(__file__), <span class="string">'templates'</span>)]</span><br></pre></td></tr></table></figure><p>helloDjango/urls.py</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">path(&#39;template&#39;, template),</span><br></pre></td></tr></table></figure><p>Article/views.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">template</span><span class="params">(request)</span>:</span></span><br><span class="line">    context = &#123;<span class="string">'name'</span>: <span class="string">'tim'</span>,</span><br><span class="line">               <span class="string">'itemList'</span>: [<span class="string">'item1'</span>, <span class="string">'item2'</span>, <span class="string">'item3'</span>]</span><br><span class="line">               &#125;</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">'1.html'</span>, context=context)</span><br></pre></td></tr></table></figure><p>Article/templates/1.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="tag">&lt;<span class="name">title</span>&gt;</span> hello django <span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span> hello django <span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Hello &#123;&#123; name &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    &#123;% for item in itemList %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>&#123;&#123; item &#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">&#123;% if status %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>I like Python!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">&#123;% else %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>I like Django!<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% ifequal a b %&#125;</span><br><span class="line">&#123;% endifequal %&#125;</span><br><span class="line"></span><br><span class="line">&#123;# 过滤器 #&#125;</span><br><span class="line">&#123;&#123; name | lower &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-2-模板继承"><a href="#2-2-模板继承" class="headerlink" title="2.2 模板继承"></a>2.2 模板继承</h2><p>2.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>2<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">&#123;% block blockName %&#125;</span><br><span class="line">  无用的文字</span><br><span class="line">&#123;% endblock %&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span> 2.html out of block <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% extends '2.html' %&#125;</span><br><span class="line">&#123;% block blockName %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span> 3.html in block <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">&#123;% endblock %&#125;</span><br><span class="line"></span><br><span class="line">并不会显示</span><br></pre></td></tr></table></figure><p>省略 views.py 中的函数和 urls.py 中的 URL 映射说明代码</p><p>3.html 的显示结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3.html in block</span><br><span class="line">2.html out of block</span><br></pre></td></tr></table></figure><p>因此，2.html 中 block 内的内容不会显示，还有 3.html 中 block 外的内容也不会显示</p><h2 id="3-django-admin-管理后台"><a href="#3-django-admin-管理后台" class="headerlink" title="3.django admin 管理后台"></a>3.django admin 管理后台</h2><p>python manage.py createsuperuser 输入 user password 即可创建超级用户</p><h2 id="4-models"><a href="#4-models" class="headerlink" title="4.models"></a>4.models</h2><h3 id="Django-Model"><a href="#Django-Model" class="headerlink" title="Django Model"></a>Django Model</h3><ul><li>每一个<code>Django Model</code>都继承自<code>django.db.models.Model</code></li><li>在<code>Model</code>当中每一个属性<code>attribute</code>都代表一个database field</li><li>通过<code>Django Model API</code>可以执行数据库的增删改查, 而不需要写一些数据库的查询语句</li></ul><h3 id="设置数据库"><a href="#设置数据库" class="headerlink" title="设置数据库"></a>设置数据库</h3><p>Django项目建成后, 默认设置了使用SQLite数据库, 在my_blog/my_blog/setting.py中可以查看和修改数据库设置:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">DATABASES &#x3D; &#123;</span><br><span class="line">    &#39;default&#39;: &#123;</span><br><span class="line">        &#39;ENGINE&#39;: &#39;django.db.backends.sqlite3&#39;,</span><br><span class="line">        &#39;NAME&#39;: os.path.join(BASE_DIR, &#39;db.sqlite3&#39;),</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>还可以设置其他数据库, 如<code>MySQL, PostgreSQL</code>, 现在为了简单, 使用默认数据库设置</p><h3 id="创建models"><a href="#创建models" class="headerlink" title="创建models"></a>创建models</h3><p>在my_blog/article/models.py下编写如下程序:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Article</span><span class="params">(models.Model)</span> :</span></span><br><span class="line">    title = models.CharField(max_length = <span class="number">100</span>)  <span class="comment">#博客题目</span></span><br><span class="line">    category = models.CharField(max_length = <span class="number">50</span>, blank = <span class="literal">True</span>)  <span class="comment">#博客标签</span></span><br><span class="line">    date_time = models.DateTimeField(auto_now_add = <span class="literal">True</span>)  <span class="comment">#博客日期</span></span><br><span class="line">    content = models.TextField(blank = <span class="literal">True</span>, null = <span class="literal">True</span>)  <span class="comment">#博客文章正文</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__unicode__</span><span class="params">(self)</span> :</span></span><br><span class="line">        <span class="keyword">return</span> self.title</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Meta</span>:</span>  <span class="comment">#按时间下降排序</span></span><br><span class="line">        ordering = [<span class="string">'-date_time'</span>]</span><br></pre></td></tr></table></figure><p>其中<code>__unicode__(self)</code> 函数Article对象要怎么表示自己, 一般系统默认使用`` 来表示对象, 通过这个函数可以告诉系统使用title字段来表示这个对象</p><ul><li><code>CharField</code> 用于存储字符串, max_length设置最大长度</li><li><code>TextField</code> 用于存储大量文本</li><li><code>DateTimeField</code> 用于存储时间, auto_now_add设置True表示自动设置对象增加时间</li></ul><h3 id="同步数据库"><a href="#同步数据库" class="headerlink" title="同步数据库"></a>同步数据库</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py migrate #命令行运行该命令</span><br></pre></td></tr></table></figure><p>因为我们已经执行过该命令会出现如下提示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Operations to perform:</span><br><span class="line">  Apply all migrations: admin, contenttypes, sessions, auth</span><br><span class="line">Running migrations:</span><br><span class="line">  No migrations to apply.</span><br><span class="line">  Your models have changes that are not yet reflected in a migration, and so won&#39;t be applied.</span><br><span class="line">  Run &#39;manage.py makemigrations&#39; to make new migrations, and then re-run &#39;manage.py migrate&#39; to apply them.</span><br></pre></td></tr></table></figure><p>那么现在需要执行下面的命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> python manage.py makemigrations</span></span><br><span class="line"><span class="meta">#</span><span class="bash">得到如下提示</span></span><br><span class="line">Migrations for 'article':</span><br><span class="line">  0001_initial.py:</span><br><span class="line">    - Create model Article</span><br></pre></td></tr></table></figure><p>现在重新运行以下命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> python manage.py migrate</span></span><br><span class="line"><span class="meta">#</span><span class="bash">出现如下提示表示操作成功</span></span><br><span class="line">Operations to perform:</span><br><span class="line">  Apply all migrations: auth, sessions, admin, article, contenttypes</span><br><span class="line">Running migrations:</span><br><span class="line">  Applying article.0001_initial... OK</span><br></pre></td></tr></table></figure><blockquote><p>migrate命令按照app顺序建立或者更新数据库, 将<code>models.py</code>与数据库同步</p></blockquote><p>现在我们进入Django中的交互式shell来进行数据库的增删改查等操作</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> python manage.py shell</span></span><br><span class="line">Python 3.4.2 (v3.4.2:ab2c023a9432, Oct  5 2014, 20:42:22)</span><br><span class="line">[GCC 4.2.1 (Apple Inc. build 5666) (dot 3)] on darwin</span><br><span class="line">Type "help", "copyright", "credits" or "license" for more information.</span><br><span class="line">(InteractiveConsole)</span><br><span class="line"><span class="meta">&gt;</span><span class="bash">&gt;&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>这里进入Django的shell和python内置的shell是非常类似的</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> article.models <span class="keyword">import</span> Article</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="comment">#create数据库增加操作</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Article.objects.create(title = <span class="string">'Hello World'</span>, category = <span class="string">'Python'</span>, content = <span class="string">'我们来做一个简单的数据库增加操作'</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Article.objects.create(title = <span class="string">'Django Blog学习'</span>, category = <span class="string">'Python'</span>, content = <span class="string">'Django简单博客教程'</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="comment">#all和get的数据库查看操作</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Article.objects.all()  <span class="comment">#查看全部对象, 返回一个列表, 无对象返回空list</span></span><br><span class="line">[, ]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Article.objects.get(id = <span class="number">1</span>)  <span class="comment">#返回符合条件的对象</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="comment">#update数据库修改操作</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>first = Article.objects.get(id = <span class="number">1</span>)  <span class="comment">#获取id = 1的对象</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>first.title</span><br><span class="line"><span class="string">'Hello World'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>first.date_time</span><br><span class="line">datetime.datetime(<span class="number">2014</span>, <span class="number">12</span>, <span class="number">26</span>, <span class="number">13</span>, <span class="number">56</span>, <span class="number">48</span>, <span class="number">727425</span>, tzinfo=)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>first.content</span><br><span class="line"><span class="string">'我们来做一个简单的数据库增加操作'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>first.category</span><br><span class="line"><span class="string">'Python'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>first.content = <span class="string">'Hello World, How are you'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>first.content  <span class="comment">#再次查看是否修改成功, 修改操作就是点语法</span></span><br><span class="line"><span class="string">'Hello World, How are you'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="comment">#delete数据库删除操作</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>first.delete()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Article.objects.all()  <span class="comment">#此时可以看到只有一个对象了, 另一个对象已经被成功删除</span></span><br><span class="line">[]</span><br><span class="line"></span><br><span class="line">Blog.objects.all()  <span class="comment"># 选择全部对象</span></span><br><span class="line">Blog.objects.filter(caption=<span class="string">'blogname'</span>)  <span class="comment"># 使用 filter() 按博客题目过滤</span></span><br><span class="line">Blog.objects.filter(caption=<span class="string">'blogname'</span>, id=<span class="string">"1"</span>) <span class="comment"># 也可以多个条件</span></span><br><span class="line"><span class="comment">#上面是精确匹配 也可以包含性查询</span></span><br><span class="line">Blog.objects.filter(caption__contains=<span class="string">'blogname'</span>)</span><br><span class="line"></span><br><span class="line">Blog.objects.get(caption=<span class="string">'blogname'</span>) <span class="comment"># 获取单个对象 如果查询没有返回结果也会抛出异常</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#数据排序</span></span><br><span class="line">Blog.objects.order_by(<span class="string">"caption"</span>)</span><br><span class="line">Blog.objects.order_by(<span class="string">"-caption"</span>)  <span class="comment"># 倒序</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#如果需要以多个字段为标准进行排序（第二个字段会在第一个字段的值相同的情况下被使用到），使用多个参数就可以了</span></span><br><span class="line">Blog.objects.order_by(<span class="string">"caption"</span>, <span class="string">"id"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#连锁查询</span></span><br><span class="line">Blog.objects.filter(caption__contains=<span class="string">'blogname'</span>).order_by(<span class="string">"-id"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#限制返回的数据</span></span><br><span class="line">Blog.objects.filter(caption__contains=<span class="string">'blogname'</span>)[<span class="number">0</span>]</span><br><span class="line">Blog.objects.filter(caption__contains=<span class="string">'blogname'</span>)[<span class="number">0</span>:<span class="number">3</span>]  <span class="comment"># 可以进行类似于列表的操作</span></span><br></pre></td></tr></table></figure><h2 id="5-测试"><a href="#5-测试" class="headerlink" title="5.测试"></a>5.测试</h2><p>article/tests.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.test <span class="keyword">import</span> TestCase</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your tests here.</span></span><br><span class="line"><span class="comment"># 类名无所谓</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ATestClass</span><span class="params">(TestCase)</span>:</span></span><br><span class="line">    <span class="comment"># 测试方法以 test 开头</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">test_aTestMethod</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.assertEquals([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py test article</span><br></pre></td></tr></table></figure><h2 id="6-Django-部署"><a href="#6-Django-部署" class="headerlink" title="6.Django 部署"></a>6.Django 部署</h2><p>整个部署的链路是 Nginx -&gt; uWSGI -&gt; Python Web程序，通常还会提到supervisord工具。</p><p>supervisor 是一个进程管理工具。任何人都不能保证程序不异常退出，不别被人误杀，所以一个典型的工程做法就是使用supervisor看守着你的进程，一旦异常退出它会立马进程重新启动起来。</p><h1 id="阿里云-centos-部署-Django"><a href="#阿里云-centos-部署-Django" class="headerlink" title="阿里云 centos 部署 Django"></a>阿里云 centos 部署 Django</h1><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">yum install nginx</span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装 python3.8 见 _posts/阿里云/centos.md</span></span><br><span class="line">pip3 install django</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 升级 sqlite3</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> wget http://www.sqlite.org/2019/sqlite-autoconf-3280000.tar.gz</span></span><br><span class="line">rsync -azvhP sqlite-autoconf-3280000.tar.gz root@47.93.53.47:/root/</span><br><span class="line">tar -zxvf sqlite-autoconf-3280000.tar.gz;cd sqlite-autoconf-3280000;</span><br><span class="line">./configure;make &amp;&amp; sudo make install</span><br><span class="line"><span class="meta">#</span><span class="bash"> 替换默认 sqlite</span></span><br><span class="line">sudo mv -v /usr/bin/sqlite3 /usr/bin/sqlite3.7.17</span><br><span class="line">sudo cp -v sqlite3 /usr/bin</span><br><span class="line">echo 'export LD_LIBRARY_PATH="/usr/local/lib"'&gt;&gt;~/.zshrc</span><br><span class="line">sqlite3 --version</span><br><span class="line">source ~/.zshrc</span><br><span class="line"></span><br><span class="line">git clone git@github.com:zronghui/helloDjango.git</span><br><span class="line">python3 manage.py migrate</span><br><span class="line">python3 manage.py runserver 0.0.0.0:8000</span><br></pre></td></tr></table></figure><h2 id="7-static"><a href="#7-static" class="headerlink" title="7.static"></a>7.static</h2><p><a href="https://github.com/zronghui/helloDjango/commit/fc19af71caf28b5d0130e621bd5766c42ee3c047?diff=unified">static test · zronghui/helloDjango@fc19af7</a></p><p>article/templates/staticTest.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% load static %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"&#123;% static "</span><span class="attr">template.jpg</span>" %&#125;" <span class="attr">alt</span>=<span class="string">"My image"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>helloDjango/settings.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">STATICFILES_DIRS = [os.path.join(BASE_DIR, <span class="string">"static"</span>)]</span><br></pre></td></tr></table></figure><h2 id="8-去除模板中的硬编码-URL"><a href="#8-去除模板中的硬编码-URL" class="headerlink" title="8.去除模板中的硬编码 URL"></a>8.去除模板中的硬编码 URL</h2><p><a href="https://docs.djangoproject.com/zh-hans/3.0/intro/tutorial03/#removing-hardcoded-urls-in-templates">编写你的第一个 Django 应用，第 3 部分 | Django 文档 | Django</a></p><h2 id="9-自定义Error页面"><a href="#9-自定义Error页面" class="headerlink" title="9.自定义Error页面"></a>9.自定义Error页面</h2><p><a href="https://zhuanlan.zhihu.com/p/31433527">django系列六：自定义Error页面 - 知乎</a></p><p><a href="https://github.com/No-Github/404-I-remember">No-Github/404-I-remember: 收集各种网站的404页面</a></p><p><a href="https://freefrontend.com/500-error-page-html-templates/">500 Error Page HTML Templates</a><br><a href="https://freefrontend.com/html-css-404-page-templates/">39 HTML 404 Page Templates</a><br><a href="https://freefrontend.com/html-funny-404-pages/">25 HTML Funny 404 Pages</a></p><h3 id="404"><a href="#404" class="headerlink" title="404"></a>404</h3><p>采用<a href="https://xz.aliyun.com/404">404 - 先知社区</a>页面源代码</p><p>代码：</p><p><a href="https://github.com/zronghui/helloDjango/commit/cb21c95ff8c38385318b094e4a8f0c49228ef455">404 · zronghui/helloDjango@cb21c95</a></p><p>article/templates/error_404.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">utf-8</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>页面找不到了(´･ω･`)<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://xz.aliyun.com/static/css/IE.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"demo"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>4<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>0<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>4<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>页面找不到了(´･ω･`)<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"text-align: center"</span>&gt;</span></span><br><span class="line">          您可以 <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"javascript:history.go(-1);"</span>&gt;</span>返回上一页<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          或者 <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/"</span>&gt;</span>网站首页<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>article/views.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">error_404</span><span class="params">(request, exception)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">'error_404.html'</span>)</span><br></pre></td></tr></table></figure><p>helloDjango/settings.py </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DEBUG = <span class="literal">False</span></span><br></pre></td></tr></table></figure><p>helloDjango/urls.py </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">handler404 = error_404</span><br></pre></td></tr></table></figure><h3 id="500"><a href="#500" class="headerlink" title="500"></a>500</h3><p>article/templates/error_404.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">utf-8/</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>500<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line">        html &#123;</span><br><span class="line">            box-sizing: border-box;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        *,</span><br><span class="line"><span class="css">        *<span class="selector-pseudo">::before</span>,</span></span><br><span class="line"><span class="css">        *<span class="selector-pseudo">::after</span> &#123;</span></span><br><span class="line">            box-sizing: inherit;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        body * &#123;</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        body &#123;</span><br><span class="line">            font: normal 100%/1.15 "Merriweather", serif;</span><br><span class="line"><span class="css">            <span class="selector-tag">background-color</span>: <span class="selector-id">#7ed0f2</span>;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#fff</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-class">.wrapper</span> &#123;</span></span><br><span class="line">            position: relative;</span><br><span class="line">            max-width: 1298px;</span><br><span class="line">            height: auto;</span><br><span class="line">            margin: 2em auto 0 auto;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="comment">/* https://www.flaticon.com/authors/vectors-market */</span></span></span><br><span class="line"><span class="css">        <span class="comment">/* https://www.flaticon.com/authors/icomoon */</span></span></span><br><span class="line"><span class="css">        <span class="selector-class">.box</span> &#123;</span></span><br><span class="line">            max-width: 70%;</span><br><span class="line">            min-height: auto;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">            padding: 1em 1em;</span><br><span class="line">            text-align: center;</span><br><span class="line">            background: url("https://www.dropbox.com/s/xq0841cp3icnuqd/flame.png?raw=1") no-repeat top 10em center/128px 128px,</span><br><span class="line">            transparent url("https://www.dropbox.com/s/w7qqrcvhlx3pwnf/desktop-pc.png?raw=1") no-repeat top 13em center/128px 128px;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-tag">h1</span>, <span class="selector-tag">p</span><span class="selector-pseudo">:not(</span><span class="selector-pseudo">:last-of-type)</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">text-shadow</span>: 0 0 6<span class="selector-tag">px</span> <span class="selector-id">#216f79</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        h1 &#123;</span><br><span class="line">            margin: 0 0 1rem 0;</span><br><span class="line">            font-size: 8em;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        p &#123;</span><br><span class="line"><span class="css">            <span class="selector-tag">margin-bottom</span>: 0<span class="selector-class">.5em</span>;</span></span><br><span class="line">            font-size: 3em;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-tag">p</span><span class="selector-pseudo">:first-of-type</span> &#123;</span></span><br><span class="line">            margin-top: 4em;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        p &gt; a &#123;</span><br><span class="line"><span class="css">            <span class="selector-tag">border-bottom</span>: 1<span class="selector-tag">px</span> <span class="selector-tag">dashed</span> <span class="selector-id">#216f79</span>;</span></span><br><span class="line">            font-style: italic;</span><br><span class="line">            text-decoration: none;</span><br><span class="line"><span class="css">            <span class="selector-tag">color</span>: <span class="selector-id">#216f79</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"><span class="css">        <span class="selector-tag">p</span> &gt; <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">text-shadow</span>: 0 0 6<span class="selector-tag">px</span> <span class="selector-id">#216f79</span>;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        p img &#123;</span><br><span class="line">            vertical-align: bottom;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"wrapper"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"box"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>500<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>Sorry, it's me, not you.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="symbol">&amp;#58;</span><span class="symbol">&amp;#40;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/"</span>&gt;</span>Let me try again!<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>article/views.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">error_500</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">'error_500.html'</span>)</span><br></pre></td></tr></table></figure><p>helloDjango/settings.py </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DEBUG = <span class="literal">False</span></span><br></pre></td></tr></table></figure><p>helloDjango/urls.py </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">handler500 = error_500</span><br></pre></td></tr></table></figure><h2 id="10-登录"><a href="#10-登录" class="headerlink" title="10. 登录"></a>10. 登录</h2><p><a href="https://blog.51cto.com/alsww/1732435">django实现用户登陆访问限制@login_required-苦咖啡’s运维之路-51CTO博客</a></p><h3 id="创建users"><a href="#创建users" class="headerlink" title="创建users"></a>创建users</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">python manage.py shell </span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.contrib.auth.models <span class="keyword">import</span> User</span><br><span class="line">user = User.objects.create_user(<span class="string">'tempUser'</span>, <span class="string">'user@email.com'</span>, <span class="string">'password'</span>)</span><br></pre></td></tr></table></figure><p>以失败告终</p><h2 id="11-分页"><a href="#11-分页" class="headerlink" title="11.分页"></a>11.分页</h2><p><a href="https://wiki.jikexueyuan.com/project/django-set-up-blog/rss-paging.html">RSS和分页 - Django 搭建简易博客教程 - 极客学院Wiki</a></p><p>主要参考：</p><p><a href="https://docs.djangoproject.com/zh-hans/3.0/topics/pagination/">分页 | Django 文档 | Django</a></p><p>代码详见：</p><p><a href="https://github.com/zronghui/helloDjango/commit/a9eac8311beb2810b519ff7be88b201b0bed9b65">pagination · zronghui/helloDjango@a9eac83</a></p><p>article/templates/list.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>paginator test<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">&#123;% for contact in page_obj %&#125;</span><br><span class="line"></span><br><span class="line">    &#123;# Each "contact" is a Contact model object. #&#125;</span><br><span class="line">    &#123;&#123; contact &#125;&#125;</span><br><span class="line">    ...</span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"pagination"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"step-links"</span>&gt;</span></span><br><span class="line">        &#123;% if page_obj.has_previous %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"?page=1"</span>&gt;</span><span class="symbol">&amp;laquo;</span> first<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"?page=&#123;&#123; page_obj.previous_page_number &#125;&#125;"</span>&gt;</span>previous<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        &#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"current"</span>&gt;</span></span><br><span class="line">            Page &#123;&#123; page_obj.number &#125;&#125; of &#123;&#123; page_obj.paginator.num_pages &#125;&#125;.</span><br><span class="line">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        &#123;% if page_obj.has_next %&#125;</span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"?page=&#123;&#123; page_obj.next_page_number &#125;&#125;"</span>&gt;</span>next<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"?page=&#123;&#123; page_obj.paginator.num_pages &#125;&#125;"</span>&gt;</span>last <span class="symbol">&amp;raquo;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        &#123;% endif %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>article/views.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.core.paginator <span class="keyword">import</span> Paginator</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">listing</span><span class="params">(request)</span>:</span></span><br><span class="line">    contact_list = list(range(<span class="number">100</span>))</span><br><span class="line">    paginator = Paginator(contact_list, <span class="number">2</span>)  <span class="comment"># Show 25 contacts per page.</span></span><br><span class="line">    page_number = request.GET.get(<span class="string">'page'</span>)</span><br><span class="line">    page_obj = paginator.get_page(page_number)</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">'list.html'</span>, context=&#123;<span class="string">'page_obj'</span>: page_obj&#125;)</span><br></pre></td></tr></table></figure><p>helloDjango/urls.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">path(<span class="string">'list'</span>, listing)</span><br></pre></td></tr></table></figure><h2 id="12-日志"><a href="#12-日志" class="headerlink" title="12.日志"></a>12.日志</h2><p>参考：<a href="https://www.kawabangga.com/posts/1878">Django的日志配置 | 卡瓦邦噶！</a></p><h3 id="理解Logger"><a href="#理解Logger" class="headerlink" title="理解Logger"></a>理解Logger</h3><p>首先要理解logging的工作，这里面主要有四个东西：格式器formatter，过滤器filter，处理器handler，日志实例logger。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">                         formatter</span><br><span class="line">logger ----&gt; handler ----------------&gt;  files, emails</span><br><span class="line">                         filter</span><br></pre></td></tr></table></figure><h3 id="配置方式"><a href="#配置方式" class="headerlink" title="配置方式"></a>配置方式</h3><p>Python中可以使用多种格式配置logging，比如.conf， .ini等。</p><p>在Django中，我们是把有关logging的配置写到settings里面。相应的配置及解释如下（仅供参考）。</p><p><strong>注意</strong>：</p><p>发送邮件没有生效</p><p>真正生效的 logging 级别配置是最后的 loggers</p><p>settings.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 管理员邮箱</span></span><br><span class="line">ADMINS = (</span><br><span class="line">    (<span class="string">'zronghui'</span>, <span class="string">'*****@qq.com'</span>),</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 非空链接，却发生404错误，发送通知MANAGERS</span></span><br><span class="line">SEND_BROKEN_LINK_EMAILS = <span class="literal">True</span></span><br><span class="line">MANAGERS = ADMINS</span><br><span class="line"></span><br><span class="line"><span class="comment"># Email设置</span></span><br><span class="line">EMAIL_BACKEND = <span class="string">'django.core.mail.backends.smtp.EmailBackend'</span></span><br><span class="line">EMAIL_HOST = <span class="string">'smtp.163.com'</span>  <span class="comment"># QQ邮箱SMTP服务器(邮箱需要开通SMTP服务)</span></span><br><span class="line">EMAIL_PORT = <span class="number">25</span>  <span class="comment"># QQ邮箱SMTP服务端口</span></span><br><span class="line">EMAIL_HOST_USER = <span class="string">'*****@qq.com'</span>  <span class="comment"># 我的邮箱帐号</span></span><br><span class="line">EMAIL_HOST_PASSWORD = <span class="string">'*****'</span>  <span class="comment"># 授权码</span></span><br><span class="line">EMAIL_SUBJECT_PREFIX = <span class="string">'website'</span>  <span class="comment"># 为邮件标题的前缀,默认是'[django]'</span></span><br><span class="line">EMAIL_USE_TLS = <span class="literal">True</span>  <span class="comment"># 开启安全链接</span></span><br><span class="line">DEFAULT_FROM_EMAIL = SERVER_EMAIL = EMAIL_HOST_USER  <span class="comment"># 设置发件人</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># logging日志配置</span></span><br><span class="line">LOGGING = &#123;</span><br><span class="line">    <span class="string">'version'</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="string">'disable_existing_loggers'</span>: <span class="literal">True</span>,</span><br><span class="line">    <span class="string">'formatters'</span>: &#123;  <span class="comment"># 日志格式</span></span><br><span class="line">        <span class="string">'standard'</span>: &#123;</span><br><span class="line">            <span class="string">'format'</span>: <span class="string">'%(asctime)s [%(threadName)s:%(thread)d] [%(name)s:%(lineno)d] [%(module)s:%(funcName)s] [%(levelname)s]- %(message)s'</span>&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'filters'</span>: &#123;  <span class="comment"># 过滤器</span></span><br><span class="line">        <span class="string">'require_debug_false'</span>: &#123;</span><br><span class="line">            <span class="string">'()'</span>: <span class="string">'django.utils.log.RequireDebugFalse'</span>,</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="string">'handlers'</span>: &#123;  <span class="comment"># 处理器</span></span><br><span class="line">        <span class="string">'null'</span>: &#123;</span><br><span class="line">            <span class="string">'level'</span>: <span class="string">'DEBUG'</span>,</span><br><span class="line">            <span class="string">'class'</span>: <span class="string">'logging.NullHandler'</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'mail_admins'</span>: &#123;  <span class="comment"># 发送邮件通知管理员</span></span><br><span class="line">            <span class="string">'level'</span>: <span class="string">'ERROR'</span>,</span><br><span class="line">            <span class="string">'class'</span>: <span class="string">'django.utils.log.AdminEmailHandler'</span>,</span><br><span class="line">            <span class="comment"># 'filters': ['require_debug_false'],  # 仅当 DEBUG = False 时才发送邮件</span></span><br><span class="line">            <span class="string">'include_html'</span>: <span class="literal">True</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'debug'</span>: &#123;  <span class="comment"># 记录到日志文件(需要创建对应的目录，否则会出错)</span></span><br><span class="line">            <span class="string">'level'</span>: <span class="string">'INFO'</span>,</span><br><span class="line">            <span class="string">'class'</span>: <span class="string">'logging.handlers.RotatingFileHandler'</span>,</span><br><span class="line">            <span class="string">'filename'</span>: os.path.join(BASE_DIR, <span class="string">"log"</span>, <span class="string">'debug.log'</span>),  <span class="comment"># 日志输出文件</span></span><br><span class="line">            <span class="string">'maxBytes'</span>: <span class="number">1024</span> * <span class="number">1024</span> * <span class="number">5</span>,  <span class="comment"># 文件大小</span></span><br><span class="line">            <span class="string">'backupCount'</span>: <span class="number">5</span>,  <span class="comment"># 备份份数</span></span><br><span class="line">            <span class="string">'formatter'</span>: <span class="string">'standard'</span>,  <span class="comment"># 使用哪种formatters日志格式</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'console'</span>: &#123;  <span class="comment"># 输出到控制台</span></span><br><span class="line">            <span class="string">'level'</span>: <span class="string">'INFO'</span>,</span><br><span class="line">            <span class="string">'class'</span>: <span class="string">'logging.StreamHandler'</span>,</span><br><span class="line">            <span class="string">'formatter'</span>: <span class="string">'standard'</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment"># 真正生效的 logging 级别配置</span></span><br><span class="line">    <span class="string">'loggers'</span>: &#123;  <span class="comment"># logging管理器</span></span><br><span class="line">        <span class="string">'django'</span>: &#123;</span><br><span class="line">            <span class="string">'handlers'</span>: [<span class="string">'debug'</span>, <span class="string">'console'</span>],</span><br><span class="line">            <span class="string">'level'</span>: <span class="string">'INFO'</span>,</span><br><span class="line">            <span class="comment"># 'level': 'DEBUG',</span></span><br><span class="line">            <span class="string">'propagate'</span>: <span class="literal">False</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="string">'django.request'</span>: &#123;</span><br><span class="line">            <span class="string">'handlers'</span>: [<span class="string">'mail_admins'</span>],</span><br><span class="line">            <span class="string">'level'</span>: <span class="string">'ERROR'</span>,</span><br><span class="line">            <span class="string">'propagate'</span>: <span class="literal">True</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment"># 对于不在 ALLOWED_HOSTS 中的请求不发送报错邮件</span></span><br><span class="line">        <span class="string">'django.security.DisallowedHost'</span>: &#123;</span><br><span class="line">            <span class="string">'handlers'</span>: [<span class="string">'null'</span>],</span><br><span class="line">            <span class="string">'propagate'</span>: <span class="literal">False</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Manage.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">logDir = os.path.join(os.path.dirname(__file__), <span class="string">'log'</span>)</span><br><span class="line">logFile = os.path.join(logDir, <span class="string">'debug.log'</span>)</span><br><span class="line">print(logFile)</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(logDir):</span><br><span class="line">  os.mkdir(logDir)</span><br><span class="line">  <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(logFile):</span><br><span class="line">    os.system(<span class="string">f'touch <span class="subst">&#123;logFile&#125;</span>'</span>)</span><br></pre></td></tr></table></figure><h2 id="13-swagger"><a href="#13-swagger" class="headerlink" title="13. swagger"></a>13. swagger</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install djangorestframework</span><br><span class="line">pip install django-rest-swagger</span><br></pre></td></tr></table></figure><p>django-rest-swagger 根据 djangorestframework 自动生成 swagger 文档</p><p>官方教程翻译：<a href="https://q1mi.github.io/Django-REST-framework-documentation/">主页 - Django REST framework中文站点</a></p><p>手把手教程：<a href="https://github.com/m-haziq/django-rest-swagger-docs">m-haziq/django-rest-swagger-docs: Beginners approach to Django Rest Swagger</a></p><p>根据 swagger 配置文件生成 Django 项目（或模块？）：<a href="https://github.com/praekelt/swagger-django-generator">praekelt/swagger-django-generator: Convert Swagger specifications into Django or aiohttp code</a></p><p>根据 swagger 配置文件生成相应 swagger URL</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install elasticsearch-dsl==5.4.0</span><br></pre></td></tr></table></figure><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>xadmin 是对 Django admin 的美化，但是只能用于 Django 1.* ，<a href="https://github.com/douglasmiranda/django-admin-bootstrap">django-admin-bootstrap</a>Support Django <strong>1.11</strong> and <strong>2.1</strong></p><p>收集静态文件 python manage.py collectstatic 这一句话就会把以前放在app下static中的静态文件全部拷贝到 settings.py 中设置的 STATIC_ROOT 文件夹中</p><p>path(‘polls/‘, include(‘polls.urls’)) </p><p>函数 include() 允许引用其它 URLconfs。每当 Django 遇到 include() 时，它会截断与此项匹配的 URL 的部分，并将剩余的字符串发送到 URLconf 以供进一步处理。因为投票应用有它自己的 URLconf( polls/urls.py )，他们能够被放在 “/polls/“ ， “/fun_polls/“ ，”/content/polls/“，或者其他任何路径下，这个应用都能够正常工作。</p><p>python manage.py shell 命令再次打开 Python 交互式命令行</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://docs.djangoproject.com/zh-hans/3.0/topics/">Django 官方中文文档</a></p><p><a href="https://wiki.jikexueyuan.com/project/django-set-up-blog/">Django搭建简易博客教程_Django开发中文手册[PDF]下载-极客学院Wiki</a></p><p><a href="https://zhuanlan.zhihu.com/p/74726087">Django路由控制URL详解 - 知乎</a></p><p><a href="https://zhuanlan.zhihu.com/p/47962034">Django基础(19): Django Admin管理后台详解(上) - 知乎</a></p><p><a href="https://www.runoob.com/django/django-admin-manage-tool.html">Django Admin 管理工具 | 菜鸟教程</a></p><p><a href="https://wizardforcel.gitbooks.io/django-chinese-docs-18/content/">Introduction · Django 中文文档 1.8</a></p><p><a href="https://www.alibabacloud.com/zh/getting-started/projects/how-to-deploy-django-application-on-alibaba-cloud">如何在阿里云上部署 Django 应用程序 - 阿里云新手学堂</a><br><a href="https://yq.aliyun.com/articles/590911">阿里云centos部署Django+nginx+uwsgi服务，安装mezzanine为例-云栖社区-阿里云</a></p><p><a href="https://mudew.com/20190417/django-22-does-not-match-the-sqlite3-version-above/">Django2.2以上针对Sqlite3版本不匹配 | 沐雨露の山头 | 懒若新生</a></p><p><a href="https://blog.csdn.net/will5451/article/details/53861092">Django运行访问项目出现的问题:DisallowedHost at / Invalid HTTP_HOST header_Python_will5451的博客-CSDN博客</a></p><p><a href="https://code.ziqiangxuetang.com/django/django-deploy-base.html">Django 部署基础 - Django 教程 - 自强学堂</a><br><a href="https://code.ziqiangxuetang.com/django/django-nginx-deploy.html">Django 部署(Nginx) - Django 教程 - 自强学堂</a></p><p><a href="https://zhuanlan.zhihu.com/p/31208172">django系列四：静态文件 - 知乎</a></p><p><a href="http://fingerchou.com/2017/08/12/elasticsearch-dsl-with-python-usage-1/">Python Elasticsearch DSL 使用笔记(一) | Finger’s Blog</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
    
    </summary>
    
    
      <category term="研究生课程" scheme="https://zronghui.github.io/categories/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/"/>
    
      <category term="信息系统实训" scheme="https://zronghui.github.io/categories/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%AE%AD/"/>
    
    
  </entry>
  
  <entry>
    <title>elastic search</title>
    <link href="https://zronghui.github.io/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%AE%AD/elastic-search.html"/>
    <id>https://zronghui.github.io/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%AE%AD/elastic-search.html</id>
    <published>2020-03-05T05:58:51.000Z</published>
    <updated>2020-03-09T02:47:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">brew install elasticsearch</span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改 PATH</span></span><br><span class="line">export PATH=/usr/local/Cellar/elasticsearch/6.8.6/bin:$PATH</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 安装中文分词插件</span></span><br><span class="line">elasticsearch-plugin install https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v6.8.6/elasticsearch-analysis-ik-6.8.6.zip</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动</span></span><br><span class="line">elasticsearch</span><br><span class="line">pip3 install 'elasticsearch&gt;=6.0.0,&lt;7.0.0'</span><br></pre></td></tr></table></figure><p>打开 <a href="http://localhost:9200/">localhost:9200</a></p><img src="https://i.loli.net/2020/03/05/Psf5OvknTA8lo1S.png" alt="Psf5OvknTA8lo1S" style="zoom: 25%;" /><h2 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h2><h3 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h3><p>Relational DB: -&gt;Databases-&gt;Tables-&gt;Rows-&gt;Columns </p><p>ElasticSearch: -&gt;Indices-&gt;Types-&gt;Documents-&gt;Fields</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> elasticsearch <span class="keyword">import</span> Elasticsearch</span><br><span class="line">es = Elasticsearch()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建 Index</span></span><br><span class="line">result = es.indices.create(index=<span class="string">'news'</span>, ignore=<span class="number">400</span>)</span><br><span class="line">print(result)</span><br><span class="line"><span class="comment"># &#123;'acknowledged': True, 'shards_acknowledged': True, 'index': 'news'&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除 Index</span></span><br><span class="line">result = es.indices.delete(index=<span class="string">'news'</span>, ignore=[<span class="number">400</span>, <span class="number">404</span>])</span><br><span class="line">print(result)</span><br><span class="line"><span class="comment"># &#123;'acknowledged': True&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 插入数据</span></span><br><span class="line">data = &#123;<span class="string">'title'</span>: <span class="string">'美国留给伊拉克的是个烂摊子吗'</span>, <span class="string">'url'</span>: <span class="string">'http://view.news.qq.com/zt2011/usa_iraq/index.htm'</span>&#125;</span><br><span class="line">result = es.create(index=<span class="string">'news'</span>, doc_type=<span class="string">'politics'</span>, id=<span class="number">1</span>, body=data)</span><br><span class="line">print(result)</span><br><span class="line"><span class="comment"># &#123;'_index': 'news', '_type': 'politics', '_id': '1', '_version': 1, 'result': 'created', '_shards': &#123;'total': 2, 'successful': 1, 'failed': 0&#125;, '_seq_no': 0, '_primary_term': 1&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># index 方法也可以插入数据，而且可以不指定 ID，会自动生成， index 也可以更新已经存在的数据</span></span><br><span class="line"><span class="comment"># es.index(index='news', doc_type='politics', body=data)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新数据</span></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">'title'</span>: <span class="string">'美国留给伊拉克的是个烂摊子吗'</span>,</span><br><span class="line">    <span class="string">'url'</span>: <span class="string">'http://view.news.qq.com/zt2011/usa_iraq/index.htm'</span>,</span><br><span class="line">    <span class="string">'date'</span>: <span class="string">'2011-12-16'</span></span><br><span class="line">&#125;</span><br><span class="line">result = es.update(index=<span class="string">'news'</span>, doc_type=<span class="string">'politics'</span>, body=data, id=<span class="number">1</span>)</span><br><span class="line">print(result)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除数据</span></span><br><span class="line">result = es.delete(index=<span class="string">'news'</span>, doc_type=<span class="string">'politics'</span>, id=<span class="number">1</span>)</span><br><span class="line">print(result)</span><br><span class="line"><span class="comment"># &#123;'_index': 'news', '_type': 'politics', '_id': '1', '_version': 3, 'result': 'deleted', '_shards': &#123;'total': 2, 'successful': 1, 'failed': 0&#125;, '_seq_no': 2, '_primary_term': 1&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询数据</span></span><br><span class="line">dsl = &#123;</span><br><span class="line">    <span class="string">'query'</span>: &#123;</span><br><span class="line">        <span class="string">'match'</span>: &#123;</span><br><span class="line">            <span class="string">'title'</span>: <span class="string">'中国 领事馆'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">es = Elasticsearch()</span><br><span class="line">result = es.search(index=<span class="string">'news'</span>, doc_type=<span class="string">'politics'</span>, body=dsl)</span><br><span class="line">print(json.dumps(result, indent=<span class="number">2</span>, ensure_ascii=<span class="literal">False</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 以上任何执行若报错，返回：</span></span><br><span class="line"><span class="comment"># &#123;'error': &#123;...&#125;, 'status': ...&#125;, 如：</span></span><br><span class="line"><span class="comment"># &#123;'error': &#123;'root_cause': [&#123;'type': 'resource_already_exists_exception', 'reason': 'index [news/QM6yz2W8QE-bflKhc5oThw] already exists', 'index_uuid': 'QM6yz2W8QE-bflKhc5oThw', 'index': 'news'&#125;], 'type': 'resource_already_exists_exception', 'reason': 'index [news/QM6yz2W8QE-bflKhc5oThw] already exists', 'index_uuid': 'QM6yz2W8QE-bflKhc5oThw', 'index': 'news'&#125;, 'status': 400&#125;</span></span><br></pre></td></tr></table></figure><p>查询返回结果</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"took"</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="attr">"timed_out"</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">"_shards"</span>: &#123;</span><br><span class="line">    <span class="attr">"total"</span>: <span class="number">5</span>,</span><br><span class="line">    <span class="attr">"successful"</span>: <span class="number">5</span>,</span><br><span class="line">    <span class="attr">"skipped"</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"failed"</span>: <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"hits"</span>: &#123;</span><br><span class="line">    <span class="attr">"total"</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="attr">"max_score"</span>: <span class="number">2.546152</span>,</span><br><span class="line">    <span class="attr">"hits"</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"_index"</span>: <span class="string">"news"</span>,</span><br><span class="line">        <span class="attr">"_type"</span>: <span class="string">"politics"</span>,</span><br><span class="line">        <span class="attr">"_id"</span>: <span class="string">"dk5G9mQBD9BuE5fdHOUm"</span>,</span><br><span class="line">        <span class="attr">"_score"</span>: <span class="number">2.546152</span>,</span><br><span class="line">        <span class="attr">"_source"</span>: &#123;</span><br><span class="line">          <span class="attr">"title"</span>: <span class="string">"中国驻洛杉矶领事馆遭亚裔男子枪击，嫌犯已自首"</span>,</span><br><span class="line">          <span class="attr">"url"</span>: <span class="string">"http://news.ifeng.com/world/detail_2011_12/16/11372558_0.shtml"</span>,</span><br><span class="line">          <span class="attr">"date"</span>: <span class="string">"2011-12-18"</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"_index"</span>: <span class="string">"news"</span>,</span><br><span class="line">        <span class="attr">"_type"</span>: <span class="string">"politics"</span>,</span><br><span class="line">        <span class="attr">"_id"</span>: <span class="string">"dU5G9mQBD9BuE5fdHOUj"</span>,</span><br><span class="line">        <span class="attr">"_score"</span>: <span class="number">0.2876821</span>,</span><br><span class="line">        <span class="attr">"_source"</span>: &#123;</span><br><span class="line">          <span class="attr">"title"</span>: <span class="string">"中韩渔警冲突调查：韩警平均每天扣1艘中国渔船"</span>,</span><br><span class="line">          <span class="attr">"url"</span>: <span class="string">"https://news.qq.com/a/20111216/001044.htm"</span>,</span><br><span class="line">          <span class="attr">"date"</span>: <span class="string">"2011-12-17"</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Hello-world"><a href="#Hello-world" class="headerlink" title="Hello world"></a>Hello world</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> pretty_errors</span><br><span class="line"><span class="keyword">from</span> elasticsearch <span class="keyword">import</span> Elasticsearch</span><br><span class="line"></span><br><span class="line">es = Elasticsearch()</span><br><span class="line">mapping = &#123;</span><br><span class="line">    <span class="string">'properties'</span>: &#123;</span><br><span class="line">        <span class="string">'title'</span>: &#123;</span><br><span class="line">            <span class="string">'type'</span>: <span class="string">'text'</span>,</span><br><span class="line">            <span class="string">'analyzer'</span>: <span class="string">'ik_max_word'</span>,</span><br><span class="line">            <span class="string">'search_analyzer'</span>: <span class="string">'ik_max_word'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">es.indices.delete(index=<span class="string">'news'</span>, ignore=[<span class="number">400</span>, <span class="number">404</span>])</span><br><span class="line">es.indices.create(index=<span class="string">'news'</span>, ignore=<span class="number">400</span>)</span><br><span class="line">result = es.indices.put_mapping(index=<span class="string">'news'</span>, doc_type=<span class="string">'politics'</span>, body=mapping)</span><br><span class="line">print(result)</span><br><span class="line"><span class="comment"># &#123;'acknowledged': True&#125;</span></span><br><span class="line"></span><br><span class="line">datas = [</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">'title'</span>: <span class="string">'美国留给伊拉克的是个烂摊子吗'</span>,</span><br><span class="line">        <span class="string">'url'</span>: <span class="string">'http://view.news.qq.com/zt2011/usa_iraq/index.htm'</span>,</span><br><span class="line">        <span class="string">'date'</span>: <span class="string">'2011-12-16'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">'title'</span>: <span class="string">'公安部：各地校车将享最高路权'</span>,</span><br><span class="line">        <span class="string">'url'</span>: <span class="string">'http://www.chinanews.com/gn/2011/12-16/3536077.shtml'</span>,</span><br><span class="line">        <span class="string">'date'</span>: <span class="string">'2011-12-16'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">'title'</span>: <span class="string">'中韩渔警冲突调查：韩警平均每天扣1艘中国渔船'</span>,</span><br><span class="line">        <span class="string">'url'</span>: <span class="string">'https://news.qq.com/a/20111216/001044.htm'</span>,</span><br><span class="line">        <span class="string">'date'</span>: <span class="string">'2011-12-17'</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">'title'</span>: <span class="string">'中国驻洛杉矶领事馆遭亚裔男子枪击 嫌犯已自首'</span>,</span><br><span class="line">        <span class="string">'url'</span>: <span class="string">'http://news.ifeng.com/world/detail_2011_12/16/11372558_0.shtml'</span>,</span><br><span class="line">        <span class="string">'date'</span>: <span class="string">'2011-12-18'</span></span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> data <span class="keyword">in</span> datas:</span><br><span class="line">    debug = es.index(index=<span class="string">'news'</span>, doc_type=<span class="string">'politics'</span>, body=data)</span><br><span class="line">es.indices.refresh(index=<span class="string">"news"</span>)</span><br><span class="line"></span><br><span class="line">result = es.search(index=<span class="string">'news'</span>, doc_type=<span class="string">'politics'</span>)</span><br><span class="line"></span><br><span class="line">print(json.dumps(result, indent=<span class="number">2</span>, ensure_ascii=<span class="literal">False</span>))</span><br><span class="line"></span><br><span class="line">dsl = &#123;</span><br><span class="line">    <span class="string">'query'</span>: &#123;</span><br><span class="line">        <span class="string">'match'</span>: &#123;</span><br><span class="line">            <span class="string">'title'</span>: <span class="string">'中国'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">es = Elasticsearch()</span><br><span class="line"><span class="comment"># result = es.search(index='news', doc_type='politics', q='中国 领事馆')</span></span><br><span class="line">result = es.search(index=<span class="string">'news'</span>, doc_type=<span class="string">'politics'</span>, body=dsl)</span><br><span class="line"></span><br><span class="line">print(json.dumps(result, indent=<span class="number">2</span>, ensure_ascii=<span class="literal">False</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># &#123;'acknowledged': True&#125;</span></span><br><span class="line"><span class="comment"># &#123;</span></span><br><span class="line"><span class="comment">#   "took": 3,</span></span><br><span class="line"><span class="comment">#   "timed_out": false,</span></span><br><span class="line"><span class="comment">#   "_shards": &#123;</span></span><br><span class="line"><span class="comment">#     "total": 5,</span></span><br><span class="line"><span class="comment">#     "successful": 5,</span></span><br><span class="line"><span class="comment">#     "skipped": 0,</span></span><br><span class="line"><span class="comment">#     "failed": 0</span></span><br><span class="line"><span class="comment">#   &#125;,</span></span><br><span class="line"><span class="comment">#   "hits": &#123;</span></span><br><span class="line"><span class="comment">#     "total": 4,</span></span><br><span class="line"><span class="comment">#     "max_score": 1.0,</span></span><br><span class="line"><span class="comment">#     "hits": [</span></span><br><span class="line"><span class="comment">#       &#123;</span></span><br><span class="line"><span class="comment">#         "_index": "news",</span></span><br><span class="line"><span class="comment">#         "_type": "politics",</span></span><br><span class="line"><span class="comment">#         "_id": "q4xHqnABU_ZbTbliQ7pZ",</span></span><br><span class="line"><span class="comment">#         "_score": 1.0,</span></span><br><span class="line"><span class="comment">#         "_source": &#123;</span></span><br><span class="line"><span class="comment">#           "title": "中国驻洛杉矶领事馆遭亚裔男子枪击 嫌犯已自首",</span></span><br><span class="line"><span class="comment">#           "url": "http://news.ifeng.com/world/detail_2011_12/16/11372558_0.shtml",</span></span><br><span class="line"><span class="comment">#           "date": "2011-12-18"</span></span><br><span class="line"><span class="comment">#         &#125;</span></span><br><span class="line"><span class="comment">#       &#125;,</span></span><br><span class="line"><span class="comment">#       &#123;</span></span><br><span class="line"><span class="comment">#         "_index": "news",</span></span><br><span class="line"><span class="comment">#         "_type": "politics",</span></span><br><span class="line"><span class="comment">#         "_id": "qoxHqnABU_ZbTbliQ7pQ",</span></span><br><span class="line"><span class="comment">#         "_score": 1.0,</span></span><br><span class="line"><span class="comment">#         "_source": &#123;</span></span><br><span class="line"><span class="comment">#           "title": "中韩渔警冲突调查：韩警平均每天扣1艘中国渔船",</span></span><br><span class="line"><span class="comment">#           "url": "https://news.qq.com/a/20111216/001044.htm",</span></span><br><span class="line"><span class="comment">#           "date": "2011-12-17"</span></span><br><span class="line"><span class="comment">#         &#125;</span></span><br><span class="line"><span class="comment">#       &#125;,</span></span><br><span class="line"><span class="comment">#       &#123;</span></span><br><span class="line"><span class="comment">#         "_index": "news",</span></span><br><span class="line"><span class="comment">#         "_type": "politics",</span></span><br><span class="line"><span class="comment">#         "_id": "qIxHqnABU_ZbTbliQ7oy",</span></span><br><span class="line"><span class="comment">#         "_score": 1.0,</span></span><br><span class="line"><span class="comment">#         "_source": &#123;</span></span><br><span class="line"><span class="comment">#           "title": "美国留给伊拉克的是个烂摊子吗",</span></span><br><span class="line"><span class="comment">#           "url": "http://view.news.qq.com/zt2011/usa_iraq/index.htm",</span></span><br><span class="line"><span class="comment">#           "date": "2011-12-16"</span></span><br><span class="line"><span class="comment">#         &#125;</span></span><br><span class="line"><span class="comment">#       &#125;,</span></span><br><span class="line"><span class="comment">#       &#123;</span></span><br><span class="line"><span class="comment">#         "_index": "news",</span></span><br><span class="line"><span class="comment">#         "_type": "politics",</span></span><br><span class="line"><span class="comment">#         "_id": "qYxHqnABU_ZbTbliQ7pJ",</span></span><br><span class="line"><span class="comment">#         "_score": 1.0,</span></span><br><span class="line"><span class="comment">#         "_source": &#123;</span></span><br><span class="line"><span class="comment">#           "title": "公安部：各地校车将享最高路权",</span></span><br><span class="line"><span class="comment">#           "url": "http://www.chinanews.com/gn/2011/12-16/3536077.shtml",</span></span><br><span class="line"><span class="comment">#           "date": "2011-12-16"</span></span><br><span class="line"><span class="comment">#         &#125;</span></span><br><span class="line"><span class="comment">#       &#125;</span></span><br><span class="line"><span class="comment">#     ]</span></span><br><span class="line"><span class="comment">#   &#125;</span></span><br><span class="line"><span class="comment"># &#125;</span></span><br><span class="line"><span class="comment"># &#123;</span></span><br><span class="line"><span class="comment">#   "took": 7,</span></span><br><span class="line"><span class="comment">#   "timed_out": false,</span></span><br><span class="line"><span class="comment">#   "_shards": &#123;</span></span><br><span class="line"><span class="comment">#     "total": 5,</span></span><br><span class="line"><span class="comment">#     "successful": 5,</span></span><br><span class="line"><span class="comment">#     "skipped": 0,</span></span><br><span class="line"><span class="comment">#     "failed": 0</span></span><br><span class="line"><span class="comment">#   &#125;,</span></span><br><span class="line"><span class="comment">#   "hits": &#123;</span></span><br><span class="line"><span class="comment">#     "total": 2,</span></span><br><span class="line"><span class="comment">#     "max_score": 0.2876821,</span></span><br><span class="line"><span class="comment">#     "hits": [</span></span><br><span class="line"><span class="comment">#       &#123;</span></span><br><span class="line"><span class="comment">#         "_index": "news",</span></span><br><span class="line"><span class="comment">#         "_type": "politics",</span></span><br><span class="line"><span class="comment">#         "_id": "q4xHqnABU_ZbTbliQ7pZ",</span></span><br><span class="line"><span class="comment">#         "_score": 0.2876821,</span></span><br><span class="line"><span class="comment">#         "_source": &#123;</span></span><br><span class="line"><span class="comment">#           "title": "中国驻洛杉矶领事馆遭亚裔男子枪击 嫌犯已自首",</span></span><br><span class="line"><span class="comment">#           "url": "http://news.ifeng.com/world/detail_2011_12/16/11372558_0.shtml",</span></span><br><span class="line"><span class="comment">#           "date": "2011-12-18"</span></span><br><span class="line"><span class="comment">#         &#125;</span></span><br><span class="line"><span class="comment">#       &#125;,</span></span><br><span class="line"><span class="comment">#       &#123;</span></span><br><span class="line"><span class="comment">#         "_index": "news",</span></span><br><span class="line"><span class="comment">#         "_type": "politics",</span></span><br><span class="line"><span class="comment">#         "_id": "qoxHqnABU_ZbTbliQ7pQ",</span></span><br><span class="line"><span class="comment">#         "_score": 0.2876821,</span></span><br><span class="line"><span class="comment">#         "_source": &#123;</span></span><br><span class="line"><span class="comment">#           "title": "中韩渔警冲突调查：韩警平均每天扣1艘中国渔船",</span></span><br><span class="line"><span class="comment">#           "url": "https://news.qq.com/a/20111216/001044.htm",</span></span><br><span class="line"><span class="comment">#           "date": "2011-12-17"</span></span><br><span class="line"><span class="comment">#         &#125;</span></span><br><span class="line"><span class="comment">#       &#125;</span></span><br><span class="line"><span class="comment">#     ]</span></span><br><span class="line"><span class="comment">#   &#125;</span></span><br><span class="line"><span class="comment"># &#125;</span></span><br><span class="line"><span class="comment">#</span></span><br></pre></td></tr></table></figure><h2 id="建立索引-插入数据-查询数据"><a href="#建立索引-插入数据-查询数据" class="headerlink" title="建立索引 插入数据 查询数据"></a>建立索引 插入数据 查询数据</h2><p><a href="https://zhuanlan.zhihu.com/p/51242233">ElasticSearch+python完成类似mysql的不分词查询 - 知乎</a></p><h3 id="建立索引"><a href="#建立索引" class="headerlink" title="建立索引"></a>建立索引</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">PUT /index_test          // index_test 对应mysql database_name</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"mappings"</span>:&#123;</span><br><span class="line">    <span class="attr">"doc_type"</span>:&#123;        <span class="comment">// doc_type对应 对应mysql table_name</span></span><br><span class="line">      <span class="attr">"properties"</span>: &#123;</span><br><span class="line">          <span class="attr">"field1"</span>: &#123;<span class="attr">"type"</span>: <span class="string">"keyword"</span>&#125;,</span><br><span class="line">          <span class="attr">"field2"</span>: &#123;<span class="attr">"type"</span>: <span class="string">"keyword"</span>&#125;,</span><br><span class="line">          <span class="attr">"field3"</span>: &#123;<span class="attr">"type"</span>: <span class="string">"keyword"</span>&#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">例如：</span><br><span class="line"></span><br><span class="line">PUT /fb2m</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"mappings"</span>:&#123;</span><br><span class="line">    <span class="attr">"kb_fact"</span>:&#123;</span><br><span class="line">      <span class="attr">"properties"</span>: &#123;</span><br><span class="line">        <span class="attr">"subject"</span>: &#123;<span class="attr">"type"</span>: <span class="string">"keyword"</span>&#125;,</span><br><span class="line">        <span class="attr">"predicate"</span>: &#123;<span class="attr">"type"</span>: <span class="string">"keyword"</span>&#125;,</span><br><span class="line">        <span class="attr">"object"</span>: &#123;<span class="attr">"type"</span>: <span class="string">"keyword"</span>&#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="批量插入数据"><a href="#批量插入数据" class="headerlink" title="批量插入数据"></a>批量插入数据</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> copy</span><br><span class="line"><span class="keyword">import</span> elasticsearch</span><br><span class="line"><span class="keyword">from</span> elasticsearch <span class="keyword">import</span> helpers</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="comment"># 你的Elasticsearch所对应的IP地址和端口，注意，不是Kibanake可视化界面的地址</span></span><br><span class="line">es = elasticsearch.Elasticsearch([&#123;<span class="string">'host'</span>:<span class="string">'xx.xx.x.xxx'</span>,<span class="string">'port'</span>:xxxx&#125;])</span><br><span class="line"></span><br><span class="line">print(<span class="string">"============== index ================"</span>)</span><br><span class="line">count = <span class="number">0</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line">j = <span class="number">0</span></span><br><span class="line">num=<span class="number">0</span></span><br><span class="line">actions = []</span><br><span class="line">max_count = <span class="number">2000</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'dataset/index_data'</span>,<span class="string">'r'</span>,encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> f:</span><br><span class="line">        j += <span class="number">1</span></span><br><span class="line">        triple = line.strip().split(<span class="string">" ||| "</span>)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            triple_dict = &#123;<span class="string">'field1'</span>:triple[<span class="number">0</span>],<span class="string">'field2'</span>:triple[<span class="number">1</span>],<span class="string">'field3'</span>:triple[<span class="number">2</span>]&#125;</span><br><span class="line">            <span class="comment"># 如果数据量小可以用index的方法一条条插入</span></span><br><span class="line">            <span class="comment"># 这里index，doc_type就等于上一步建立索引所用的名称</span></span><br><span class="line">            <span class="comment">#es.index(index='index_test',doc_type='doc_type',body=triple_dict)</span></span><br><span class="line">            action=&#123;</span><br><span class="line">            <span class="string">"_index"</span>:<span class="string">"index_test"</span>,</span><br><span class="line">            <span class="string">"_type"</span>:<span class="string">"doc_type"</span>,</span><br><span class="line">            <span class="string">"_id"</span>:i,</span><br><span class="line">            <span class="string">"_source"</span>:triple_dict</span><br><span class="line">            &#125;</span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">            count += <span class="number">1</span></span><br><span class="line">            actions.append(action)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            print(<span class="string">" !!! "</span>+ str(j) +<span class="string">" th row insert faied: "</span>+line)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">if</span> count&gt;=max_count:</span><br><span class="line">            helpers.bulk(es, actions)</span><br><span class="line">            actions=[]</span><br><span class="line">            count=<span class="number">0</span></span><br><span class="line">            num+=<span class="number">1</span></span><br><span class="line">            print(<span class="string">"Insert "</span>+str(num*max_count)+<span class="string">" records."</span>)</span><br><span class="line">helpers.bulk(es,actions)</span><br><span class="line">print(<span class="string">'finish~~~'</span>)</span><br></pre></td></tr></table></figure><h3 id="查询数据"><a href="#查询数据" class="headerlink" title="查询数据"></a>查询数据</h3><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">1.不分词查询所有：</span><br><span class="line">select * from doc_type</span><br><span class="line"></span><br><span class="line">GET /index_test/doc_type/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"query"</span>: &#123;</span><br><span class="line">    <span class="attr">"match_all"</span>: &#123;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">2.不分词匹配一个字段：</span><br><span class="line">select * from doc_type where filed1=value1</span><br><span class="line"></span><br><span class="line">GET /index_test/doc_type/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"query"</span>: &#123;</span><br><span class="line">    <span class="attr">"term"</span>: &#123; <span class="attr">"filed1"</span> :<span class="string">"value1 &#125;</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">3.不分词同时匹配两个字段：</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">mysql：select * from doc_type where filed1=value1 and filed2=value2</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">ES可以用bool过滤器实现组合检索,一个bool过滤器由三部分组成：</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">   "</span>bool<span class="string">" : &#123;</span></span><br><span class="line"><span class="string">      "</span>must<span class="string">" :     [],  //与 AND 等价</span></span><br><span class="line"><span class="string">      "</span>should<span class="string">" :   [],  //与 OR 等价</span></span><br><span class="line"><span class="string">      "</span>must_not<span class="string">" : [],  //与 NOT 等价</span></span><br><span class="line"><span class="string">   &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">所有对应代码如下：</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">GET /index_test/doc_type/_search</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string">  "</span>query<span class="string">": &#123;</span></span><br><span class="line"><span class="string">    "</span>bool<span class="string">": &#123;</span></span><br><span class="line"><span class="string">      "</span>must<span class="string">": [</span></span><br><span class="line"><span class="string">        &#123; "</span>term<span class="string">": &#123; "</span>filed1<span class="string">" :"</span>value1 &#125;&#125;,</span><br><span class="line">        &#123; "term": &#123;  "filed2" :"value2" &#125;&#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">多字段（Multi-filed）查询</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">"query"</span>: &#123;</span><br><span class="line">        <span class="attr">"multi_match"</span> : &#123;</span><br><span class="line">            <span class="attr">"query"</span> : <span class="string">"elasticsearch guide"</span>,</span><br><span class="line">            <span class="attr">"fields"</span>: [<span class="string">"title"</span>, <span class="string">"summary"</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">需要提高某一个字段的分值。在下面的例子中，我们把 summary 字段的分数提高三倍</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">"query"</span>: &#123;</span><br><span class="line">        <span class="attr">"multi_match"</span> : &#123;</span><br><span class="line">            <span class="attr">"query"</span> : <span class="string">"elasticsearch guide"</span>,</span><br><span class="line">            <span class="attr">"fields"</span>: [<span class="string">"title"</span>, <span class="string">"summary^3"</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"_source"</span>: [<span class="string">"title"</span>, <span class="string">"summary"</span>, <span class="string">"publish_date"</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">模糊（Fuzzy）查询</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">"query"</span>: &#123;</span><br><span class="line">        <span class="attr">"multi_match"</span> : &#123;</span><br><span class="line">            <span class="attr">"query"</span> : <span class="string">"comprihensiv guide"</span>,</span><br><span class="line">            <span class="attr">"fields"</span>: [<span class="string">"title"</span>, <span class="string">"summary"</span>],</span><br><span class="line">            <span class="attr">"fuzziness"</span>: <span class="string">"AUTO"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"_source"</span>: [<span class="string">"title"</span>, <span class="string">"summary"</span>, <span class="string">"publish_date"</span>],</span><br><span class="line">    <span class="attr">"size"</span>: <span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Python代码检索：</span><br><span class="line"></span><br><span class="line"><span class="comment"># 上面DSL代码query部分复制下来</span></span><br><span class="line">dsl = &#123;</span><br><span class="line"> <span class="string">"query"</span>: &#123;</span><br><span class="line">    <span class="string">"bool"</span>: &#123;</span><br><span class="line">      <span class="string">"must"</span>: [</span><br><span class="line">        &#123; <span class="string">"term"</span>: &#123; <span class="string">"filed1"</span> :<span class="string">"value1"</span>&#125;&#125;,</span><br><span class="line">        &#123; <span class="string">"term"</span>: &#123;  <span class="string">"filed2"</span> :<span class="string">"value2"</span>&#125;&#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">es_result = es.search(index=<span class="string">'index_test'</span>, doc_type=<span class="string">'doc_type'</span>, body=dsl)</span><br><span class="line"><span class="comment"># es返回的是一个dict</span></span><br><span class="line">result = es_result[<span class="string">'hits'</span>][<span class="string">'hits'</span>]</span><br><span class="line">print(result)</span><br></pre></td></tr></table></figure><h3 id="更多查询"><a href="#更多查询" class="headerlink" title="更多查询"></a>更多查询</h3><p>详见：<a href="https://n3xtchen.github.io/n3xtchen/elasticsearch/2017/07/05/elasticsearch-23-useful-query-example">19 个很有用的 ElasticSearch 查询语句</a></p><ol start="7"><li>正则（Regexp）查询</li><li>短语匹配(Match Phrase)查询</li><li>短语前缀（Match Phrase Prefix）查询</li><li>查询字符串（Query String）</li><li>简单查询字符串（Simple Query String）</li><li>词条（Term）/多词条（Terms）查询</li><li>词条（Term）查询 - 排序（Sorted）</li><li>范围查询</li><li>过滤(Filtered)查询</li><li>多重过滤（Multiple Filters）</li><li>作用分值: 域值（Field Value）因子</li><li>作用分值: 衰变（Decay）函数</li><li>函数分值: 脚本评分</li></ol><h3 id="Query-with-highlight"><a href="#Query-with-highlight" class="headerlink" title="Query with highlight"></a>Query with highlight</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;query&quot; : &#123; &quot;match&quot; : &#123; &quot;content&quot; : &quot;中国&quot; &#125;&#125;,</span><br><span class="line">    &quot;highlight&quot; : &#123;</span><br><span class="line">        &quot;pre_tags&quot; : [&quot;&lt;tag1&gt;&quot;, &quot;&lt;tag2&gt;&quot;],</span><br><span class="line">        &quot;post_tags&quot; : [&quot;&lt;&#x2F;tag1&gt;&quot;, &quot;&lt;&#x2F;tag2&gt;&quot;],</span><br><span class="line">        &quot;fields&quot; : &#123;</span><br><span class="line">            &quot;content&quot; : &#123;&#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"took"</span>: <span class="number">14</span>,</span><br><span class="line">    <span class="attr">"timed_out"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"_shards"</span>: &#123;</span><br><span class="line">        <span class="attr">"total"</span>: <span class="number">5</span>,</span><br><span class="line">        <span class="attr">"successful"</span>: <span class="number">5</span>,</span><br><span class="line">        <span class="attr">"failed"</span>: <span class="number">0</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"hits"</span>: &#123;</span><br><span class="line">        <span class="attr">"total"</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">"max_score"</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="attr">"hits"</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">"_index"</span>: <span class="string">"index"</span>,</span><br><span class="line">                <span class="attr">"_type"</span>: <span class="string">"fulltext"</span>,</span><br><span class="line">                <span class="attr">"_id"</span>: <span class="string">"4"</span>,</span><br><span class="line">                <span class="attr">"_score"</span>: <span class="number">2</span>,</span><br><span class="line">                <span class="attr">"_source"</span>: &#123;</span><br><span class="line">                    <span class="attr">"content"</span>: <span class="string">"中国驻洛杉矶领事馆遭亚裔男子枪击 嫌犯已自首"</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">"highlight"</span>: &#123;</span><br><span class="line">                    <span class="attr">"content"</span>: [</span><br><span class="line">                        <span class="string">"&lt;tag1&gt;中国&lt;/tag1&gt;驻洛杉矶领事馆遭亚裔男子枪击 嫌犯已自首 "</span></span><br><span class="line">                    ]</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">"_index"</span>: <span class="string">"index"</span>,</span><br><span class="line">                <span class="attr">"_type"</span>: <span class="string">"fulltext"</span>,</span><br><span class="line">                <span class="attr">"_id"</span>: <span class="string">"3"</span>,</span><br><span class="line">                <span class="attr">"_score"</span>: <span class="number">2</span>,</span><br><span class="line">                <span class="attr">"_source"</span>: &#123;</span><br><span class="line">                    <span class="attr">"content"</span>: <span class="string">"中韩渔警冲突调查：韩警平均每天扣1艘中国渔船"</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="attr">"highlight"</span>: &#123;</span><br><span class="line">                    <span class="attr">"content"</span>: [</span><br><span class="line">                        <span class="string">"均每天扣1艘&lt;tag1&gt;中国&lt;/tag1&gt;渔船 "</span></span><br><span class="line">                    ]</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="相关社区、教程"><a href="#相关社区、教程" class="headerlink" title="相关社区、教程"></a>相关社区、教程</h2><p><a href="https://elasticsearch-py.readthedocs.io/en/master/index.html">Python Elasticsearch Client — Elasticsearch 7.5.1 documentation</a></p><p><a href="https://es.xiaoleilu.com/index.html">Introduction | Elasticsearch权威指南（中文版）</a><br><a href="http://www.ruanyifeng.com/blog/2017/08/elasticsearch.html">全文搜索引擎 Elasticsearch 入门教程 - 阮一峰的网络日志</a><br><a href="https://elasticsearch.cn/">Elastic 中文社区</a></p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://cuiqingcai.com/6214.html">Elasticsearch 基本介绍及其与 Python 的对接实现 | 静觅</a></p><p><a href="https://n3xtchen.github.io/n3xtchen/elasticsearch/2017/07/05/elasticsearch-23-useful-query-example">19 个很有用的 ElasticSearch 查询语句</a></p><p><a href="https://github.com/medcl/elasticsearch-analysis-ik/blob/master/README.md">elasticsearch-analysis-ik/README.md at master · medcl/elasticsearch-analysis-ik</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
    
    </summary>
    
    
      <category term="研究生课程" scheme="https://zronghui.github.io/categories/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/"/>
    
      <category term="信息系统实训" scheme="https://zronghui.github.io/categories/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%AE%AD/"/>
    
    
  </entry>
  
  <entry>
    <title>tmux</title>
    <link href="https://zronghui.github.io/Mac/06-tmux.html"/>
    <id>https://zronghui.github.io/Mac/06-tmux.html</id>
    <published>2020-03-04T14:27:32.000Z</published>
    <updated>2020-03-05T02:36:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a><p><a href="https://linux.cn/article-10480-1.html">技术|tmux：适用于重度命令行 Linux 用户的终端复用器</a></p><p><a href="https://linux.cn/lctt/MjSeven">MjSeven - Linux 中国翻译组（LCTT）- Linux 中国◆开源社区</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
    
    </summary>
    
    
      <category term="Mac" scheme="https://zronghui.github.io/categories/Mac/"/>
    
    
  </entry>
  
  <entry>
    <title>git tricks</title>
    <link href="https://zronghui.github.io/tricks/git-tricks.html"/>
    <id>https://zronghui.github.io/tricks/git-tricks.html</id>
    <published>2020-03-04T08:34:59.000Z</published>
    <updated>2020-03-11T07:18:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a><h2 id="移动文件"><a href="#移动文件" class="headerlink" title="移动文件"></a>移动文件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git mv from to</span><br></pre></td></tr></table></figure><h2 id="撤销-push-到-GitHub-的-commit"><a href="#撤销-push-到-GitHub-的-commit" class="headerlink" title="撤销 push 到 GitHub 的 commit"></a>撤销 push 到 GitHub 的 commit</h2><p><a href="https://juejin.im/post/5a4c274851882560b652b23a">git push提交成功后如何撤销回退 - 掘金</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard commit-id</span><br><span class="line">git push -u origion master -f</span><br><span class="line"><span class="meta">#</span><span class="bash"> commit id 可通过 git reflog 查看</span></span><br></pre></td></tr></table></figure><h2 id="Git-本地已有仓库推送到远程"><a href="#Git-本地已有仓库推送到远程" class="headerlink" title="Git-本地已有仓库推送到远程"></a>Git-本地已有仓库推送到远程</h2><p><a href="https://www.jianshu.com/p/53f7c7c75d72">Git-本地已有仓库推送到远程 - 简书</a></p><p>在GitHub 建立新仓库，注意不要勾选 readme</p><p><strong>git init</strong></p><p><strong>git remote add origin &lt;你的远程仓库地址&gt;</strong></p><p>编写 .gitignore</p><p><strong>git add .</strong></p><p><strong>git commit -m ‘…’</strong></p><p><strong>git push -u origin master</strong> </p><p>若勾选 readme：</p><p><strong>git pull origin master –allow-unrelated-histories</strong></p><p>如果进入到merge信息界面，说明成功了，只需要输入:wq,回车，如果不报错误，直接执行下面的语句即可</p><p><strong>git push -u origin master</strong> </p><h2 id="git-ignore"><a href="#git-ignore" class="headerlink" title="git ignore"></a>git ignore</h2><p><a href="https://gitignore.io/">gitignore.io - Create Useful .gitignore Files ForYour Project</a></p><p><a href="https://blog.csdn.net/qq_34590097/article/details/56284935">如何在IntelliJ IDEA中使用.ignore插件忽略不必要提交的文件_idea,git,插件_qq_34590097的博客-CSDN博客</a></p><p>安装插件 .gitignore</p><p><img src="https://i.loli.net/2020/02/04/7t3G8amIFX1ZQxC.png" alt="7t3G8amIFX1ZQxC"></p><p><img src="https://i.loli.net/2020/02/04/dDcBSZC68KaT5oV.png" alt="dDcBSZC68KaT5oV"></p><p>自动生成后，使用 vim .gitignore 添加(因为安装插件后，gitignore 只读)</p><p>.idea/<br>target/</p><p>注意以下几个的区别</p><p>.idea/  所有目录下</p><p>./.idea/ 当前目录</p><h2 id="怎样删除github上的仓库-简书"><a href="#怎样删除github上的仓库-简书" class="headerlink" title="怎样删除github上的仓库 - 简书"></a><a href="https://www.jianshu.com/p/a2cf6ce1dfbc">怎样删除github上的仓库 - 简书</a></h2><p>点击进入你要删除的仓库</p><p>找到Settings按钮，点击</p><p>拉到最下面找到Delete this repository按钮</p><h2 id="github-新仓库指南"><a href="#github-新仓库指南" class="headerlink" title="github 新仓库指南"></a>github 新仓库指南</h2><h3 id="Quick-setup-—-if-you’ve-done-this-kind-of-thing-before"><a href="#Quick-setup-—-if-you’ve-done-this-kind-of-thing-before" class="headerlink" title="Quick setup — if you’ve done this kind of thing before"></a><strong>Quick setup</strong> — if you’ve done this kind of thing before</h3><p><a href="x-github-client://openRepo/https://github.com/zronghui/hexo"> Set up in Desktop</a></p><p><strong>or</strong></p><p>HTTPSSSH</p><p>Get started by <a href="https://github.com/zronghui/hexo/new/master">creating a new file</a> or <a href="https://github.com/zronghui/hexo/upload">uploading an existing file</a>. We recommend every repository include a <a href="https://github.com/zronghui/hexo/new/master?readme=1">README</a>, <a href="https://github.com/zronghui/hexo/new/master?filename=LICENSE.md">LICENSE</a>, and <a href="https://github.com/zronghui/hexo/new/master?filename=.gitignore">.gitignore</a>.</p><h3 id="…or-create-a-new-repository-on-the-command-line"><a href="#…or-create-a-new-repository-on-the-command-line" class="headerlink" title="…or create a new repository on the command line"></a>…or create a new repository on the command line</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;# hexo&quot; &gt;&gt; README.md</span><br><span class="line">git init</span><br><span class="line">git add README.md</span><br><span class="line">git commit -m &quot;first commit&quot;</span><br><span class="line">git remote add origin git@github.com:zronghui&#x2F;hexo.git</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><h3 id="…or-push-an-existing-repository-from-the-command-line"><a href="#…or-push-an-existing-repository-from-the-command-line" class="headerlink" title="…or push an existing repository from the command line"></a>…or push an existing repository from the command line</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin git@github.com:zronghui&#x2F;hexo.git</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><h3 id="…or-import-code-from-another-repository"><a href="#…or-import-code-from-another-repository" class="headerlink" title="…or import code from another repository"></a>…or import code from another repository</h3><p>You can initialize this repository with code from a Subversion, Mercurial, or TFS project.</p><p><a href="https://github.com/zronghui/hexo/import">Import code</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
    
    </summary>
    
    
      <category term="tricks" scheme="https://zronghui.github.io/categories/tricks/"/>
    
    
  </entry>
  
  <entry>
    <title>cli</title>
    <link href="https://zronghui.github.io/Mac/cli.html"/>
    <id>https://zronghui.github.io/Mac/cli.html</id>
    <published>2020-03-04T03:28:19.000Z</published>
    <updated>2020-03-05T02:36:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a><h2 id="jq"><a href="#jq" class="headerlink" title="jq"></a>jq</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">echo '&#123;"e":1,"m":"今天已经填报了","d":&#123;&#125;&#125;' | jq -r .e</span><br><span class="line"></span><br><span class="line">jq [options] filter [files]</span><br><span class="line">**options：**</span><br><span class="line">--version：输出jq的版本信息并退出</span><br><span class="line">--slurp/-s：读入整个输入流到一个数组。</span><br><span class="line">--raw-input/-R：不作为JSON解析，将每一行的文本作为字符串输出到屏幕。</span><br><span class="line">--null-input/ -n：不读取任何输入，过滤器运行使用null作为输入。一般用作从头构建JSON数据。</span><br><span class="line">--compact-output /-c：使输出紧凑，而不是把每一个JSON对象输出在一行。</span><br><span class="line">--colour-output / -C：打开颜色显示</span><br><span class="line">--monochrome-output / -M：关闭颜色显示</span><br><span class="line">--ascii-output /-a：指定输出格式为ASCII</span><br><span class="line">-raw-output /-r ：如果过滤的结果是一个字符串，那么直接写到标准输出（去掉字符串的引号）</span><br><span class="line"></span><br><span class="line">**filter：**</span><br><span class="line">.   : 默认输出</span><br><span class="line">.foo: 输出指定属性，foo代表属性。</span><br><span class="line">.[foo] ：输出指定数组元素。foo代表数组下标。</span><br><span class="line">.[]：输出指定数组中全部元素</span><br><span class="line">， ：指定多个属性作为过滤条件时，用逗号分隔</span><br><span class="line">| ： 将指定的数组元素中的某个属性作为过滤条件</span><br><span class="line"></span><br><span class="line">**files：**</span><br><span class="line">    JOSN格式文件。</span><br></pre></td></tr></table></figure><p>-r ：如果过滤的结果是一个字符串，那么直接写到标准输出（去掉字符串的引号）</p><h2 id="curl"><a href="#curl" class="headerlink" title="curl"></a>curl</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">-o 指定下载文件名</span><br><span class="line">-O 默认下载文件名</span><br><span class="line">-s 不输出没用的统计信息</span><br><span class="line">-x 192.168.100.198:8888 代理</span><br><span class="line">-A/--user-agent &lt;string&gt;</span><br><span class="line">-e/--referer    来源网址</span><br><span class="line"><span class="comment"># 循环下载</span></span><br><span class="line">curl -O http://www.51cto.com/justin[1-5].png</span><br><span class="line"><span class="comment"># 分块下载  -r 0-100</span></span><br><span class="line">-r/--range &lt;range&gt;</span><br><span class="line"><span class="comment"># 下载进度条  -s 不会显示下载进度信息</span></span><br><span class="line">-<span class="comment">#/--progress-bar</span></span><br><span class="line"><span class="comment"># 断点续传</span></span><br><span class="line">-C/--<span class="built_in">continue</span>-at &lt;offset&gt;</span><br><span class="line"><span class="comment"># 上传文件</span></span><br><span class="line">-T/--upload-file &lt;file&gt;    上传文件</span><br><span class="line"><span class="comment"># 如 curl -T justin.png -u justin:peng ftp://www.baidu.com/img/</span></span><br><span class="line">-F 表单提交</span><br><span class="line"><span class="comment"># 如 curl -F prefile=@portrait.jpg https://example.com/upload.cgi</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
    
    </summary>
    
    
      <category term="Mac" scheme="https://zronghui.github.io/categories/Mac/"/>
    
    
  </entry>
  
  <entry>
    <title>mac 设置</title>
    <link href="https://zronghui.github.io/Mac/mac-%E8%AE%BE%E7%BD%AE.html"/>
    <id>https://zronghui.github.io/Mac/mac-%E8%AE%BE%E7%BD%AE.html</id>
    <published>2020-03-04T00:58:42.000Z</published>
    <updated>2020-03-05T02:36:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a><h2 id="让按键反应更快"><a href="#让按键反应更快" class="headerlink" title="让按键反应更快"></a>让按键反应更快</h2><p>设置之后你会发现移动光标时，反应速度大幅提升。<br>“系统偏好设置 –&gt; 键盘”，将“按键重复”和“重复前延迟”都拖到最右。</p><img src="https://i.loli.net/2020/03/04/oVzfNh8sryEeYdx.png" alt="oVzfNh8sryEeYdx" style="zoom:33%;" />]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
    
    </summary>
    
    
      <category term="Mac" scheme="https://zronghui.github.io/categories/Mac/"/>
    
    
  </entry>
  
</feed>
