<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>zronghui的博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://zronghui.github.io/"/>
  <updated>2020-04-16T14:46:26.000Z</updated>
  <id>https://zronghui.github.io/</id>
  
  <author>
    <name>zronghui</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>leetcode 72. Edit Distance</title>
    <link href="https://zronghui.github.io/leetcode/leetcode-72-Edit-Distance.html"/>
    <id>https://zronghui.github.io/leetcode/leetcode-72-Edit-Distance.html</id>
    <published>2020-04-16T14:38:56.000Z</published>
    <updated>2020-04-16T14:46:26.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problems/edit-distance/">leetcode</a><br><a href="https://www.jiuzhang.com/solution/edit-distance/">九章</a></p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>Given two words <em>word1</em> and <em>word2</em> , find the minimum number of operations<br>required to convert <em>word1</em> to <em>word2</em>.</p><p>You have the following 3 operations permitted on a word:</p><ol><li>Insert a character</li><li>Delete a character</li><li>Replace a character</li></ol><p><strong>Example 1:</strong></p><pre><code>Input: word1 = &quot;horse&quot;, word2 = &quot;ros&quot;Output: 3Explanation: horse -&gt; rorse (replace &apos;h&apos; with &apos;r&apos;)rorse -&gt; rose (remove &apos;r&apos;)rose -&gt; ros (remove &apos;e&apos;)</code></pre><p><strong>Example 2:</strong></p><pre><code>Input: word1 = &quot;intention&quot;, word2 = &quot;execution&quot;Output: 5Explanation: intention -&gt; inention (remove &apos;t&apos;)inention -&gt; enention (replace &apos;i&apos; with &apos;e&apos;)enention -&gt; exention (replace &apos;n&apos; with &apos;x&apos;)exention -&gt; exection (replace &apos;n&apos; with &apos;c&apos;)exection -&gt; execution (insert &apos;u&apos;)</code></pre><p><strong>Tags:</strong> String, Dynamic Programming</p><p><strong>Difficulty:</strong> Hard</p><h2 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h2><p><a id="more"></a></p><p><a href="https://leetcode-cn.com/problems/edit-distance/solution/xiong-mao-shua-ti-python3-dong-tai-gui-hua-yi-dong/">(2) 【🐼熊猫刷题Python3】用视频讲DP, 一听就懂 - 编辑距离 - 力扣（LeetCode）</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">minDistance</span><span class="params">(self, w1: str, w2: str)</span> -&gt; int:</span></span><br><span class="line">        n, m = len(w1), len(w2)</span><br><span class="line">        <span class="keyword">if</span>  min(n, m)==<span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> max(n, m)</span><br><span class="line">        dp = [[<span class="number">0</span> <span class="keyword">for</span> _ <span class="keyword">in</span> range(m+<span class="number">1</span>)]<span class="keyword">for</span> _ <span class="keyword">in</span> range(n+<span class="number">1</span>)]</span><br><span class="line">        <span class="comment"># 边界值</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n+<span class="number">1</span>):</span><br><span class="line">            dp[i][<span class="number">0</span>] = i</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(m+<span class="number">1</span>):</span><br><span class="line">            dp[<span class="number">0</span>][j] = j</span><br><span class="line">        <span class="comment"># 状态转移</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, n+<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">1</span>, m+<span class="number">1</span>):</span><br><span class="line">                <span class="keyword">if</span> w1[i<span class="number">-1</span>]==w2[j<span class="number">-1</span>]:</span><br><span class="line">                    dp[i][j] = dp[i<span class="number">-1</span>][j<span class="number">-1</span>]</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    dp[i][j] = min(dp[i<span class="number">-1</span>][j<span class="number">-1</span>], dp[i<span class="number">-1</span>][j], dp[i][j<span class="number">-1</span>])+<span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> dp[<span class="number">-1</span>][<span class="number">-1</span>]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/edit-distance/&quot;&gt;leetcode&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.jiuzhang.com/solution/edit-distance/&quot;&gt;九章&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;Given two words &lt;em&gt;word1&lt;/em&gt; and &lt;em&gt;word2&lt;/em&gt; , find the minimum number of operations&lt;br&gt;required to convert &lt;em&gt;word1&lt;/em&gt; to &lt;em&gt;word2&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;You have the following 3 operations permitted on a word:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Insert a character&lt;/li&gt;
&lt;li&gt;Delete a character&lt;/li&gt;
&lt;li&gt;Replace a character&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Example 1:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Input: word1 = &amp;quot;horse&amp;quot;, word2 = &amp;quot;ros&amp;quot;
Output: 3
Explanation: 
horse -&amp;gt; rorse (replace &amp;apos;h&amp;apos; with &amp;apos;r&amp;apos;)
rorse -&amp;gt; rose (remove &amp;apos;r&amp;apos;)
rose -&amp;gt; ros (remove &amp;apos;e&amp;apos;)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Example 2:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Input: word1 = &amp;quot;intention&amp;quot;, word2 = &amp;quot;execution&amp;quot;
Output: 5
Explanation: 
intention -&amp;gt; inention (remove &amp;apos;t&amp;apos;)
inention -&amp;gt; enention (replace &amp;apos;i&amp;apos; with &amp;apos;e&amp;apos;)
enention -&amp;gt; exention (replace &amp;apos;n&amp;apos; with &amp;apos;x&amp;apos;)
exention -&amp;gt; exection (replace &amp;apos;n&amp;apos; with &amp;apos;c&amp;apos;)
exection -&amp;gt; execution (insert &amp;apos;u&amp;apos;)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Tags:&lt;/strong&gt; String, Dynamic Programming&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Difficulty:&lt;/strong&gt; Hard&lt;/p&gt;
&lt;h2 id=&quot;答案&quot;&gt;&lt;a href=&quot;#答案&quot; class=&quot;headerlink&quot; title=&quot;答案&quot;&gt;&lt;/a&gt;答案&lt;/h2&gt;&lt;p&gt;
    
    </summary>
    
    
      <category term="leetcode" scheme="https://zronghui.github.io/categories/leetcode/"/>
    
    
      <category term="Dynamic Programming" scheme="https://zronghui.github.io/tags/Dynamic-Programming/"/>
    
      <category term="String" scheme="https://zronghui.github.io/tags/String/"/>
    
  </entry>
  
  <entry>
    <title>leetcode 678. Valid Parenthesis String</title>
    <link href="https://zronghui.github.io/leetcode/leetcode-678-Valid-Parenthesis-String.html"/>
    <id>https://zronghui.github.io/leetcode/leetcode-678-Valid-Parenthesis-String.html</id>
    <published>2020-04-16T11:17:33.000Z</published>
    <updated>2020-04-16T14:46:26.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problems/valid-parenthesis-string/">leetcode</a><br><a href="https://www.jiuzhang.com/solution/valid-parenthesis-string/">九章</a></p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>Given a string containing only three types of characters: ‘(‘, ‘)’ and ‘*’,<br>write a function to check whether this string is valid. We define the validity<br>of a string by these rules:</p><ol><li>Any left parenthesis <code>&#39;(&#39;</code> must have a corresponding right parenthesis <code>&#39;)&#39;</code>.</li><li>Any right parenthesis <code>&#39;)&#39;</code> must have a corresponding left parenthesis <code>&#39;(&#39;</code>.</li><li>Left parenthesis <code>&#39;(&#39;</code> must go before the corresponding right parenthesis <code>&#39;)&#39;</code>.</li><li><code>&#39;*&#39;</code> could be treated as a single right parenthesis <code>&#39;)&#39;</code> or a single left parenthesis <code>&#39;(&#39;</code> or an empty string.</li><li>An empty string is also valid.</li></ol><p><strong>Example 1:</strong>  </p><pre><code>Input: &quot;()&quot;Output: True</code></pre><p><strong>Example 2:</strong>  </p><pre><code>Input: &quot;(*)&quot;Output: True</code></pre><p><strong>Example 3:</strong>  </p><pre><code>Input: &quot;(*))&quot;Output: True</code></pre><p><strong>Note:</strong>  </p><ol><li>The string size will be in the range [1, 100].</li></ol><p><strong>Tags:</strong> String</p><p><strong>Difficulty:</strong> Medium</p><h2 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h2><p><a id="more"></a></p><p><a href="https://leetcode-cn.com/problems/valid-parenthesis-string/solution/you-xiao-de-gua-hao-zi-fu-chuan-by-leetcode/">有效的括号字符串 - 有效的括号字符串 - 力扣（LeetCode）</a></p><img src="https://i.loli.net/2020/04/16/cftrJKkDhgmVRal.png" alt="cftrJKkDhgmVRal" style="zoom:50%;" /><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">class Solution:</span><br><span class="line">    <span class="function">def <span class="title">checkValidString</span><span class="params">(self, s: str)</span> -&gt; bool:</span></span><br><span class="line"><span class="function">        lo </span>= hi = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i in s:</span><br><span class="line">            <span class="keyword">if</span> i==<span class="string">'('</span>:</span><br><span class="line">                lo += <span class="number">1</span></span><br><span class="line">                hi += <span class="number">1</span></span><br><span class="line">            elif i==<span class="string">')'</span>:</span><br><span class="line">                lo = max(<span class="number">0</span>, lo-<span class="number">1</span>)</span><br><span class="line">                hi -= <span class="number">1</span></span><br><span class="line">            elif i==<span class="string">'*'</span>:</span><br><span class="line">                lo = max(<span class="number">0</span>, lo-<span class="number">1</span>)</span><br><span class="line">                hi += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> hi&lt;<span class="number">0</span>:</span><br><span class="line">                <span class="keyword">return</span> False</span><br><span class="line">        print(lo, hi)</span><br><span class="line">        <span class="keyword">return</span> lo==<span class="number">0</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/valid-parenthesis-string/&quot;&gt;leetcode&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.jiuzhang.com/solution/valid-parenthesis-string/&quot;&gt;九章&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;Given a string containing only three types of characters: ‘(‘, ‘)’ and ‘*’,&lt;br&gt;write a function to check whether this string is valid. We define the validity&lt;br&gt;of a string by these rules:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Any left parenthesis &lt;code&gt;&amp;#39;(&amp;#39;&lt;/code&gt; must have a corresponding right parenthesis &lt;code&gt;&amp;#39;)&amp;#39;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Any right parenthesis &lt;code&gt;&amp;#39;)&amp;#39;&lt;/code&gt; must have a corresponding left parenthesis &lt;code&gt;&amp;#39;(&amp;#39;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Left parenthesis &lt;code&gt;&amp;#39;(&amp;#39;&lt;/code&gt; must go before the corresponding right parenthesis &lt;code&gt;&amp;#39;)&amp;#39;&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;#39;*&amp;#39;&lt;/code&gt; could be treated as a single right parenthesis &lt;code&gt;&amp;#39;)&amp;#39;&lt;/code&gt; or a single left parenthesis &lt;code&gt;&amp;#39;(&amp;#39;&lt;/code&gt; or an empty string.&lt;/li&gt;
&lt;li&gt;An empty string is also valid.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Example 1:&lt;/strong&gt;  &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Input: &amp;quot;()&amp;quot;
Output: True&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Example 2:&lt;/strong&gt;  &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Input: &amp;quot;(*)&amp;quot;
Output: True&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Example 3:&lt;/strong&gt;  &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Input: &amp;quot;(*))&amp;quot;
Output: True&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The string size will be in the range [1, 100].&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Tags:&lt;/strong&gt; String&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Difficulty:&lt;/strong&gt; Medium&lt;/p&gt;
&lt;h2 id=&quot;答案&quot;&gt;&lt;a href=&quot;#答案&quot; class=&quot;headerlink&quot; title=&quot;答案&quot;&gt;&lt;/a&gt;答案&lt;/h2&gt;&lt;p&gt;
    
    </summary>
    
    
      <category term="leetcode" scheme="https://zronghui.github.io/categories/leetcode/"/>
    
    
      <category term="String" scheme="https://zronghui.github.io/tags/String/"/>
    
  </entry>
  
  <entry>
    <title>leetcode 238. Product of Array Except Self</title>
    <link href="https://zronghui.github.io/leetcode/leetcode-238-Product-of-Array-Except-Self%20(copy).html"/>
    <id>https://zronghui.github.io/leetcode/leetcode-238-Product-of-Array-Except-Self%20(copy).html</id>
    <published>2020-04-16T05:14:28.000Z</published>
    <updated>2020-04-16T14:46:26.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problems/product-of-array-except-self/">leetcode</a><br><a href="https://www.jiuzhang.com/solution/product-of-array-except-self/">九章</a></p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>Given an array <code>nums</code> of <em>n</em> integers where <em>n</em> &gt; 1,  return an array <code>output</code><br>such that <code>output[i]</code> is equal to the product of all the elements of <code>nums</code><br>except <code>nums[i]</code>.</p><p><strong>Example:</strong></p><pre><code>Input:  [1,2,3,4]Output: [24,12,8,6]</code></pre><p><strong>Note:</strong> Please solve it <strong>without division</strong> and in O( <em>n</em> ).</p><p><strong>Follow up:</strong><br>Could you solve it with constant space complexity? (The output array <strong>does<br>not</strong> count as extra space for the purpose of space complexity analysis.)</p><p><strong>Tags:</strong> Array</p><p><strong>Difficulty:</strong> Medium</p><h2 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h2><p><a id="more"></a></p><p><a href="https://leetcode-cn.com/problems/product-of-array-except-self/solution/chu-zi-shen-yi-wai-shu-zu-de-cheng-ji-by-leetcode/">除自身以外数组的乘积 - 除自身以外数组的乘积 - 力扣（LeetCode）</a></p><p>方法一：左右乘积列表<br>我们不必将所有数字的乘积除以给定索引处的数字得到相应的答案，而是可以利用索引处左侧的所有数字乘积和右侧所有数字的乘积相乘得到答案。</p><p>对于给定索引 ii，我们将使用它左边所有数字的乘积乘以右边所有数字的乘积。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">productExceptSelf</span><span class="params">(self, nums: List[int])</span> -&gt; List[int]:</span></span><br><span class="line">        n = len(nums)</span><br><span class="line">        productBefore = [<span class="number">1</span> <span class="keyword">for</span> i <span class="keyword">in</span> nums]</span><br><span class="line">        productAfter = [<span class="number">1</span> <span class="keyword">for</span> i <span class="keyword">in</span> nums]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, n):</span><br><span class="line">            productBefore[i] = productBefore[i<span class="number">-1</span>]*nums[i<span class="number">-1</span>]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n<span class="number">-2</span>, <span class="number">-1</span>, <span class="number">-1</span>):</span><br><span class="line">            productAfter[i] = productAfter[i+<span class="number">1</span>]*nums[i+<span class="number">1</span>]</span><br><span class="line">        print(productBefore, productAfter)</span><br><span class="line">        <span class="keyword">return</span> list(i*j <span class="keyword">for</span> i, j <span class="keyword">in</span> zip(productBefore, productAfter))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">productExceptSelf</span><span class="params">(self, nums: List[int])</span> -&gt; List[int]:</span></span><br><span class="line">        length = len(nums)</span><br><span class="line">        L, R, answer = [<span class="number">0</span>]*length, [<span class="number">0</span>]*length, [<span class="number">0</span>]*length</span><br><span class="line">        L[<span class="number">0</span>] = <span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, length):</span><br><span class="line">            L[i] = nums[i - <span class="number">1</span>] * L[i - <span class="number">1</span>]</span><br><span class="line">        R[length - <span class="number">1</span>] = <span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> reversed(range(length - <span class="number">1</span>)):</span><br><span class="line">            R[i] = nums[i + <span class="number">1</span>] * R[i + <span class="number">1</span>]</span><br></pre></td></tr></table></figure><p>方法二：空间复杂度 O(1) 的方法<br>尽管上面的方法已经能够很好的解决这个问题，但是不是常数的空间复杂度。</p><p><strong>由于输出数组不算在空间复杂度内，那么我们可以将 L 或 R 数组在用输出数组来计算，然后再动态构造另一个</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">productExceptSelf</span><span class="params">(self, nums: List[int])</span> -&gt; List[int]:</span></span><br><span class="line">        n = len(nums)</span><br><span class="line">        res = [<span class="number">1</span>]*n</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, n):</span><br><span class="line">            res[i] = res[i<span class="number">-1</span>]*nums[i<span class="number">-1</span>]</span><br><span class="line">        R = <span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> reversed(range(n<span class="number">-1</span>)):</span><br><span class="line">            R *= nums[i+<span class="number">1</span>]</span><br><span class="line">            res[i] *= R</span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/product-of-array-except-self/&quot;&gt;leetcode&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.jiuzhang.com/solution/product-of-array-except-self/&quot;&gt;九章&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;Given an array &lt;code&gt;nums&lt;/code&gt; of &lt;em&gt;n&lt;/em&gt; integers where &lt;em&gt;n&lt;/em&gt; &amp;gt; 1,  return an array &lt;code&gt;output&lt;/code&gt;&lt;br&gt;such that &lt;code&gt;output[i]&lt;/code&gt; is equal to the product of all the elements of &lt;code&gt;nums&lt;/code&gt;&lt;br&gt;except &lt;code&gt;nums[i]&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Input:  [1,2,3,4]
Output: [24,12,8,6]&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Please solve it &lt;strong&gt;without division&lt;/strong&gt; and in O( &lt;em&gt;n&lt;/em&gt; ).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Follow up:&lt;/strong&gt;&lt;br&gt;Could you solve it with constant space complexity? (The output array &lt;strong&gt;does&lt;br&gt;not&lt;/strong&gt; count as extra space for the purpose of space complexity analysis.)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tags:&lt;/strong&gt; Array&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Difficulty:&lt;/strong&gt; Medium&lt;/p&gt;
&lt;h2 id=&quot;答案&quot;&gt;&lt;a href=&quot;#答案&quot; class=&quot;headerlink&quot; title=&quot;答案&quot;&gt;&lt;/a&gt;答案&lt;/h2&gt;&lt;p&gt;
    
    </summary>
    
    
      <category term="leetcode" scheme="https://zronghui.github.io/categories/leetcode/"/>
    
    
      <category term="Array" scheme="https://zronghui.github.io/tags/Array/"/>
    
  </entry>
  
  <entry>
    <title>weekly-contest-180</title>
    <link href="https://zronghui.github.io/Leetcode%20weekly%20contest/weekly-contest-180.html"/>
    <id>https://zronghui.github.io/Leetcode%20weekly%20contest/weekly-contest-180.html</id>
    <published>2020-04-15T03:32:33.000Z</published>
    <updated>2020-04-16T01:56:07.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><ul><li><input checked="" disabled="" type="checkbox"> <a href="https://leetcode.com/contest/weekly-contest-180/problems/lucky-numbers-in-a-matrix">Lucky Numbers in a Matrix</a><strong>3</strong></li><li><input checked="" disabled="" type="checkbox"> <a href="https://leetcode.com/contest/weekly-contest-180/problems/design-a-stack-with-increment-operation">Design a Stack With Increment Operation</a><strong>4</strong></li><li><input disabled="" type="checkbox"> <a href="https://leetcode.com/contest/weekly-contest-180/problems/balance-a-binary-search-tree">Balance a Binary Search Tree</a><strong>4</strong></li><li><input disabled="" type="checkbox"> <a href="https://leetcode.com/contest/weekly-contest-180/problems/maximum-performance-of-a-team">Maximum Performance of a Team</a><strong>6</strong></li></ul><a id="more"></a><h2 id="1"><a href="#1" class="headerlink" title="1"></a>1</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">addTo</span><span class="params">(self, d, i, m)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> i <span class="keyword">in</span> d:</span><br><span class="line">            d[i].append(m)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            d[i] = [m]</span><br><span class="line">            </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">luckyNumbers</span> <span class="params">(self, matrix: List[List[int]])</span> -&gt; List[int]:</span></span><br><span class="line">        d = &#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> l <span class="keyword">in</span> matrix:</span><br><span class="line">            m = min(l)</span><br><span class="line">            <span class="keyword">for</span> i, v <span class="keyword">in</span> enumerate(l):</span><br><span class="line">                <span class="keyword">if</span> v==m:</span><br><span class="line">                    self.addTo(d, i, m)</span><br><span class="line">        result = []</span><br><span class="line">        <span class="keyword">for</span> k, v <span class="keyword">in</span> d.items():</span><br><span class="line">            m = max(i[k] <span class="keyword">for</span> i <span class="keyword">in</span> matrix)</span><br><span class="line">            result.extend(i <span class="keyword">for</span> i <span class="keyword">in</span> v <span class="keyword">if</span> i==m)</span><br><span class="line">        <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><h2 id="2"><a href="#2" class="headerlink" title="2"></a>2</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CustomStack</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, maxSize: int)</span>:</span></span><br><span class="line">        self.left = maxSize</span><br><span class="line">        self.l = []</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">push</span><span class="params">(self, x: int)</span> -&gt; <span class="keyword">None</span>:</span></span><br><span class="line">        <span class="keyword">if</span> self.left&gt;<span class="number">0</span>:</span><br><span class="line">            self.l.append(x)</span><br><span class="line">            self.left -= <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">pop</span><span class="params">(self)</span> -&gt; int:</span></span><br><span class="line">        <span class="keyword">if</span> self.l:</span><br><span class="line">            self.left += <span class="number">1</span></span><br><span class="line">            result = self.l[<span class="number">-1</span>]</span><br><span class="line">            <span class="keyword">del</span> self.l[<span class="number">-1</span>]</span><br><span class="line">            <span class="keyword">return</span> result</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">increment</span><span class="params">(self, k: int, val: int)</span> -&gt; <span class="keyword">None</span>:</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(min(k, len(self.l))):</span><br><span class="line">            self.l[i] +=  val</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Your CustomStack object will be instantiated and called as such:</span></span><br><span class="line"><span class="comment"># obj = CustomStack(maxSize)</span></span><br><span class="line"><span class="comment"># obj.push(x)</span></span><br><span class="line"><span class="comment"># param_2 = obj.pop()</span></span><br><span class="line"><span class="comment"># obj.increment(k,val)</span></span><br></pre></td></tr></table></figure><h2 id="3"><a href="#3" class="headerlink" title="3"></a>3</h2><p><a href="https://www.acwing.com/solution/LeetCode/content/10001/">LeetCode 1382. Balance a Binary Search Tree - AcWing</a></p><img src="https://i.loli.net/2020/04/15/OHumJwqtc6CyTNa.png" alt="OHumJwqtc6CyTNa" style="zoom:50%;" /><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getNums</span><span class="params">(self, root, l)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> root:</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        self.getNums(root.left, l)</span><br><span class="line">        l.append(root.val)</span><br><span class="line">        self.getNums(root.right, l)</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">build</span><span class="params">(self, l)</span>:</span></span><br><span class="line">        n = len(l)</span><br><span class="line">        <span class="keyword">if</span> n==<span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">        mid = int(n/<span class="number">2</span>)</span><br><span class="line">        root = TreeNode(l[mid])</span><br><span class="line">        root.left = self.build(l[:mid])</span><br><span class="line">        root.right = self.build(l[mid+<span class="number">1</span>:])</span><br><span class="line">        <span class="keyword">return</span> root</span><br><span class="line">        </span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">balanceBST</span><span class="params">(self, root: TreeNode)</span> -&gt; TreeNode:</span></span><br><span class="line">        l = []</span><br><span class="line">        self.getNums(root, l)</span><br><span class="line">        <span class="keyword">if</span> len(l)&lt;<span class="number">3</span>:</span><br><span class="line">            <span class="keyword">return</span> root</span><br><span class="line">        <span class="keyword">return</span> self.build(l)</span><br></pre></td></tr></table></figure><h2 id="4"><a href="#4" class="headerlink" title="4"></a>4</h2><p><a href="https://leetcode-cn.com/problems/maximum-performance-of-a-team/solution/pai-xu-dui-python-by-elmer/">排序+堆(Python) - 最大的团队表现值 - 力扣（LeetCode）</a></p><p>思路：</p><p>按efficiency进行降序排列，<br>遍历排序后的speed和efficiency，在遍历过程中进行以下操作：<br>(1)将speed放入最小堆中，<br>(2)保持堆的大小为k，<br>(3)记录堆中speed之和，<br>(4)寻找最大团队表现值。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> heapq <span class="keyword">import</span> heappush <span class="keyword">as</span> push</span><br><span class="line"><span class="keyword">from</span> heapq <span class="keyword">import</span> heappop <span class="keyword">as</span> pop</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.mod = <span class="number">10</span>**<span class="number">9</span>+<span class="number">7</span></span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">maxPerformance</span><span class="params">(self, n: int, speed: List[int], efficiency: List[int], k: int)</span> -&gt; int:</span></span><br><span class="line">        l = sorted(zip(speed, efficiency), key=<span class="keyword">lambda</span> i: -i[<span class="number">1</span>])</span><br><span class="line">        speed_sum = <span class="number">0</span></span><br><span class="line">        speedl = []</span><br><span class="line">        res = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> s, e <span class="keyword">in</span> l:</span><br><span class="line">            push(speedl, s)</span><br><span class="line">            speed_sum += s</span><br><span class="line">            <span class="keyword">if</span> len(speedl)&gt;k:</span><br><span class="line">                speed_sum -= pop(speedl)</span><br><span class="line">            res = max(res, speed_sum*e)</span><br><span class="line">        <span class="keyword">return</span> res%self.mod</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&quot;&quot; disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; &lt;a href=&quot;https://leetcode.com/contest/weekly-contest-180/problems/lucky-numbers-in-a-matrix&quot;&gt;Lucky Numbers in a Matrix&lt;/a&gt;&lt;strong&gt;3&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&quot;&quot; disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; &lt;a href=&quot;https://leetcode.com/contest/weekly-contest-180/problems/design-a-stack-with-increment-operation&quot;&gt;Design a Stack With Increment Operation&lt;/a&gt;&lt;strong&gt;4&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; &lt;a href=&quot;https://leetcode.com/contest/weekly-contest-180/problems/balance-a-binary-search-tree&quot;&gt;Balance a Binary Search Tree&lt;/a&gt;&lt;strong&gt;4&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; &lt;a href=&quot;https://leetcode.com/contest/weekly-contest-180/problems/maximum-performance-of-a-team&quot;&gt;Maximum Performance of a Team&lt;/a&gt;&lt;strong&gt;6&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Leetcode weekly contest" scheme="https://zronghui.github.io/categories/Leetcode-weekly-contest/"/>
    
    
  </entry>
  
  <entry>
    <title>信息系统实训-0415作业</title>
    <link href="https://zronghui.github.io/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%AE%AD/%E6%8F%90%E4%BA%A4%E4%BD%9C%E4%B8%9A/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%AE%AD-0415%E4%BD%9C%E4%B8%9A.html"/>
    <id>https://zronghui.github.io/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%AE%AD/%E6%8F%90%E4%BA%A4%E4%BD%9C%E4%B8%9A/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%AE%AD-0415%E4%BD%9C%E4%B8%9A.html</id>
    <published>2020-04-15T02:01:07.000Z</published>
    <updated>2020-04-16T01:56:07.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a><img src="https://i.loli.net/2020/04/15/JHFlfZjV6CtcXMR.png" alt="JHFlfZjV6CtcXMR" style="zoom:33%;" /><img src="https://i.loli.net/2020/04/15/EvcptA14NG6Yw5M.png" alt="EvcptA14NG6Yw5M" style="zoom:50%;" /><h2 id="插入数据代码"><a href="#插入数据代码" class="headerlink" title="插入数据代码"></a>插入数据代码</h2><img src="https://i.loli.net/2020/04/15/6l4dbpaKAR1BImz.png" alt="6l4dbpaKAR1BImz" style="zoom:50%;" /><h2 id="查询代码"><a href="#查询代码" class="headerlink" title="查询代码"></a>查询代码</h2><img src="https://i.loli.net/2020/04/15/ZTB4PLGXE3kFDHJ.png" alt="ZTB4PLGXE3kFDHJ" style="zoom:50%;" /><h2 id="搜索输出结果"><a href="#搜索输出结果" class="headerlink" title="搜索输出结果"></a>搜索输出结果</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line">python es.py                                        </span><br><span class="line">&#123;'_shards': &#123;'failed': 0, 'skipped': 0, 'successful': 5, 'total': 5&#125;,</span><br><span class="line"> 'hits': &#123;'hits': [&#123;'_id': 'dzytX3EBBdNqBssliOYU',</span><br><span class="line">                    '_index': 'books',</span><br><span class="line">                    '_score': 2.0,</span><br><span class="line">                    '_source': &#123;'book_name': '乔舒亚·克拉克《无器械健身》（女性版）epub+mobi+azw3',</span><br><span class="line">                                'book_url': 'https://www.shudan.vip/140592.html'&#125;,</span><br><span class="line">                    '_type': 'books',</span><br><span class="line">                    '_version': 1,</span><br><span class="line">                    'highlight': &#123;'book_name': ['乔舒亚·克拉克《无器械&lt;span '</span><br><span class="line">                                                'class="highlight"&gt;健身&lt;/span&gt;》（女性版）epub+&lt;span '</span><br><span class="line">                                                'class="highlight"&gt;mobi&lt;/span&gt;+azw3']&#125;&#125;,</span><br><span class="line">                   &#123;'_id': 'jDytX3EBBdNqBssleDAQ',</span><br><span class="line">                    '_index': 'books',</span><br><span class="line">                    '_score': 2.0,</span><br><span class="line">                    '_source': &#123;'book_name': '《无器械健身》 mobi格式下载',</span><br><span class="line">                                'book_url': 'https://pan.shudan.vip/5751.html'&#125;,</span><br><span class="line">                    '_type': 'books',</span><br><span class="line">                    '_version': 1,</span><br><span class="line">                    'highlight': &#123;'book_name': ['《无器械&lt;span '</span><br><span class="line">                                                'class="highlight"&gt;健身&lt;/span&gt;》 '</span><br><span class="line">                                                '&lt;span '</span><br><span class="line">                                                'class="highlight"&gt;mobi&lt;/span&gt;格式下载']&#125;&#125;,</span><br><span class="line">                   &#123;'_id': 'JDytX3EBBdNqBsslhtSD',</span><br><span class="line">                    '_index': 'books',</span><br><span class="line">                    '_score': 2.0,</span><br><span class="line">                    '_source': &#123;'book_name': '《硬派健身·减肥篇》知乎盐系列/知乎斌卡自选集/epub+mobi+azw3',</span><br><span class="line">                                'book_url': 'https://www.shudan.vip/135932.html'&#125;,</span><br><span class="line">                    '_type': 'books',</span><br><span class="line">                    '_version': 1,</span><br><span class="line">                    'highlight': &#123;'book_name': ['《硬派&lt;span '</span><br><span class="line">                                                'class="highlight"&gt;健身&lt;/span&gt;·减肥篇》知乎盐系列/知乎斌卡自选集/epub+&lt;span '</span><br><span class="line">                                                'class="highlight"&gt;mobi&lt;/span&gt;+azw3']&#125;&#125;,</span><br><span class="line">                   &#123;'_id': '2DytX3EBBdNqBsslhtjt',</span><br><span class="line">                    '_index': 'books',</span><br><span class="line">                    '_score': 2.0,</span><br><span class="line">                    '_source': &#123;'book_name': '《再见，健身房》高宇/徒手与器械体能训练天然强壮/epub+mobi+azw3',</span><br><span class="line">                                'book_url': 'https://www.shudan.vip/137126.html'&#125;,</span><br><span class="line">                    '_type': 'books',</span><br><span class="line">                    '_version': 1,</span><br><span class="line">                    'highlight': &#123;'book_name': ['《再见，&lt;span '</span><br><span class="line">                                                'class="highlight"&gt;健身&lt;/span&gt;房》高宇/徒手与器械体能训练天然强壮/epub+&lt;span '</span><br><span class="line">                                                'class="highlight"&gt;mobi&lt;/span&gt;+azw3']&#125;&#125;,</span><br><span class="line">                   &#123;'_id': 'tTytX3EBBdNqBsslh956',</span><br><span class="line">                    '_index': 'books',</span><br><span class="line">                    '_score': 2.0,</span><br><span class="line">                    '_source': &#123;'book_name': '《健康脑》丹尼尔·亚蒙/常减肥健身失败原因/epub+mobi+azw3',</span><br><span class="line">                                'book_url': 'https://www.shudan.vip/138629.html'&#125;,</span><br><span class="line">                    '_type': 'books',</span><br><span class="line">                    '_version': 1,</span><br><span class="line">                    'highlight': &#123;'book_name': ['《健康脑》丹尼尔·亚蒙/常减肥&lt;span '</span><br><span class="line">                                                'class="highlight"&gt;健身&lt;/span&gt;失败原因/epub+&lt;span '</span><br><span class="line">                                                'class="highlight"&gt;mobi&lt;/span&gt;+azw3']&#125;&#125;,</span><br><span class="line">                   &#123;'_id': 'yzytX3EBBdNqBssliOcU',</span><br><span class="line">                    '_index': 'books',</span><br><span class="line">                    '_score': 2.0,</span><br><span class="line">                    '_source': &#123;'book_name': '蒂莫西·费里斯《每周健身4小时》实验成果epub+mobi+azw3',</span><br><span class="line">                                'book_url': 'https://www.shudan.vip/140928.html'&#125;,</span><br><span class="line">                    '_type': 'books',</span><br><span class="line">                    '_version': 1,</span><br><span class="line">                    'highlight': &#123;'book_name': ['蒂莫西·费里斯《每周&lt;span '</span><br><span class="line">                                                'class="highlight"&gt;健身&lt;/span&gt;4小时》实验成果epub+&lt;span '</span><br><span class="line">                                                'class="highlight"&gt;mobi&lt;/span&gt;+azw3']&#125;&#125;,</span><br><span class="line">                   &#123;'_id': 'hz2tX3EBBdNqBssljjjp',</span><br><span class="line">                    '_index': 'books',</span><br><span class="line">                    '_score': 1.0,</span><br><span class="line">                    '_source': &#123;'book_name': '《整个巴黎属于我》布鲁姆/细看野生天才的黄金时代/epub+mobi+azw3',</span><br><span class="line">                                'book_url': 'https://www.shudan.vip/161569.html'&#125;,</span><br><span class="line">                    '_type': 'books',</span><br><span class="line">                    '_version': 1,</span><br><span class="line">                    'highlight': &#123;'book_name': ['《整个巴黎属于我》布鲁姆/细看野生天才的黄金时代/epub+&lt;span '</span><br><span class="line">                                                'class="highlight"&gt;mobi&lt;/span&gt;+azw3']&#125;&#125;,</span><br><span class="line">                   &#123;'_id': 'jD2tX3EBBdNqBssljjjp',</span><br><span class="line">                    '_index': 'books',</span><br><span class="line">                    '_score': 1.0,</span><br><span class="line">                    '_source': &#123;'book_name': '《自指引擎》圆城塔/每个故事的缝隙都隐藏着无数故事/epub+mobi+azw3',</span><br><span class="line">                                'book_url': 'https://www.shudan.vip/161574.html'&#125;,</span><br><span class="line">                    '_type': 'books',</span><br><span class="line">                    '_version': 1,</span><br><span class="line">                    'highlight': &#123;'book_name': ['《自指引擎》圆城塔/每个故事的缝隙都隐藏着无数故事/epub+&lt;span '</span><br><span class="line">                                                'class="highlight"&gt;mobi&lt;/span&gt;+azw3']&#125;&#125;,</span><br><span class="line">                   &#123;'_id': 'kj2tX3EBBdNqBssljjjp',</span><br><span class="line">                    '_index': 'books',</span><br><span class="line">                    '_score': 1.0,</span><br><span class="line">                    '_source': &#123;'book_name': '《黑暗物质：精灵守护神》菲利普·普尔曼/奇幻经典/epub+mobi+azw3',</span><br><span class="line">                                'book_url': 'https://www.shudan.vip/161580.html'&#125;,</span><br><span class="line">                    '_type': 'books',</span><br><span class="line">                    '_version': 1,</span><br><span class="line">                    'highlight': &#123;'book_name': ['《黑暗物质：精灵守护神》菲利普·普尔曼/奇幻经典/epub+&lt;span '</span><br><span class="line">                                                'class="highlight"&gt;mobi&lt;/span&gt;+azw3']&#125;&#125;,</span><br><span class="line">                   &#123;'_id': 'lD2tX3EBBdNqBssljjjp',</span><br><span class="line">                    '_index': 'books',</span><br><span class="line">                    '_score': 1.0,</span><br><span class="line">                    '_source': &#123;'book_name': '《营销革命3.0》[轻携版]菲利普·科特勒/深度的关联/epub+mobi+azw3',</span><br><span class="line">                                'book_url': 'https://www.shudan.vip/161582.html'&#125;,</span><br><span class="line">                    '_type': 'books',</span><br><span class="line">                    '_version': 1,</span><br><span class="line">                    'highlight': &#123;'book_name': ['《营销革命3.0》[轻携版]菲利普·科特勒/深度的关联/epub+&lt;span '</span><br><span class="line">                                                'class="highlight"&gt;mobi&lt;/span&gt;+azw3']&#125;&#125;],</span><br><span class="line">          'max_score': 2.0,</span><br><span class="line">          'total': 18902&#125;,</span><br><span class="line"> 'timed_out': False,</span><br><span class="line"> 'took': 127&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
    
    </summary>
    
    
      <category term="研究生课程" scheme="https://zronghui.github.io/categories/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/"/>
    
      <category term="信息系统实训" scheme="https://zronghui.github.io/categories/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%AE%AD/"/>
    
      <category term="提交作业" scheme="https://zronghui.github.io/categories/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%AE%AD/%E6%8F%90%E4%BA%A4%E4%BD%9C%E4%B8%9A/"/>
    
    
  </entry>
  
  <entry>
    <title>leetcode 155. Min Stack</title>
    <link href="https://zronghui.github.io/leetcode-155-Min-Stack.html"/>
    <id>https://zronghui.github.io/leetcode-155-Min-Stack.html</id>
    <published>2020-04-15T01:58:44.000Z</published>
    <updated>2020-04-15T01:59:45.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problems/min-stack/">leetcode</a><br><a href="https://www.jiuzhang.com/solution/min-stack/">九章</a></p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>Design a stack that supports push, pop, top, and retrieving the minimum<br>element in constant time.</p><ul><li>push(x) – Push element x onto stack.</li><li>pop() – Removes the element on top of the stack.</li><li>top() – Get the top element.</li><li>getMin() – Retrieve the minimum element in the stack.</li></ul><p><strong>Example:</strong></p><pre><code>MinStack minStack = new MinStack();minStack.push(-2);minStack.push(0);minStack.push(-3);minStack.getMin();   --&gt; Returns -3.minStack.pop();minStack.top();      --&gt; Returns 0.minStack.getMin();   --&gt; Returns -2.</code></pre><p><strong>Tags:</strong> Stack, Design</p><p><strong>Difficulty:</strong> Easy</p><h2 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h2><p><a id="more"></a></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">class MinStack:</span><br><span class="line"></span><br><span class="line">    <span class="function">def <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line"><span class="function">        """</span></span><br><span class="line"><span class="function">        initialize your data structure here.</span></span><br><span class="line"><span class="function">        """</span></span><br><span class="line"><span class="function">        self.m </span>= sys.maxsize</span><br><span class="line">        self.minl = []</span><br><span class="line">        self.l = []</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">    <span class="function">def <span class="title">push</span><span class="params">(self, x: <span class="keyword">int</span>)</span> -&gt; None:</span></span><br><span class="line"><span class="function">        self.l.<span class="title">append</span><span class="params">(x)</span></span></span><br><span class="line"><span class="function">        self.m </span>= min(x, self.m)</span><br><span class="line">        self.minl.append(self.m)</span><br><span class="line"></span><br><span class="line">    <span class="function">def <span class="title">pop</span><span class="params">(self)</span> -&gt; None:</span></span><br><span class="line"><span class="function">        self.l.<span class="title">pop</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        self.minl.<span class="title">pop</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        <span class="keyword">if</span> self.minl:</span></span><br><span class="line"><span class="function">            self.m </span>= self.minl[-<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            self.m = sys.maxsize</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">    <span class="function">def <span class="title">top</span><span class="params">(self)</span> -&gt; <span class="keyword">int</span>:</span></span><br><span class="line"><span class="function">        return self.l[-1]</span></span><br><span class="line"><span class="function">        </span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">    def <span class="title">getMin</span><span class="params">(self)</span> -&gt; <span class="keyword">int</span>:</span></span><br><span class="line"><span class="function">        return self.minl[-1]</span></span><br><span class="line"><span class="function">        </span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"># Your MinStack object will be instantiated and called as such:</span></span><br><span class="line"><span class="function"># obj </span>= MinStack()</span><br><span class="line"># obj.push(x)</span><br><span class="line"># obj.pop()</span><br><span class="line"># param_3 = obj.top()</span><br><span class="line"># param_4 = obj.getMin()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/min-stack/&quot;&gt;leetcode&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.jiuzhang.com/solution/min-stack/&quot;&gt;九章&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;Design a stack that supports push, pop, top, and retrieving the minimum&lt;br&gt;element in constant time.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;push(x) – Push element x onto stack.&lt;/li&gt;
&lt;li&gt;pop() – Removes the element on top of the stack.&lt;/li&gt;
&lt;li&gt;top() – Get the top element.&lt;/li&gt;
&lt;li&gt;getMin() – Retrieve the minimum element in the stack.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;MinStack minStack = new MinStack();
minStack.push(-2);
minStack.push(0);
minStack.push(-3);
minStack.getMin();   --&amp;gt; Returns -3.
minStack.pop();
minStack.top();      --&amp;gt; Returns 0.
minStack.getMin();   --&amp;gt; Returns -2.&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Tags:&lt;/strong&gt; Stack, Design&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Difficulty:&lt;/strong&gt; Easy&lt;/p&gt;
&lt;h2 id=&quot;答案&quot;&gt;&lt;a href=&quot;#答案&quot; class=&quot;headerlink&quot; title=&quot;答案&quot;&gt;&lt;/a&gt;答案&lt;/h2&gt;&lt;p&gt;
    
    </summary>
    
    
    
      <category term="Stack" scheme="https://zronghui.github.io/tags/Stack/"/>
    
      <category term="Design" scheme="https://zronghui.github.io/tags/Design/"/>
    
  </entry>
  
  <entry>
    <title>leetcode 543. Diameter of Binary Tree</title>
    <link href="https://zronghui.github.io/leetcode/leetcode-543-Diameter-of-Binary-Tree.html"/>
    <id>https://zronghui.github.io/leetcode/leetcode-543-Diameter-of-Binary-Tree.html</id>
    <published>2020-04-14T05:30:49.000Z</published>
    <updated>2020-04-14T05:36:04.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problems/diameter-of-binary-tree/">leetcode</a><br><a href="https://www.jiuzhang.com/solution/diameter-of-binary-tree/">九章</a></p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>Given a binary tree, you need to compute the length of the diameter of the<br>tree. The diameter of a binary tree is the length of the <strong>longest</strong> path<br>between any two nodes in a tree. This path may or may not pass through the<br>root.</p><p><strong>Example:</strong><br>Given a binary tree  </p><pre><code>    1   / \  2   3 / \     4   5    </code></pre><p>Return <strong>3</strong> , which is the length of the path [4,2,1,3] or [5,2,1,3].</p><p><strong>Note:</strong> The length of path between two nodes is represented by the number of<br>edges between them.</p><p><strong>Tags:</strong> Tree</p><p><strong>Difficulty:</strong> Easy</p><h2 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h2><p>思路：</p><p>任意一条路径均可以被看作由某个节点为起点，从其左儿子和右儿子向下遍历的路径拼接得到。</p><p>心得：</p><p>在递归函数的开头判断是否为 None，而不用分别判断 左 右和 root</p><p><a id="more"></a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"># class TreeNode:</span></span><br><span class="line"><span class="comment">#     def __init__(self, x):</span></span><br><span class="line"><span class="comment">#         self.val = x</span></span><br><span class="line"><span class="comment">#         self.left = None</span></span><br><span class="line"><span class="comment">#         self.right = None</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    dia = <span class="number">0</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">depth</span><span class="params">(self, root)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> root:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        left = self.depth(root.left)</span><br><span class="line">        right = self.depth(root.right)</span><br><span class="line">        </span><br><span class="line">        depth = max(left, right)+<span class="number">1</span></span><br><span class="line">        self.dia = max(self.dia, left+right)</span><br><span class="line">        <span class="keyword">return</span> depth</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">diameterOfBinaryTree</span><span class="params">(self, root: TreeNode)</span> -&gt; int:</span></span><br><span class="line">        self.depth(root)</span><br><span class="line">        <span class="keyword">return</span> self.dia</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/diameter-of-binary-tree/&quot;&gt;leetcode&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.jiuzhang.com/solution/diameter-of-binary-tree/&quot;&gt;九章&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;Given a binary tree, you need to compute the length of the diameter of the&lt;br&gt;tree. The diameter of a binary tree is the length of the &lt;strong&gt;longest&lt;/strong&gt; path&lt;br&gt;between any two nodes in a tree. This path may or may not pass through the&lt;br&gt;root.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;br&gt;Given a binary tree  &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    1
   / \
  2   3
 / \     
4   5    &lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Return &lt;strong&gt;3&lt;/strong&gt; , which is the length of the path [4,2,1,3] or [5,2,1,3].&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The length of path between two nodes is represented by the number of&lt;br&gt;edges between them.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tags:&lt;/strong&gt; Tree&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Difficulty:&lt;/strong&gt; Easy&lt;/p&gt;
&lt;h2 id=&quot;答案&quot;&gt;&lt;a href=&quot;#答案&quot; class=&quot;headerlink&quot; title=&quot;答案&quot;&gt;&lt;/a&gt;答案&lt;/h2&gt;&lt;p&gt;思路：&lt;/p&gt;
&lt;p&gt;任意一条路径均可以被看作由某个节点为起点，从其左儿子和右儿子向下遍历的路径拼接得到。&lt;/p&gt;
&lt;p&gt;心得：&lt;/p&gt;
&lt;p&gt;在递归函数的开头判断是否为 None，而不用分别判断 左 右和 root&lt;/p&gt;
&lt;p&gt;
    
    </summary>
    
    
      <category term="leetcode" scheme="https://zronghui.github.io/categories/leetcode/"/>
    
    
      <category term="Tree" scheme="https://zronghui.github.io/tags/Tree/"/>
    
  </entry>
  
  <entry>
    <title>leetcode 525. Contiguous Array</title>
    <link href="https://zronghui.github.io/leetcode/leetcode-525-Contiguous-Array.html"/>
    <id>https://zronghui.github.io/leetcode/leetcode-525-Contiguous-Array.html</id>
    <published>2020-04-13T09:34:46.000Z</published>
    <updated>2020-04-14T05:36:04.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://leetcode.com/problems/contiguous-array/">leetcode</a><br><a href="https://www.jiuzhang.com/solution/contiguous-array/">九章</a></p><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>Given a binary array, find the maximum length of a contiguous subarray with<br>equal number of 0 and 1.</p><p><strong>Example 1:</strong>  </p><pre><code>Input: [0,1]Output: 2Explanation: [0, 1] is the longest contiguous subarray with equal number of 0 and 1.</code></pre><p><strong>Example 2:</strong>  </p><pre><code>Input: [0,1,0]Output: 2Explanation: [0, 1] (or [1, 0]) is a longest contiguous subarray with equal number of 0 and 1.</code></pre><p><strong>Note:</strong> The length of the given binary array will not exceed 50,000.</p><p><strong>Tags:</strong> Hash Table</p><p><strong>Difficulty:</strong> Medium</p><h2 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h2><p><a id="more"></a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">findMaxLength</span><span class="params">(self, nums: List[int])</span> -&gt; int:</span></span><br><span class="line">        res = <span class="number">0</span></span><br><span class="line">        count = <span class="number">0</span></span><br><span class="line">        m = &#123;<span class="number">0</span>: <span class="number">-1</span>&#125;</span><br><span class="line">        <span class="comment"># 遇到 1 的时候， count 变量加 1 ，遇到 0 的时候 count 变量减 1</span></span><br><span class="line">        <span class="comment"># 如果我们在遍历数组的过程汇中遇到了相同的 count 2 次，这意味着这两个位置之间 0 和 1 的数目一样多</span></span><br><span class="line">        <span class="comment"># 因此我们只需要使用一个 HashMap来保存所有的 (index, count)对。对于一个 count ，我们只记录它第一次出现的位置，后面遇到相同的 count我们都用这个第一次记录的 index 来计算子数组的长度</span></span><br><span class="line">        <span class="keyword">for</span> i, v <span class="keyword">in</span> enumerate(nums):</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> v:</span><br><span class="line">                count -= <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                count += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> count <span class="keyword">in</span> m:</span><br><span class="line">                res = max(res, i-m[count])</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                m[count] = i</span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/contiguous-array/&quot;&gt;leetcode&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.jiuzhang.com/solution/contiguous-array/&quot;&gt;九章&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;Given a binary array, find the maximum length of a contiguous subarray with&lt;br&gt;equal number of 0 and 1.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example 1:&lt;/strong&gt;  &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Input: [0,1]
Output: 2
Explanation: [0, 1] is the longest contiguous subarray with equal number of 0 and 1.&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Example 2:&lt;/strong&gt;  &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Input: [0,1,0]
Output: 2
Explanation: [0, 1] (or [1, 0]) is a longest contiguous subarray with equal number of 0 and 1.&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The length of the given binary array will not exceed 50,000.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tags:&lt;/strong&gt; Hash Table&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Difficulty:&lt;/strong&gt; Medium&lt;/p&gt;
&lt;h2 id=&quot;答案&quot;&gt;&lt;a href=&quot;#答案&quot; class=&quot;headerlink&quot; title=&quot;答案&quot;&gt;&lt;/a&gt;答案&lt;/h2&gt;&lt;p&gt;
    
    </summary>
    
    
      <category term="leetcode" scheme="https://zronghui.github.io/categories/leetcode/"/>
    
    
      <category term="Hash Table" scheme="https://zronghui.github.io/tags/Hash-Table/"/>
    
  </entry>
  
  <entry>
    <title>biweekly-contest-22</title>
    <link href="https://zronghui.github.io/Leetcode%20weekly%20contest/biweekly-contest-22.html"/>
    <id>https://zronghui.github.io/Leetcode%20weekly%20contest/biweekly-contest-22.html</id>
    <published>2020-04-13T05:17:54.000Z</published>
    <updated>2020-04-14T05:36:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><ul><li><input checked="" disabled="" type="checkbox"> <a href="https://leetcode.com/contest/biweekly-contest-22/problems/find-the-distance-value-between-two-arrays">Find the Distance Value Between Two Arrays</a><strong>3</strong></li><li><input checked="" disabled="" type="checkbox"> <a href="https://leetcode.com/contest/biweekly-contest-22/problems/cinema-seat-allocation">Cinema Seat Allocation</a><strong>4</strong></li><li><input checked="" disabled="" type="checkbox"> <a href="https://leetcode.com/contest/biweekly-contest-22/problems/sort-integers-by-the-power-value">Sort Integers by The Power Value</a><strong>5</strong></li><li><input disabled="" type="checkbox"> <a href="https://leetcode.com/contest/biweekly-contest-22/problems/pizza-with-3n-slices">Pizza With 3n Slices</a><strong>7</strong></li></ul><a id="more"></a><h2 id="1"><a href="#1" class="headerlink" title="1"></a>1</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">satisfy</span><span class="params">(self, arr2, i, d)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> arr2:</span><br><span class="line">            <span class="keyword">if</span> abs(j-i)&lt;=d:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">findTheDistanceValue</span><span class="params">(self, arr1: List[int], arr2: List[int], d: int)</span> -&gt; int:</span></span><br><span class="line">        n = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> arr1:</span><br><span class="line">            <span class="keyword">if</span> self.satisfy(arr2, i, d):</span><br><span class="line">                n += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> n</span><br></pre></td></tr></table></figure><h2 id="2"><a href="#2" class="headerlink" title="2"></a>2</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">maxNumberOfFamiliesCurrentRow</span><span class="params">(self, l)</span>:</span></span><br><span class="line">        a1 = <span class="number">2</span> <span class="keyword">not</span> <span class="keyword">in</span> l <span class="keyword">and</span> <span class="number">3</span> <span class="keyword">not</span> <span class="keyword">in</span> l</span><br><span class="line">        a2 = <span class="number">4</span> <span class="keyword">not</span> <span class="keyword">in</span> l <span class="keyword">and</span> <span class="number">5</span> <span class="keyword">not</span> <span class="keyword">in</span> l</span><br><span class="line">        a3 = <span class="number">6</span> <span class="keyword">not</span> <span class="keyword">in</span> l <span class="keyword">and</span> <span class="number">7</span> <span class="keyword">not</span> <span class="keyword">in</span> l</span><br><span class="line">        a4 = <span class="number">8</span> <span class="keyword">not</span> <span class="keyword">in</span> l <span class="keyword">and</span> <span class="number">9</span> <span class="keyword">not</span> <span class="keyword">in</span> l</span><br><span class="line">        n = <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> a1:</span><br><span class="line">            n += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> a2:</span><br><span class="line">            n += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> a3:</span><br><span class="line">            n += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> a4:</span><br><span class="line">            n += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> n==<span class="number">4</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">2</span></span><br><span class="line">        <span class="keyword">if</span> n==<span class="number">3</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> n==<span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> (a1 <span class="keyword">and</span> a2) <span class="keyword">or</span> (a2 <span class="keyword">and</span> a3) <span class="keyword">or</span> (a3 <span class="keyword">and</span> a4):</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">maxNumberOfFamilies1</span><span class="params">(self, n: int, reservedSeats: List[List[int]])</span> -&gt; int:</span></span><br><span class="line">        <span class="comment"># 超时</span></span><br><span class="line">        d = &#123;i:[] <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, n+<span class="number">1</span>)&#125;</span><br><span class="line">        <span class="keyword">for</span> i, j <span class="keyword">in</span> reservedSeats:</span><br><span class="line">            d[i].append(j)</span><br><span class="line">        n = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> d.values():</span><br><span class="line">            n += self.maxNumberOfFamiliesCurrentRow(i)</span><br><span class="line">        <span class="keyword">return</span> n</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">maxNumberOfFamilies</span><span class="params">(self, n: int, reservedSeats: List[List[int]])</span> -&gt; int:</span></span><br><span class="line">        d = &#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> i, j <span class="keyword">in</span> reservedSeats:</span><br><span class="line">            <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> d:</span><br><span class="line">                d[i] = [j]</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                d[i].append(j)</span><br><span class="line">        n = <span class="number">2</span>*(n-len(d))</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> d.values():</span><br><span class="line">            n += self.maxNumberOfFamiliesCurrentRow(i)</span><br><span class="line">        <span class="keyword">return</span> n</span><br></pre></td></tr></table></figure><h2 id="3"><a href="#3" class="headerlink" title="3"></a>3</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getPower</span><span class="params">(self, n)</span>:</span></span><br><span class="line">        res = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> n!=<span class="number">1</span>:</span><br><span class="line">            <span class="keyword">if</span> n%<span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">                n /= <span class="number">2</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                n = n*<span class="number">3</span>+<span class="number">1</span></span><br><span class="line">            res += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> res</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getKth</span><span class="params">(self, lo: int, hi: int, k: int)</span> -&gt; int:</span></span><br><span class="line">        d = &#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(lo, hi+<span class="number">1</span>):</span><br><span class="line">            d[i] = self.getPower(i)</span><br><span class="line">        l = list(d.items())</span><br><span class="line">        l.sort(key=<span class="keyword">lambda</span> i: i[<span class="number">1</span>])</span><br><span class="line">        <span class="comment">#print(l)</span></span><br><span class="line">        <span class="keyword">return</span> l[k<span class="number">-1</span>][<span class="number">0</span>]</span><br></pre></td></tr></table></figure><h2 id="4"><a href="#4" class="headerlink" title="4"></a>4</h2><p><a href="https://www.acwing.com/solution/LeetCode/content/10196/">LeetCode 1388. Pizza With 3n Slices - AcWing</a></p><img src="https://i.loli.net/2020/04/13/5StfrDRZJ7W3mE2.png" alt="5StfrDRZJ7W3mE2" style="zoom:50%;" /><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">helper</span><span class="params">(self, slices, n)</span>:</span></span><br><span class="line">        m = len(slices)</span><br><span class="line">        dp = [[<span class="number">0</span> <span class="keyword">for</span> _ <span class="keyword">in</span> range(n)] <span class="keyword">for</span> _ <span class="keyword">in</span> range(m)]</span><br><span class="line">        dp[<span class="number">0</span>][<span class="number">0</span>] = slices[<span class="number">0</span>]</span><br><span class="line">        dp[<span class="number">1</span>][<span class="number">0</span>] = max(slices[<span class="number">0</span>], slices[<span class="number">1</span>])</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>, m):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> range(n):</span><br><span class="line">                <span class="keyword">if</span> j==<span class="number">0</span>:</span><br><span class="line">                    dp[i][j] = max(dp[i<span class="number">-1</span>][j], slices[i])</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    dp[i][j] = max(dp[i<span class="number">-1</span>][j], dp[i<span class="number">-2</span>][j<span class="number">-1</span>]+slices[i])</span><br><span class="line">        <span class="keyword">return</span> dp[<span class="number">-1</span>][n<span class="number">-1</span>]</span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">maxSizeSlices</span><span class="params">(self, slices: List[int])</span> -&gt; int:</span></span><br><span class="line">        n = int(len(slices)/<span class="number">3</span>)</span><br><span class="line">        <span class="keyword">return</span> max(self.helper(slices[<span class="number">1</span>:], n), self.helper(slices[:<span class="number">-1</span>], n))</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&quot;&quot; disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; &lt;a href=&quot;https://leetcode.com/contest/biweekly-contest-22/problems/find-the-distance-value-between-two-arrays&quot;&gt;Find the Distance Value Between Two Arrays&lt;/a&gt;&lt;strong&gt;3&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&quot;&quot; disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; &lt;a href=&quot;https://leetcode.com/contest/biweekly-contest-22/problems/cinema-seat-allocation&quot;&gt;Cinema Seat Allocation&lt;/a&gt;&lt;strong&gt;4&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&quot;&quot; disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; &lt;a href=&quot;https://leetcode.com/contest/biweekly-contest-22/problems/sort-integers-by-the-power-value&quot;&gt;Sort Integers by The Power Value&lt;/a&gt;&lt;strong&gt;5&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; &lt;a href=&quot;https://leetcode.com/contest/biweekly-contest-22/problems/pizza-with-3n-slices&quot;&gt;Pizza With 3n Slices&lt;/a&gt;&lt;strong&gt;7&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Leetcode weekly contest" scheme="https://zronghui.github.io/categories/Leetcode-weekly-contest/"/>
    
    
  </entry>
  
  <entry>
    <title>todo</title>
    <link href="https://zronghui.github.io/todo/todo.html"/>
    <id>https://zronghui.github.io/todo/todo.html</id>
    <published>2020-04-12T08:18:15.000Z</published>
    <updated>2020-04-14T05:36:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a><ul><li><input disabled="" type="checkbox"> 自建 RSS 服务器 （RSS2.0 RSS1.0 ATOM1.0 的区别？ ）</li><li><input disabled="" type="checkbox"> Cli 将 md 的图片调整统一的缩放比例</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
    
    </summary>
    
    
      <category term="todo" scheme="https://zronghui.github.io/categories/todo/"/>
    
    
  </entry>
  
  <entry>
    <title>weekly-contest-184</title>
    <link href="https://zronghui.github.io/Leetcode%20weekly%20contest/weekly-contest-184.html"/>
    <id>https://zronghui.github.io/Leetcode%20weekly%20contest/weekly-contest-184.html</id>
    <published>2020-04-12T06:32:41.000Z</published>
    <updated>2020-04-12T13:27:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><ul><li><input checked="" disabled="" type="checkbox"> <a href="https://leetcode.com/contest/weekly-contest-184/problems/string-matching-in-an-array">String Matching in an Array</a><strong>3</strong></li><li><input checked="" disabled="" type="checkbox"> <a href="https://leetcode.com/contest/weekly-contest-184/problems/queries-on-a-permutation-with-key">Queries on a Permutation With Key</a><strong>4</strong></li><li><input checked="" disabled="" type="checkbox"> <a href="https://leetcode.com/contest/weekly-contest-184/problems/html-entity-parser">HTML Entity Parser</a><strong>5</strong></li><li><input checked="" disabled="" type="checkbox"> <a href="https://leetcode.com/contest/weekly-contest-184/problems/number-of-ways-to-paint-n-3-grid">Number of Ways to Paint N × 3 Grid</a><strong>7</strong></li></ul><a id="more"></a><p><img src="https://i.loli.net/2020/04/12/8socHYSt76UrE9D.png" alt="8socHYSt76UrE9D"></p><p>值得纪念，第一次写完了，体验到一把做完题目的爽快感，虽然排名依旧很落后</p><h2 id="1"><a href="#1" class="headerlink" title="1"></a>1</h2><p>本来打算按照长度排个序，却卡住了</p><p>`a.sort(key=lambda i: len(i))</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">stringMatching</span><span class="params">(self, words: List[str])</span> -&gt; List[str]:</span></span><br><span class="line">        res = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> words:</span><br><span class="line">            <span class="comment"># 判断 i 是否为 j 的子串</span></span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> words:</span><br><span class="line">                <span class="keyword">if</span> j <span class="keyword">in</span> res <span class="keyword">or</span> i==j <span class="keyword">or</span> len(i)&gt;=len(j):</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">                <span class="keyword">if</span> i <span class="keyword">in</span> j <span class="keyword">and</span> i <span class="keyword">not</span> <span class="keyword">in</span> res:</span><br><span class="line">                    res.append(i)</span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure><h2 id="2"><a href="#2" class="headerlink" title="2"></a>2</h2><p>逆序 range(index, 0, -1)</p><p> p[1:index+1] = p[:index]  灵机一动，试了一下，还真可以</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">processQueries</span><span class="params">(self, queries: List[int], m: int)</span> -&gt; List[int]:</span></span><br><span class="line">        n = len(queries)</span><br><span class="line">        p = list(range(<span class="number">1</span>, m+<span class="number">1</span>))</span><br><span class="line">        res = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> queries:</span><br><span class="line">            index = p.index(i)</span><br><span class="line">            res.append(index)</span><br><span class="line">            p[<span class="number">1</span>:index+<span class="number">1</span>] = p[:index]</span><br><span class="line">            <span class="comment">#for j in range(1, index+1):</span></span><br><span class="line">            <span class="comment">#    p[j] = p[j-1]</span></span><br><span class="line">            p[<span class="number">0</span>] = i</span><br><span class="line">            <span class="comment"># print(p)</span></span><br><span class="line">        <span class="keyword">return</span> res</span><br></pre></td></tr></table></figure><h2 id="3"><a href="#3" class="headerlink" title="3"></a>3</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">entityParser</span><span class="params">(self, text: str)</span> -&gt; str:</span></span><br><span class="line">        m = &#123;</span><br><span class="line">            <span class="string">'&amp;quot;'</span>: <span class="string">'"'</span>,</span><br><span class="line">            <span class="string">'&amp;apos;'</span>: <span class="string">"'"</span>,</span><br><span class="line">            <span class="string">'&amp;amp;'</span>: <span class="string">"&amp;"</span>,</span><br><span class="line">            <span class="string">'&amp;gt;'</span>: <span class="string">"&gt;"</span>,</span><br><span class="line">            <span class="string">'&amp;lt;'</span>: <span class="string">"&lt;"</span>,</span><br><span class="line">            <span class="string">'&amp;frasl;'</span>: <span class="string">"/"</span></span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">for</span> key, value <span class="keyword">in</span> m.items():</span><br><span class="line">            text = text.replace(key, value)</span><br><span class="line">        <span class="keyword">return</span> text</span><br></pre></td></tr></table></figure><h2 id="4"><a href="#4" class="headerlink" title="4"></a>4</h2><p>一开始没想通，弄歪门邪道，拟合：</p><p><a href="http://www.qinms.com/webapp/curvefit/cf.aspx">在线曲线拟合神器_村美小站</a></p><p>拟合效果还挺好</p><img src="https://i.loli.net/2020/04/12/wUWsE6FYxhBa9Sc.png" alt="wUWsE6FYxhBa9Sc" style="zoom:50%;" /><h3 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h3><p>主要 2 种情况，1. 形如 1 2 3  2. 形如 1 2 1</p><p>设以上两种情况各 x y 个</p><p>1个 1 2 3 可衍生出 2 个 x，2 个 y</p><p>1个 1 2 1 可衍生出 2 个 x，3 个 y</p><p>因此<strong>推导式</strong>：</p><p>x’ = 2x+2y</p><p>y’ = 2x+3y</p><p><strong>起始状态</strong>：</p><p>n = 1 时，x =  y = 6</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">numOfWays</span><span class="params">(self, n: int)</span> -&gt; int:</span></span><br><span class="line">        <span class="keyword">if</span> n==<span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">12</span></span><br><span class="line">        x = y = <span class="number">6</span></span><br><span class="line">        <span class="comment"># 执行 n-1 次循环</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(n<span class="number">-1</span>):</span><br><span class="line">            tx, ty = x, y</span><br><span class="line">            x = (<span class="number">2</span>*tx+<span class="number">2</span>*ty)%(<span class="number">10</span>**<span class="number">9</span>+<span class="number">7</span>)</span><br><span class="line">            y = (<span class="number">2</span>*tx+<span class="number">3</span>*ty)%(<span class="number">10</span>**<span class="number">9</span>+<span class="number">7</span>)</span><br><span class="line">        <span class="keyword">return</span> (x+y)%(<span class="number">10</span>**<span class="number">9</span>+<span class="number">7</span>)</span><br></pre></td></tr></table></figure><h2 id="心得"><a href="#心得" class="headerlink" title="心得"></a>心得</h2><p>卡住了换一种思路，时间最重要，赛后再想</p><p>测试的时候可以 print，提交的时候一定要注释掉</p><p>不要想着走捷径，没有意义</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&quot;&quot; disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; &lt;a href=&quot;https://leetcode.com/contest/weekly-contest-184/problems/string-matching-in-an-array&quot;&gt;String Matching in an Array&lt;/a&gt;&lt;strong&gt;3&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&quot;&quot; disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; &lt;a href=&quot;https://leetcode.com/contest/weekly-contest-184/problems/queries-on-a-permutation-with-key&quot;&gt;Queries on a Permutation With Key&lt;/a&gt;&lt;strong&gt;4&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&quot;&quot; disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; &lt;a href=&quot;https://leetcode.com/contest/weekly-contest-184/problems/html-entity-parser&quot;&gt;HTML Entity Parser&lt;/a&gt;&lt;strong&gt;5&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&quot;&quot; disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; &lt;a href=&quot;https://leetcode.com/contest/weekly-contest-184/problems/number-of-ways-to-paint-n-3-grid&quot;&gt;Number of Ways to Paint N × 3 Grid&lt;/a&gt;&lt;strong&gt;7&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Leetcode weekly contest" scheme="https://zronghui.github.io/categories/Leetcode-weekly-contest/"/>
    
    
  </entry>
  
  <entry>
    <title>weekly-contest-181</title>
    <link href="https://zronghui.github.io/Leetcode%20weekly%20contest/weekly-contest-181.html"/>
    <id>https://zronghui.github.io/Leetcode%20weekly%20contest/weekly-contest-181.html</id>
    <published>2020-04-11T13:14:52.000Z</published>
    <updated>2020-04-12T13:27:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><ul><li><input disabled="" type="checkbox"> <a href="https://leetcode.com/contest/weekly-contest-181/problems/create-target-array-in-the-given-order">Create Target Array in the Given Order</a><strong>3</strong></li><li><input disabled="" type="checkbox"> <a href="https://leetcode.com/contest/weekly-contest-181/problems/four-divisors">Four Divisors</a><strong>4</strong></li><li><input checked="" disabled="" type="checkbox"> <a href="https://leetcode.com/contest/weekly-contest-181/problems/check-if-there-is-a-valid-path-in-a-grid">Check if There is a Valid Path in a Grid</a><strong>5</strong></li><li><input disabled="" type="checkbox"> <a href="https://leetcode.com/contest/weekly-contest-181/problems/longest-happy-prefix">Longest Happy Prefix</a> <strong>6</strong></li></ul><a id="more"></a><h2 id="1"><a href="#1" class="headerlink" title="1"></a>1</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">createTargetArray</span><span class="params">(self, nums: List[int], index: List[int])</span> -&gt; List[int]:</span></span><br><span class="line">        result = []</span><br><span class="line">        <span class="keyword">for</span> num, index <span class="keyword">in</span> zip(nums, index):</span><br><span class="line">            result.insert(index, num)</span><br><span class="line">        <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><h2 id="2"><a href="#2" class="headerlink" title="2"></a>2</h2><p>为什么我就不会暴力呢</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isFourDivisors</span><span class="params">(self, n)</span>:</span></span><br><span class="line">        <span class="comment"># return 0 or sum of four divisors of n</span></span><br><span class="line">        cnt = <span class="number">2</span> <span class="comment"># 1 以及 自身</span></span><br><span class="line">        res = <span class="number">1</span>+n</span><br><span class="line">        i = <span class="number">2</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="keyword">if</span> i*i&gt;n:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">if</span> i*i==n:</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> n%i:</span><br><span class="line">                cnt += <span class="number">2</span></span><br><span class="line">                res += i + n/i</span><br><span class="line">            <span class="keyword">if</span> cnt&gt;<span class="number">4</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> cnt==<span class="number">4</span>:</span><br><span class="line">            <span class="keyword">return</span> int(res)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">            </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sumFourDivisors</span><span class="params">(self, nums: List[int])</span> -&gt; int:</span></span><br><span class="line">        <span class="keyword">return</span> sum(self.isFourDivisors(i) <span class="keyword">for</span> i <span class="keyword">in</span> nums)</span><br></pre></td></tr></table></figure><h2 id="3"><a href="#3" class="headerlink" title="3"></a>3</h2><p>这题很恶心，也没说清楚，得自己试，浪费了很多时间</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="comment"># direction 表示上一个格子到当前格子的流动方向</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">nextij</span><span class="params">(self, grid, i, j, direction)</span>:</span></span><br><span class="line">        num = grid[i][j]</span><br><span class="line">        <span class="comment"># print([num, direction])</span></span><br><span class="line">        <span class="keyword">if</span> [num, direction] <span class="keyword">in</span> [[<span class="number">1</span>, <span class="string">'right'</span>], [<span class="number">4</span>, <span class="string">'up'</span>], [<span class="number">6</span>, <span class="string">'down'</span>]]:</span><br><span class="line">            <span class="keyword">return</span> i, j+<span class="number">1</span>, <span class="string">'right'</span></span><br><span class="line">        <span class="keyword">if</span> [num, direction] <span class="keyword">in</span> [[<span class="number">1</span>, <span class="string">'left'</span>], [<span class="number">3</span>, <span class="string">'up'</span>], [<span class="number">5</span>, <span class="string">'down'</span>]]:</span><br><span class="line">            <span class="keyword">return</span> i, j<span class="number">-1</span>, <span class="string">'left'</span></span><br><span class="line">        <span class="keyword">if</span> [num, direction] <span class="keyword">in</span> [[<span class="number">2</span>, <span class="string">'up'</span>], [<span class="number">5</span>, <span class="string">'right'</span>], [<span class="number">6</span>, <span class="string">'left'</span>]]:</span><br><span class="line">            <span class="keyword">return</span> i<span class="number">-1</span>, j, <span class="string">'up'</span></span><br><span class="line">        <span class="keyword">if</span> [num, direction] <span class="keyword">in</span> [[<span class="number">2</span>, <span class="string">'down'</span>], [<span class="number">3</span>, <span class="string">'right'</span>], [<span class="number">4</span>, <span class="string">'left'</span>]]:</span><br><span class="line">            <span class="keyword">return</span> i+<span class="number">1</span>, j, <span class="string">'down'</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">hasValidPath</span><span class="params">(self, grid: List[List[int]])</span> -&gt; bool:</span></span><br><span class="line">        m = len(grid)</span><br><span class="line">        n = len(grid[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">if</span> m==n==<span class="number">1</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        i = j = <span class="number">0</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> grid[<span class="number">0</span>][<span class="number">0</span>] <span class="keyword">in</span> [<span class="number">5</span>]:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">elif</span> grid[<span class="number">0</span>][<span class="number">0</span>] <span class="keyword">in</span> [<span class="number">1</span>, <span class="number">3</span>]:</span><br><span class="line">            direction = <span class="string">'right'</span></span><br><span class="line">            <span class="keyword">return</span> self.helper(grid, m, n, i, j, direction)</span><br><span class="line">        <span class="keyword">elif</span> grid[<span class="number">0</span>][<span class="number">0</span>] <span class="keyword">in</span> [<span class="number">2</span>, <span class="number">6</span>]:</span><br><span class="line">            direction = <span class="string">'down'</span></span><br><span class="line">            <span class="keyword">return</span> self.helper(grid, m, n, i, j, direction)</span><br><span class="line">        <span class="keyword">elif</span> grid[<span class="number">0</span>][<span class="number">0</span>] <span class="keyword">in</span> [<span class="number">4</span>]:</span><br><span class="line">            <span class="keyword">return</span> self.helper(grid, m, n, <span class="number">0</span>, <span class="number">1</span>, <span class="string">'right'</span>) <span class="keyword">or</span> self.helper(grid, m, n, <span class="number">1</span>, <span class="number">0</span>, <span class="string">'down'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">helper</span><span class="params">(self, grid, m, n, i, j, direction)</span>:</span></span><br><span class="line">        walked = [[<span class="number">0</span> <span class="keyword">for</span> j <span class="keyword">in</span> range(n)] <span class="keyword">for</span> i <span class="keyword">in</span> range(m)]</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            nextijResult = self.nextij(grid, i, j, direction)</span><br><span class="line">            <span class="comment"># print('nextijResult', nextijResult)</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> nextijResult:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">            nexti, nextj, direction = nextijResult</span><br><span class="line">            <span class="comment"># print(nexti, nextj, direction)</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> (<span class="number">0</span>&lt;=nexti&lt;m <span class="keyword">and</span> <span class="number">0</span>&lt;=nextj&lt;n):</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">            <span class="keyword">if</span> walked[nexti][nextj]:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">            <span class="keyword">if</span> nexti==m<span class="number">-1</span> <span class="keyword">and</span> nextj==n<span class="number">-1</span>:</span><br><span class="line">                <span class="keyword">return</span> bool(self.nextij(grid, nexti, nextj, direction))</span><br><span class="line">            walked[i][j] = <span class="number">1</span></span><br><span class="line">            i, j = nexti, nextj</span><br></pre></td></tr></table></figure><h2 id="4"><a href="#4" class="headerlink" title="4"></a>4</h2><p>kmp pi函数或者说 next fail 函数的性质题，输出匹配到最后位置的最长前缀即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">longestPrefix</span><span class="params">(self, s: str)</span> -&gt; str:</span></span><br><span class="line">        n = len(s)</span><br><span class="line">        nxt = [<span class="number">0</span> <span class="keyword">for</span> i <span class="keyword">in</span> range(n+<span class="number">1</span>)]</span><br><span class="line">        <span class="comment"># i 前缀</span></span><br><span class="line">        i = <span class="number">0</span></span><br><span class="line">        <span class="comment"># j 后缀</span></span><br><span class="line">        j = nxt[<span class="number">0</span>] = <span class="number">-1</span></span><br><span class="line">        <span class="keyword">while</span>(i&lt;n):</span><br><span class="line">            <span class="keyword">while</span>(j!=<span class="number">-1</span> <span class="keyword">and</span> s[i]!=s[j]):</span><br><span class="line">                j = nxt[j]</span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">            j += <span class="number">1</span></span><br><span class="line">            nxt[i] = j</span><br><span class="line">        <span class="comment"># print(nxt)</span></span><br><span class="line">        <span class="keyword">return</span> s[:nxt[<span class="number">-1</span>]]</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; &lt;a href=&quot;https://leetcode.com/contest/weekly-contest-181/problems/create-target-array-in-the-given-order&quot;&gt;Create Target Array in the Given Order&lt;/a&gt;&lt;strong&gt;3&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; &lt;a href=&quot;https://leetcode.com/contest/weekly-contest-181/problems/four-divisors&quot;&gt;Four Divisors&lt;/a&gt;&lt;strong&gt;4&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&quot;&quot; disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; &lt;a href=&quot;https://leetcode.com/contest/weekly-contest-181/problems/check-if-there-is-a-valid-path-in-a-grid&quot;&gt;Check if There is a Valid Path in a Grid&lt;/a&gt;&lt;strong&gt;5&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; &lt;a href=&quot;https://leetcode.com/contest/weekly-contest-181/problems/longest-happy-prefix&quot;&gt;Longest Happy Prefix&lt;/a&gt; &lt;strong&gt;6&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Leetcode weekly contest" scheme="https://zronghui.github.io/categories/Leetcode-weekly-contest/"/>
    
    
  </entry>
  
  <entry>
    <title>blockchain</title>
    <link href="https://zronghui.github.io/blockchain/blockchain.html"/>
    <id>https://zronghui.github.io/blockchain/blockchain.html</id>
    <published>2020-04-10T04:11:01.000Z</published>
    <updated>2020-04-16T14:46:26.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a><p><a href="https://www.bilibili.com/video/BV1oJ411E7Lg">【回形针PaperClip】区块链到底是什么？_哔哩哔哩 (゜-゜)つロ 干杯~-bilibili</a></p><h3 id="区块链技术在政府数据治理中的应用：优势、挑战与对策"><a href="#区块链技术在政府数据治理中的应用：优势、挑战与对策" class="headerlink" title="区块链技术在政府数据治理中的应用：优势、挑战与对策"></a>区块链技术在政府数据治理中的应用：优势、挑战与对策</h3><p><a href="https://www.sohu.com/a/272144896_224692">区块链技术在政府数据治理中的应用：优势、挑战与对策</a></p><p><strong>二、政府数据治理面临的主要问题</strong></p><p>（一）政府数据质量管理差</p><p>数据质量管理差主要表现在3个方面：数据的真实性不够、数据的一致性不高、数据的时效性不强</p><p>（二）政府数据安全管控弱</p><p>数据安全管控弱主要体现在网络安全保障不力和个人隐私保护不够两个方面</p><p>（三）政府数据开放共享难</p><p>政府数据开放共享包括两层含义，一是通过信息公开的方式将政府数据传播给市场和社会，使其在“数据—决策—效益”的过程挖掘数据的价值；二是通过数据库、云端等平台实现政府数据在层级间、区域间、部门间的开放共享，让政府在政务服务中提升质量和效率。</p><p><strong>三、区块链技术在政府数据治理中的应用优势</strong></p><p>与问题对应</p><p>（一）可追溯的分布式数据系统有助于提高数据质量</p><p>各主体通过访问数据系统，将各项社会活动录入区块链或确认交易，使得有关社会事务的事件、信息能在大范围、短时间内实现快速的全网广播、匹配、核查和认定。需要强调的是，任何治理活动的信息与数据只有通过全网广播获得其他主体的核实与认可后，才能被完整地写入区块链；如果数据不实或不被认可，系统将自动拒绝写入，这有助于保证数据系统的真实性与完整性。</p><p>（二）非对称加密技术与哈希算法有助于保障数据安全</p><p>另外，区块链的数据存储在分布式的链式结构中，确保数据的多重备份，提高数据库的容错性和安全性</p><p>（三）点对点技术与智能合约有助于实现数据共享</p><p><strong>四、区块链技术应用于政府数据治理的挑战</strong></p><p>（一）理念变革：去中心化带来管理权威挑战</p><p>政府在治理体系中不再占据核心的支配地位，而与其他主体处于相对平等的地位</p><p>（二）机制变革：去信任化带来安全监管挑战</p><p>如果个人的私钥泄露，将会出现参与者的个人信息全部在网络上公布的问题，严重影响用户的个人隐私。如果个人的私钥丢失，那么个人无法再次访问区块链中的存储数据，无法获取个人的证明信息，从而影响用户的有形资产的归属情况</p><p>（三）制度变革：技术创新带来法律秩序挑战</p><p>区块链的运用与现行法律存在一定的冲突</p><h3 id="一种基于区块链的数据防篡改系统及其方法"><a href="#一种基于区块链的数据防篡改系统及其方法" class="headerlink" title="一种基于区块链的数据防篡改系统及其方法"></a>一种基于区块链的数据防篡改系统及其方法</h3><p><a href="https://www.ixueshu.com/document/57827a485ac3460c504572619bc20e72318947a18e7f9386.html">一种基于区块链的数据防篡改系统及其方法_爱学术</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
    
    </summary>
    
    
      <category term="blockchain" scheme="https://zronghui.github.io/categories/blockchain/"/>
    
    
  </entry>
  
  <entry>
    <title>shop</title>
    <link href="https://zronghui.github.io/%E4%B9%B0%E4%B9%B0%E4%B9%B0/shop.html"/>
    <id>https://zronghui.github.io/%E4%B9%B0%E4%B9%B0%E4%B9%B0/shop.html</id>
    <published>2020-04-10T02:42:00.000Z</published>
    <updated>2020-04-12T13:27:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a><h2 id="阿米洛-VDbox-键盘宝"><a href="#阿米洛-VDbox-键盘宝" class="headerlink" title="阿米洛 VDbox 键盘宝"></a>阿米洛 VDbox 键盘宝</h2><p>我最近在家办公的时候经常拿 iPad 来当副屏幕，但我的机械键盘没有无线功能，所以每次需要切换打字的时候都很麻烦。我希望找·一个给机械键盘增加蓝牙无线功能的方法，在进行了一阵研究后，我最终找到了「阿米洛 VDbox 键盘宝」。 </p><p><img src="https://cdn.sspai.com/2020/04/09/a6ad36bd1e1c90848faa0b3baf3361ca.png" alt="img"></p><p>这个小工具的原理很简单，其实就是一个蓝牙发射接收器。把你的机械键盘连接到它上面，然后再把电脑和键盘宝连接好就可以使用了。它可以最多配对 3 个设备，每个数字按键和设备一一对应。我平时使用 LINE 接口和台式机连接，需要切换到 iPad 打字的时候，按下对应的设备键，然后它就会自动进行连接，于是就可以用我的机械键盘在 iPad 上输入了。 </p><p><img src="https://cdn.sspai.com/2020/04/09/c7fdde0ccbb5014fd3ce37ed96930cde.png" alt="img"></p><p>我还测试了一下其他的设备，比如 Android 系统的电视和手机，发现它都可以正常使用。如果你的机械键盘没有蓝牙功能，又不希望额外再买一把的话，不妨试试这款小工具。 </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
    
    </summary>
    
    
      <category term="买买买" scheme="https://zronghui.github.io/categories/%E4%B9%B0%E4%B9%B0%E4%B9%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>tricks-2020-04-2th-week</title>
    <link href="https://zronghui.github.io/tricks/tricks-2020-04-2th-week.html"/>
    <id>https://zronghui.github.io/tricks/tricks-2020-04-2th-week.html</id>
    <published>2020-04-08T01:24:59.000Z</published>
    <updated>2020-04-16T14:46:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a><p><a href="https://www.lanzous.com/b0f19dneb">影视应用_for_Android</a></p><h2 id="壁纸网站"><a href="#壁纸网站" class="headerlink" title="壁纸网站"></a>壁纸网站</h2><p><a href="https://wallhaven.cc/">Awesome Wallpapers - wallhaven.cc</a><br><a href="https://wall.alphacoders.com/">Wallpaper Abyss - HD Wallpapers, Background Images</a><br><a href="https://www.wallpaperup.com/">Popular wallpapers | WallpaperUP</a></p><h2 id="Mac-系统清理"><a href="#Mac-系统清理" class="headerlink" title="Mac 系统清理"></a>Mac 系统清理</h2><p>sudo rm /private/var/mail/zhangronghui</p><p>sudo rm /var/mail/zhangronghui</p><p>lemon 清理</p><p>omniDiskSeeper</p><p>清理了 30 G</p><h2 id="小甲鱼"><a href="#小甲鱼" class="headerlink" title="小甲鱼"></a>小甲鱼</h2><p><a href="https://ilovefishc.com/">鱼C工作室-免费编程视频教学|Python教学|Web开发教学|全栈开发教学|C语言教学|汇编教学|Win32开发|加密与解密|Linux教学</a></p><h2 id="在线曲线拟合"><a href="#在线曲线拟合" class="headerlink" title="在线曲线拟合"></a>在线曲线拟合</h2><p><a href="http://www.qinms.com/webapp/curvefit/cf.aspx">在线曲线拟合神器_村美小站</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">numOfWays</span><span class="params">(self, n: int)</span> -&gt; int:</span></span><br><span class="line">        <span class="keyword">from</span> math <span class="keyword">import</span> e</span><br><span class="line">        a = <span class="number">2.61680116075935</span></span><br><span class="line">        b = <span class="number">1.51594273796265</span></span><br><span class="line">        <span class="keyword">return</span> round(a*e**(b*n))</span><br></pre></td></tr></table></figure><p><a href="http://www.qinms.com/webapp/bmi/index.aspx">成人体重标准判定_村美小站</a></p><p>扎心了</p><img src="https://i.loli.net/2020/04/12/WRtNkZqEmxLDaiM.png" alt="WRtNkZqEmxLDaiM" style="zoom: 33%;" /><p><a href="https://www.baidu.com/s?wd=%E4%BA%8C%E5%B0%BA%E4%BA%94+%E7%9A%84%E5%8E%98%E7%B1%B3&rsv_spt=1&rsv_iqid=0xa5990e010000b1d4&issp=1&f=8&rsv_bp=1&rsv_idx=2&ie=utf-8&rqlang=&tn=baiduhome_pg&ch=&rsv_enter=1&rsv_dl=ib&inputT=625">二尺五 的厘米_百度搜索</a></p><p><a href="http://www.bugs.wang/74.html">Shadowsocks Python版一键安装脚本 - BugsWang</a></p><h2 id="关闭腾讯广告"><a href="#关闭腾讯广告" class="headerlink" title="关闭腾讯广告"></a>关闭腾讯广告</h2><img src="https://i.loli.net/2020/04/12/ePRlobgLuy3rOB4.jpg" alt="ePRlobgLuy3rOB4" style="zoom:33%;" /><p><a href="http://r.ftqq.com/howto-make-more-money/">程序员如何优雅地挣零花钱 · GitBook</a></p><p><a href="https://hao.su/531/">免费的在线影视网站汇总 - 不死鸟 - 分享为王</a></p><h2 id="微软-PowerToys-小工具合集"><a href="#微软-PowerToys-小工具合集" class="headerlink" title="微软 PowerToys 小工具合集"></a>微软 PowerToys 小工具合集</h2><p><a href="https://www.iplaysoft.com/powertoys.html">微软 PowerToys 小工具合集 - 免费给 Win10 加装各种增强新功能的效率利器 - 异次元软件下载</a></p><h2 id="小盒精灵（TVRemoteIME）TV-APP-语音输入"><a href="#小盒精灵（TVRemoteIME）TV-APP-语音输入" class="headerlink" title="小盒精灵（TVRemoteIME）TV APP 语音输入"></a>小盒精灵（TVRemoteIME）TV APP 语音输入</h2><p><a href="https://www.52pojie.cn/thread-725509-1-1.html">高手玩盒子的极佳应用—-小盒精灵（TVRemoteIME）v1.4.0 - 『精品软件区』 - 吾爱破解 - LCG - LSG |安卓破解|病毒分析|破解软件|www.52pojie.cn</a></p><h2 id="《鬼灭之刃》剧场版《无限列车篇》"><a href="#《鬼灭之刃》剧场版《无限列车篇》" class="headerlink" title="《鬼灭之刃》剧场版《无限列车篇》"></a>《鬼灭之刃》剧场版《无限列车篇》</h2><p><a href="http://acg17.com/56301.html">《鬼灭之刃》剧场版《无限列车篇》第1弹预告公开，10月16号日本上映</a></p><p><a href="https://www.appinn.com/zenkit-to-do/">Zenkit To Do - 简洁的跨平台任务管理工具，一个奇妙清单的替代品 - 小众软件</a></p><p>支持部署到服务器</p><p><a href="https://www.moerats.com/archives/1027/?hao.su">live-torrent：一个支持磁力链和种子的在线搜索云播Web客户端 - Rat’s Blog</a></p><p>猎狐<br>会员每天22点更新2集</p><h2 id="mac-挂游戏脚本"><a href="#mac-挂游戏脚本" class="headerlink" title="mac 挂游戏脚本"></a>mac 挂游戏脚本</h2><p>让电脑变得特别卡，还是用没用的手机吧</p><p><a href="https://www.zhihu.com/question/24404260">(17 封私信 / 27 条消息) Mac 系统上有什么好用的 Android 模拟器？ - 知乎</a><br><a href="http://www.ttmnq.com/">天天安卓模拟器_安卓模拟器电脑版下载_天天模拟器官网</a><br><a href="http://pc.ifengwoo.com/?qudao=market15">游戏蜂窝电脑版辅助_安卓模拟器辅助_电脑版手游辅助_蜂窝助手-游戏蜂窝电脑版官网</a></p><p><a href="https://www.lanzous.com/b0nbq8tc">狂野飙车 辅助</a></p><h2 id="论文免费搜索下载网站"><a href="#论文免费搜索下载网站" class="headerlink" title="论文免费搜索下载网站"></a>论文免费搜索下载网站</h2><p><a href="http://www.joca.cn/CN/volumn/home.shtml">《计算机应用》官方网站</a></p><p><a href="https://www.ixueshu.com/">爱学术_参考文献资料_毕业论文范文免费下载</a></p><h2 id="力扣"><a href="#力扣" class="headerlink" title="力扣"></a>力扣</h2><p><a href="https://leetcode-cn.com/problemset/2020-04/">✅ 2020-04月 每日一题 - 力扣（LeetCode）</a><br><a href="http://group.ojeveryday.com/#/check">每日一题打卡</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
    
    </summary>
    
    
      <category term="tricks" scheme="https://zronghui.github.io/categories/tricks/"/>
    
    
  </entry>
  
  <entry>
    <title>周赛思路参考</title>
    <link href="https://zronghui.github.io/Leetcode%20weekly%20contest/%E5%91%A8%E8%B5%9B%E6%80%9D%E8%B7%AF%E5%8F%82%E8%80%83.html"/>
    <id>https://zronghui.github.io/Leetcode%20weekly%20contest/%E5%91%A8%E8%B5%9B%E6%80%9D%E8%B7%AF%E5%8F%82%E8%80%83.html</id>
    <published>2020-04-05T10:09:48.000Z</published>
    <updated>2020-04-07T15:01:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a><p><a href="https://leetcode.com/contest/">Contest - LeetCode</a></p><p>题解：</p><p><a href="https://www.acwing.com/user/myspace/solution/index/leetcode/21/35/">个人空间 - AcWing</a></p><p><a href="https://space.bilibili.com/97228279">一俩三四五的个人空间 - 哔哩哔哩 ( ゜- ゜)つロ 乾杯~ Bilibili</a></p><p><a href="https://liqiang.io/">格物致知</a></p><p><a href="http://github.tiankonguse.com/index.html">tiankonguse’s 代码世界</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
    
    </summary>
    
    
      <category term="Leetcode weekly contest" scheme="https://zronghui.github.io/categories/Leetcode-weekly-contest/"/>
    
    
  </entry>
  
  <entry>
    <title>biweekly-contest-23</title>
    <link href="https://zronghui.github.io/Leetcode%20weekly%20contest/biweekly-contest-23.html"/>
    <id>https://zronghui.github.io/Leetcode%20weekly%20contest/biweekly-contest-23.html</id>
    <published>2020-04-05T03:58:36.000Z</published>
    <updated>2020-04-12T13:27:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h2 id=""><a href="#" class="headerlink" title=""></a></h2><ul><li><input checked="" disabled="" type="checkbox"> <a href="https://leetcode.com/contest/biweekly-contest-23/problems/count-largest-group">Count Largest Group</a><strong>3</strong></li><li><input checked="" disabled="" type="checkbox"> <a href="https://leetcode.com/contest/biweekly-contest-23/problems/construct-k-palindrome-strings">Construct K Palindrome Strings</a><strong>5</strong></li><li><input disabled="" type="checkbox"> <a href="https://leetcode.com/contest/biweekly-contest-23/problems/circle-and-rectangle-overlapping">Circle and Rectangle Overlapping</a><strong>5</strong></li><li><input checked="" disabled="" type="checkbox"> <a href="https://leetcode.com/contest/biweekly-contest-23/problems/reducing-dishes">Reducing Dishes</a><strong>6</strong></li></ul><a id="more"></a><h2 id="1"><a href="#1" class="headerlink" title="1"></a>1</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">countLargestGroup</span><span class="params">(self, n: int)</span> -&gt; int:</span></span><br><span class="line">        <span class="comment"># &#123;sum: [n1, n2], &#125;</span></span><br><span class="line">        d = &#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, n+<span class="number">1</span>):</span><br><span class="line">            _sum = <span class="number">0</span></span><br><span class="line">            t = i</span><br><span class="line">            <span class="keyword">while</span> t:</span><br><span class="line">                _sum += t%<span class="number">10</span></span><br><span class="line">                t = int(t/<span class="number">10</span>)</span><br><span class="line">            <span class="keyword">if</span> _sum <span class="keyword">not</span> <span class="keyword">in</span> d:</span><br><span class="line">                d[_sum] = [i]</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                d[_sum].append(i)</span><br><span class="line">        result = <span class="number">0</span></span><br><span class="line">        m = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> d.values():</span><br><span class="line">            <span class="keyword">if</span> len(i)==m:</span><br><span class="line">                result += <span class="number">1</span></span><br><span class="line">            <span class="keyword">elif</span> len(i) &gt; m:</span><br><span class="line">                result = <span class="number">1</span></span><br><span class="line">                m = len(i)</span><br><span class="line">        <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><h2 id="2"><a href="#2" class="headerlink" title="2"></a>2</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">canConstruct</span><span class="params">(self, s: str, k: int)</span> -&gt; bool:</span></span><br><span class="line">        <span class="keyword">if</span> len(s)&lt;k:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">if</span> len(s)==k:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="comment"># 单数，双数 个数 x, y</span></span><br><span class="line">        <span class="comment"># 前提：len(s)=x+2y&gt;k</span></span><br><span class="line">        <span class="comment"># 要求：x&lt;=k</span></span><br><span class="line">        l = []</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">            <span class="keyword">if</span> i <span class="keyword">in</span> l:</span><br><span class="line">                l.remove(i)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                l.append(i)</span><br><span class="line">        <span class="keyword">if</span> len(l) &lt;= k:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure><h2 id="3"><a href="#3" class="headerlink" title="3"></a>3</h2><p>事后看一两三四五的解法，做出来的</p><p><a href="https://www.bilibili.com/video/BV1Ae411x7fa/?p=1">https://www.bilibili.com/video/BV1Ae411x7fa/?p=1</a></p><p>LeetCode 考的是智商吧</p><img src="/Users/zhangronghui/Library/Application Support/typora-user-images/image-20200405151432618.png" alt="image-20200405151432618" style="zoom:50%;" /><p>求距离时不要用 根号，反之把半径平方即可比较，否则会很慢</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">d</span><span class="params">(self, x1, y1, x2, y2)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> (x1-x2)**<span class="number">2</span>+(y1-y2)**<span class="number">2</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">checkOverlap</span><span class="params">(self, r: int, x: int, y: int, x1: int, y1: int, x2: int, y2: int)</span> -&gt; bool:</span></span><br><span class="line">        <span class="comment"># 圆心在矩形内</span></span><br><span class="line">        <span class="keyword">if</span> x1 &lt;= x &lt;= x2 <span class="keyword">and</span> y1 &lt;= y &lt;= y2:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="comment"># 圆心到上下两边的距离</span></span><br><span class="line">        <span class="keyword">if</span> x1 &lt;= x &lt;= x2 <span class="keyword">and</span> min(abs(y1-y), abs(y2-y))&lt;=r:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="comment"># 圆心到左右两边的距离</span></span><br><span class="line">        <span class="keyword">if</span> y1 &lt;= y &lt;= y2 <span class="keyword">and</span> min(abs(x1-x), abs(x2-x))&lt;=r:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="comment"># # 圆心到四点的距离</span></span><br><span class="line">        <span class="keyword">if</span> min(self.d(x, y, x1, y1), self.d(x, y, x1, y2), self.d(x, y, x2, y1), self.d(x, y, x2, y2)) &lt;= r*r:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure><p>另一种思路：</p><p>将矩形扩大后判断圆心是否在里面，接着判断圆心到四个顶点的距离是否不大于 r</p><p>其实这就是上面解法的另一种解释</p><img src="https://i.loli.net/2020/04/05/5DRCiebSaBYI8Gu.png" alt="5DRCiebSaBYI8Gu" style="zoom:50%;" /><h2 id="4"><a href="#4" class="headerlink" title="4"></a>4</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">maxSatisfaction</span><span class="params">(self, satisfaction: List[int])</span> -&gt; int:</span></span><br><span class="line">        <span class="comment"># 1. sort</span></span><br><span class="line">        <span class="comment"># 2. 找到第一个让 sum 为负数的位置, 移动中将 sum 加到 result 中</span></span><br><span class="line">        satisfaction.sort(reverse=<span class="literal">True</span>)</span><br><span class="line">        _sum  = <span class="number">0</span></span><br><span class="line">        result = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> satisfaction:</span><br><span class="line">            _sum += i</span><br><span class="line">            <span class="keyword">if</span> _sum&lt;<span class="number">0</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            result += _sum</span><br><span class="line">        <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h2 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;&quot;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;input checked=&quot;&quot; disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; &lt;a href=&quot;https://leetcode.com/contest/biweekly-contest-23/problems/count-largest-group&quot;&gt;Count Largest Group&lt;/a&gt;&lt;strong&gt;3&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&quot;&quot; disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; &lt;a href=&quot;https://leetcode.com/contest/biweekly-contest-23/problems/construct-k-palindrome-strings&quot;&gt;Construct K Palindrome Strings&lt;/a&gt;&lt;strong&gt;5&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; &lt;a href=&quot;https://leetcode.com/contest/biweekly-contest-23/problems/circle-and-rectangle-overlapping&quot;&gt;Circle and Rectangle Overlapping&lt;/a&gt;&lt;strong&gt;5&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&quot;&quot; disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; &lt;a href=&quot;https://leetcode.com/contest/biweekly-contest-23/problems/reducing-dishes&quot;&gt;Reducing Dishes&lt;/a&gt;&lt;strong&gt;6&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Leetcode weekly contest" scheme="https://zronghui.github.io/categories/Leetcode-weekly-contest/"/>
    
    
  </entry>
  
  <entry>
    <title>weekly-contest-183</title>
    <link href="https://zronghui.github.io/Leetcode%20weekly%20contest/weekly-contest-183.html"/>
    <id>https://zronghui.github.io/Leetcode%20weekly%20contest/weekly-contest-183.html</id>
    <published>2020-04-05T03:58:19.000Z</published>
    <updated>2020-04-12T13:27:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><ul><li><input checked="" disabled="" type="checkbox"> <a href="https://leetcode.com/contest/weekly-contest-183/problems/minimum-subsequence-in-non-increasing-order">Minimum Subsequence in Non-Increasing Order</a><strong>4</strong></li><li><input checked="" disabled="" type="checkbox"> <a href="https://leetcode.com/contest/weekly-contest-183/problems/number-of-steps-to-reduce-a-number-in-binary-representation-to-one">Number of Steps to Reduce a Number in Binary Representation to One</a><strong>4</strong></li><li><input disabled="" type="checkbox"> <a href="https://leetcode.com/contest/weekly-contest-183/problems/longest-happy-string">Longest Happy String</a><strong>6</strong></li><li><input disabled="" type="checkbox"> <a href="https://leetcode.com/contest/weekly-contest-183/problems/stone-game-iii">Stone Game III</a><strong>7</strong></li></ul><a id="more"></a><img src="/Users/zhangronghui/Library/Application Support/typora-user-images/image-20200405120055077.png" alt="image-20200405120055077" style="zoom:50%;" /><h2 id="1"><a href="#1" class="headerlink" title="1"></a>1</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">minSubsequence</span><span class="params">(self, nums: List[int])</span> -&gt; List[int]:</span></span><br><span class="line">        <span class="keyword">if</span> len(nums)&lt;<span class="number">2</span>:</span><br><span class="line">            <span class="keyword">return</span> nums</span><br><span class="line">        nums.sort(reverse=<span class="literal">True</span>)</span><br><span class="line">        _sum = sum(nums)</span><br><span class="line">        t = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i, k <span class="keyword">in</span> enumerate(nums):</span><br><span class="line">            t += k</span><br><span class="line">            <span class="keyword">if</span> t&gt;_sum/<span class="number">2</span>:</span><br><span class="line">                <span class="keyword">return</span> nums[:i+<span class="number">1</span>]</span><br></pre></td></tr></table></figure><h2 id="2"><a href="#2" class="headerlink" title="2"></a>2</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add</span><span class="params">(self, s)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">'0'</span> <span class="keyword">not</span> <span class="keyword">in</span> s:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'1'</span> + len(s)*<span class="string">'0'</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> list(range(len(s)))[::<span class="number">-1</span>]:</span><br><span class="line">            <span class="keyword">if</span> s[i]==<span class="string">'0'</span>:</span><br><span class="line">                <span class="keyword">return</span> s[:i] + <span class="string">'1'</span> + <span class="string">'0'</span> * (len(s)-i<span class="number">-1</span>)</span><br><span class="line">        </span><br><span class="line">        </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">numSteps</span><span class="params">(self, s: str)</span> -&gt; int:</span></span><br><span class="line">        result = <span class="number">0</span></span><br><span class="line">        <span class="keyword">if</span> len(s)==<span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> s!=<span class="string">'1'</span>:</span><br><span class="line">            result += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> s[<span class="number">-1</span>]==<span class="string">'0'</span>:</span><br><span class="line">                s = s[:<span class="number">-1</span>]</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                s = self.add(s)</span><br><span class="line">        <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><h2 id="3"><a href="#3" class="headerlink" title="3"></a>3</h2><p>(贪心) O((a+b+c)2)O((a+b+c)2)<br>我们交替地往原字符串中插入 a，b 或 c，且保证每一次插入时都不会破坏规则。<br>由于是交替的插入，所以如果出现了某个字符不能插入的情况，则说明无论如何都没有办法插入这么多个该字符。</p><img src="https://i.loli.net/2020/04/05/S3muIil68NCVzWt.png" alt="S3muIil68NCVzWt" style="zoom: 33%;" /><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">insert</span><span class="params">(self, s, c)</span>:</span></span><br><span class="line">        <span class="comment"># 返回插入 i(a, b, c) 后的 s, isSuccess</span></span><br><span class="line">        <span class="comment"># 长度小于 2 or 第一个字母不同 or 第二位不同 直接放首位</span></span><br><span class="line">        <span class="keyword">if</span> len(s)&lt;<span class="number">2</span> <span class="keyword">or</span> s[<span class="number">0</span>]!=c <span class="keyword">or</span> s[<span class="number">1</span>]!=c:</span><br><span class="line">            <span class="keyword">return</span> c + s, <span class="literal">True</span></span><br><span class="line">        <span class="comment"># last 字母不同 or last-1 字母不同，直接放末位</span></span><br><span class="line">        <span class="keyword">if</span> s[<span class="number">-1</span>]!=c <span class="keyword">or</span> s[<span class="number">-2</span>]!=c:</span><br><span class="line">            <span class="keyword">return</span> s + c, <span class="literal">True</span></span><br><span class="line">        <span class="comment"># now len(s) &gt;= 5  等于 5 的情况：ccbcc</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">2</span>, len(s)<span class="number">-2</span>):</span><br><span class="line">            <span class="keyword">if</span> s[i<span class="number">-1</span>]==c <span class="keyword">and</span> s[i<span class="number">-2</span>]==c:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">if</span> s[i<span class="number">-1</span>]!=c <span class="keyword">and</span> (s[i]!=c <span class="keyword">or</span> s[i+<span class="number">1</span>]!=c):</span><br><span class="line">                <span class="keyword">return</span> s[:i] + c + s[i:], <span class="literal">True</span></span><br><span class="line">        <span class="keyword">return</span> s, <span class="literal">False</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">longestDiverseString</span><span class="params">(self, a: int, b: int, c: int)</span> -&gt; str:</span></span><br><span class="line">        <span class="comment"># 逐个插入 a b c ，直至插入失败或者插完</span></span><br><span class="line">        s = <span class="string">''</span></span><br><span class="line">        <span class="keyword">while</span> a+b+c:</span><br><span class="line">            <span class="keyword">if</span> a:</span><br><span class="line">                s, ok = self.insert(s, <span class="string">'a'</span>)</span><br><span class="line">                a -= <span class="number">1</span></span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> ok:</span><br><span class="line">                    <span class="keyword">return</span> s</span><br><span class="line">            <span class="keyword">if</span> b:</span><br><span class="line">                s, ok = self.insert(s, <span class="string">'b'</span>)</span><br><span class="line">                b -= <span class="number">1</span></span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> ok:</span><br><span class="line">                    <span class="keyword">return</span> s</span><br><span class="line">            <span class="keyword">if</span> c:</span><br><span class="line">                s, ok = self.insert(s, <span class="string">'c'</span>)</span><br><span class="line">                c -= <span class="number">1</span></span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> ok:</span><br><span class="line">                    <span class="keyword">return</span> s</span><br><span class="line">            print(s)</span><br><span class="line">        <span class="keyword">return</span> s</span><br></pre></td></tr></table></figure><h2 id="4"><a href="#4" class="headerlink" title="4"></a>4</h2><img src="https://i.loli.net/2020/04/08/oQypV49rS5KL32k.png" alt="oQypV49rS5KL32k" style="zoom:50%;" /><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">stoneGameIII</span><span class="params">(self, l: List[int])</span> -&gt; str:</span></span><br><span class="line">        dp = [<span class="number">0</span> <span class="keyword">for</span> i <span class="keyword">in</span> range(len(l))]</span><br><span class="line">        dp[<span class="number">-1</span>] = l[<span class="number">-1</span>]</span><br><span class="line">        <span class="keyword">if</span> len(l)&gt;<span class="number">1</span>:</span><br><span class="line">            dp[<span class="number">-2</span>] = max(l[<span class="number">-2</span>]-dp[<span class="number">-1</span>], sum(l[<span class="number">-2</span>:]))</span><br><span class="line">        <span class="keyword">if</span> len(l)&gt;<span class="number">2</span>:</span><br><span class="line">            dp[<span class="number">-3</span>] = max(l[<span class="number">-3</span>]-dp[<span class="number">-2</span>], l[<span class="number">-3</span>]+l[<span class="number">-2</span>]-dp[<span class="number">-1</span>], sum(l[<span class="number">-3</span>:]))</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(l)<span class="number">-4</span>, <span class="number">-1</span>, <span class="number">-1</span>):</span><br><span class="line">            dp[i] = max(l[i]-dp[i+<span class="number">1</span>], l[i]+l[i+<span class="number">1</span>]-dp[i+<span class="number">2</span>], l[i]+l[i+<span class="number">1</span>]+l[i+<span class="number">2</span>]-dp[i+<span class="number">3</span>])</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'Alice'</span> <span class="keyword">if</span> dp[<span class="number">0</span>]&gt;<span class="number">0</span> <span class="keyword">else</span> <span class="string">'Bob'</span> <span class="keyword">if</span> dp[<span class="number">0</span>]&lt;<span class="number">0</span> <span class="keyword">else</span> <span class="string">'Tie'</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&quot;&quot; disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; &lt;a href=&quot;https://leetcode.com/contest/weekly-contest-183/problems/minimum-subsequence-in-non-increasing-order&quot;&gt;Minimum Subsequence in Non-Increasing Order&lt;/a&gt;&lt;strong&gt;4&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;input checked=&quot;&quot; disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; &lt;a href=&quot;https://leetcode.com/contest/weekly-contest-183/problems/number-of-steps-to-reduce-a-number-in-binary-representation-to-one&quot;&gt;Number of Steps to Reduce a Number in Binary Representation to One&lt;/a&gt;&lt;strong&gt;4&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; &lt;a href=&quot;https://leetcode.com/contest/weekly-contest-183/problems/longest-happy-string&quot;&gt;Longest Happy String&lt;/a&gt;&lt;strong&gt;6&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&quot;&quot; type=&quot;checkbox&quot;&gt; &lt;a href=&quot;https://leetcode.com/contest/weekly-contest-183/problems/stone-game-iii&quot;&gt;Stone Game III&lt;/a&gt;&lt;strong&gt;7&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="Leetcode weekly contest" scheme="https://zronghui.github.io/categories/Leetcode-weekly-contest/"/>
    
    
  </entry>
  
  <entry>
    <title>信息系统实训-第3次作业</title>
    <link href="https://zronghui.github.io/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%AE%AD/%E6%8F%90%E4%BA%A4%E4%BD%9C%E4%B8%9A/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%AE%AD-%E7%AC%AC3%E6%AC%A1%E4%BD%9C%E4%B8%9A.html"/>
    <id>https://zronghui.github.io/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%AE%AD/%E6%8F%90%E4%BA%A4%E4%BD%9C%E4%B8%9A/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%AE%AD-%E7%AC%AC3%E6%AC%A1%E4%BD%9C%E4%B8%9A.html</id>
    <published>2020-04-01T06:48:29.000Z</published>
    <updated>2020-04-01T06:55:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a><h2 id="建立index，插入数据"><a href="#建立index，插入数据" class="headerlink" title="建立index，插入数据"></a>建立index，插入数据</h2><h3 id="code"><a href="#code" class="headerlink" title="code"></a>code</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> chain</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> pretty_errors</span><br><span class="line"><span class="keyword">from</span> elasticsearch <span class="keyword">import</span> Elasticsearch, helpers</span><br><span class="line"></span><br><span class="line">pretty_errors.activate()</span><br><span class="line"></span><br><span class="line">es = Elasticsearch()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 建立index</span></span><br><span class="line">mapping = &#123;</span><br><span class="line">    <span class="string">'properties'</span>: &#123;</span><br><span class="line">        <span class="string">'book_name'</span>: &#123;</span><br><span class="line">            <span class="string">'type'</span>: <span class="string">'text'</span>,</span><br><span class="line">            <span class="string">'analyzer'</span>: <span class="string">'ik_max_word'</span>,</span><br><span class="line">            <span class="string">'search_analyzer'</span>: <span class="string">'ik_max_word'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">es.indices.delete(index=<span class="string">'books'</span>, ignore=[<span class="number">400</span>, <span class="number">404</span>])</span><br><span class="line">es.indices.create(index=<span class="string">'books'</span>, ignore=<span class="number">400</span>)</span><br><span class="line">result = es.indices.put_mapping(index=<span class="string">'books'</span>, doc_type=<span class="string">'books'</span>, body=mapping)</span><br><span class="line">print(result)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 批量插入数据</span></span><br><span class="line">print(<span class="string">"============== index ================"</span>)</span><br><span class="line">count = <span class="number">0</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line">j = <span class="number">0</span></span><br><span class="line">num = <span class="number">0</span></span><br><span class="line">actions = []</span><br><span class="line">max_count = <span class="number">2000</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'shudan1.json'</span>, <span class="string">'r'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f1, open(<span class="string">'volmoe1.json'</span>, <span class="string">'r'</span>, encoding=<span class="string">'utf-8'</span>) <span class="keyword">as</span> f2:</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> chain(f1, f2):</span><br><span class="line">        j += <span class="number">1</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            triple_dict = json.loads(line)</span><br><span class="line">            action = &#123;</span><br><span class="line">                <span class="string">"_index"</span>: <span class="string">"books"</span>,</span><br><span class="line">                <span class="string">"_type"</span>: <span class="string">"books"</span>,</span><br><span class="line">                <span class="comment"># "_id": i,</span></span><br><span class="line">                <span class="string">"_source"</span>: triple_dict</span><br><span class="line">            &#125;</span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">            count += <span class="number">1</span></span><br><span class="line">            actions.append(action)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            print(<span class="string">f"!!! <span class="subst">&#123;j&#125;</span> th row insert faied: <span class="subst">&#123;line&#125;</span>"</span>)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">if</span> count &gt;= max_count:</span><br><span class="line">            helpers.bulk(es, actions)</span><br><span class="line">            actions = []</span><br><span class="line">            count = <span class="number">0</span></span><br><span class="line">            num += <span class="number">1</span></span><br><span class="line">            print(<span class="string">"Insert "</span> + str(num * max_count) + <span class="string">" records."</span>)</span><br><span class="line">helpers.bulk(es, actions)</span><br><span class="line">print(<span class="string">'finish~~~'</span>)</span><br></pre></td></tr></table></figure><h3 id="运行截图"><a href="#运行截图" class="headerlink" title="运行截图"></a>运行截图</h3><img src="/Users/zhangronghui/Library/Application Support/typora-user-images/image-20200401145109065.png" alt="image-20200401145109065" style="zoom:50%;" /><img src="https://i.loli.net/2020/04/01/PSpLFleX5hnNTdW.png" alt="PSpLFleX5hnNTdW" style="zoom: 50%;" /><img src="https://i.loli.net/2020/04/01/vGTe3juAI6baCft.png" alt="vGTe3juAI6baCft" style="zoom:50%;" />]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
    
    </summary>
    
    
      <category term="研究生课程" scheme="https://zronghui.github.io/categories/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/"/>
    
      <category term="信息系统实训" scheme="https://zronghui.github.io/categories/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%AE%AD/"/>
    
      <category term="提交作业" scheme="https://zronghui.github.io/categories/%E7%A0%94%E7%A9%B6%E7%94%9F%E8%AF%BE%E7%A8%8B/%E4%BF%A1%E6%81%AF%E7%B3%BB%E7%BB%9F%E5%AE%9E%E8%AE%AD/%E6%8F%90%E4%BA%A4%E4%BD%9C%E4%B8%9A/"/>
    
    
  </entry>
  
  <entry>
    <title>tricks-2020-04-1th-week</title>
    <link href="https://zronghui.github.io/tricks/tricks-2020-04-1th-week.html"/>
    <id>https://zronghui.github.io/tricks/tricks-2020-04-1th-week.html</id>
    <published>2020-04-01T03:52:38.000Z</published>
    <updated>2020-04-09T02:59:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><a id="more"></a><h1 id="04-01"><a href="#04-01" class="headerlink" title="04-01"></a>04-01</h1><h2 id="快速抠图"><a href="#快速抠图" class="headerlink" title="快速抠图"></a>快速抠图</h2><p><a href="https://bgeraser.com/index.html">Remove Background from Images - Background Eraser</a></p><h2 id="Screen-最简单的屏幕共享"><a href="#Screen-最简单的屏幕共享" class="headerlink" title="Screen - 最简单的屏幕共享"></a>Screen - 最简单的屏幕共享</h2><p><a href="https://www.appinn.com/screen-online/">Screen - 最简单的屏幕共享方式，可视频、语音、屏幕标注，就像在一间办公室一样 - 小众软件</a></p><p><a href="https://www.ghpym.com/andpandownload.html">Android PanDownload v1.2.9 - 果核剥壳</a></p><h2 id="bilibili-ASS-弹幕在线转换"><a href="#bilibili-ASS-弹幕在线转换" class="headerlink" title="bilibili ASS 弹幕在线转换"></a>bilibili ASS 弹幕在线转换</h2><p>默认只能一个一个文件转换，经过修改后可多选</p><p><a href="https://tiansh.github.io/us-danmaku/bilibili/">bilibili ASS 弹幕在线转换</a></p><p><a href="file:///Volumes/Data/PycharmProjects/private/24%20bilibili%20ASS%20%E5%BC%B9%E5%B9%95%E5%9C%A8%E7%BA%BF%E8%BD%AC%E6%8D%A2/bilibili%20ASS%20%E5%BC%B9%E5%B9%95%E5%9C%A8%E7%BA%BF%E8%BD%AC%E6%8D%A2.htm">bilibili ASS 弹幕在线转换-本地版</a></p><h2 id="健身小程序：4分钟-Tabata-健身"><a href="#健身小程序：4分钟-Tabata-健身" class="headerlink" title="健身小程序：4分钟 Tabata 健身"></a>健身小程序：4分钟 Tabata 健身</h2><p><a href="https://www.appinn.com/jianshen-wechat-miniapp/">健身小程序：4分钟 Tabata 健身 - 小众软件</a></p><h2 id="QtScrcpy-Android实时投屏软件"><a href="#QtScrcpy-Android实时投屏软件" class="headerlink" title="QtScrcpy: Android实时投屏软件"></a>QtScrcpy: Android实时投屏软件</h2><p><a href="https://gitee.com/Barryda/QtScrcpy">QtScrcpy: Android实时投屏软件，此应用程序提供USB(或通过TCP/IP)连接的Android设备的显示和控制。它不需要任何root访问权限</a></p><h2 id="幕享投屏"><a href="#幕享投屏" class="headerlink" title="幕享投屏"></a>幕享投屏</h2><p><a href="https://www.iplaysoft.com/p/mu-xiang">幕享投屏 - 快上车！超好用的免费无线投屏软件神器！ - 异次元软件下载</a></p><h2 id="高清杂志网-爬虫"><a href="#高清杂志网-爬虫" class="headerlink" title="高清杂志网 爬虫"></a><del>高清杂志网 爬虫</del></h2><p>现在正在修复中</p><p><a href="http://www.gqzzw.com/class.php">高清杂志网-所有杂志</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">scrapy crawl gqzzw -a lastPage&#x3D;&#39;http:&#x2F;&#x2F;www.gqzzw.com&#x2F;type&#x2F;yili&#x2F;9&#39; -a zzname&#x3D;&#39;意林&#39;</span><br><span class="line">scrapy crawl gqzzw -a lastPage&#x3D;&#39;http:&#x2F;&#x2F;www.gqzzw.com&#x2F;type&#x2F;duzh&#x2F;11&#39; -a zzname&#x3D;&#39;读者&#39;</span><br><span class="line">scrapy crawl gqzzw -a lastPage&#x3D;&#39;http:&#x2F;&#x2F;www.gqzzw.com&#x2F;type&#x2F;dzyc&#x2F;2&#39; -a zzname&#x3D;&#39;读者·原创版&#39;</span><br><span class="line">scrapy crawl gqzzw -a lastPage&#x3D;&#39;http:&#x2F;&#x2F;www.gqzzw.com&#x2F;type&#x2F;dzxy&#x2F;9&#39; -a zzname&#x3D;&#39;读者·校园版&#39;</span><br><span class="line">scrapy crawl gqzzw -a lastPage&#x3D;&#39;http:&#x2F;&#x2F;www.gqzzw.com&#x2F;type&#x2F;bjzn&#x2F;4&#39; -a zzname&#x3D;&#39;养生保健指南&#39;</span><br><span class="line">scrapy crawl gqzzw -a lastPage&#x3D;&#39;http:&#x2F;&#x2F;www.gqzzw.com&#x2F;type&#x2F;dzjk&#x2F;5&#39; -a zzname&#x3D;&#39;大众健康&#39;</span><br></pre></td></tr></table></figure><p><a href="http://www.gqzzw.com/type/jssw/6">http://www.gqzzw.com/type/jssw/6</a><br><a href="http://www.gqzzw.com/type/zsjs/3">http://www.gqzzw.com/type/zsjs/3</a></p><p>lastPage: <a href="http://www.gqzzw.com/type/dzyx/4">http://www.gqzzw.com/type/dzyx/4</a><br>zzname: 大众医学</p><p>lastPage: <a href="http://www.gqzzw.com/type/jkbl/4">http://www.gqzzw.com/type/jkbl/4</a><br>zzname: 健康博览</p><p>lastPage: <a href="http://www.gqzzw.com/type/klys/4">http://www.gqzzw.com/type/klys/4</a><br>zzname: 家庭医药·快乐养生</p><p>lastPage: <a href="http://www.gqzzw.com/type/rsjk/4">http://www.gqzzw.com/type/rsjk/4</a><br>zzname: 饮食与健康·下旬刊</p><p><a href="http://www.gqzzw.com/type/yssj/4">高清杂志网-分类</a><br><a href="http://www.gqzzw.com/type/dnah/9">高清杂志网-分类</a></p><p>更多杂志和电子书下载：</p><p><a href="http://www.gqzzw.com/">高清杂志网【官网】</a><br><a href="https://www.pdfzj.com/">PDF之家 – PDF杂志,PDF图书免费下载</a><br><a href="https://www.ifblue.net/">若蓝格| 精品阅读时光精品阅读时光</a><br><a href="https://downmagaz.com/">Download PDF magazines - Magazines Commumity!</a><br><a href="http://www.gutenberg.org/">Gutenberg</a></p><h1 id="04-02"><a href="#04-02" class="headerlink" title="04-02"></a>04-02</h1><h2 id="ProgramCreek"><a href="#ProgramCreek" class="headerlink" title="ProgramCreek"></a>ProgramCreek</h2><p><a href="https://www.programcreek.com/">ProgramCreek.com</a></p><p><a href="https://www.programcreek.com/2015/12/top-10-java-utility-classes/">Top 16 Java Utility Classes</a><br><a href="https://www.programcreek.com/simple-java/">Simple Java</a></p><p>可以用例子学习流行库</p><p><a href="https://www.programcreek.com/python/index/module/?action=index&page=1">Python Example</a></p><p>Python code examples search</p><p><a href="https://www.programcreek.com/python/">Python Example</a></p><h2 id="在线抠图、短信接码"><a href="#在线抠图、短信接码" class="headerlink" title="在线抠图、短信接码"></a>在线抠图、短信接码</h2><p><a href="https://hao.su/2495/">免费短信接码网站 - 不死鸟 - 分享为王</a><br><a href="https://hao.su/2968/">在线抠图 - 不死鸟 - 分享为王</a></p><p>搞定设计在线抠图</p><p><a href="https://www.gaoding.com/koutu">https://www.gaoding.com/koutu</a></p><p>变色龙在线抠图</p><p><a href="https://www.bslong.cn/editor.html">https://www.bslong.cn/editor.html</a></p><p>在线清除背景</p><p><a href="https://www.remove.bg">https://www.remove.bg</a><br><a href="https://bgeraser.com">https://bgeraser.com</a></p><p><a href="https://sspai.com/post/59791">「喜提退税」或者「天降横债」，个税汇算清缴到底是什么？ - 少数派</a></p><p>daemon : 守护进程 。</p><p>是一个运行在后台且不受终端控制的进程，其大多数都是随着系统启动而启动，无特殊情况下会一直保持运行直到系统关闭。</p><p>它的存在为我们用户和系统本身提供有用的服务。常见的有 httpd，mysqld，syslogd 等，一般守护程序名称会以 d 结尾。</p><p><a href="https://chrome.google.com/webstore/category/collection/chrome_themes?hl=zh-CN">Chrome Themes</a> </p><p><strong>14款由 Chrome 团队发布的浏览器主题</strong></p><h2 id="WebSocket，它与HTTP有何不同"><a href="#WebSocket，它与HTTP有何不同" class="headerlink" title="WebSocket，它与HTTP有何不同"></a>WebSocket，它与HTTP有何不同</h2><p><a href="https://mp.weixin.qq.com/s?__biz=MzUzNTY5MzU2MA==&mid=2247484305&idx=1&sn=df434981e616c94f62fc6f44a865375d&chksm=fa80d206cdf75b1032de3f883bae6f57191c9795a6f6bca39d840d449a44eb4130096fc356c4&token=771783635&lang=zh_CN#rd">什么是WebSocket，它与HTTP有何不同？</a></p><p><strong>区别</strong></p><p>HTTP是单向的，客户端发送请求，服务器发送响应</p><p>WebSocket是双向的，在客户端-服务器通信的场景中使用的全双工协议，与HTTP不同，它以ws://或wss://开头。它是一个有状态协议，这意味着客户端和服务器之间的连接将保持活动状态，直到被任何一方（客户端或服务器）终止。在通过客户端和服务器中的任何一方关闭连接之后，连接将从两端终止。</p><p><strong>使用WebSocket的场景</strong></p><p>即时Web应用程序、游戏应用程序、聊天应用程序</p><p><strong>不能使用WebSocket的场景</strong></p><p>如果我们需要通过网络传输的任何实时更新或连续数据流，则可以使用<code>WebSocket</code>。如果我们要获取旧数据，或者只想获取一次数据供应用程序使用，则应该使用<code>HTTP</code>协议，不需要很频繁或仅获取一次的数据可以通过简单的<code>HTTP</code>请求查询，因此在这种情况下最好不要使用<code>WebSocket</code>。</p><p>注意：如果仅加载一次数据，则<code>RESTful</code> <code>Web</code>服务足以从服务器获取数据。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><table><thead><tr><th align="left">WEBSOCKET</th><th align="left">HTTP</th></tr></thead><tbody><tr><td align="left"><code>WebSocket</code>是一种双向通信协议，可以通过重用已建立的连接通道将数据从客户端发送到服务器，或者从服务器发送到客户端。连接保持活动状态，直到被客户端或服务器终止。</td><td align="left"><code>HTTP</code>协议是<code>TCP</code>协议之上的单向协议，<code>TCP</code>是面向连接的传输层协议，我们可以在获得响应HTTP连接关闭后再使用HTTP请求方法来创建连接。</td></tr><tr><td align="left">几乎所有的实时应用程序（如（交易，监视，通知）服务）都使用<code>WebSocket</code>在单个通信通道上接收数据。</td><td align="left">简单的<code>RESTful</code>应用程序使用无状态的<code>HTTP</code>协议。</td></tr><tr><td align="left">所有经常更新的应用程序都应该使用<code>WebSocket</code>，它比<code>HTTP</code>连接更快。</td><td align="left">当我们不想在特定时间内保留连接或不重复使用单个连接来传输数据时使用<code>HTTP</code>，<code>HTTP</code>连接的速度比<code>WebSocket</code>慢。</td></tr></tbody></table><h1 id="04-04"><a href="#04-04" class="headerlink" title="04-04"></a>04-04</h1><h3 id="tmux"><a href="#tmux" class="headerlink" title="tmux"></a>tmux</h3><ul><li><a href="https://linux.cn/article-8421-1.html">使用 tmux 打造更强大的终端</a></li><li><a href="http://blog.jobbole.com/87584/">Tmux 速成教程：技巧和调整</a></li><li><a href="https://tmux-plugins.github.io/tmux-yank/">tmux-yank</a></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install tmux # ubuntu</span><br><span class="line">$ sudo brew    install tmux    # osX</span><br><span class="line">C-b ?          显示快捷键帮助</span><br><span class="line"></span><br><span class="line">C-b C-o        调换窗口位置，类似与vim 里的C-w</span><br><span class="line">C-b 空格键     采用下一个内置布局</span><br><span class="line">C-b !          把当前窗口变为新窗口</span><br><span class="line">C-b &quot;          模向分隔窗口</span><br><span class="line">C-b %          纵向分隔窗口</span><br><span class="line">C-b q          显示分隔窗口的编号</span><br><span class="line">C-b o          跳到下一个分隔窗口</span><br><span class="line">C-b 上下键     上一个及下一个分隔窗口</span><br><span class="line">C-b ALT-方向键 调整分隔窗口大小</span><br><span class="line">C-b c          创建新窗口</span><br><span class="line">C-b 0~9        选择几号窗口</span><br><span class="line">C-b c          创建新窗口</span><br><span class="line">C-b n          选择下一个窗口</span><br><span class="line">C-b l          切换到最后使用的窗口</span><br><span class="line">C-b p          选择前一个窗口</span><br><span class="line">C-b w          以菜单方式显示及选择窗口</span><br><span class="line">C-b t          显示时钟</span><br><span class="line">C-b ;          切换到最后一个使用的面板</span><br><span class="line">C-b x          关闭面板</span><br><span class="line">C-b &amp;          关闭窗口</span><br><span class="line">C-b s          以菜单方式显示和选择会话</span><br><span class="line"></span><br><span class="line">C-b d          退出tumx，并保存当前会话，这时，tmux仍在后台运行，</span><br><span class="line">               可以通过tmux attach进入 到指定的会话</span><br><span class="line">$ tmux list-sessions</span><br><span class="line"></span><br><span class="line">$ tmux attach-session   # 附加</span><br></pre></td></tr></table></figure><h3 id="tmate"><a href="#tmate" class="headerlink" title="tmate"></a><a href="https://tmate.io/">tmate</a></h3><ul><li><a href="https://linux.cn/article-9096-1.html">https://linux.cn/article-9096-1.html</a></li></ul><h1 id="Golang"><a href="#Golang" class="headerlink" title="Golang"></a>Golang</h1><ul><li><a href="https://golang.org/">golang.org</a></li><li><a href="http://go-search.org/">go-search</a></li><li><a href="https://tour.go-zh.org/">Go 指南</a></li><li><a href="https://www.gitbook.com/book/yar999/gopl-zh/details">Go 语言圣经</a></li><li><a href="https://www.kancloud.cn/kancloud/web-application-with-golang/44163">Go Web 编程 (www.kancloud)</a></li><li><a href="https://wizardforcel.gitbooks.io/build-web-application-with-golang/content/">Go Web 编程 (gitbooks)</a></li></ul><p><a href="https://brewinstall.org/">BrewInstall - Search Any MAC APP and Install them</a></p><p><a href="https://hao.su/3434/">UptimeRobot网站宕机检测 - 不死鸟 - 分享为王</a></p><p><a href="https://www.ghpym.com/smartnovel.html">Smartnovel(人工智能文章创作助手) v0.1 - 果核剥壳</a></p><h1 id="04-05"><a href="#04-05" class="headerlink" title="04-05"></a>04-05</h1><h3 id="自定义的番茄钟"><a href="#自定义的番茄钟" class="headerlink" title="自定义的番茄钟"></a>自定义的番茄钟</h3><p><a href="https://github.com/RoderickQiu/wnr">RoderickQiu/wnr: 💻 Work and rest, with wnr now.</a></p><h3 id="网页悬浮"><a href="#网页悬浮" class="headerlink" title="网页悬浮"></a>网页悬浮</h3><p><a href="https://www.appinn.com/pennywise/">Pennywise - 在浮动窗口中打开任何网站，并置顶显示 [Windows/macOS/Linux] - 小众软件</a><br><a href="https://github.com/kamranahmedse/pennywise">kamranahmedse/pennywise: Cross-platform application to open any website or media in a floating window</a></p><p>未测试的 win 软件</p><p><a href="https://www.appinn.com/extra-buttons/">eXtra Buttons - 给标题栏添加额外的按钮 - 小众软件</a><br><a href="https://www.appinn.com/wintop/">Window On Top - 让任意 Windows 窗口位于顶层 - 小众软件</a><br><a href="https://www.appinn.com/on-top-replica/">On Top Replica - 置顶任意窗口的任意部分工具 - 小众软件</a></p><h2 id="连连看外挂"><a href="#连连看外挂" class="headerlink" title="连连看外挂"></a><del>连连看外挂</del></h2><p>找好 Mac 上弄 安卓QQ 游戏里面的连连看外挂，想想算了，相关项目、工具如下：</p><p><a href="https://github.com/GitHub-Laziji/lianliankan/blob/master/lianliankan.py">lianliankan/lianliankan.py at master · GitHub-Laziji/lianliankan</a><br><a href="https://blog.csdn.net/ibiao/article/details/77859997">pyautogui （一）_Python_静心学习、耐心沉淀-CSDN博客</a><br><a href="https://www.iplaysoft.com/scrcpy.html">Scrcpy - 开源免费在电脑显示手机画面并控制手机的工具 (投屏/录屏/免Root) - 异次元软件下载</a><br><a href="https://github.com/ZhangFengze/QQLianLianKanCheat/blob/master/Cheat/Cheat/main.py">QQLianLianKanCheat/main.py at master · ZhangFengze/QQLianLianKanCheat</a></p><h2 id="正则"><a href="#正则" class="headerlink" title="正则 |"></a>正则 |</h2><p>| 以() 划分边界：</p><img src="https://i.loli.net/2020/04/05/N2jvFw8OlGARxCU.png" alt="N2jvFw8OlGARxCU" style="zoom:50%;" /><img src="/Users/zhangronghui/Library/Application Support/typora-user-images/image-20200405222000791.png" alt="image-20200405222000791" style="zoom:50%;" /><p><a href="https://www.52fzg.com/pcrj/7005.html">AG网页视频解析嗅探下载工具v4.2 支持主流影视网站优酷、腾讯、爱奇艺等 - 无二辅助网</a></p><p><a href="https://www.softwhy.com/texiao-107/">【新提醒】分页代码-数字分页效果-拖动分页特效-蚂蚁部落</a></p><h2 id="diff-软件"><a href="#diff-软件" class="headerlink" title="diff 软件"></a>diff 软件</h2><p><a href="https://linux.cn/article-12067-1.html?utm_source=rss&utm_medium=rss">技术|不喜欢 diff 么？试试 Meld 吧</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew cask install meld</span><br><span class="line">meld conway1.py conway2.py</span><br></pre></td></tr></table></figure><p>你可以轻松查看并单击箭头（左右都行）合并文件之间的更改。你甚至可以实时编辑文件（在输入时，Meld 可以用作具有实时比较功能的简单文本编辑器）—只是要记得在关闭窗口之前保存。</p><p>你甚至可以比较和编辑三个不同的文件</p><p>meld conway.py（conway.py 在 Git 中），它将显示自上次 Git 提交以来所做的更改</p><p>如果你运行 meld .，你将看到当前目录（如果位于仓库的根目录，就是整个仓库）中的所有更改</p><p>你还可以比较两个目录，这有时很方便</p><p><a href="http://mall.cnki.net/magazine/magalist/YSSJ.htm">养生大世界杂志-中国知网</a><br><a href="http://mall.cnki.net/magazine/magalist/YSSJ.htm">养生大世界杂志-中国知网</a><br><a href="http://mall.cnki.net/magazine/magadetail/DNBC202002.htm">电脑编程技巧与维护杂志-2020年02期-中国知网</a><br><a href="http://mall.cnki.net/magazine/magadetail/DNJY202002.htm">电脑知识与技术(经验技巧)杂志-2020年02期-中国知网</a><br><a href="http://mall.cnki.net/magazine/magadetail/YSSJ202002.htm">养生大世界杂志-2020年02期-中国知网</a></p><h2 id="灵音播放器"><a href="#灵音播放器" class="headerlink" title="灵音播放器"></a>灵音播放器</h2><p><a href="https://www.appinn.com/lyplayer/">灵音播放器 - 支持下载的音乐播放器 [Windows] - 小众软件</a><br><a href="http://lyplayer.hkjapp.com/">灵音播放器 - 音乐播放器 - 官网</a></p><p><a href="https://segmentfault.com/a/1190000012924855">(8) 5分钟把任意网站变成桌面软件 - 日新亭 - SegmentFault 思否</a></p><p><a href="https://mr-houzi.com/2018/01/24/two-line-code-translate-naviteApp/">两行命令打造一个桌面应用 | 猴子星球|Mr-houzi</a></p><h2 id="网站加速优化"><a href="#网站加速优化" class="headerlink" title="网站加速优化"></a>网站加速优化</h2><p><a href="https://segmentfault.com/a/1190000011867361">(8) 如何打造一个全满分网站 - 日新亭 - SegmentFault 思否</a></p><p>手机上抓包</p><p><a href="https://mr-houzi.com/2019/03/18/use-phone-capture-package/">一次手机上抓包之旅 | 猴子星球|Mr-houzi</a></p><p><a href="https://weibo.com/ttarticle/p/show?id=2309404200174363762670">Python资源整理合集</a></p><p>github 上的开源书籍转换成 pdf？ <a href="https://github.com/astaxie/build-web-application-with-golang">https://github.com/astaxie/build-web-application-with-golang</a><br>快使用 GitBook: <a href="https://github.com/GitbookIO/gitbook/blob/master/docs/setup.md">https://github.com/GitbookIO/gitbook/blob/master/docs/setup.md</a><br>鉴于我看到很多人收藏了本主题，本人特提供以下傻瓜式教程，适合全年龄段观众</p><p>安装 nodejs: <a href="https://nodejs.org/en/">https://nodejs.org/en/</a><br>npm install gitbook-cli -g<br>clone 电子书仓库: <a href="https://github.com/astaxie/build-web-application-with-golang">https://github.com/astaxie/build-web-application-with-golang</a><br>cd build-web-application-with-golang-master\zh<br>gitbook pdf<br>然后就会发现生成了 book.pdf<br><a href="http://www.baidu-x.com/?q=build-web-application-with-golang+pdf">http://www.baidu-x.com/?q=build-web-application-with-golang+pdf</a><br><a href="https://www.gitbook.com/book/astaxie/build-web-application-with-golang/details">https://www.gitbook.com/book/astaxie/build-web-application-with-golang/details</a></p><p><a href="https://regex101.com/">Online regex tester and debugger: PHP, PCRE, Python, Golang and JavaScript</a></p><h2 id="macOS-同时使用有线耳机和蓝牙耳机"><a href="#macOS-同时使用有线耳机和蓝牙耳机" class="headerlink" title="macOS 同时使用有线耳机和蓝牙耳机"></a>macOS 同时使用有线耳机和蓝牙耳机</h2><p>2018年10月11日 23:21</p><p>耳机 macOS</p><ol><li>将蓝牙耳机与有线耳机同时连接到 Mac。</li><li>通过 Spotlight 搜索打开 macOS 系统自带的“音频 MIDI 设置”，点击窗口左下角的 + 号来创建多输出设备，创建后勾选蓝牙耳机和有线耳机。</li><li>点击 多输出设备 可以重新设置名字。</li><li>在设置 / 声音 / 输出 栏选择刚才创建的设备。</li></ol><p><a href="http://www.nicotv.me/">妮可动漫 - 追番or补番的集中营，宅男or腐女的秘密基地</a></p><p><a href="https://www.pi001.com/category/acgtv/">动漫影音- 派导航</a></p><p><a href="http://www.bimibimi.me/">M站_哔咪哔咪,这里是兴趣使然的无名小站_bimibimi</a><br><a href="http://www.bimibimi.me/bangumi/bi/57/">斗罗大陆- 在线&amp;下载 - 哔咪哔咪</a></p><h2 id="去除无用的-CSS-样式表"><a href="#去除无用的-CSS-样式表" class="headerlink" title="去除无用的 CSS 样式表"></a>去除无用的 CSS 样式表</h2><p><a href="https://uncss-online.com/">UnCSS Online!</a></p><img src="https://i.loli.net/2020/04/06/q7EwWjPCeiUYtML.png" alt="q7EwWjPCeiUYtML" style="zoom:50%;" /><p><a href="https://purifycss.online/">PurifyCSS Online - Remove unused CSS</a></p><img src="https://i.loli.net/2020/04/06/GafPyIS768hRcUo.png" alt="GafPyIS768hRcUo" style="zoom:50%;" /><h2 id="在-header-中和-body-末尾加载-JS-的区别，巨坑"><a href="#在-header-中和-body-末尾加载-JS-的区别，巨坑" class="headerlink" title="在 header 中和 body 末尾加载 JS 的区别，巨坑"></a>在 header 中和 body 末尾加载 JS 的区别，巨坑</h2><p><a href="https://blog.csdn.net/wd2014610/article/details/79659073">如何查看yum 安装的软件路径（不要再忘了）_运维_向小凯同学学习-CSDN博客</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;[TOC]&lt;/p&gt;
    
    </summary>
    
    
      <category term="tricks" scheme="https://zronghui.github.io/categories/tricks/"/>
    
    
  </entry>
  
</feed>
